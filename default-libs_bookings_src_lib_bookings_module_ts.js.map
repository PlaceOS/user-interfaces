{"version":3,"file":"default-libs_bookings_src_lib_bookings_module_ts.js","mappings":"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","names":["i0","ctx_r4","day","BookingCardComponent_h4_0_span_1_Template","ctx_r0","show_day","booking","date","ctx_r5","type","ctx_r6","location","_r9","ctx_r8","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","_c0","_c1","ctx_r1","id","title","is_done","status","period","_r2","description","asset_id","for_current_user","BookingCardComponent","AsyncHandler","this","user_email","toLowerCase","currentUser","email","constructor","_dialog","_route","_org","super","edit","EventEmitter","remove","end","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","Date","now","isSameDay","format","level","levelWithID","zones","display_name","name","all_day","start","duration","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","timeout","ref","open","BookingDetailsModalComponent","data","componentInstance","emit","t","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_4__","Xpm","selectors","inputs","outputs","features","decls","vars","consts","template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","extension_data","images","checked_in","_r12","ctx_r11","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","ctx_r7","checking_in","BookingDetailsModalComponent_div_14_button_1_Template","ctx_r2","auto_checkin","state","_r4","ctx_r3","map_id","_c4","_r14","ctx_r13","_r16","ctx_r15","building","buildings","find","bld","includes","_settings","is_in_progress","ts","booking_start","booking_end","_booking","hide_map","content","MapPinComponent","_this","_asyncToGenerator","checkinBooking","toPromise","catch","_","notifyError","notifySuccess","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","item","asset_name","afterClosed","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_7__","i18n_0","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","BookingDetailsModalComponent_interactive_map_41_Template","BookingDetailsModalComponent_button_52_Template","BookingDetailsModalComponent_button_53_Template","length","address","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","storeForm","next","_options","_router","_payments","BehaviorSubject","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","pipe","shareReplay","generateBookingForm","resources","combineLatest","active_building","distinctUntilKeyChanged","debounceTime","switchMap","of","loadResourceList","tap","map","resource","list","Array","forEach","push","unique","sort","a","b","localeCompare","restrictions","showMetadata","catchError","details","available_resources","merge","timer","filter","getRawValue","queryBookings","period_start","getUnixTime","period_end","zone_id","bookings","valueOf","restriction","user_name","asset","assets","groups","some","grp","bookable","every","zone","parent_id","bkn","grouped_availability","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setOptions","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","user","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","event","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","getInvalidFields","join","booking_type","checkResourceAvailable","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","result","saveBooking","user_id","department","approved","error","updateAssetRequestsForResource","host","booked_by_email","_this3","extra_members","take","active_resource","_getNearbyResources","group_members","available","Promise","all","idx","unavailable","group_name","i","organisation","notifyWarn","_this4","DeskQuestionsModalComponent","race","key","_this5","allowed_bookings","current","listChildMetadata","flatten","metadata","d","lockers","bank_id","map_url","count","nearby_resources","findNearbyFeature","i4","i5","_angular_core__WEBPACK_IMPORTED_MODULE_30__","Yz7","factory","ɵfac","providedIn","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","_angular_core__WEBPACK_IMPORTED_MODULE_3__","SharedBookingsModule","core","oAB","cJS","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","$event","_r11","ctx_r10","_r13","ctx_r12","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","_r15","ctx_r14","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","DeskConfirmModalComponent","_data","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","opt_r7","$implicit","selected_features","_c6","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","toggleFavourite","favorites","EMPTY_FAVS","DeskListFieldComponent","FAV_DESK_KEY","room_size","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","DeskSelectModalComponent","capacity","selected","setValue","space","new_value","writeValue","fav_list","saveUserSetting","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DeskListFieldComponent_div_1_Template","submit","FormGroup","travelled","FormControl","unwell","contact","Object","keys","failure","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","_r1","desk","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","active","activeChange","fav","DeskDetailsComponent","ngOnChanges","changes","updateFeature","_angular_core__WEBPACK_IMPORTED_MODULE_2__","i18n_3","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","feat_r2","_r6","show_fav","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","viewChange","o","f","editFilter","DeskFiltersComponent","DeskFiltersDisplayComponent_div_16_Template","DeskFiltersDisplayComponent_div_18_Template","tmp_4_0","tmp_5_0","_r7","bld_r9","DeskFiltersComponent_div_10_mat_option_5_Template","_c16","lvl_r14","DeskFiltersComponent_div_12_mat_option_6_Template","tmp_0_0","levels","feat_r18","_r20","ctx_r19","tmp_1_0","ctx_r17","_c21","DeskFiltersComponent_section_40_div_3_Template","_r22","ctx_r21","allow_time_changes","allow_all_day","end_date","addDays","_bsheet_ref","can_close","active_buildings","active_levels","dismiss","setLevel","l","_angular_core__WEBPACK_IMPORTED_MODULE_5__","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_29_Template","DeskFiltersComponent_section_40_Template","DeskFiltersComponent_div_42_Template","tmp_2_0","tmp_3_0","tmp_9_0","tmp_17_0","tmp_19_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","_r10","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","_r3","DeskListComponent","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","lvl_r1","DeskMapComponent","is_displayed","zoom","center","x","y","_change","actions","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","styles","free_desks","reduce","colours","fill","DEFAULT_COLOURS","setZoom","new_zoom","max","min","resetMap","_angular_core__WEBPACK_IMPORTED_MODULE_6__","DeskMapComponent_mat_option_3_Template","_r5","displayed","selected_ids","_r8","ctx_r9","_dialog_ref","_event_form","isSelected","setSelected","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","ctx_r20","setVisitor","company","item_r22","_r24","ctx_r23","_r26","ctx_r25","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","_r17","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","sent","InviteVisitorFormComponent","_service","done","last_count","visitors","initFormZone","setValidators","Validators","split","visitor_details","old_visitors","_bookForMany","_bookForOne","attendees","User","randomString","_angular_core__WEBPACK_IMPORTED_MODULE_8__","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","position","size","LockerGridComponent","columns","locker","bank","bank_status","LockerGridComponent_button_3_Template","height","LockersService","_level","lockers_banks$","PlaceMetadata","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_c12","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","zone_ids","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_6_0","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","max_duration","lvl","tags","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_11_0","tmp_13_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","available_spaces","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","VanillaQR","r","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","toTable","domElement","document","createElement","qrc","colorLight","colorDark","ecclevel","noBorder","borderSize","n","c","g","h","v","m","u","p","gexp","glog","R","Q","V","N1","N3","k","N2","N4","genframe","C","w","E","N","T","eccblocks","z","slice","adelta","vpat","charCodeAt","fmtword","init","tableWrite","canvasWrite","generateQRCode","code","toImage","src","prototype","getContext","lineWidth","round","canvas","width","clearRect","fillStyle","fillRect","style","cssText","cloneNode","firstChild","insertBefore","appendChild","innerHTML","console","log","Error","Image","toDataURL","ExploreBookQrComponent","qr_code","origin","controls","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","can_book_for_others","ExploreBookingModalComponent_ng_container_6_main_1_Template","save","ExploreBookingModalComponent","organiser","app_name","navigate","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","x_pos","y_pos","_details","_element","tries","setTimeout","parent","nativeElement","parentElement","parseInt","top","left","available_until","ExploreDeskInfoComponent_ng_template_1_Template","_r0","in_use_count","ExploreLockerBankInfoComponent","openBankModal","ExploreLockerBankModalComponent","ExploreLockerBankInfoComponent_ng_template_2_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","pos","getBoundingClientRect","body","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","free","pending","reserved","busy","unknown","ExploreSpacesService","_bookings","_statuses","_bind","unsubWith","mod","getModule","binding","listen","handleBookingsChange","bind","handleStatusChange","updateActions","updateHoverElements","bookSpace","hidden","rulesForSpace","booking_rules","openEventLinkModal","CalendarEvent","clearTimeout","updateStatus","style_map","opacity","setStyles","Space","setFeatures","priority","setActions","_angular_core__WEBPACK_IMPORTED_MODULE_13__","ExploreStateService","positions","_positions","active_level","_spaces","_styles","_features","_actions","_labels","disable","_message","message","querySystems","limit","map_positions","map_features","disable_features","concat","map_actions","disable_actions","map_labels","labels","disable_labels","map_styles","style_mappings","text","display","disable_styles","level_list","old_options","setPositions","feature_map","actions_map","setLabels","labels_map","_angular_core__WEBPACK_IMPORTED_MODULE_16__"],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/qr-code.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\nexport interface AssetRestriction {\n    start: number;\n    end: number;\n    assets: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.restrictions,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) =>\n            queryBookings({\n                period_start: getUnixTime(this.form.getRawValue().date),\n                period_end: getUnixTime(\n                    addMinutes(\n                        this.form.getRawValue().date,\n                        this.form.getRawValue().duration || 24 * 60\n                    )\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) => {\n                    const start = this.form.getRawValue().date;\n                    const end = addMinutes(\n                        start,\n                        this.form.getRawValue().duration\n                    ).valueOf();\n                    const restriction = restrictions.find(\n                        (_) =>\n                            (start >= _.start && start < _.end) ||\n                            (end <= _.end && end > _.start)\n                    );\n                    this._resource_use = {};\n                    bookings.forEach(\n                        (_) => (this._resource_use[_.asset_id] = _.user_name)\n                    );\n                    return resources.filter(\n                        (asset) =>\n                            (!restriction ||\n                                !restriction.assets.includes(asset.id)) &&\n                            (!asset.groups?.length ||\n                                asset.groups.some((grp) =>\n                                    currentUser().groups.includes(grp)\n                                )) &&\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find(\n                                (bkn) =>\n                                    bkn.asset_id === asset.id &&\n                                    bkn.status !== 'declined'\n                            )\n                    );\n                })\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => this.storeForm())\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    (!booking.url.includes('book') ||\n                        !BOOKING_TYPES.find((_) => booking.url.includes(_)))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                result as any,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.value;\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [disabled]=\"form.value.all_day\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [force]=\"form.value.all_day ? 'All Day' : ''\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: 'shortTime' }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.booking.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { currentUser, notifySuccess, SettingsService } from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label i18n>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm();\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Succefully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { rulesForSpace } from 'libs/events/src/lib/helpers';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space, force: boolean = false) {\n        const { hidden } =\n            rulesForSpace(\n                { date: Date.now(), duration: 60, space, host: currentUser() },\n                this._org.building.booking_rules\n            ) || {};\n        if (hidden)\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n"],"x_google_ignoreList":[]}