{"version":3,"file":"default-libs_bookings_src_lib_bookings_module_ts.js","mappings":"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","names":["i0","ctx_r4","day","BookingCardComponent_h4_0_span_1_Template","ctx_r0","show_day","booking","date","time_format","ctx_r5","type","ctx_r6","location","_r9","ctx_r8","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","_c0","_c1","ctx_r1","id","title","is_done","status","period","_r2","description","asset_id","for_current_user","BookingCardComponent","AsyncHandler","this","user_email","toLowerCase","currentUser","email","_settings","constructor","_dialog","_route","_org","super","edit","EventEmitter","remove","end","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","Date","now","isSameDay","format","level","levelWithID","zones","display_name","name","is_all_day","start","duration","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","timeout","ref","open","BookingDetailsModalComponent","data","componentInstance","emit","t","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_4__","Xpm","selectors","inputs","outputs","features","decls","vars","consts","template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","extension_data","images","checked_in","_r12","ctx_r11","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","ctx_r7","checking_in","BookingDetailsModalComponent_div_14_button_1_Template","ctx_r2","auto_checkin","state","_r4","ctx_r3","map_id","_c4","_r14","ctx_r13","_r16","ctx_r15","building","buildings","find","bld","includes","is_in_progress","ts","booking_start","booking_end","all_day","_booking","hide_map","content","MapPinComponent","_this","_asyncToGenerator","checkinBooking","toPromise","catch","_","notifyError","notifySuccess","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","item","asset_name","afterClosed","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_7__","i18n_0","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","BookingDetailsModalComponent_interactive_map_41_Template","BookingDetailsModalComponent_button_52_Template","BookingDetailsModalComponent_button_53_Template","length","address","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","getRawValue","_assets","setOptions","storeForm","next","_options","_router","_payments","BehaviorSubject","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","pipe","shareReplay","generateBookingForm","resources","combineLatest","active_building","distinctUntilKeyChanged","debounceTime","switchMap","of","loadResourceList","tap","map","resource","list","Array","forEach","push","unique","sort","a","b","localeCompare","restrictions","showMetadata","catchError","details","available_resources","merge","timer","filter","startOfDay","valueOf","queryBookings","period_start","getUnixTime","period_end","zone_id","bookings","user_name","asset","items","assets","rest","groups","some","grp","bookable","every","zone","parent_id","bkn","grouped_availability","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","user","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","event","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","getInvalidFields","join","booking_type","checkResourceAvailable","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","booking_asset","result","saveBooking","user_id","department","approved","error","updateAssetRequestsForResource","host","booked_by_email","_this3","extra_members","take","active_resource","_getNearbyResources","group_members","available","Promise","all","idx","unavailable","group_name","i","organisation","notifyWarn","_this4","DeskQuestionsModalComponent","race","key","_this5","allowed_bookings","current","listChildMetadata","flatten","metadata","d","lockers","bank_id","map_url","count","nearby_resources","findNearbyFeature","i5","i6","_angular_core__WEBPACK_IMPORTED_MODULE_32__","Yz7","factory","ɵfac","providedIn","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","_angular_core__WEBPACK_IMPORTED_MODULE_3__","SharedBookingsModule","core","oAB","cJS","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","$event","_r11","ctx_r10","_r13","ctx_r12","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","_r15","ctx_r14","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","DeskConfirmModalComponent","_data","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","opt_r7","$implicit","selected_features","_c6","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","toggleFavourite","favorites","EMPTY_FAVS","DeskListFieldComponent","FAV_DESK_KEY","room_size","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","DeskSelectModalComponent","capacity","selected","console","log","setValue","space","new_value","writeValue","fav_list","saveUserSetting","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DeskListFieldComponent_div_1_Template","submit","FormGroup","travelled","FormControl","unwell","contact","Object","keys","failure","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","_r1","desk","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","active","activeChange","fav","DeskDetailsComponent","ngOnChanges","changes","updateFeature","_angular_core__WEBPACK_IMPORTED_MODULE_2__","i18n_3","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","feat_r2","_r6","show_fav","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","viewChange","o","f","editFilter","DeskFiltersComponent","DeskFiltersDisplayComponent_div_16_Template","DeskFiltersDisplayComponent_div_18_Template","tmp_4_0","tmp_5_0","_r7","bld_r9","DeskFiltersComponent_div_10_mat_option_5_Template","_c16","lvl_r14","DeskFiltersComponent_div_12_mat_option_6_Template","tmp_0_0","levels","feat_r18","_r20","ctx_r19","tmp_1_0","ctx_r17","_c21","DeskFiltersComponent_section_40_div_3_Template","_r22","ctx_r21","allow_time_changes","allow_all_day","end_date","addDays","use_24hr","_bsheet_ref","can_close","active_buildings","active_levels","all_day_time","set","dismiss","setLevel","l","_angular_core__WEBPACK_IMPORTED_MODULE_5__","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_29_Template","DeskFiltersComponent_section_40_Template","DeskFiltersComponent_div_42_Template","tmp_2_0","tmp_3_0","tmp_11_0","tmp_20_0","tmp_22_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","_r10","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","_r3","DeskListComponent","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","lvl_r1","DeskMapComponent","is_displayed","zoom","center","x","y","_change","actions","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","styles","free_desks","reduce","colours","fill","DEFAULT_COLOURS","setZoom","new_zoom","max","min","resetMap","_angular_core__WEBPACK_IMPORTED_MODULE_6__","DeskMapComponent_mat_option_3_Template","_r5","displayed","selected_ids","_r8","ctx_r9","_dialog_ref","_event_form","isSelected","setSelected","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","ctx_r20","setVisitor","company","item_r22","_r24","ctx_r23","_r26","ctx_r25","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","_r17","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","sent","InviteVisitorFormComponent","_service","done","last_count","visitors","initFormZone","setValidators","Validators","split","visitor_details","old_visitors","_bookForMany","_bookForOne","attendees","User","randomString","_angular_core__WEBPACK_IMPORTED_MODULE_8__","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","position","size","LockerGridComponent","columns","locker","bank","bank_status","LockerGridComponent_button_3_Template","height","LockersService","_level","lockers_banks$","PlaceMetadata","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_c12","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_updateLocation","feat","zone_ids","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_6_0","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","max_duration","lvl","tags","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","available_spaces","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","VanillaQR","r","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","toTable","domElement","document","createElement","qrc","colorLight","colorDark","ecclevel","noBorder","borderSize","n","c","g","h","v","m","u","p","gexp","glog","R","Q","V","N1","N3","k","N2","N4","genframe","C","w","E","N","T","eccblocks","z","slice","adelta","vpat","charCodeAt","fmtword","init","tableWrite","canvasWrite","generateQRCode","code","toImage","src","prototype","getContext","lineWidth","round","canvas","width","clearRect","fillStyle","fillRect","style","cssText","cloneNode","firstChild","insertBefore","appendChild","innerHTML","Error","Image","toDataURL","ExploreBookQrComponent","qr_code","origin","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","can_book_for_others","controls","ExploreBookingModalComponent_ng_container_6_main_1_Template","save","ExploreBookingModalComponent","organiser","app_name","navigate","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","x_pos","y_pos","_details","_element","tries","setTimeout","parent","nativeElement","parentElement","parseInt","top","left","available_until","ExploreDeskInfoComponent_ng_template_1_Template","_r0","in_use_count","ExploreLockerBankInfoComponent","openBankModal","ExploreLockerBankModalComponent","ExploreLockerBankInfoComponent_ng_template_2_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","pos","getBoundingClientRect","body","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","free","pending","reserved","busy","unknown","ExploreSpacesService","_bookings","_statuses","_restrictions","_bind","unsubWith","mod","getModule","binding","listen","handleBookingsChange","bind","handleStatusChange","updateActions","updateHoverElements","bookSpace","hidden","rulesForSpace","booking_rules","openEventLinkModal","CalendarEvent","clearTimeout","updateStatus","style_map","opacity","setStyles","Space","setFeatures","priority","setActions","_angular_core__WEBPACK_IMPORTED_MODULE_20__","ExploreStateService","positions","_positions","active_level","_spaces","_styles","_features","_actions","_labels","disable","_message","message","querySystems","limit","map_positions","map_features","disable_features","concat","map_actions","disable_actions","map_labels","labels","disable_labels","map_styles","style_mappings","text","display","disable_styles","level_list","old_options","setPositions","feature_map","actions_map","setLabels","labels_map","_angular_core__WEBPACK_IMPORTED_MODULE_16__"],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/qr-code.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    ResourceRestriction,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<ResourceRestriction[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.restrictions,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const restriction_list = restrictions.filter(\n                                (_) =>\n                                    _.items?.includes(asset.id) ||\n                                    (_ as any).assets?.includes(asset.id)\n                            );\n                            const is_restricted = restriction_list.find(\n                                (rest) =>\n                                    (start >= rest.start && start < rest.end) ||\n                                    (end <= rest.end && end > rest.start)\n                            );\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    (!booking.url.includes('book') ||\n                        !BOOKING_TYPES.find((_) => booking.url.includes(_)))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                result as any,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            console.log('Desks:', items);\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [force_time]=\"\n                                form.value.all_day ? all_day_time : ''\n                            \"\n                            [use_24hr]=\"use_24hr\"\n                            [disabled]=\"form.value.all_day\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                            [force]=\"form.value.all_day ? 'All Day' : ''\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n    public readonly all_day_time = set(Date.now(), {\n        hours: 6,\n        minutes: 0,\n    }).valueOf();\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.booking.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { currentUser, notifySuccess, SettingsService } from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-gray-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-gray-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm();\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    ResourceRestriction,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { rulesForSpace } from 'libs/events/src/lib/helpers';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\nimport { Observable, of } from 'rxjs';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _restrictions: Observable<ResourceRestriction[]> =\n        this._org.active_building.pipe(\n            debounceTime(50),\n            switchMap(() => {\n                return showMetadata(\n                    this._org.building.id,\n                    `desk_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space, force: boolean = false) {\n        const { hidden } =\n            rulesForSpace(\n                { date: Date.now(), duration: 60, space, host: currentUser() },\n                this._org.building.booking_rules\n            ) || {};\n        if (hidden)\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        const restrictions =\n            (await this._restrictions.pipe(take(1)).toPromise()) || [];\n        for (const space of spaces) {\n            const restriction_list = restrictions.filter((_) =>\n                _.items?.includes(space.id)\n            );\n            const is_restricted = restriction_list.find(\n                ({ start, end }) => Date.now() >= start && Date.now() < end\n            );\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n"],"x_google_ignoreList":[]}