{"version":3,"file":"default-libs_bookings_src_lib_bookings_module_ts.js","mappings":"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","names":["i0","ctx_r4","day","BookingCardComponent_h4_0_span_1_Template","ctx_r0","show_day","booking","date","time_format","ctx_r5","type","ctx_r6","location","_r9","ctx_r8","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","_c0","_c1","ctx_r1","id","title","status","period","_r3","description","asset_id","for_current_user","BookingCardComponent","AsyncHandler","this","user_email","toLowerCase","currentUser","email","_settings","is_done","constructor","_dialog","_route","_org","super","edit","EventEmitter","remove","end","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","Date","now","isSameDay","format","level","levelWithID","zones","display_name","name","is_all_day","start","duration","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","timeout","ref","open","BookingDetailsModalComponent","data","componentInstance","emit","static","t","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_4__","Xpm","selectors","inputs","outputs","features","decls","vars","consts","template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","extension_data","images","ctx_r9","checked_in","_r13","ctx_r12","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","_r11","BookingDetailsModalComponent_div_10_button_1_Template","ctx_r2","checked_out_at","checked_out","auto_checkin","state","_r5","item_r17","quantity","request_r15","_r19","$implicit","ctx_r18","show_request","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","deliver_at","ctx_r14","items","BookingDetailsModalComponent_ng_container_36_div_5_Template","ctx_r3","valid_assets","length","ctx_r20","map_id","_c6","ctx_r21","styles","actions","BookingDetailsModalComponent_ng_container_38_interactive_map_1_Template","BookingDetailsModalComponent_ng_container_38_ng_template_3_Template","use_mapsindoors$","_r22","_r24","ctx_r23","_r26","ctx_r25","building","buildings","find","bld","includes","is_in_progress","ts","booking_start","booking_end","all_day","booking_status","_booking","_maps_people","hide_map","content","MapPinComponent","has_assets","linked_bookings","_","booking_type","use_mapspeople$","setCustomZone","ngOnDestroy","_this","_asyncToGenerator","checkinBooking","toPromise","catch","notifyError","notifySuccess","approved","rejected","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","item","asset_name","afterClosed","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_8__","i18n_0","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_49_Template","BookingDetailsModalComponent_button_50_Template","address","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","getRawValue","_assets","setOptions","storeForm","next","_options","_router","_payments","BehaviorSubject","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","pipe","shareReplay","generateBookingForm","resources","combineLatest","active_building","distinctUntilKeyChanged","debounceTime","switchMap","of","loadResourceList","tap","map","resource","list","Array","forEach","push","unique","sort","a","b","localeCompare","booking_rules","showMetadata","catchError","details","available_resources","merge","timer","filter","restrictions","user","startOfDay","valueOf","queryBookings","period_start","getUnixTime","period_end","zone_id","bookings","user_name","asset","rulesForResource","host","hidden","groups","some","grp","bookable","every","zone","parent_id","bkn","grouped_availability","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","event","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","getInvalidFields","join","checkResourceAvailable","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","booking_asset","result","saveBooking","user_id","phone","department","booking_id","error","assets","updateAssetRequestsForResource","from_booking","booked_by_email","console","_this3","extra_members","take","active_resource","_getNearbyResources","group_members","available","Promise","all","idx","unavailable","group_name","i","organisation","notifyWarn","_this4","DeskQuestionsModalComponent","race","key","_this5","allowed_bookings","current","listChildMetadata","flatten","metadata","d","lockers","bank_id","map_url","count","nearby_resources","findNearbyFeature","i5","i6","_angular_core__WEBPACK_IMPORTED_MODULE_32__","Yz7","factory","ɵfac","providedIn","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","SharedBookingsModule","core","oAB","cJS","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","$event","ctx_r10","ctx_r7","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","_r15","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","DeskConfirmModalComponent","_data","_angular_core__WEBPACK_IMPORTED_MODULE_3__","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","opt_r7","selected_features","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","_r12","ctx_r11","changeResources","ctx_r13","removeResource","toggleFavourite","favorites","EMPTY_FAVS","DeskListFieldComponent","FAV_DESK_KEY","room_size","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","DeskSelectModalComponent","capacity","selected","setValue","space","new_value","writeValue","fav_list","saveUserSetting","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DeskListFieldComponent_div_1_Template","_r4","submit","FormGroup","travelled","FormControl","unwell","contact","Object","keys","failure","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","_r2","desk","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","active","activeChange","fav","DeskDetailsComponent","ngOnChanges","changes","updateFeature","_angular_core__WEBPACK_IMPORTED_MODULE_2__","i18n_3","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","feat_r4","_r6","_r8","show_fav","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","viewChange","o","f","editFilter","DeskFiltersComponent","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r10","DeskFiltersComponent_div_10_mat_option_5_Template","_c12","lvl_r15","_r17","ctx_r16","DeskFiltersComponent_div_12_mat_option_6_Template","tmp_0_0","levels","use_24hr","tmp_3_0","feat_r21","_r23","ctx_r22","tmp_1_0","_c21","DeskFiltersComponent_section_32_div_3_Template","_r25","ctx_r24","allow_time_changes","allow_all_day","end_date","addDays","_bsheet_ref","can_close","active_buildings","active_levels","dismiss","setLevel","l","_angular_core__WEBPACK_IMPORTED_MODULE_5__","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","tmp_2_0","tmp_10_0","tmp_12_0","desk_r7","_r14","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ctx_r15","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","lvl_r4","zoom","center","coordinates","DeskMapComponent","is_displayed","x","y","_change","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","free_desks","reduce","colours","fill","DEFAULT_COLOURS","latitude","longitude","split","parseFloat","setZoom","new_zoom","max","min","resetMap","DeskMapComponent_mat_option_3_Template","DeskMapComponent_interactive_map_6_Template","DeskMapComponent_ng_template_8_Template","displayed","selected_ids","_r10","_dialog_ref","_event_form","isSelected","setSelected","_angular_core__WEBPACK_IMPORTED_MODULE_7__","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","_c16","item_r19","_r21","setVisitor","company","item_r22","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","sent","InviteVisitorFormComponent","_service","done","last_count","visitors","initFormZone","setValidators","Validators","required","visitor_details","old_visitors","_bookForMany","_bookForOne","attendees","User","randomString","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","position","size","LockerGridComponent","columns","locker","bank","bank_status","LockerGridComponent_button_3_Template","height","LockersService","_level","lockers_banks$","PlaceMetadata","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","feat_r2","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_updateLocation","feat","zone_ids","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","max_duration","lvl","tags","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","ParkingSpaceSelectMapComponent_ng_container_0_interactive_map_1_Template","ParkingSpaceSelectMapComponent_ng_container_0_ng_template_3_Template","opt_r8","ParkingSpaceSelectMapComponent","_seletedSpace","available_spaces","_angular_core__WEBPACK_IMPORTED_MODULE_6__","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","VanillaQR","r","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","toTable","domElement","document","createElement","qrc","colorLight","colorDark","ecclevel","noBorder","borderSize","n","c","g","h","v","m","u","p","gexp","glog","R","Q","V","N1","N3","k","N2","N4","genframe","C","w","E","N","T","eccblocks","z","slice","adelta","vpat","charCodeAt","fmtword","init","tableWrite","canvasWrite","generateQRCode","code","toImage","src","prototype","getContext","lineWidth","round","canvas","width","clearRect","fillStyle","fillRect","style","cssText","cloneNode","firstChild","insertBefore","appendChild","innerHTML","log","Error","Image","toDataURL","ExploreBookQrComponent","qr_code","origin","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","can_book_for_others","controls","ExploreBookingModalComponent_ng_container_6_main_1_Template","save","ExploreBookingModalComponent","organiser","app_name","navigate","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","x_pos","y_pos","_details","_element","tries","setTimeout","parent","nativeElement","parentElement","parseInt","top","left","available_until","ExploreDeskInfoComponent_ng_template_1_Template","_r1","in_use_count","ExploreLockerBankInfoComponent","openBankModal","ExploreLockerBankModalComponent","ExploreLockerBankInfoComponent_ng_template_2_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","pos","getBoundingClientRect","body","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","free","pending","reserved","busy","unknown","ExploreSpacesService","_bookings","_statuses","_bind","unsubWith","mod","getModule","binding","listen","handleBookingsChange","bind","handleStatusChange","updateActions","_updateHoverElements","bookSpace","openEventLinkModal","CalendarEvent","clearTimeout","_updateStatus","style_map","opacity","setStyles","Space","setFeatures","priority","setActions","_angular_core__WEBPACK_IMPORTED_MODULE_19__"],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/qr-code.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    notifyError,\n    notifySuccess,\n    SettingsService,\n    InjectMapApiService,\n} from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                        <ng-template #mapspeople>\n                            <indoor-maps\n                                [styles]=\"styles | async\"\n                                [actions]=\"actions | async\"\n                            ></indoor-maps>\n                        </ng-template>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    public readonly use_mapsindoors$ = this._maps_people.use_mapspeople$;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _maps_people: InjectMapApiService\n    ) {}\n\n    public ngOnInit() {\n        this._maps_people.setCustomZone(this.level?.id);\n    }\n\n    public ngOnDestroy() {\n        this._maps_people.setCustomZone('');\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_booking_rules`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                },\n                value.assets\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time'\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\nimport { InjectMapApiService } from 'libs/common/src/lib/inject-map-api.service';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></interactive-map>\n            <ng-template #mapspeople>\n                <indoor-maps\n                    [styles]=\"styles | async\"\n                    [actions]=\"actions | async\"\n                    [custom_coordinates]=\"coordinates\"\n                ></indoor-maps>\n            </ng-template>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public readonly use_mapsindoors$ = this._maps_people.use_mapspeople$;\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _maps_people: InjectMapApiService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setLevel(this.level);\n                }\n            })\n        );\n    }\n\n    public ngOnDestroy() {\n        this._maps_people.setCustomZone('');\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this._maps_people.setCustomZone(level?.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { InjectMapApiService } from 'libs/common/src/lib/inject-map-api.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></interactive-map>\n            <ng-template #mapspeople>\n                <indoor-maps\n                    [styles]=\"styles | async\"\n                    [actions]=\"actions | async\"\n                ></indoor-maps>\n            </ng-template>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    public readonly use_mapsindoors$ = this._maps_people.use_mapspeople$;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: InjectMapApiService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n"],"x_google_ignoreList":[]}