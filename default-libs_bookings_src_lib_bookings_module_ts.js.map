{"version":3,"file":"default-libs_bookings_src_lib_bookings_module_ts.js","mappings":"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","names":["i0","ctx_r4","day","BookingCardComponent_h4_0_span_1_Template","ctx_r0","show_day","booking","date","time_format","ctx_r5","type","ctx_r6","location","_r9","ctx_r8","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","_c0","_c1","ctx_r1","id","title","status","period","_r3","description","asset_id","for_current_user","BookingCardComponent","AsyncHandler","this","user_email","toLowerCase","currentUser","email","_settings","is_done","constructor","_dialog","_route","_org","super","edit","EventEmitter","remove","end","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","Date","now","isSameDay","format","level","levelWithID","zones","display_name","name","is_all_day","start","duration","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","timeout","ref","open","BookingDetailsModalComponent","data","componentInstance","emit","static","t","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_4__","Xpm","selectors","inputs","outputs","features","decls","vars","consts","template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","extension_data","images","ctx_r10","checked_in","_r14","ctx_r13","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","ctx_r9","checking_in","_r12","BookingDetailsModalComponent_div_10_button_1_Template","ctx_r2","checked_out_at","checked_out","auto_checkin","state","_r5","item_r18","quantity","request_r16","_r20","$implicit","ctx_r19","show_request","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","deliver_at","ctx_r15","items","BookingDetailsModalComponent_ng_container_36_div_5_Template","ctx_r3","valid_assets","length","ctx_r21","map_id","_c4","ctx_r22","styles","actions","BookingDetailsModalComponent_ng_container_38_interactive_map_1_Template","BookingDetailsModalComponent_ng_container_38_ng_template_3_Template","use_mapsindoors$","_r23","_r25","ctx_r24","_r27","ctx_r26","_r29","ctx_r28","building","buildings","find","bld","includes","can_edit","booking_type","is_in_progress","ts","booking_start","booking_end","all_day","booking_status","_booking","_maps_people","hide_map","content","MapPinComponent","has_assets","linked_bookings","_","available$","setCustomZone","ngOnDestroy","_this","_asyncToGenerator","checkinBooking","toPromise","catch","notifyError","notifySuccess","approved","rejected","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","item","asset_name","afterClosed","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_8__","i18n_0","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","address","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","getRawValue","_assets","setOptions","storeForm","next","_options","_router","_payments","BehaviorSubject","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","pipe","shareReplay","generateBookingForm","resources","combineLatest","active_building","distinctUntilKeyChanged","debounceTime","switchMap","of","loadResourceList","tap","map","resource","list","Array","forEach","push","unique","sort","a","b","localeCompare","booking_rules","showMetadata","catchError","details","available_resources","merge","timer","filter","restrictions","user","startOfDay","valueOf","queryBookings","period_start","getUnixTime","period_end","zone_id","bookings","user_name","asset","rulesForResource","host","hidden","groups","some","grp","bookable","every","zone","parent_id","bkn","grouped_availability","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","event","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","getInvalidFields","join","checkResourceAvailable","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","booking_asset","result","saveBooking","user_id","phone","department","booking_id","error","assets","updateAssetRequestsForResource","from_booking","booked_by_email","console","_this3","extra_members","take","active_resource","_getNearbyResources","group_members","available","Promise","all","idx","unavailable","group_name","i","organisation","notifyWarn","_this4","DeskQuestionsModalComponent","race","key","_this5","allowed_bookings","current","listChildMetadata","flatten","metadata","d","lockers","bank_id","map_url","count","nearby_resources","findNearbyFeature","i5","i6","_angular_core__WEBPACK_IMPORTED_MODULE_32__","Yz7","factory","ɵfac","providedIn","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","SharedBookingsModule","core","oAB","cJS","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","$event","_r11","_r13","ctx_r12","ctx_r7","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","_r15","ctx_r14","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","DeskConfirmModalComponent","_data","_angular_core__WEBPACK_IMPORTED_MODULE_3__","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","opt_r7","selected_features","_c6","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","ctx_r11","changeResources","removeResource","toggleFavourite","favorites","EMPTY_FAVS","DeskListFieldComponent","FAV_DESK_KEY","room_size","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","DeskSelectModalComponent","capacity","selected","setValue","space","new_value","writeValue","fav_list","saveUserSetting","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DeskListFieldComponent_div_1_Template","_r4","submit","FormGroup","travelled","FormControl","unwell","contact","Object","keys","failure","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","_r2","desk","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","active","activeChange","fav","DeskDetailsComponent","ngOnChanges","changes","updateFeature","_angular_core__WEBPACK_IMPORTED_MODULE_2__","i18n_3","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","feat_r4","_r6","_r8","show_fav","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","viewChange","o","f","editFilter","DeskFiltersComponent","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","bld_r10","DeskFiltersComponent_div_10_mat_option_5_Template","_c12","lvl_r15","_r17","ctx_r16","DeskFiltersComponent_div_12_mat_option_6_Template","tmp_0_0","levels","_r19","ctx_r18","use_24hr","tmp_3_0","feat_r21","tmp_1_0","ctx_r20","_c21","DeskFiltersComponent_section_32_div_3_Template","allow_time_changes","allow_all_day","end_date","addDays","_bsheet_ref","can_close","active_buildings","active_levels","dismiss","setLevel","l","_angular_core__WEBPACK_IMPORTED_MODULE_5__","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_20_Template","DeskFiltersComponent_div_21_Template","DeskFiltersComponent_section_32_Template","DeskFiltersComponent_div_34_Template","tmp_2_0","tmp_10_0","tmp_12_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","DeskListComponent","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","lvl_r4","zoom","center","coordinates","DeskMapComponent","is_displayed","x","y","_change","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","free_desks","reduce","colours","fill","DEFAULT_COLOURS","latitude","longitude","split","parseFloat","setZoom","new_zoom","max","min","resetMap","DeskMapComponent_mat_option_3_Template","DeskMapComponent_interactive_map_6_Template","DeskMapComponent_ng_template_8_Template","displayed","selected_ids","_r10","_dialog_ref","_event_form","isSelected","setSelected","_angular_core__WEBPACK_IMPORTED_MODULE_7__","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","_c16","item_r19","_r21","setVisitor","company","item_r22","_r24","ctx_r23","_r26","ctx_r25","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","sent","InviteVisitorFormComponent","_service","done","last_count","visitors","initFormZone","setValidators","Validators","required","visitor_details","old_visitors","_bookForMany","_bookForOne","attendees","User","randomString","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","position","size","LockerGridComponent","columns","locker","bank","bank_status","LockerGridComponent_button_3_Template","height","LockersService","_level","lockers_banks$","PlaceMetadata","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","feat_r2","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_updateLocation","feat","zone_ids","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","max_duration","lvl","tags","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","ParkingSpaceSelectMapComponent_ng_container_0_interactive_map_1_Template","ParkingSpaceSelectMapComponent_ng_container_0_ng_template_3_Template","opt_r8","ParkingSpaceSelectMapComponent","_seletedSpace","available_spaces","_angular_core__WEBPACK_IMPORTED_MODULE_6__","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","VanillaQR","r","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","toTable","domElement","document","createElement","qrc","colorLight","colorDark","ecclevel","noBorder","borderSize","n","c","g","h","v","m","u","p","gexp","glog","R","Q","V","N1","N3","k","N2","N4","genframe","C","w","E","N","T","eccblocks","z","slice","adelta","vpat","charCodeAt","fmtword","init","tableWrite","canvasWrite","generateQRCode","code","toImage","src","prototype","getContext","lineWidth","round","canvas","width","clearRect","fillStyle","fillRect","style","cssText","cloneNode","firstChild","insertBefore","appendChild","innerHTML","log","Error","Image","toDataURL","ExploreBookQrComponent","qr_code","origin","use_24hr_time","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","can_book_for_others","controls","ExploreBookingModalComponent_ng_container_6_main_1_Template","save","ExploreBookingModalComponent","organiser","app_name","navigate","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","x_pos","y_pos","_details","_element","tries","setTimeout","parent","nativeElement","parentElement","parseInt","top","left","available_until","ExploreDeskInfoComponent_ng_template_1_Template","_r1","in_use_count","ExploreLockerBankInfoComponent","openBankModal","ExploreLockerBankModalComponent","ExploreLockerBankInfoComponent_ng_template_2_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","pos","getBoundingClientRect","body","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","free","pending","reserved","busy","unknown","ExploreSpacesService","_bookings","_statuses","_panning","_bind","unsubWith","mod","getModule","binding","listen","handleBookingsChange","bind","handleStatusChange","updateActions","_updateHoverElements","bookSpace","openEventLinkModal","CalendarEvent","clearTimeout","_updateStatus","style_map","opacity","setStyles","Space","setFeatures","priority","setActions","_angular_core__WEBPACK_IMPORTED_MODULE_19__"],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/qr-code.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    notifyError,\n    notifySuccess,\n    SettingsService,\n    MapsPeopleService,\n} from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 pt-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                      'rejected'\n                                                    ? 'close'\n                                                    : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true\n                            }\"\n                        ></interactive-map>\n                        <ng-template #mapspeople>\n                            <indoor-maps\n                                [styles]=\"styles | async\"\n                                [actions]=\"actions | async\"\n                            ></indoor-maps>\n                        </ng-template>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.linked_bookings?.find(\n        (_) => _.booking_type === 'asset-request'\n    );\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get can_edit() {\n        return this.booking.booking_type !== 'visitor';\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    public readonly use_mapsindoors$ = this._maps_people.available$;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _maps_people: MapsPeopleService\n    ) {}\n\n    public ngOnInit() {\n        this._maps_people.setCustomZone(this.level?.id);\n    }\n\n    public ngOnDestroy() {\n        this._maps_people.setCustomZone('');\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                ? 'rejected'\n                : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_booking_rules`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return queryBookings({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map(\n                    (bookings) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration\n                        ).valueOf();\n                        this._resource_use = {};\n                        bookings.forEach(\n                            (_) =>\n                                (this._resource_use[_.asset_id] = _.user_name)\n                        );\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp)\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_)\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !bookings.find(\n                                    (bkn) =>\n                                        bkn.asset_id === asset.id &&\n                                        bkn.status !== 'declined'\n                                )\n                            );\n                        });\n                        return available;\n                    },\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        })\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            })\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            }),\n            value.parent_id ? { booking_id: value.parent_id } : {}\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                },\n                value.assets\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time'\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></interactive-map>\n            <ng-template #mapspeople>\n                <indoor-maps\n                    [styles]=\"styles | async\"\n                    [actions]=\"actions | async\"\n                    [custom_coordinates]=\"coordinates\"\n                ></indoor-maps>\n            </ng-template>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public readonly use_mapsindoors$ = this._maps_people.available$;\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'options_change',\n            this._state.options.subscribe(({ zone_id }) => {\n                if (zone_id && zone_id !== this.level?.id) {\n                    this.level = this._org.levels.find((_) => _.id === zone_id);\n                }\n            })\n        );\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setLevel(this.level);\n                }\n            })\n        );\n    }\n\n    public ngOnDestroy() {\n        this._maps_people.setCustomZone('');\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this._maps_people.setCustomZone(level?.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                *ngIf=\"!(use_mapsindoors$ | async); else mapspeople\"\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></interactive-map>\n            <ng-template #mapspeople>\n                <indoor-maps\n                    [styles]=\"styles | async\"\n                    [actions]=\"actions | async\"\n                ></indoor-maps>\n            </ng-template>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-base-200 bg-base-100 flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-base-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    public readonly use_mapsindoors$ = this._maps_people.available$;\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    currentUser,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div\n                        name=\"space\"\n                        class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                    >\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div\n                        class=\"flex flex-col flex-1 w-full sm:w-auto\"\n                        *ngIf=\"form.controls.date\"\n                    >\n                        <label i18n>Date:</label>\n                        <div\n                            class=\"px-4 py-3 border border-base-200 rounded w-full mb-4\"\n                        >\n                            {{ form.value.date | date: 'mediumDate' }} at\n                            {{ form.value.date | date: time_format }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                            [use_24hr]=\"use_24hr_time\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-base-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get use_24hr_time() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Successfully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-base-100 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-neutral]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-neutral\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-base-200 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n} from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    HashMap,\n    rulesForResource,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n    private _panning = true;\n\n    public readonly booking_rules: Observable<BookingRuleset[]> =\n        this._org.active_building.pipe(\n            filter((bld) => !!bld),\n            switchMap((bld) =>\n                showMetadata(bld.id, `room_booking_rules`).pipe(\n                    catchError(() => of({ details: [] }))\n                )\n            ),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this._updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public async bookSpace(space: Space, force: boolean = false) {\n        if (this._panning) return;\n        const booking_rules = await this.booking_rules\n            .pipe(take(1))\n            .toPromise();\n        const { hidden } =\n            rulesForResource(\n                {\n                    date: Date.now(),\n                    duration: 60,\n                    resource: space,\n                    host: currentUser(),\n                },\n                booking_rules\n            ) || {};\n        if (hidden) {\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        }\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this._updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this._updateStatus(spaces);\n                this._updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private async _updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private _updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            for (const action of ['mousedown', 'touchstart']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => {\n                        this._panning = false;\n                        this.timeout(\n                            'panning',\n                            () => (this._panning = true),\n                            300\n                        );\n                    },\n                });\n            }\n            for (const action of ['mouseup', 'touchend']) {\n                actions.push({\n                    id: space.map_id,\n                    action: action as any,\n                    priority: 5,\n                    callback: () => this.bookSpace(space),\n                });\n            }\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n"],"x_google_ignoreList":[]}