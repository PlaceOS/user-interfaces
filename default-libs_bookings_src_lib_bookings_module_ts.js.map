{"version":3,"file":"default-libs_bookings_src_lib_bookings_module_ts.js","mappings":"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","names":["i0","ctx_r0","day","BookingCardComponent_h4_0_span_1_Template","show_day","booking","date","time_format","type","location","status","_r2","viewDetails","BookingCardComponent_a_1_app_icon_9_Template","BookingCardComponent_a_1_div_12_Template","BookingCardComponent_a_1_div_15_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_17_Template","_c0","_c1","id","title","period","desk_icon_r3","raw_description","asset_name","asset_id","for_current_user","booking_type","is_reserved_parking_space","BookingCardComponent","AsyncHandler","this","user_email","toLowerCase","currentUser","email","_settings","is_done","constructor","_dialog","_route","_org","_parking","super","edit","EventEmitter","remove","end","assigned_space","pipe","map","space","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","ngOnChanges","changes","removeHtmlTags","description","Date","now","isSameDay","format","level","levelWithID","zones","display_name","name","is_all_day","start","duration","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","html","DOMParser","parseFromString","body","textContent","timeout","ref","open","GroupEventDetailsModalComponent","BookingDetailsModalComponent","data","concierge","componentInstance","emit","static","__ngFactoryType__","i1","i2","i3","i4","i5","_angular_core__WEBPACK_IMPORTED_MODULE_6__","VBU","selectors","inputs","outputs","features","decls","vars","consts","template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","ctx_r1","extension_data","images","checked_in","_r3","toggleCheckedIn","BookingDetailsModalComponent_div_10_button_1_div_1_Template","BookingDetailsModalComponent_div_10_button_1_ng_template_2_Template","checking_in","loading_state_r4","BookingDetailsModalComponent_div_10_button_1_Template","checked_out_at","checked_out","auto_checkin","state","menu_r5","item_r8","quantity","request_r7","_r6","$implicit","show_request","BookingDetailsModalComponent_ng_container_36_div_5_div_13_Template","deliver_at","items","BookingDetailsModalComponent_ng_container_36_div_5_Template","valid_assets","length","map_id","_r9","_r10","setDeskHeight","_r11","_r12","building","buildings","find","bld","includes","region","regions","parent_id","can_edit","is_checked_in","desk_height_enabled","is_in_progress","ts","booking_start","booking_end","all_day","booking_status","_booking","hide_map","content","MapPinComponent","has_assets","console","log","_this","_asyncToGenerator","bkn","instance","checkinBookingInstance","checkinBooking","toPromise","catch","_","notifyError","notifySuccess","linked_bookings","approved","rejected","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","item","afterClosed","DeskSettingsModalComponent","asset_ids","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_8__","i18n_0","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_10_Template","BookingDetailsModalComponent_ng_container_36_Template","_r1","BookingDetailsModalComponent_ng_container_38_Template","BookingDetailsModalComponent_button_44_Template","BookingDetailsModalComponent_button_45_Template","BookingDetailsModalComponent_button_46_Template","BookingDetailsModalComponent_button_47_Template","address","ANIMATION_SHOW_CONTRACT_EXPAND","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","getRawValue","_assets","setOptions","storeForm","next","_options","_router","_payments","BehaviorSubject","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","shareReplay","generateBookingForm","resources","combineLatest","active_building","distinctUntilKeyChanged","debounceTime","switchMap","of","loadResourceList","tap","resource","list","Array","forEach","push","unique","sort","a","b","localeCompare","booking_rules","building_list","Promise","all","showMetadata","building_rules","mapping","rules","details","available_resources","merge","timer","filter","restrictions","user","startOfDay","valueOf","bookedResourceList","period_start","getUnixTime","period_end","zone_id","organisation","booked_ids","available","asset","rulesForResource","host","zone","hidden","groups","some","grp","bookable","every","catchError","grouped_availability","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","event","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","getInvalidFields","join","checkResourceAvailable","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","booking_asset","event_id","q","ical_uid","booking_id","update_master","start_time","result","saveBooking","user_name","assets","toJSON","phone","department","error","requests","validateAssetRequestsForResource","from_booking","booked_by_email","_this3","extra_members","take","active_resource","_getNearbyResources","group_members","idx","unavailable","group_name","i","user_id","notifyWarn","_this4","DeskQuestionsModalComponent","race","key","_this5","active_bookings","queryBookings","limit","allowed_bookings","current","use_region","map_metadata","metadata","d","lockers","locker","bank_id","forkJoin","listChildMetadata","flatten","map_url","count","nearby_resources","findNearbyFeature","i6","_angular_core__WEBPACK_IMPORTED_MODULE_33__","jDH","factory","ɵfac","providedIn","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","_angular_core__WEBPACK_IMPORTED_MODULE_4__","SharedBookingsModule","fesm2022_core","$C","G2t","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","SharedSpacesModule","SharedEventsModule","SharedUsersModule","$event","ctx_r2","_r4","_r5","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","DeskConfirmModalComponent","_data","_angular_core__WEBPACK_IMPORTED_MODULE_3__","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","load_state_r6","opt_r3","ctx_r3","selected_features","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r5","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","toggleFavourite","placeholder_r6","favorites","EMPTY_FAVS","DeskListFieldComponent","FAV_DESK_KEY","room_size","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","DeskSelectModalComponent","capacity","selected","setValue","new_value","writeValue","fav_list","saveUserSetting","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DeskListFieldComponent_div_1_Template","submit","FormGroup","travelled","FormControl","unwell","contact","Object","keys","failure","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","fail_state_r3","desk","feat_r3","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","active","activeChange","fav","DeskDetailsComponent","updateFeature","_angular_core__WEBPACK_IMPORTED_MODULE_2__","i18n_1","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","emptyState_r4","show_fav","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","viewChange","o","f","editFilter","DeskFiltersComponent","DeskFiltersDisplayComponent_ng_container_13_Template","DeskFiltersDisplayComponent_ng_container_14_Template","DeskFiltersDisplayComponent_div_15_Template","DeskFiltersDisplayComponent_div_17_Template","tmp_5_0","tmp_6_0","reg_r4","setRegion","DeskFiltersComponent_mat_form_field_13_mat_option_2_Template","bld_r6","setBuilding","DeskFiltersComponent_mat_form_field_15_mat_option_5_Template","tmp_3_0","tmp_4_0","lvl_r8","DeskFiltersComponent_mat_form_field_17_mat_option_3_div_2_Template","_r7","DeskFiltersComponent_mat_form_field_17_mat_option_3_Template","tmp_1_0","levels","use_24hr","timezone","feat_r11","DeskFiltersComponent_section_36_div_3_Template","reg","allow_time_changes","allow_all_day","end_date","addDays","_bsheet_ref","can_close","active_buildings","region_list","active_region","levelsForRegion","levelsForBuilding","lvl","tags","dismiss","setLevel","l","r","_angular_core__WEBPACK_IMPORTED_MODULE_7__","hide_levels","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_mat_form_field_13_Template","DeskFiltersComponent_mat_form_field_15_Template","DeskFiltersComponent_mat_form_field_17_Template","DeskFiltersComponent_div_24_Template","DeskFiltersComponent_div_25_Template","DeskFiltersComponent_section_36_Template","DeskFiltersComponent_div_38_Template","tmp_2_0","tmp_16_0","tmp_18_0","desk_r2","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","placeholder_r4","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","empty_state_r5","DeskListComponent","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","lvl_r3","DeskMapComponent_mat_form_field_1_mat_option_2_div_2_Template","zone_ids","DeskMapComponent_mat_form_field_1_mat_option_2_Template","DeskMapComponent","is_displayed","zoom","center","x","y","coordinates","_change","actions","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","styles","free_desks","reduce","colours","fill","DEFAULT_COLOURS","latitude","longitude","split","parseFloat","setZoom","new_zoom","max","min","resetMap","DeskMapComponent_mat_form_field_1_Template","tmp_0_0","displayed","selected_ids","_dialog_ref","_event_form","isSelected","setSelected","setTimeout","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","map_view_r6","preset","setPreset","edit_presets","height","updatePreset","formatLabel","toFixed","sitting_height","standing_height","last_height","parseInt","localStorage","new_height","sys_id","binding","getModule","execute","DeskSettingsModalComponent_div_0_Template","DeskSettingsModalComponent_ng_template_1_Template","desk_height_tooltip_r4","bld_r5","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","setVisitor","company","item_r10","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_19_mat_option_9_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_19_mat_option_20_Template","name_auto_r11","filtered_visitors","email_auto_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_18_Template","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_19_Template","can_book_for_others","multiple","multi_state_r13","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","load_state_r14","last_count","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r15","onDone","sent","InviteVisitorFormComponent","_service","done","visitors","initFormZone","setValidators","Validators","required","visitor_details","old_visitors","_bookForMany","_bookForOne","attendees","User","randomString","_angular_core__WEBPACK_IMPORTED_MODULE_10__","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","send_state_r16","locker_r2","clicked","position","size","LockerGridComponent","columns","bank","bank_status","LockerGridComponent_button_3_Template","LockersService","_level","lockers_banks$","PlaceMetadata","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","empty_state_r3","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_7_0","bld_r4","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_mat_option_5_Template","lvl_r6","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_mat_option_3_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_13_mat_form_field_3_Template","reg_r8","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_mat_option_2_Template","level_r10","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_mat_option_1_Template","bld_r11","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_mat_optgroup_5_Template","region_levels","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_1_Template","ParkingSpaceFiltersComponent_ng_container_14_mat_form_field_3_Template","max_duration","feat_r14","_r13","toggleFeature","ParkingSpaceFiltersComponent_section_30_div_3_Template","_form","active_levels","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_ng_container_13_Template","ParkingSpaceFiltersComponent_ng_container_14_Template","ParkingSpaceFiltersComponent_div_21_Template","ParkingSpaceFiltersComponent_section_30_Template","ParkingSpaceFiltersComponent_div_32_Template","tmp_8_0","tmp_10_0","space_r2","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","ParkingSpaceSelectMapComponent","_maps_people","_seletedSpace","available_spaces","setCustomZone","_angular_core__WEBPACK_IMPORTED_MODULE_5__","ParkingSpaceSelectMapComponent_ng_container_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","ParkingSpaceListFieldComponent_div_1_img_2_Template","ParkingSpaceListFieldComponent_div_1_ng_template_3_Template","ParkingSpaceListFieldComponent","disable_date","ParkingSpaceListFieldComponent_div_1_Template","ParkingService","level_list","blds","buildingsForRegion","bld_ids","lvls","users","assigned_to","user_details","deny_parking_access","deny","booked_space","booking_list","_angular_core__WEBPACK_IMPORTED_MODULE_17__","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","x_pos","y_pos","_details","_element","tries","parent","nativeElement","parentElement","style","top","left","available_until","ExploreDeskInfoComponent_ng_template_1_Template","desk_tooltip_r2","in_use_count","ExploreLockerBankInfoComponent","openBankModal","ExploreLockerBankModalComponent","ExploreLockerBankInfoComponent_ng_template_2_Template","desk_tooltip_r3"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/desk-settings-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/bookings/src/lib/parking-space-list-field.component.ts","./libs/bookings/src/lib/parking.service.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts"],"sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\nimport { map } from 'rxjs/operators';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { ParkingService } from './parking.service';\nimport { GroupEventDetailsModalComponent } from '../../../events/src/lib/group-event-details-modal.component';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-base-100 border border-base-300 rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <status-pill [status]=\"status\">{{ period }}</status-pill>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-base-200-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4 max-w-[33%]\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate flex-1 w-1/2\">\n                            {{\n                                raw_description ||\n                                    booking?.asset_name ||\n                                    booking?.asset_id\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"\n                        !for_current_user &&\n                        booking?.booking_type !== 'group-event'\n                    \"\n                >\n                    Associate\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"booking?.booking_type === 'group-event'\"\n                >\n                    Event\n                </div>\n                <div\n                    class=\"absolute top-2 right-2 bg-warning/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"is_reserved_parking_space | async\"\n                >\n                    {{\n                        booking.status !== 'declined' ? 'RESERVED' : 'RELEASED'\n                    }}\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public raw_description = '';\n\n    public readonly is_reserved_parking_space =\n        this._parking.assigned_space.pipe(\n            map(\n                (space) =>\n                    this.booking.booking_type === 'parking' &&\n                    space &&\n                    this.booking.asset_id === space.id,\n            ),\n        );\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'cancelled') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _parking: ParkingService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : '',\n            ),\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.booking) {\n            this.raw_description = this.removeHtmlTags(\n                this.booking?.description,\n            );\n        }\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format,\n        )} (${dur})`;\n    }\n\n    public removeHtmlTags(html: string) {\n        const doc = new DOMParser().parseFromString(html, 'text/html');\n        return doc.body.textContent || '';\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const view_component: any =\n                this.booking.booking_type === 'group-event'\n                    ? GroupEventDetailsModalComponent\n                    : BookingDetailsModalComponent;\n            const data =\n                this.booking.booking_type === 'group-event'\n                    ? { booking: this.booking, concierge: false }\n                    : this.booking;\n            const ref: any = this._dialog.open(view_component, { data });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit?.subscribe(() => this.edit.emit()),\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove?.subscribe(() =>\n                    this.remove.emit(),\n                ),\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end?.subscribe(() => this.end.emit()),\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    notifyError,\n    notifySuccess,\n    SettingsService,\n} from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking, checkinBookingInstance } from './bookings.fn';\n\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-base-100 sm:bg-base-200 sm:dark:bg-neutral-600 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-base-100 border-base-200\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-neutral w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <status-pill [status]=\"booking_status\">\n                            {{ period }}\n                        </status-pill>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-success]=\"booking.checked_in\"\n                            [class.text-success-content]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !booking.checked_out_at &&\n                                !checked_out &&\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress') &&\n                                booking.status !== 'declined'\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-secondary rounded text-white h-12 w-12\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"has_assets\">\n                    <div\n                        class=\"mt-4 sm:p-4 sm:bg-base-100 sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-base-200 flex-grow-[3] min-w-1/3 sm:w-[16rem]\"\n                    >\n                        <h3 class=\"mx-3 py-2 text-lg font-medium\" i18n>\n                            Assets ({{ booking.valid_assets?.length || 0 }})\n                        </h3>\n                        <div class=\"flex flex-col space-y-2\">\n                            <div\n                                request\n                                *ngFor=\"let request of booking.valid_assets\"\n                                class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                            >\n                                <button\n                                    matRipple\n                                    class=\"flex items-center space-x-2 p-3 w-full\"\n                                    (click)=\"\n                                        show_request[request.id] =\n                                            !show_request[request.id]\n                                    \"\n                                >\n                                    <div class=\"flex-1 text-left\">\n                                        <div class=\"text-sm\">\n                                            Requested for\n                                            {{\n                                                request.deliver_at\n                                                    | date\n                                                        : 'MMM d, ' +\n                                                              time_format\n                                            }}\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                        [class.bg-success]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.text-success-content]=\"\n                                            request.state === 'approved'\n                                        \"\n                                        [class.bg-warning]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.text-warning-content]=\"\n                                            request.state !== 'approved' &&\n                                            request.state !== 'rejected'\n                                        \"\n                                        [class.bg-error]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [class.text-error-content]=\"\n                                            request.state === 'rejected'\n                                        \"\n                                        [matTooltip]=\"\n                                            request.state || 'Tentative'\n                                        \"\n                                    >\n                                        <app-icon>\n                                            {{\n                                                request.state === 'approved'\n                                                    ? 'done'\n                                                    : request.state ===\n                                                        'rejected'\n                                                      ? 'close'\n                                                      : 'schedule'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                    <div\n                                        class=\"flex items-center justify-center rounded-full w-8 h-8\"\n                                    >\n                                        <app-icon class=\"text-2xl\">\n                                            {{\n                                                show_request[request.id]\n                                                    ? 'expand_less'\n                                                    : 'expand_more'\n                                            }}\n                                        </app-icon>\n                                    </div>\n                                </button>\n                                <div\n                                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                                    [@show]=\"\n                                        show_request[request.id]\n                                            ? 'show'\n                                            : 'hide'\n                                    \"\n                                >\n                                    <div\n                                        class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                        *ngFor=\"let item of request.items\"\n                                    >\n                                        <div class=\"flex items-center flex-1\">\n                                            <span class=\"text-sm\">{{\n                                                item.name || 'Item'\n                                            }}</span>\n                                        </div>\n                                        <div\n                                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                        >\n                                            x{{ item.quantity }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded sm:bg-base-100 m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <ng-container *ngIf=\"!hide_map\">\n                        <interactive-map\n                            class=\"pointer-events-none\"\n                            [src]=\"level?.map_id\"\n                            [features]=\"features\"\n                            [options]=\"{\n                                disable_pan: true,\n                                disable_zoom: true,\n                            }\"\n                        ></interactive-map>\n                    </ng-container>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-neutral text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                *ngIf=\"can_edit\"\n                (click)=\"edit.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon>edit</app-icon>\n                    <div i18n>Edit booking</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_checked_in && desk_height_enabled\"\n                (click)=\"setDeskHeight()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon className=\"material-symbols-rounded\">\n                        height\n                    </app-icon>\n                    <div i18n>Set Desk Height</div>\n                </div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                (click)=\"remove.emit()\"\n            >\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>Delete booking</div>\n                </div>\n            </button>\n            <button mat-menu-item *ngIf=\"is_in_progress\" (click)=\"end.emit()\">\n                <div class=\"flex items-center space-x-2 text-base\">\n                    <app-icon class=\"text-error\">delete</app-icon>\n                    <div i18n>End booking</div>\n                </div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public show_request = {};\n    public checked_out = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location:\n                this.booking?.extension_data?.map_id || this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n    public readonly has_assets = !!this.booking?.valid_assets.length;\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        const building = this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id),\n        );\n        if (this._settings.get('app.use_region')) {\n            const region = this._org.regions.find(\n                (region) =>\n                    (this.booking?.zones || []).includes(region.id) ||\n                    region.id === building?.parent_id,\n            );\n            if (region) return region;\n        }\n        return building;\n    }\n\n    public get can_edit() {\n        return (\n            this.booking.booking_type !== 'visitor' &&\n            this.booking.booking_type !== 'parking'\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`,\n        );\n    }\n\n    public get is_checked_in() {\n        return this.booking.checked_in;\n    }\n\n    public get desk_height_enabled() {\n        return (\n            this.booking?.type === 'desk' &&\n            this._settings.get('app.desks.height_enabled')\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking_status() {\n        if (this.booking?.is_done) return 'neutral';\n        if (this.booking?.status === 'approved') return 'success';\n        if (this.booking?.status === 'declined') return 'error';\n        if (this.booking?.status === 'tentative') return 'warning';\n        return 'warning';\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n    ) {\n        console.log('Valid assets:', this.booking?.valid_assets);\n    }\n\n    public get period() {\n        if (this.booking?.is_all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format,\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        const bkn = this.booking;\n        const promise = (\n            bkn.instance\n                ? checkinBookingInstance(\n                      bkn.id,\n                      bkn.instance,\n                      !this.booking.checked_in,\n                  )\n                : checkinBooking(this.booking.id, !this.booking.checked_in)\n        )\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        await promise;\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        this.checked_out = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`,\n        );\n        this.checking_in = false;\n    }\n\n    public status(id: string): string {\n        const booking = this.booking.linked_bookings.find(\n            (_) => _.asset_id === id,\n        );\n        if (booking.status) return booking.status;\n        return booking\n            ? booking.approved\n                ? 'approved'\n                : booking.rejected\n                  ? 'rejected'\n                  : 'pending'\n            : 'pending';\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n\n    public setDeskHeight() {\n        this._dialog.open(DeskSettingsModalComponent, {\n            data: { id: this.booking.asset_ids[0] || this.booking.asset_id },\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    BookingRuleset,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    rulesForResource,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, startOfDay } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    forkJoin,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { bookedResourceList, queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { validateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking', 'locker', 'catering'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n    /** Whether to group bookings */\n    disable_date?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    assigned_to?: string;\n    features: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}',\n        ),\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1),\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1),\n    );\n\n    public readonly booking_rules: Observable<\n        Record<string, BookingRuleset[]>\n    > = combineLatest([this._org.building_list, this._options]).pipe(\n        switchMap(([list, { type }]) =>\n            Promise.all(\n                list.map((bld) =>\n                    showMetadata(bld.id, `${type}_booking_rules`).toPromise(),\n                ),\n            ),\n        ),\n        map((building_rules) => {\n            const mapping = {};\n            for (const rules of building_rules) {\n                mapping[rules.id] =\n                    rules.details instanceof Array ? rules.details : [];\n            }\n            return mapping;\n        }),\n        shareReplay(1),\n    );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.booking_rules,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0,\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`),\n        ),\n        switchMap(([options, resources, restrictions]) => {\n            var { all_day, date, duration, user } = this.form.getRawValue();\n            if (all_day) {\n                date = startOfDay(date).valueOf();\n                duration = 24 * 60 - 1;\n            }\n            return bookedResourceList({\n                period_start: getUnixTime(date),\n                period_end: getUnixTime(addMinutes(date, duration)),\n                type: options.type,\n                zones:\n                    options.zone_id ||\n                    (this._settings.get('app.use_region')\n                        ? this._org.region?.id\n                        : this._org.building?.id) ||\n                    this._org.organisation.id,\n            }).pipe(\n                map(\n                    (booked_ids) => {\n                        const start = this.form.getRawValue().date;\n                        const end = addMinutes(\n                            start,\n                            this.form.getRawValue().duration,\n                        ).valueOf();\n                        this._resource_use = {};\n                        for (const id of booked_ids) {\n                            this._resource_use[id] = ' ';\n                        }\n                        const available = resources.filter((asset) => {\n                            const is_restricted = rulesForResource(\n                                {\n                                    date,\n                                    duration,\n                                    resource: asset,\n                                    host: user || currentUser(),\n                                },\n                                restrictions[asset.zone?.id] ||\n                                    restrictions[asset.zone?.parent_id] ||\n                                    restrictions[this._org.building.id] ||\n                                    [],\n                            ).hidden;\n                            return (\n                                !is_restricted &&\n                                (!asset.groups?.length ||\n                                    asset.groups.some((grp) =>\n                                        currentUser().groups.includes(grp),\n                                    )) &&\n                                asset.bookable !== false &&\n                                (!options.features ||\n                                    options.features?.every((_) =>\n                                        asset.features.includes(_),\n                                    )) &&\n                                (!options.zone_id ||\n                                    options.zone_id === asset.zone?.id ||\n                                    options.zone_id ===\n                                        asset.zone?.parent_id) &&\n                                !booked_ids.includes(asset.id)\n                            );\n                        });\n                        console.log('Resources:', resources, available);\n                        return available;\n                    },\n                    catchError((_) => of([])),\n                ),\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1),\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id),\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        }),\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(\n        booking: Booking = new Booking({\n            all_day: this._settings.get('app.bookings.all_day_default'),\n        }),\n    ) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, ''],\n            ),\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => {\n                const { date, duration } = this.form.getRawValue();\n                this._assets.setOptions({ date, duration });\n                this.storeForm();\n            }),\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService,\n        private _assets: AssetStateService,\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    !booking.url.includes('book') &&\n                    !BOOKING_TYPES.find((_) => booking.url.includes(_))\n                ) {\n                    this.clearForm();\n                }\n            }),\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1,\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        if (!sessionStorage.getItem('PLACEOS.booking_form')) {\n            return this.newForm();\n        }\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, ''],\n            ),\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            }),\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {}),\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}',\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, ''],\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}',\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog,\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form,\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                {\n                    ...booking,\n                    ...value,\n                    user_email:\n                        value.user?.email ||\n                        value.user_email ||\n                        currentUser()?.email,\n                },\n                this._options.getValue().type,\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        delete value.booking_asset;\n        if (value.all_day) {\n            value.date = startOfDay(value.date).valueOf();\n            value.duration = 24 * 60 - 1;\n        }\n        const { event_id, parent_id } = value;\n        delete value.event_id;\n        delete value.parent_id;\n        const resources = value.resources || [];\n        const zones = resources[0]?.zone\n            ? unique([\n                  this._org.organisation.id,\n                  this._org.region?.id,\n                  resources[0]?.zone?.parent_id,\n                  resources[0]?.zone?.id,\n              ])\n            : [this._org.organisation.id, this._org.region?.id];\n        const q: any = event_id\n            ? { ical_uid: value.ical_uid, event_id: event_id }\n            : parent_id\n              ? { booking_id: parent_id }\n              : {};\n        if (booking.instance && !value.update_master) {\n            q.instance = true;\n            q.start_time = booking.booking_start;\n        }\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name || value.user_name,\n                user_email: value.user?.email || value.user_email,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    assets: value.assets.map((_) => _.toJSON()),\n                    group: value.group,\n                    phone: value.phone,\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n                zones: unique([...zones, ...(value.zones || [])]).filter(\n                    (_) => _,\n                ),\n            }),\n            q,\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            const requests = await validateAssetRequestsForResource(\n                { ...result, from_booking: true },\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    all_day: value.all_day,\n                    host: value.booked_by_email,\n                    zones: unique([...zones, ...(value.zones || [])]).filter(\n                        (_) => _,\n                    ),\n                },\n                value.assets,\n            ).catch((e) => {\n                console.error(\"Couldn't update asset requests\", e);\n                if (e?.status === 409) {\n                    notifyError(\n                        'Some assets are already booked for the selected time',\n                    );\n                }\n                this._loading.next('');\n                throw e?.error || e;\n            });\n            if (!requests) throw 'Unable to validate asset requests';\n            await requests();\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result),\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email,\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.getRawValue();\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id,\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length,\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email',\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type,\n                ),\n            ),\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd',\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: (asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          this._org.region?.id,\n                          asset?.zone?.parent_id,\n                          asset?.zone?.id,\n                      ])\n                    : [this._org.organisation.id, this._org.region?.id]\n                ).filter((_) => _),\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`,\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType,\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        if (type === 'group-event') return true;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n            email: user_email,\n            limit: 1000,\n        }).toPromise();\n        let active_bookings = bookings.filter(\n            (_) =>\n                _.status !== 'declined' &&\n                _.status !== 'cancelled' &&\n                !_.rejected,\n        );\n        if (\n            active_bookings.find((_) => _.asset_id === asset_id && id !== _.id)\n        ) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.bookings.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            active_bookings.filter(\n                (_) =>\n                    _.user_email.toLowerCase() ===\n                        (user_email || currentUser()?.email).toLowerCase() &&\n                    _.id !== id,\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a booking at the selected time`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        const use_region = this._settings.get('app.use_region');\n        const map_metadata = (_) =>\n            (_?.metadata[type]?.details instanceof Array\n                ? _.metadata[type]?.details\n                : []\n            ).map((d) =>\n                (type as any) !== 'lockers'\n                    ? {\n                          ...d,\n                          id: d.id || d.map_id,\n                          zone: _.zone,\n                      }\n                    : d.lockers?.map((locker) => ({\n                          ...locker,\n                          bank_id: d.id,\n                          zone: _.zone,\n                      })) || [],\n            );\n        const id = use_region\n            ? this._org.building.parent_id\n            : this._org.building.id;\n        if (use_region) {\n            const id = this._org.building.parent_id;\n            const buildings = this._org.buildings.filter(\n                (_) => _.parent_id === id,\n            );\n            return forkJoin(\n                buildings.map((_) =>\n                    listChildMetadata(_.id, { name: type }).pipe(\n                        map((data) => flatten(data.map(map_metadata))),\n                    ),\n                ),\n            ).pipe(map((_) => flatten(_)));\n        }\n        return listChildMetadata(id, {\n            name: type,\n        }).pipe(map((data) => flatten(data.map(map_metadata))));\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number,\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id,\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id),\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item),\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item,\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                btn\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\nimport { SharedEventsModule } from 'libs/events/src/lib/events.module';\nimport { SharedSpacesModule } from 'libs/spaces/src/lib/spaces.module';\nimport { SharedUsersModule } from 'libs/users/src/lib/users.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\nimport { DeskSettingsModalComponent } from './desk-settings-modal.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n    DeskSettingsModalComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n        SharedSpacesModule,\n        SharedEventsModule,\n        SharedUsersModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || item.id || item.map_id || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-base-300\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden text-base-content\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section details class=\"space-y-2 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"desk.map_id || desk.id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                <ng-container *ngIf=\"!all_day\">\n                    {{ start | date: time_format }} &mdash;\n                    {{ end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"all_day\">All Day</ng-container>\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get all_day() {\n        return this._state.form.value.all_day;\n    }\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\nimport { map } from 'rxjs/operators';\nimport { combineLatest } from 'rxjs';\nimport { Region } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-base-200 pb-2 sm:hidden\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium mb-1\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[8rem] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"use_region && (regions | async)?.length\"\n                    >\n                        <mat-select\n                            name=\"region\"\n                            [ngModel]=\"region\"\n                            (ngModelChange)=\"setRegion($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Region\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let reg of regions | async\"\n                                [value]=\"reg\"\n                            >\n                                {{ reg.display_name || reg.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!use_region && (buildings | async)?.length > 1\"\n                    >\n                        <mat-select\n                            name=\"building\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"\n                                (building | async)?.display_name ||\n                                (building | async)?.name\n                            \"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"w-full\"\n                        *ngIf=\"!hide_levels\"\n                    >\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            (ngModelChange)=\"setOptions({ zone_id: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"Any Level\"\n                            i18n-placeholder\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"opacity-30 text-xs\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (lvl.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ lvl.display_name || lvl.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [to]=\"end_date\"\n                        [timezone]=\"timezone\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n                <!-- Start End -->\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                            [timezone]=\"timezone\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                            [timezone]=\"timezone\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly form = this._state.form;\n    public readonly regions = this._org.region_list;\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking'),\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || ''),\n            );\n        }),\n    );\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get region() {\n        return this._org.region;\n    }\n    public set region(reg) {\n        this._org.region = reg;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public readonly setRegion = (r) => (this._org.region = r);\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90,\n            ),\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return this._settings.get('app.use_region');\n    }\n\n    public get timezone() {\n        return this._settings.get('app.events.use_building_timezone')\n            ? this._org.building.timezone\n            : '';\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-base-100 border-base-200 overflow-hidden\"\n                    [class.!border-info]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    template: `\n        <div class=\"bg-base-100 p-2 border-b border-base-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full\"\n                *ngIf=\"(levels | async)?.length\"\n            >\n                <mat-select\n                    name=\"location\"\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setOptions({ zone_ids: [$event.id] })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    placeholder=\"Any Level\"\n                    i18n-placeholder\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        <div class=\"flex flex-col-reverse\">\n                            <div class=\"opacity-30 text-xs\" *ngIf=\"use_region\">\n                                {{ (lvl.parent_id | building)?.display_name }}\n                                <span class=\"opacity-0\"> - </span>\n                            </div>\n                            <div>\n                                {{ lvl.display_name || lvl.name }}\n                            </div>\n                        </div>\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n    public coordinates = undefined;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = combineLatest([\n        this._org.active_region,\n        this._org.active_building,\n    ]).pipe(\n        map(([region, bld]) => {\n            const level_list = this.use_region\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld);\n            const viewable_levels = level_list.filter(\n                (lvl) => !lvl.tags.includes('parking')\n            );\n            return viewable_levels.sort(\n                (a, b) =>\n                    a.parent_id.localeCompare(b.parent_id) ||\n                    (a.display_name || '').localeCompare(b.display_name || '')\n            );\n        })\n    );\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n    ]).pipe(\n        map(([desks]) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : this._state.resourceUserName(desk.id)\n                        ? 'busy'\n                        : 'not-bookable';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this._state.options.subscribe(({ zone_id }) => {\n                const level = this._org.levelWithID([zone_id]);\n                if (level) this.level = level;\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.setOptions({ zone_id: level?.id });\n        const bld = this._org.buildings.find((_) => _.id === level?.parent_id);\n        if (bld) {\n            const [latitude, longitude] = bld.location\n                .split(',')\n                .map((_) => parseFloat(_));\n            this.coordinates = { latitude, longitude };\n        }\n        this.level = level;\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-base-200 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        },\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) {\n            this.displayed = null;\n            setTimeout(() => this._dialog_ref.close([item]), 50);\n        }\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id),\n            );\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService, notifyError, notifySuccess } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'desk-settings-modal',\n    template: `\n        <div\n            class=\"relative p-4 bg-base-100 rounded shadow w-[20rem]\"\n            *ngIf=\"!edit_presets; else desk_height_tooltip\"\n        >\n            <div class=\"text-lg\" i18n>Desk Height</div>\n            <div class=\"text-xs opacity-60 mb-4\" i18n>\n                Set your desk height for the best experience\n            </div>\n            <div class=\"flex flex-col mt-2 mb-4\">\n                <label>Presets</label>\n                <div class=\"flex items-center space-x-2 pb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript flex-1 w-1/2\"\n                    >\n                        <mat-select\n                            placeholder=\"No selected preset\"\n                            [(ngModel)]=\"preset\"\n                            (ngModelChange)=\"setPreset($event)\"\n                        >\n                            <mat-option value=\"\">None</mat-option>\n                            <mat-option value=\"standing\">Standing</mat-option>\n                            <mat-option value=\"sitting\">Seated</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"edit_presets = true\"\n                        class=\"rounded h-12 w-12 bg-secondary text-secondary-content\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                </div>\n                <label>Current Height</label>\n                <div class=\"flex items-center space-x-2\">\n                    <mat-slider\n                        min=\"60\"\n                        max=\"120\"\n                        step=\"0.5\"\n                        discrete\n                        class=\"flex-1\"\n                        [displayWith]=\"formatLabel\"\n                    >\n                        <input\n                            matSliderThumb\n                            [(ngModel)]=\"height\"\n                            (ngModelChange)=\"updatePreset(height)\"\n                        />\n                    </mat-slider>\n                    <div class=\"text-sm w-12 text-right\">\n                        {{ height.toFixed(1) }}cm\n                    </div>\n                </div>\n            </div>\n            <button btn matRipple (click)=\"setDeskHeight()\" class=\"w-full\">\n                Apply Settings\n            </button>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 right-0\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <ng-template #desk_height_tooltip>\n            <desk-height-presets\n                [show_close]=\"true\"\n                (close)=\"edit_presets = false\"\n            ></desk-height-presets>\n        </ng-template>\n    `,\n    styles: [],\n})\nexport class DeskSettingsModalComponent {\n    public readonly desk_id = this._data.id;\n    public edit_presets = false;\n    public preset: string;\n    public height = 71;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { id: string },\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _dialog_ref: MatDialogRef<DeskSettingsModalComponent>,\n    ) {}\n\n    public ngOnInit() {\n        const sitting_height = this._settings.get('desk_sitting_height');\n        const standing_height = this._settings.get('desk_standing_height');\n        if (!sitting_height && !standing_height) {\n            this.edit_presets = true;\n        }\n        const last_height = parseInt(\n            localStorage.getItem('PLACEOS.last_desk_height'),\n            10,\n        );\n        this.height = last_height || sitting_height || 71;\n        if (this.height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (this.height === standing_height) {\n            this.preset = 'standing';\n        }\n    }\n\n    public updatePreset(new_height: number) {\n        const sitting_height = this._settings.get('desk_sitting_height') || 71;\n        const standing_height =\n            this._settings.get('desk_standing_height') || 102;\n        if (new_height === sitting_height) {\n            this.preset = 'sitting';\n        } else if (new_height === standing_height) {\n            this.preset = 'standing';\n        } else {\n            this.preset = null;\n        }\n    }\n\n    public setPreset(value: string) {\n        switch (value) {\n            case 'standing':\n                this.height = this._settings.get('desk_standing_height') || 102;\n                break;\n            case 'sitting':\n                this.height = this._settings.get('desk_sitting_height') || 71;\n                break;\n            default:\n                this.height = 70;\n                break;\n        }\n    }\n\n    public async setDeskHeight() {\n        const sys_id = this._org.binding('desks');\n        localStorage.setItem('PLACEOS.last_desk_height', `${this.height}`);\n        if (!sys_id) return this._dialog_ref.close();\n        const module = getModule(sys_id, 'DeskControl');\n        await module\n            .execute('set_desk_height', [this.desk_id, this.height])\n            .catch((_) => {\n                notifyError('Error setting desk height.' + _);\n                throw _;\n            });\n        notifySuccess('Successfully set desk height');\n        this._dialog_ref.close();\n    }\n\n    public formatLabel(value: number) {\n        return `${value.toFixed(1)}cm`;\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-base-100 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div class=\"w-full border-b border-base-200 sm:px-16 px-4 py-4\">\n                    <h2 class=\"text-2xl font-medium\" i18n>Invite Visitor</h2>\n                </div>\n                <form\n                    *ngIf=\"form\"\n                    [formGroup]=\"form\"\n                    class=\"sm:px-16 px-4 py-4\"\n                >\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <div\n                        *ngIf=\"can_book_for_others\"\n                        class=\"w-full flex flex-col\"\n                    >\n                        <label for=\"host\">\n                            {{ 'FORM.HOST' | translate }}<span>*</span>\n                        </label>\n                        <a-user-search-field\n                            name=\"host\"\n                            class=\"mb-4\"\n                            formControlName=\"user\"\n                        ></a-user-search-field>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n>\n                                    A valid email is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky sm:px-16 px-4 py-4 border-t bg-base-100 border-base-200 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div class=\"w-full p-2 border-t border-base-200\">\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.bookings.multiple_visitors');\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.bookings.can_book_for_others');\n    }\n\n    public get building() {\n        return this._settings.get('app.use_region')\n            ? this._org.region\n            : this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_)),\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_)),\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n            phone: item.phone,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s),\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`,\n            );\n        }\n        if (!this.form.value.user_email || !this.can_book_for_others) {\n            this.form.patchValue({ user: currentUser() });\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                    phone: value.phone,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                        phone: user.phone,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.width]=\"columns * 2.5 + 'rem'\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-base-200 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-neutral rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-neutral rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-neutral\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-base-200\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-base-200 sm:hidden\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-info-content]=\"fav\"\n                    [class.!bg-info]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-base-200\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-base-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [focus]=\"space.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-base-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section\n            filters\n            class=\"flex items-center flex-wrap p-2 w-[35rem] max-w-full sm:max-w-[35rem]\"\n        >\n            <div\n                filter-item\n                zone\n                class=\"dark:border-base-200-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-base-200-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-base-200-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-base-200-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\nimport { addDays, endOfDay } from 'date-fns';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-base-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-base-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <ng-container *ngIf=\"!use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                        >\n                            <mat-select\n                                name=\"building\"\n                                [ngModel]=\"building | async\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [placeholder]=\"\n                                    (building | async)?.display_name ||\n                                    (building | async)?.name\n                                \"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl.id\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                    <ng-container *ngIf=\"use_region\">\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"(regions | async)?.length\"\n                        >\n                            <mat-select\n                                name=\"region\"\n                                [ngModel]=\"region\"\n                                (ngModelChange)=\"setRegion($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Region\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let reg of regions | async\"\n                                    [value]=\"reg\"\n                                >\n                                    {{ reg.display_name || reg.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full\"\n                            *ngIf=\"!hide_levels\"\n                        >\n                            <mat-select\n                                name=\"location\"\n                                [ngModel]=\"(options | async)?.zone_id\"\n                                (ngModelChange)=\"\n                                    setOptions({ zone_id: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Any Level\"\n                                i18n-placeholder\n                            >\n                                <mat-option [value]=\"\">Any Level</mat-option>\n                                <mat-optgroup\n                                    *ngFor=\"let bld of region_levels | async\"\n                                    [label]=\"bld.name\"\n                                >\n                                    <mat-option\n                                        [value]=\"level.id\"\n                                        *ngFor=\"let level of bld.levels\"\n                                    >\n                                        {{ level.display_name || level.name }}\n                                    </mat-option>\n                                </mat-optgroup>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field\n                        name=\"date\"\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [to]=\"end_date\"\n                    >\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\" *ngIf=\"false\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-base-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    @Input() public hide_levels: boolean;\n\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id,\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        }),\n    );\n    public readonly buildings = this._org.active_buildings;\n    public readonly regions = this._org.region_list;\n    public readonly region_levels = this._org.active_region.pipe(\n        map((_) => {\n            const region_buildings = this._org.buildings.filter(\n                (b) => !_ || b.parent_id === _.id,\n            );\n            const region_levels = region_buildings.map((b) => ({\n                id: b.id,\n                name: b.display_name || b.name,\n                levels: this._org.levels.filter(\n                    (l) => l.parent_id === b.id && l.tags.includes('parking'),\n                ),\n            }));\n            return region_levels.filter((_) => _.levels.length);\n        }),\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n    public readonly setRegion = (r) => (this._org.region = r);\n\n    public setBuilding(bld: Building) {\n        this._org.building = bld;\n    }\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.parking.available_period') || 7,\n            ),\n        );\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService,\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-info]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-neutral bg-base-200 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-info\">people</app-icon>\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-info]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-base-100 border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon\n                    class=\"relative text-white z-10 text-2xl\"\n                    *ngIf=\"selected\"\n                >\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\nimport { MapsPeopleService } from 'libs/common/src/lib/mapspeople.service';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <ng-container *ngIf=\"is_displayed\">\n            <interactive-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n                [options]=\"{ controls: true }\"\n            ></interactive-map>\n        </ng-container>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-base-100 p-2 border-b border-base-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(\n        private _event_form: EventFormService,\n        private _maps_people: MapsPeopleService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setLevel(level: BuildingLevel) {\n        this.level = level;\n        this._maps_people.setCustomZone(level.parent_id);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-base-200\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                    [hide_levels]=\"view !== 'list'\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-base-200\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-base-200\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-base-100 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, Input, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    FAV_PARKING_KEY,\n    ParkingSpaceSelectModalComponent,\n} from './parking-select-modal/parking-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `parking-space-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                space\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-base-200\"\n                *ngFor=\"let space of spaces\"\n            >\n                <div\n                    class=\"w-24 h-24 rounded-xl bg-base-200 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"space.images?.length; else placeholder\"\n                        class=\"object-cover h-full\"\n                        [source]=\"space.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/car-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ space.name || 'Meeting Resource' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>\n                            {{\n                                space.location ||\n                                    space.level?.display_name ||\n                                    space.level?.name ||\n                                    space.zone?.display_name ||\n                                    space.zone?.name\n                            }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">people</app-icon>\n                        <p i18n>\n                            {{ space.capacity < 1 ? 2 : space.capacity || 1 }} {\n                            (space.capacity < 1 ? 2 : space.capacity || 1),\n                            plural, =1 { Person } other { People } }\n                        </p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            edit-space\n                            class=\"clear\"\n                            (click)=\"changeResources(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon class=\"text-2xl\">edit</app-icon>\n                                <div>Change</div>\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            remove-space\n                            class=\"clear\"\n                            (click)=\"removeResource(space)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon class=\"text-2xl\">close</app-icon>\n                                <div>Remove</div>\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(asset?.id)\"\n                    (click)=\"toggleFavourite(asset)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(asset?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            add-space\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon class=\"text-2xl\">search</app-icon>\n                <span i18n>Add Parking Resource</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ParkingSpaceListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class ParkingSpaceListFieldComponent implements ControlValueAccessor {\n    @Input() public disable_date = false;\n    public room_size = 3;\n    public spaces: BookingAsset[] = [];\n    public disabled = false;\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>('favourite_spaces') || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected spaces */\n    public changeResources() {\n        const ref = this._dialog.open(ParkingSpaceSelectModalComponent, {\n            data: {\n                spaces: this.spaces,\n                options: {\n                    capacity: this.room_size,\n                    disable_date: this.disable_date,\n                },\n            },\n        });\n        ref.afterClosed().subscribe((spaces?: BookingAsset[]) => {\n            if (!spaces) return;\n            this.setValue(spaces);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.spaces.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.spaces = new_value;\n        if (this._onChange) this._onChange(this.spaces);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.spaces = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    currentUser,\n    flatten,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, forkJoin, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { queryBookings } from './bookings.fn';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\nexport interface ParkingSpace {\n    id: string;\n    map_id: string;\n    name: string;\n    notes: string;\n    assigned_to: string;\n}\n\nexport interface ParkingUser {\n    id: string;\n    name: string;\n    email: string;\n    car_model: string;\n    car_colour: string;\n    plate_number: string;\n    phone: string;\n    notes: string;\n    deny: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ParkingService extends AsyncHandler {\n    private _loading = new BehaviorSubject<string[]>([]);\n\n    public readonly loading =\n        this._loading.asObservable(); /** List of available parking levels for the current building */\n    public levels = this._org.level_list.pipe(\n        map((_) => {\n            if (!this._settings.get('app.use_region')) {\n                const blds = this._org.buildingsForRegion();\n                const bld_ids = blds.map((bld) => bld.id);\n                const list = _.filter(\n                    (lvl) =>\n                        bld_ids.includes(lvl.parent_id) &&\n                        lvl.tags.includes('parking'),\n                );\n                list.map((lvl) => ({\n                    ...lvl,\n                    display_name: `${\n                        blds.find((_) => _.id === lvl.parent_id)?.display_name\n                    } - ${lvl.display_name}`,\n                }));\n                return list;\n            }\n            return _.filter(\n                (lvl) =>\n                    lvl.parent_id === this._org.building.id &&\n                    lvl.tags.includes('parking'),\n            );\n        }),\n    );\n    /** List of parking spaces for the current building/level */\n    public spaces = combineLatest([this.levels]).pipe(\n        filter(([lvls]) => !!lvls[0]?.id),\n        switchMap(([levels]) => {\n            this._loading.next([...this._loading.getValue(), 'spaces']);\n            return forkJoin(\n                levels.map((lvl) =>\n                    showMetadata(lvl.id, 'parking-spaces').pipe(\n                        map(\n                            (d) =>\n                                (d.details instanceof Array\n                                    ? d.details\n                                    : []\n                                ).map((s) => ({\n                                    ...s,\n                                    zone_id: lvl.id,\n                                })) as ParkingSpace[],\n                        ),\n                    ),\n                ),\n            );\n        }),\n        map((list) => flatten<ParkingSpace>(list)),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'spaces'),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    /** List of parking spaces for the current building/level */\n    public users = combineLatest([this._org.active_building]).pipe(\n        filter(([bld]) => !!bld?.id),\n        switchMap(([bld]) => {\n            this._loading.next([...this._loading.getValue(), 'users']);\n            return showMetadata(bld.id, 'parking-users');\n        }),\n        map(\n            (metadata) =>\n                (metadata.details instanceof Array\n                    ? metadata.details\n                    : []) as ParkingUser[],\n        ),\n        tap(() =>\n            this._loading.next(\n                this._loading.getValue().filter((_) => _ !== 'users'),\n            ),\n        ),\n        shareReplay(1),\n    );\n\n    public readonly assigned_space = this.spaces.pipe(\n        map((list) =>\n            list.find(\n                (_) =>\n                    _.assigned_to?.toLowerCase() ===\n                    currentUser().email?.toLowerCase(),\n            ),\n        ),\n    );\n\n    public readonly user_details = this.users.pipe(\n        map((list) =>\n            list.find(\n                (_) =>\n                    _.email?.toLowerCase() ===\n                    currentUser().email?.toLowerCase(),\n            ),\n        ),\n    );\n\n    public readonly deny_parking_access = this.user_details.pipe(\n        map((details) => !!details?.deny),\n    );\n\n    public readonly booked_space = combineLatest([\n        this._org.active_building,\n        this.spaces,\n    ]).pipe(\n        map(([_, spaces]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(Date.now())),\n                period_end: getUnixTime(endOfDay(Date.now())),\n                type: 'parking',\n            }).pipe(\n                catchError(() => of([])),\n                map((booking_list) =>\n                    booking_list\n                        .map((booking) =>\n                            spaces.find(\n                                (space) => space.id === booking.asset_id,\n                            ),\n                        )\n                        .filter((space) => !!space),\n                ),\n            ),\n        ),\n        map((_) => _[0]),\n        shareReplay(1),\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n        this.subscription('spaces', this.assigned_space.subscribe());\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-base-100 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n"],"x_google_ignoreList":[]}