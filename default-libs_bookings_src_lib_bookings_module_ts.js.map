{"version":3,"file":"default-libs_bookings_src_lib_bookings_module_ts.js","mappings":"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","names":["i0","ctx_r4","day","BookingCardComponent_h4_0_span_1_Template","ctx_r0","show_day","booking","date","ctx_r5","type","ctx_r6","location","_r9","ctx_r8","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","_c0","_c1","ctx_r1","id","title","is_done","status","period","_r2","description","asset_id","for_current_user","BookingCardComponent","AsyncHandler","this","user_email","toLowerCase","currentUser","email","constructor","_dialog","_route","_org","super","edit","EventEmitter","remove","end","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","Date","now","isSameDay","format","level","levelWithID","zones","display_name","name","all_day","start","duration","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","timeout","ref","open","BookingDetailsModalComponent","data","componentInstance","emit","t","i1","i2","i3","_angular_core__WEBPACK_IMPORTED_MODULE_4__","Xpm","selectors","inputs","outputs","features","decls","vars","consts","template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","extension_data","images","checked_in","_r12","ctx_r11","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","ctx_r7","checking_in","BookingDetailsModalComponent_div_14_button_1_Template","ctx_r2","auto_checkin","state","_r4","ctx_r3","map_id","_c4","_r14","ctx_r13","_r16","ctx_r15","building","buildings","find","bld","includes","_settings","is_in_progress","ts","booking_start","booking_end","_booking","hide_map","content","MapPinComponent","_this","_asyncToGenerator","checkinBooking","toPromise","catch","_","notifyError","notifySuccess","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","item","asset_name","afterClosed","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_7__","i18n_0","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","BookingDetailsModalComponent_interactive_map_41_Template","BookingDetailsModalComponent_button_52_Template","BookingDetailsModalComponent_button_53_Template","length","address","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","storeForm","next","_options","_router","_payments","BehaviorSubject","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","pipe","shareReplay","generateBookingForm","resources","combineLatest","active_building","distinctUntilKeyChanged","debounceTime","switchMap","of","loadResourceList","tap","map","resource","list","Array","forEach","push","unique","sort","a","b","localeCompare","restrictions","showMetadata","catchError","details","available_resources","merge","timer","filter","getRawValue","queryBookings","period_start","getUnixTime","period_end","zone_id","bookings","valueOf","restriction","user_name","asset","assets","groups","some","grp","bookable","every","zone","parent_id","bkn","grouped_availability","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setOptions","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","user","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","event","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","getInvalidFields","join","booking_type","checkResourceAvailable","set","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","result","saveBooking","user_id","department","approved","error","updateAssetRequestsForResource","host","booked_by_email","_this3","extra_members","take","active_resource","_getNearbyResources","group_members","Promise","all","idx","group_name","i","organisation","_this4","DeskQuestionsModalComponent","race","key","_this5","allowed_bookings","current","listChildMetadata","flatten","metadata","d","lockers","bank_id","map_url","count","nearby_resources","findNearbyFeature","i4","i5","_angular_core__WEBPACK_IMPORTED_MODULE_31__","Yz7","factory","ɵfac","providedIn","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","_angular_core__WEBPACK_IMPORTED_MODULE_3__","SharedBookingsModule","core","oAB","cJS","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","$event","_r11","ctx_r10","_r13","ctx_r12","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","_r15","ctx_r14","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","DeskConfirmModalComponent","_data","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","opt_r7","$implicit","selected_features","_c6","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","toggleFavourite","favorites","EMPTY_FAVS","DeskListFieldComponent","FAV_DESK_KEY","room_size","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","DeskSelectModalComponent","capacity","selected","setValue","space","new_value","writeValue","fav_list","saveUserSetting","_angular_core__WEBPACK_IMPORTED_MODULE_2__","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DeskListFieldComponent_div_1_Template","submit","FormGroup","travelled","FormControl","unwell","contact","Object","keys","failure","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","_r1","desk","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","active","activeChange","fav","DeskDetailsComponent","ngOnChanges","changes","updateFeature","i18n_3","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","feat_r2","_r6","show_fav","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","viewChange","o","f","editFilter","DeskFiltersComponent","DeskFiltersDisplayComponent_div_16_Template","DeskFiltersDisplayComponent_div_18_Template","tmp_4_0","tmp_5_0","_r7","bld_r9","DeskFiltersComponent_div_10_mat_option_5_Template","_c16","lvl_r14","DeskFiltersComponent_div_12_mat_option_5_Template","levels","feat_r18","_r20","ctx_r19","tmp_1_0","ctx_r17","_c21","DeskFiltersComponent_section_40_div_3_Template","_r22","ctx_r21","allow_time_changes","allow_all_day","end_date","addDays","_bsheet_ref","can_close","active_buildings","active_levels","dismiss","setLevel","l","_angular_core__WEBPACK_IMPORTED_MODULE_5__","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_29_Template","DeskFiltersComponent_section_40_Template","DeskFiltersComponent_div_42_Template","tmp_2_0","tmp_3_0","tmp_9_0","tmp_17_0","tmp_19_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","_r10","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","tmp_0_0","_r3","DeskListComponent","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","lvl_r1","DeskMapComponent","is_displayed","zoom","center","x","y","_change","actions","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","styles","free_desks","reduce","colours","fill","DEFAULT_COLOURS","setZoom","new_zoom","max","min","resetMap","DeskMapComponent_mat_option_3_Template","_r5","displayed","selected_ids","_r8","ctx_r9","_dialog_ref","_event_form","isSelected","setSelected","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","locker_r1","clicked","position","size","LockerGridComponent","columns","locker","bank","bank_status","LockerGridComponent_button_3_Template","height","LockersService","_level","lockers_banks$","PlaceMetadata","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_c12","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","zone_ids","_updateLocation","feat","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_6_0","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","max_duration","lvl","tags","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_11_0","tmp_13_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","available_spaces","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","VanillaQR","r","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","toTable","domElement","document","createElement","qrc","colorLight","colorDark","ecclevel","noBorder","borderSize","n","c","g","h","v","m","u","p","gexp","glog","R","Q","V","N1","N3","k","N2","N4","genframe","C","w","E","N","T","eccblocks","z","slice","adelta","vpat","charCodeAt","fmtword","init","tableWrite","canvasWrite","generateQRCode","code","toImage","src","prototype","getContext","lineWidth","round","canvas","width","clearRect","fillStyle","fillRect","style","cssText","cloneNode","firstChild","insertBefore","appendChild","innerHTML","console","log","Error","Image","toDataURL","ExploreBookQrComponent","qr_code","origin","controls","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","can_book_for_others","ExploreBookingModalComponent_ng_container_6_main_1_Template","save","ExploreBookingModalComponent","organiser","app_name","navigate","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","x_pos","y_pos","_details","_element","tries","setTimeout","parent","nativeElement","parentElement","parseInt","top","left","available_until","ExploreDeskInfoComponent_ng_template_1_Template","_r0","in_use_count","ExploreLockerBankInfoComponent","openBankModal","ExploreLockerBankModalComponent","ExploreLockerBankInfoComponent_ng_template_2_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","pos","getBoundingClientRect","body","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","free","pending","reserved","busy","unknown","ExploreSpacesService","_bookings","_statuses","_bind","unsubWith","mod","getModule","binding","listen","handleBookingsChange","bind","handleStatusChange","updateActions","updateHoverElements","bookSpace","hidden","rulesForSpace","booking_rules","openEventLinkModal","CalendarEvent","clearTimeout","updateStatus","style_map","opacity","setStyles","Space","setFeatures","setActions","_angular_core__WEBPACK_IMPORTED_MODULE_13__","ExploreStateService","positions","_positions","active_level","_spaces","_styles","_features","_actions","_labels","disable","_message","message","querySystems","limit","map_positions","map_features","disable_features","concat","map_actions","disable_actions","map_labels","labels","disable_labels","map_styles","style_mappings","text","display","disable_styles","level_list","old_options","setPositions","feature_map","actions_map","setLabels","labels_map","_angular_core__WEBPACK_IMPORTED_MODULE_16__"],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/qr-code.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }}, </span>\n            {{ booking?.date | date: 'h:mm a' }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, 'h:mm a')} - ${format(end, 'h:mm a')} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id: this._booking.extension_data.map_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\nexport interface AssetRestriction {\n    start: number;\n    end: number;\n    assets: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.restrictions,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) =>\n            queryBookings({\n                period_start: getUnixTime(this.form.getRawValue().date),\n                period_end: getUnixTime(\n                    addMinutes(\n                        this.form.getRawValue().date,\n                        this.form.getRawValue().duration || 24 * 60\n                    )\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) => {\n                    const start = this.form.getRawValue().date;\n                    const end = addMinutes(\n                        start,\n                        this.form.getRawValue().duration\n                    ).valueOf();\n                    const restriction = restrictions.find(\n                        (_) =>\n                            (start >= _.start && start < _.end) ||\n                            (end <= _.end && end > _.start)\n                    );\n                    this._resource_use = {};\n                    bookings.forEach(\n                        (_) => (this._resource_use[_.asset_id] = _.user_name)\n                    );\n                    return resources.filter(\n                        (asset) =>\n                            (!restriction ||\n                                !restriction.assets.includes(asset.id)) &&\n                            (!asset.groups?.length ||\n                                asset.groups.some((grp) =>\n                                    currentUser().groups.includes(grp)\n                                )) &&\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find(\n                                (bkn) =>\n                                    bkn.asset_id === asset.id &&\n                                    bkn.status !== 'declined'\n                            )\n                    );\n                })\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => this.storeForm())\n        );\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    (!booking.url.includes('book') ||\n                        !BOOKING_TYPES.find((_) => booking.url.includes(_)))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (value.duration >= 12 * 60 || value.all_day) {\n            this.form.patchValue({\n                date: set(value.date, { hours: 11, minutes: 59 }).valueOf(),\n                duration: 12 * 60,\n            });\n            value = this.form.getRawValue();\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        this._loading.next('Saving booking');\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !!this._settings.get('app.bookings.no_approval'),\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                result as any,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.value;\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        for (let i = 0; i < group_members.length; i++) {\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            await this.postForm(true);\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email, all_day }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        duration = all_day ? 12 * 60 : duration || 60;\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [src]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [disabled]=\"form.value.all_day\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [force]=\"form.value.all_day ? 'All Day' : ''\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._state.available_resources.pipe(\n        map((desks) =>\n            unique(\n                desks.map((desk) => desk.zone as any as BuildingLevel),\n                'id'\n            )\n        )\n    );\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: 'shortTime' }} &mdash;\n                {{ end | date: 'shortTime' }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: EventFormService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_ids }) =>\n                this._updateLocation(zone_ids)\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [src]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { currentUser, notifySuccess, SettingsService } from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label i18n>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm();\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Succefully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative\"\n            [class.hidden]=\"status === 'free'\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            *ngIf=\"space.images[0]\"\n                            [src]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { rulesForSpace } from 'libs/events/src/lib/helpers';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space, force: boolean = false) {\n        const { hidden } =\n            rulesForSpace(\n                { date: Date.now(), duration: 60, space, host: currentUser() },\n                this._org.building.booking_rules\n            ) || {};\n        if (hidden)\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n"],"x_google_ignoreList":[]}