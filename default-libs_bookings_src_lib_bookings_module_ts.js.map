{"version":3,"file":"default-libs_bookings_src_lib_bookings_module_ts.js","mappings":"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","names":["i0","ctx_r4","day","BookingCardComponent_h4_0_span_1_Template","ctx_r0","show_day","booking","date","time_format","ctx_r5","type","ctx_r6","location","_r9","ctx_r8","viewDetails","BookingCardComponent_a_1_app_icon_13_Template","BookingCardComponent_a_1_div_16_Template","BookingCardComponent_a_1_div_19_Template","_c0","_c1","ctx_r1","id","title","is_done","status","period","_r2","description","asset_id","for_current_user","BookingCardComponent","AsyncHandler","this","user_email","toLowerCase","currentUser","email","_settings","constructor","_dialog","_route","_org","super","edit","EventEmitter","remove","end","ngOnInit","subscription","queryParamMap","subscribe","params","has","get","Date","now","isSameDay","format","level","levelWithID","zones","display_name","name","all_day","start","duration","addMinutes","dur","formatDuration","hours","Math","floor","minutes","replace","timeout","ref","open","BookingDetailsModalComponent","data","componentInstance","emit","t","i1","i2","i3","i4","_angular_core__WEBPACK_IMPORTED_MODULE_4__","Xpm","selectors","inputs","outputs","features","decls","vars","consts","template","rf","ctx","BookingCardComponent_h4_0_Template","BookingCardComponent_a_1_Template","BookingCardComponent_ng_template_2_Template","extension_data","images","checked_in","_r12","ctx_r11","toggleCheckedIn","BookingDetailsModalComponent_div_14_button_1_div_1_Template","BookingDetailsModalComponent_div_14_button_1_ng_template_2_Template","ctx_r7","checking_in","BookingDetailsModalComponent_div_14_button_1_Template","ctx_r2","auto_checkin","state","_r4","ctx_r3","map_id","_c4","_r14","ctx_r13","_r16","ctx_r15","building","buildings","find","bld","includes","is_in_progress","ts","booking_start","booking_end","_booking","hide_map","content","MapPinComponent","_this","_asyncToGenerator","checkinBooking","toPromise","catch","_","notifyError","notifySuccess","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","item","asset_name","afterClosed","MAT_DIALOG_DATA","_angular_core__WEBPACK_IMPORTED_MODULE_7__","i18n_0","$localize","BookingDetailsModalComponent_div_2_Template","BookingDetailsModalComponent_div_3_Template","BookingDetailsModalComponent_div_14_Template","BookingDetailsModalComponent_interactive_map_41_Template","BookingDetailsModalComponent_button_52_Template","BookingDetailsModalComponent_button_53_Template","length","address","BOOKING_TYPES","BookingFormService","view","_view","getValue","resourceUserName","_resource_use","newForm","Booking","form","reset","patchValue","cleanObject","undefined","valueChanges","storeForm","next","_options","_router","_payments","BehaviorSubject","_loading","last_success","JSON","parse","sessionStorage","getItem","loading","asObservable","options","pipe","shareReplay","generateBookingForm","resources","combineLatest","active_building","distinctUntilKeyChanged","debounceTime","switchMap","of","loadResourceList","tap","map","resource","list","Array","forEach","push","unique","sort","a","b","localeCompare","restrictions","showMetadata","catchError","details","available_resources","merge","timer","filter","getRawValue","queryBookings","period_start","getUnixTime","period_end","zone_id","bookings","valueOf","restriction","user_name","asset","assets","groups","some","grp","bookable","every","zone","parent_id","bkn","grouped_availability","asset_list","members","group","pop","events","NavigationEnd","url","clearForm","initialised","first","setOptions","setView","value","setFeature","feature","enable","splice","findIndex","e","resetForm","user","booked_by","removeItem","setItem","stringify","loadForm","booking_data","clearOldState","openBookingLinkModal","force","markAllAsTouched","valid","event","BookingLinkModalComponent","confirmPost","checkQuestions","openConfirmModal","icon","reason","postFormForGroup","close","postForm","ignore_check","_this2","getInvalidFields","join","booking_type","checkResourceAvailable","payment_module","receipt","makePayment","resource_name","success","invoice","invoice_id","result","saveBooking","user_id","department","approved","error","updateAssetRequestsForResource","host","booked_by_email","_this3","extra_members","take","active_resource","_getNearbyResources","group_members","available","Promise","all","idx","unavailable","group_name","i","organisation","notifyWarn","_this4","DeskQuestionsModalComponent","race","key","_this5","allowed_bookings","current","listChildMetadata","flatten","metadata","d","lockers","bank_id","map_url","count","nearby_resources","findNearbyFeature","i5","_angular_core__WEBPACK_IMPORTED_MODULE_30__","Yz7","factory","ɵfac","providedIn","_event","outlook_link","generateMicrosoftCalendarLink","google_link","generateGoogleCalendarLink","ical_link","generateCalendarFileLink","_angular_core__WEBPACK_IMPORTED_MODULE_3__","SharedBookingsModule","core","oAB","cJS","ReactiveFormsModule","imports","CommonModule","FormsModule","MatRadioModule","MatInputModule","MatFormFieldModule","MatDatepickerModule","MatButtonModule","MatDialogModule","MatProgressSpinnerModule","MatCheckboxModule","MatAutocompleteModule","FormFieldsModule","ComponentsModule","MatRippleModule","MatTooltipModule","$event","_r11","ctx_r10","_r13","ctx_r12","DeskConfirmModalComponent_ng_container_5_div_2_Template","DeskConfirmModalComponent_ng_container_5_div_6_Template","DeskConfirmModalComponent_ng_container_5_a_date_field_7_Template","DeskConfirmModalComponent_ng_container_5_div_8_Template","_r15","ctx_r14","confirm","can_set_host","can_set_date","hide_reason","desks","desk_list","DeskConfirmModalComponent","_data","DeskConfirmModalComponent_button_4_Template","DeskConfirmModalComponent_ng_container_5_Template","DeskConfirmModalComponent_ng_template_6_Template","opt_r7","$implicit","selected_features","_c6","_c7","DeskListFieldComponent_div_1_div_1_mat_checkbox_4_Template","item_r1","DeskListFieldComponent_div_1_div_1_Template","DeskListFieldComponent_div_1_img_3_Template","DeskListFieldComponent_div_1_ng_template_4_Template","changeResources","removeResource","toggleFavourite","favorites","EMPTY_FAVS","DeskListFieldComponent","FAV_DESK_KEY","room_size","items","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","DeskSelectModalComponent","capacity","selected","setValue","space","new_value","writeValue","fav_list","saveUserSetting","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DeskListFieldComponent_div_1_Template","submit","FormGroup","travelled","FormControl","unwell","contact","Object","keys","failure","_angular_core__WEBPACK_IMPORTED_MODULE_1__","DeskQuestionsModalComponent_div_0_Template","DeskQuestionsModalComponent_ng_template_1_Template","_r1","desk","feat_r7","DeskDetailsComponent_ng_container_0_section_31_div_3_Template","_c8","_c9","DeskDetailsComponent_ng_container_0_image_carousel_2_Template","toggleFav","DeskDetailsComponent_ng_container_0_section_31_Template","DeskDetailsComponent_ng_container_0_section_32_Template","active","activeChange","fav","DeskDetailsComponent","ngOnChanges","changes","updateFeature","_angular_core__WEBPACK_IMPORTED_MODULE_2__","i18n_3","DeskDetailsComponent_ng_container_0_Template","DeskDetailsComponent_ng_template_1_Template","feat_r2","_r6","show_fav","DeskFiltersDisplayComponent","_state","endOfDay","_bsheet","viewChange","o","f","editFilter","DeskFiltersComponent","DeskFiltersDisplayComponent_div_16_Template","DeskFiltersDisplayComponent_div_18_Template","tmp_4_0","tmp_5_0","_r7","bld_r9","DeskFiltersComponent_div_10_mat_option_5_Template","_c16","lvl_r14","DeskFiltersComponent_div_12_mat_option_6_Template","tmp_0_0","levels","feat_r18","_r20","ctx_r19","tmp_1_0","ctx_r17","_c21","DeskFiltersComponent_section_40_div_3_Template","_r22","ctx_r21","allow_time_changes","allow_all_day","end_date","addDays","use_24hr","_bsheet_ref","can_close","active_buildings","active_levels","dismiss","setLevel","l","_angular_core__WEBPACK_IMPORTED_MODULE_5__","DeskFiltersComponent_button_2_Template","DeskFiltersComponent_div_10_Template","DeskFiltersComponent_div_12_Template","DeskFiltersComponent_div_29_Template","DeskFiltersComponent_section_40_Template","DeskFiltersComponent_div_42_Template","tmp_2_0","tmp_3_0","tmp_10_0","tmp_19_0","tmp_21_0","desk_r7","selectDesk","DeskListComponent_ng_container_5_ul_1_li_1_div_3_Template","DeskListComponent_ng_container_5_ul_1_li_1_img_4_Template","DeskListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","_r10","isFavourite","DeskListComponent_ng_container_5_ul_1_li_1_Template","DeskListComponent_ng_container_5_ul_1_Template","_r3","DeskListComponent","onSelect","desk_id","DeskListComponent_ng_container_5_Template","DeskListComponent_ng_template_7_Template","DeskListComponent_ng_template_9_Template","lvl_r1","DeskMapComponent","is_displayed","zoom","center","x","y","_change","actions","action","callback","ExploreDeskInfoComponent","full_size","no_scale","z_index","styles","free_desks","reduce","colours","fill","DEFAULT_COLOURS","setZoom","new_zoom","max","min","resetMap","_angular_core__WEBPACK_IMPORTED_MODULE_6__","DeskMapComponent_mat_option_3_Template","_r5","displayed","selected_ids","_r8","ctx_r9","_dialog_ref","_event_form","isSelected","setSelected","DeskSelectModalComponent_desk_list_16_Template","DeskSelectModalComponent_button_19_Template","DeskSelectModalComponent_ng_template_37_Template","bld_r12","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_mat_option_6_Template","item_r19","_r21","ctx_r20","setVisitor","company","item_r22","_r24","ctx_r23","_r26","ctx_r25","filterVisitors","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_9_Template","ctx_r27","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_mat_option_20_Template","filtered_visitors","_r17","InviteVisitorFormComponent_ng_container_0_div_1_form_4_div_1_Template","_r29","ctx_r28","InviteVisitorFormComponent_ng_container_0_div_1_form_4_ng_container_18_Template","multiple","InviteVisitorFormComponent_ng_container_0_div_1_form_4_Template","_r31","ctx_r30","sendInvite","InviteVisitorFormComponent_ng_container_0_div_1_Template","loading_many","InviteVisitorFormComponent_ng_template_1_ng_container_4_Template","InviteVisitorFormComponent_ng_template_1_ng_container_5_Template","InviteVisitorFormComponent_ng_template_1_ng_container_10_Template","InviteVisitorFormComponent_ng_template_1_ng_container_11_Template","_r37","ctx_r36","onDone","ctx_r38","sent","InviteVisitorFormComponent","_service","done","last_count","visitors","initFormZone","setValidators","Validators","split","visitor_details","old_visitors","_bookForMany","_bookForOne","attendees","User","randomString","_angular_core__WEBPACK_IMPORTED_MODULE_8__","InviteVisitorFormComponent_ng_container_0_Template","InviteVisitorFormComponent_ng_template_1_Template","InviteVisitorFormComponent_ng_template_3_Template","InviteVisitorFormComponent_ng_template_5_Template","locker_r1","clicked","position","size","LockerGridComponent","columns","locker","bank","bank_status","LockerGridComponent_button_3_Template","height","LockersService","_level","lockers_banks$","PlaceMetadata","lockers$","bank_list","level_id","filtered_lockers$","saveLockers","updateMetadata","_angular_core__WEBPACK_IMPORTED_MODULE_12__","ParkingSpaceDetailsComponent_ng_container_0_image_carousel_2_Template","_c12","ParkingSpaceDetailsComponent","_updateFeature","ParkingSpaceDetailsComponent_ng_container_0_Template","ParkingSpaceDetailsComponent_ng_template_1_Template","removeFeature","ParkingSpaceFiltersDisplayComponent","editFilters","ParkingSpaceFiltersComponent","_updateLocation","feat","zone_ids","ParkingSpaceFiltersDisplayComponent_div_9_Template","ParkingSpaceFiltersDisplayComponent_div_20_Template","capcaity","tmp_6_0","lvl_r6","feat_r8","toggleFeature","_c20","ParkingSpaceFiltersComponent_section_43_div_3_Template","_form","max_duration","lvl","tags","new_list","ParkingSpaceFiltersComponent_button_2_Template","ParkingSpaceFiltersComponent_mat_option_16_Template","ParkingSpaceFiltersComponent_section_43_Template","ParkingSpaceFiltersComponent_div_45_Template","tmp_13_0","tmp_15_0","space_r7","selectSpace","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_div_3_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_img_4_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_ng_template_5_Template","ParkingSpaceListComponent_ng_container_5_ul_1_li_1_Template","ParkingSpaceListComponent_ng_container_5_ul_1_Template","ParkingSpaceListComponent","space_id","ParkingSpaceListComponent_ng_container_5_Template","ParkingSpaceListComponent_ng_template_7_Template","ParkingSpaceListComponent_ng_template_9_Template","ParkingSpaceLocationPinComponent","MAP_FEATURE_DATA","ParkingSpaceLocationPinComponent_div_15_Template","ParkingSpaceLocationPinComponent_app_icon_16_Template","opt_r5","ParkingSpaceSelectMapComponent","_seletedSpace","available_spaces","ParkingSpaceSelectMapComponent_i_map_0_Template","ParkingSpaceSelectMapComponent_mat_option_4_Template","FAV_PARKING_KEY","ParkingSpaceSelectModalComponent","spaces","ParkingSpaceSelectModalComponent_parking_space_list_11_Template","ParkingSpaceSelectModalComponent_button_14_Template","ParkingSpaceSelectModalComponent_ng_template_32_Template","VanillaQR","r","revision","imageTypes","bmp","gif","jpeg","jpg","png","tiff","webp","toTable","domElement","document","createElement","qrc","colorLight","colorDark","ecclevel","noBorder","borderSize","n","c","g","h","v","m","u","p","gexp","glog","R","Q","V","N1","N3","k","N2","N4","genframe","C","w","E","N","T","eccblocks","z","slice","adelta","vpat","charCodeAt","fmtword","init","tableWrite","canvasWrite","generateQRCode","code","toImage","src","prototype","getContext","lineWidth","round","canvas","width","clearRect","fillStyle","fillRect","style","cssText","cloneNode","firstChild","insertBefore","appendChild","innerHTML","console","log","Error","Image","toDataURL","ExploreBookQrComponent","qr_code","origin","controls","ExploreBookingModalComponent_ng_container_6_main_1_div_11_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_18_Template","ExploreBookingModalComponent_ng_container_6_main_1_div_19_Template","can_book_for_others","ExploreBookingModalComponent_ng_container_6_main_1_Template","save","ExploreBookingModalComponent","organiser","app_name","navigate","ExploreBookingModalComponent_button_4_Template","ExploreBookingModalComponent_ng_container_6_Template","ExploreBookingModalComponent_ng_template_8_Template","ExploreDeskInfoComponent_ng_template_1_p_5_Template","ExploreDeskInfoComponent_ng_template_1_p_6_Template","ExploreDeskInfoComponent_ng_template_1_p_7_Template","x_pos","y_pos","_details","_element","tries","setTimeout","parent","nativeElement","parentElement","parseInt","top","left","available_until","ExploreDeskInfoComponent_ng_template_1_Template","_r0","in_use_count","ExploreLockerBankInfoComponent","openBankModal","ExploreLockerBankModalComponent","ExploreLockerBankInfoComponent_ng_template_2_Template","feature_r9","ExploreSpaceInfoComponent_ng_template_2_ul_16_li_1_Template","ExploreSpaceInfoComponent_ng_template_2_img_4_Template","ExploreSpaceInfoComponent_ng_template_2_div_5_Template","ExploreSpaceInfoComponent_ng_template_2_div_11_Template","ExploreSpaceInfoComponent_ng_template_2_div_15_Template","ExploreSpaceInfoComponent_ng_template_2_ul_16_Template","show_features","ExploreSpaceInfoComponent","updateOffset","pos","getBoundingClientRect","body","clientWidth","clientHeight","ExploreSpaceInfoComponent_ng_template_2_Template","free","pending","reserved","busy","unknown","ExploreSpacesService","_bookings","_statuses","_bind","unsubWith","mod","getModule","binding","listen","handleBookingsChange","bind","handleStatusChange","updateActions","updateHoverElements","bookSpace","hidden","rulesForSpace","booking_rules","openEventLinkModal","CalendarEvent","clearTimeout","updateStatus","style_map","opacity","setStyles","Space","setFeatures","priority","setActions","_angular_core__WEBPACK_IMPORTED_MODULE_13__","ExploreStateService","positions","_positions","active_level","_spaces","_styles","_features","_actions","_labels","disable","_message","message","querySystems","limit","map_positions","map_features","disable_features","concat","map_actions","disable_actions","map_labels","labels","disable_labels","map_styles","style_mappings","text","display","disable_styles","level_list","old_options","setPositions","feature_map","actions_map","setLabels","labels_map","_angular_core__WEBPACK_IMPORTED_MODULE_16__"],"sourceRoot":"webpack:///","sources":["./libs/bookings/src/lib/booking-card.component.ts","./libs/bookings/src/lib/booking-details-modal.component.ts","./libs/bookings/src/lib/booking-form.service.ts","./libs/bookings/src/lib/booking-link-modal.component.ts","./libs/bookings/src/lib/bookings.module.ts","./libs/bookings/src/lib/desk-confirm-modal.component.ts","./libs/bookings/src/lib/desk-list-field.component.ts","./libs/bookings/src/lib/desk-questions-modal.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-details.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters-display.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-filters.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-list.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-map.component.ts","./libs/bookings/src/lib/desk-select-modal/desk-select-modal.component.ts","./libs/bookings/src/lib/invite-visitor-form.component.ts","./libs/bookings/src/lib/locker-grid.component.ts","./libs/bookings/src/lib/lockers.service.ts","./libs/bookings/src/lib/parking-select-modal/parking-details.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters-display.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-filters.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-list.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-location-pin.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-map.component.ts","./libs/bookings/src/lib/parking-select-modal/parking-select-modal.component.ts","./libs/common/src/lib/vanillaqr.min.ts","./libs/common/src/lib/qr-code.ts","./libs/explore/src/lib/explore-book-qr.component.ts","./libs/explore/src/lib/explore-booking-modal.component.ts","./libs/explore/src/lib/explore-desk-info.component.ts","./libs/explore/src/lib/explore-locker-bank-info.component.ts","./libs/explore/src/lib/explore-locker-bank-modal.component.ts","./libs/explore/src/lib/explore-space-info.component.ts","./libs/explore/src/lib/explore-spaces.service.ts","./libs/explore/src/lib/explore-state.service.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { SettingsService, currentUser } from '@placeos/common';\nimport { addMinutes, format, formatDuration, isSameDay } from 'date-fns';\n\nimport { Booking } from './booking.class';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\nimport { AsyncHandler } from 'libs/common/src/lib/async-handler.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\n@Component({\n    selector: 'booking-card',\n    template: `\n        <h4 class=\"mb-2 flex items-center\" *ngIf=\"booking\">\n            <span *ngIf=\"show_day\" day>{{ day }},&nbsp;</span>\n            {{ booking?.date | date: time_format }}\n            <span class=\"text-xs px-2\">({{ booking?.date | date: 'z' }})</span>\n        </h4>\n        <a\n            name=\"view-booking-details\"\n            class=\"w-full cursor-pointer overflow-hidden relative\"\n            [routerLink]=\"['./']\"\n            [queryParams]=\"{ booking: booking?.id }\"\n            (click)=\"viewDetails()\"\n            *ngIf=\"booking\"\n        >\n            <div\n                class=\"w-full bg-white dark:bg-[#1F2021] rounded-xl shadow py-4 relative\"\n            >\n                <h4 class=\"px-4 text-lg\">{{ booking?.title }}</h4>\n                <div class=\"flex mx-4 my-2\">\n                    <div\n                        class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-base space-x-2 pr-2 font-medium\"\n                        [class.bg-green-600]=\"\n                            !booking.is_done && booking?.status === 'approved'\n                        \"\n                        [class.bg-yellow-500]=\"\n                            !booking.is_done && booking?.status === 'tentative'\n                        \"\n                        [class.bg-red-600]=\"\n                            !booking.is_done && booking?.status === 'declined'\n                        \"\n                        [class.bg-gray-300]=\"booking.is_done\"\n                    >\n                        <div\n                            class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                            [class.bg-success]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.text-pending]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-error]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.text-neutral-600]=\"booking.is_done\"\n                        >\n                            <app-icon>\n                                {{\n                                    booking.is_done\n                                        ? 'not_interested'\n                                        : booking?.status === 'approved'\n                                        ? 'done'\n                                        : booking?.status === 'tentative'\n                                        ? 'warning'\n                                        : 'close'\n                                }}\n                            </app-icon>\n                        </div>\n                        <div class=\"pr-1\">{{ period }}</div>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-wrap flex-col sm:flex-row sm:divide-x divide-neutral-500 py-2 space-y-2 sm:space-y-0\"\n                >\n                    <div class=\"flex items-center px-4\">\n                        <app-icon *ngIf=\"type !== 'desk'; else desk_icon\">{{\n                            type\n                        }}</app-icon>\n                        <div class=\"mx-2 truncate\">\n                            {{ booking?.description || booking?.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-4\" *ngIf=\"location\">\n                        <app-icon>place</app-icon>\n                        <div class=\"mx-2 truncate\">{{ location }}</div>\n                    </div>\n                </div>\n                <app-icon\n                    class=\"absolute top-1/2 right-1 text-4xl -translate-y-1/2\"\n                >\n                    chevron_right\n                </app-icon>\n                <div\n                    class=\"absolute top-2 right-2 bg-yellow-500/50 rounded-xl px-2 py-1 text-xs\"\n                    *ngIf=\"!for_current_user\"\n                >\n                    Associate\n                </div>\n            </div>\n        </a>\n        <ng-template #desk_icon>\n            <img src=\"assets/icons/desk-outline.svg\" class=\"w-5 h-5\" />\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: block;\n                width: 100%;\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingCardComponent extends AsyncHandler {\n    @Input() public booking: Booking;\n    @Input() public show_day: boolean = false;\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n\n    public get for_current_user() {\n        return (\n            this.booking?.user_email.toLowerCase() ===\n            currentUser()?.email.toLowerCase()\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) =>\n                params.has('booking') &&\n                this.booking?.id === params.get('event')\n                    ? this.viewDetails()\n                    : ''\n            )\n        );\n    }\n\n    public get type() {\n        if (this.booking?.type === 'desk') return 'desk';\n        if (this.booking?.type === 'parking') return 'drive_eta';\n        return 'book';\n    }\n\n    public get day() {\n        const date = this.booking?.date || Date.now();\n        const is_today = isSameDay(Date.now(), date);\n        return `${is_today ? 'Today' : format(date, 'EEEE')}`;\n    }\n\n    public get location() {\n        const level = this._org.levelWithID(this.booking?.zones || []);\n        return `${level?.display_name || level?.name || ''}`;\n    }\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public viewDetails() {\n        if (!this.booking) return;\n        this.timeout('open', () => {\n            const ref = this._dialog.open(BookingDetailsModalComponent, {\n                data: this.booking,\n            });\n            this.subscription(\n                'edit',\n                ref.componentInstance.edit.subscribe(() => this.edit.emit())\n            );\n            this.subscription(\n                'remove',\n                ref.componentInstance.remove.subscribe(() => this.remove.emit())\n            );\n            this.subscription(\n                'end',\n                ref.componentInstance.end.subscribe(() => this.end.emit())\n            );\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess, SettingsService } from '@placeos/common';\nimport { addMinutes, format, formatDuration } from 'date-fns';\n\nimport { MapLocateModalComponent } from 'libs/components/src/lib/map-locate-modal.component';\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Booking } from './booking.class';\nimport { checkinBooking } from './bookings.fn';\n\n@Component({\n    selector: 'booking-details-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:inset-auto sm:w-[51rem] sm:h-auto sm:max-h-[80vh] bg-white sm:bg-gray-100 sm:dark:bg-neutral-600 dark:bg-neutral-700 sm:rounded overflow-auto space-y-2 pb-2\"\n        >\n            <div\n                class=\"sm:flex flex-col items-center pb-4 max-h-screen sm:max-h-[80vh] sm:px-16 sm:border-b bg-white dark:bg-neutral-700 border-gray-300 dark:border-neutral-500\"\n            >\n                <div\n                    class=\"h-8 w-full sm:hidden block\"\n                    *ngIf=\"!booking?.extension_data?.images?.length\"\n                ></div>\n                <div\n                    class=\"bg-black/20 dark:bg-white/20 w-full h-64 sm:rounded-b overflow-hidden\"\n                    *ngIf=\"booking?.extension_data?.images?.length\"\n                >\n                    <image-carousel\n                        [images]=\"booking?.extension_data?.images\"\n                        class=\"w-full h-64\"\n                    ></image-carousel>\n                </div>\n                <h3\n                    title\n                    class=\"px-3 mt-2 text-xl font-medium w-full\"\n                    [class.pt-4]=\"!booking?.extension_data?.images\"\n                >\n                    {{ booking.title }}\n                </h3>\n                <div class=\"sm:flex items-center justify-between w-full\">\n                    <div class=\"flex m-2\">\n                        <div\n                            class=\"flex items-center bg-opacity-30 rounded-2xl p-1 text-sm space-x-2 pr-2 font-medium\"\n                            [class.bg-green-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'approved'\n                            \"\n                            [class.bg-yellow-500]=\"\n                                !booking.is_done &&\n                                booking?.status === 'tentative'\n                            \"\n                            [class.bg-red-600]=\"\n                                !booking.is_done &&\n                                booking?.status === 'declined'\n                            \"\n                            [class.bg-gray-300]=\"booking.is_done\"\n                        >\n                            <div\n                                class=\"rounded-full h-5 w-5 flex items-center justify-center text-white\"\n                                [class.bg-success]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'approved'\n                                \"\n                                [class.text-pending]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'tentative'\n                                \"\n                                [class.bg-error]=\"\n                                    !booking.is_done &&\n                                    booking?.status === 'declined'\n                                \"\n                                [class.text-neutral-600]=\"booking.is_done\"\n                            >\n                                <app-icon>\n                                    {{\n                                        booking.is_done\n                                            ? 'not_interested'\n                                            : booking?.status === 'approved'\n                                            ? 'done'\n                                            : booking?.status === 'tentative'\n                                            ? 'warning'\n                                            : 'close'\n                                    }}\n                                </app-icon>\n                            </div>\n                            <div class=\"pr-1\">{{ period }}</div>\n                        </div>\n                    </div>\n                    <div\n                        actions\n                        class=\"flex items-center space-x-2 px-2\"\n                        *ngIf=\"!booking.is_done\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1 h-10 border-none\"\n                            [class.bg-green-600]=\"booking.checked_in\"\n                            [disabled]=\"checking_in\"\n                            *ngIf=\"\n                                !auto_checkin &&\n                                (booking.state === 'upcoming' ||\n                                    booking.state === 'in_progress')\n                            \"\n                            (click)=\"toggleCheckedIn()\"\n                        >\n                            <div\n                                class=\"flex items-center space-x-2 justify-center\"\n                                *ngIf=\"!checking_in; else loading_state\"\n                            >\n                                <app-icon>{{\n                                    booking.checked_in ? 'done' : 'arrow_back'\n                                }}</app-icon>\n                                <div class=\"mr-4\">\n                                    {{\n                                        booking.checked_in\n                                            ? 'Checked in'\n                                            : 'Check in'\n                                    }}\n                                </div>\n                            </div>\n                            <ng-template #loading_state>\n                                <mat-spinner\n                                    class=\"mx-auto\"\n                                    [diameter]=\"32\"\n                                ></mat-spinner>\n                            </ng-template>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            [matMenuTriggerFor]=\"menu\"\n                            class=\"bg-primary rounded text-white h-10 w-10\"\n                        >\n                            <app-icon>more_horiz</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"sm:flex flex-wrap sm:px-12\">\n                <div\n                    class=\"sm:p-4 sm:bg-white sm:dark:bg-neutral-700 rounded sm:m-2 sm:border border-gray-200 dark:border-neutral-500 flex-grow-[4] min-w-1/3 sm:w-[16rem]\"\n                >\n                    <h3 class=\"px-3 mt-2 text-lg font-medium mb-2\" i18n>\n                        Details\n                    </h3>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>event</app-icon>\n                        <div>{{ booking.date | date: 'EEEE, dd LLLL y' }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div>{{ period }}</div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>map</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ booking.asset_name || booking.asset_id }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center px-2 space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>\n                            {{ building?.display_name || building?.name }}\n                            {{\n                                building?.address ? ', ' + building.address : ''\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <button\n                    map\n                    class=\"mt-4 sm:my-2 h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded sm:bg-white m-2 flex-grow-[3] min-w-1/3 w-[calc(100%-1rem)] p-2 sm:w-[16rem]\"\n                    (click)=\"viewLocation()\"\n                >\n                    <interactive-map\n                        *ngIf=\"!hide_map\"\n                        class=\"pointer-events-none\"\n                        [src]=\"level?.map_id\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </button>\n            </div>\n            <button\n                icon\n                matRipple\n                mat-dialog-close\n                class=\"absolute top-0 left-2 bg-black/30 text-white\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n        </div>\n        <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n            <button\n                mat-menu-item\n                mat-dialog-close\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"edit.emit()\"\n            >\n                <app-icon>edit</app-icon>\n                <div i18n>Edit booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"!is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"remove.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>Delete booking</div>\n            </button>\n            <button\n                mat-menu-item\n                *ngIf=\"is_in_progress\"\n                class=\"flex items-center space-x-2 text-base\"\n                (click)=\"end.emit()\"\n            >\n                <app-icon>delete</app-icon>\n                <div i18n>End booking</div>\n            </button>\n        </mat-menu>\n    `,\n    styles: [``],\n})\nexport class BookingDetailsModalComponent {\n    @Output() public edit = new EventEmitter();\n    @Output() public remove = new EventEmitter();\n    @Output() public end = new EventEmitter();\n    public readonly booking = this._booking;\n    public hide_map = false;\n    public checking_in = false;\n    public readonly features = [\n        {\n            location: this.booking?.asset_id,\n            content: MapPinComponent,\n        },\n    ];\n\n    public get level() {\n        return this._org.levelWithID(this.booking?.zones || []);\n    }\n\n    public get building() {\n        return this._org.buildings.find((bld) =>\n            (this.booking?.zones || []).includes(bld.id)\n        );\n    }\n\n    public get auto_checkin() {\n        return this._settings.get(\n            `app.${this.booking?.type || 'bookings'}.auto_checkin`\n        );\n    }\n\n    public get is_in_progress() {\n        const ts = Date.now();\n        const start = this.booking?.booking_start * 1000;\n        const end = this.booking?.booking_end * 1000;\n        if (this.booking?.all_day) return start <= ts;\n        return start <= ts && ts <= end;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _booking: Booking,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public get period() {\n        if (this.booking?.all_day) return 'All Day';\n        const start = this.booking?.date || Date.now();\n        const duration = this.booking?.duration || 60;\n        const end = addMinutes(start, duration);\n        const dur = formatDuration({\n            hours: Math.floor(duration / 60),\n            minutes: duration % 60,\n        })\n            .replace(' hour', 'hr')\n            .replace(' minute', 'min');\n        return `${format(start, this.time_format)} - ${format(\n            end,\n            this.time_format\n        )} (${dur})`;\n    }\n\n    public async toggleCheckedIn() {\n        this.checking_in = true;\n        await checkinBooking(this.booking.id, !this.booking.checked_in)\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error checking in booking');\n                this.checking_in = false;\n                throw _;\n            });\n        (this.booking as any).checked_in = !this.booking.checked_in;\n        notifySuccess(\n            `Successfully ${\n                this.booking.checked_in ? 'checked in' : 'ended booking'\n            }`\n        );\n        this.checking_in = false;\n    }\n\n    public viewLocation() {\n        this.hide_map = true;\n        const ref = this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: {\n                item: {\n                    id: this._booking.asset_id,\n                    name: this._booking.asset_name,\n                    map_id:\n                        this._booking.extension_data.map_id ||\n                        this.booking.asset_id,\n                    level: this.level,\n                },\n            },\n        });\n        ref.afterClosed().subscribe(() => (this.hide_map = false));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    currentUser,\n    flatten,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport {\n    cleanObject,\n    listChildMetadata,\n    PlaceZone,\n    showMetadata,\n} from '@placeos/ts-client';\nimport { format, getUnixTime, addMinutes, set } from 'date-fns';\nimport {\n    BehaviorSubject,\n    combineLatest,\n    merge,\n    Observable,\n    of,\n    timer,\n} from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilKeyChanged,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { User } from 'libs/users/src/lib/user.class';\nimport { Booking, BookingType } from './booking.class';\nimport { generateBookingForm } from './booking.utilities';\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { findNearbyFeature } from './booking.utilities';\nimport { PaymentsService } from 'libs/payments/src/lib/payments.service';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { updateAssetRequestsForResource } from 'libs/assets/src/lib/assets.fn';\n\nexport type BookingFlowView = 'form' | 'map' | 'confirm' | 'success';\n\nconst BOOKING_TYPES = ['desk', 'parking'];\n\nexport interface BookingFlowOptions {\n    /** Type of booking being made */\n    type: BookingType;\n    /** Zone to check available */\n    zone_id?: string;\n    /** List of features that the asset should associate */\n    features?: string[];\n    /** Whether booking is for a group */\n    group?: boolean;\n    /** Recurrence Pattern */\n    pattern?: 'none' | 'daily' | 'weekly' | 'monthly';\n    /** Recurrence ending */\n    recurr_end?: number;\n    /** List of group members to book for */\n    members?: User[];\n    /** Whether to only show favourite rooms */\n    show_fav?: boolean;\n}\n\nexport interface BookingAsset {\n    id: string;\n    map_id: string;\n    name: string;\n    bookable: boolean;\n    zone?: PlaceZone;\n    groups?: string[];\n    features: string[];\n}\n\nexport interface AssetRestriction {\n    start: number;\n    end: number;\n    assets: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class BookingFormService extends AsyncHandler {\n    private _view = new BehaviorSubject<BookingFlowView>('form');\n    private _options = new BehaviorSubject<BookingFlowOptions>({\n        type: 'desk',\n    });\n    private _booking = new BehaviorSubject<Booking>(null);\n    private _resource_use: Record<string, string> = {};\n    private _loading = new BehaviorSubject<string>('');\n\n    public last_success: Booking = new Booking(\n        JSON.parse(\n            sessionStorage.getItem('PLACEOS.last_booked_booking') || '{}'\n        )\n    );\n    public readonly loading = this._loading.asObservable();\n    public readonly options = this._options.pipe(shareReplay(1));\n    public readonly form = generateBookingForm();\n\n    public readonly resources: Observable<BookingAsset[]> = combineLatest([\n        this._org.active_building,\n        this.options.pipe(distinctUntilKeyChanged('type')),\n    ]).pipe(\n        debounceTime(300),\n        switchMap(([bld, { type }]) => {\n            if (!bld) return of([]);\n            switch (type) {\n                case 'desk':\n                    this._loading.next(`Loading desks...`);\n                    return this.loadResourceList('desks' as any);\n                case 'parking':\n                    this._loading.next(`Loading parking spaces...`);\n                    return this.loadResourceList('parking-spaces' as any);\n                case 'locker':\n                    this._loading.next(`Loading lockers...`);\n                    return this.loadResourceList('lockers' as any);\n            }\n            return of([]);\n        }),\n        tap(() => this._loading.next(``)),\n        shareReplay(1)\n    );\n\n    public readonly features: Observable<string[]> = this.resources.pipe(\n        map((resource) => {\n            const list: string[] = [];\n            for (const { features } of resource) {\n                features instanceof Array\n                    ? features.forEach((_) => list.push(_))\n                    : null;\n            }\n            return unique(list).sort((a, b) => a.localeCompare(b));\n        }),\n        shareReplay(1)\n    );\n\n    public readonly restrictions: Observable<AssetRestriction[]> =\n        this.options.pipe(\n            switchMap(({ type }) => {\n                return showMetadata(\n                    this._org.building.id,\n                    `${type}_restrictions`\n                ).pipe(catchError(() => of({ details: [] })));\n            }),\n            map((_) => (_?.details instanceof Array ? _.details : [])),\n            shareReplay(1)\n        );\n\n    public readonly available_resources = combineLatest([\n        this.options,\n        this.resources,\n        this.restrictions,\n        merge(this.form.get('date').valueChanges, timer(1000)),\n        merge(this.form.get('duration').valueChanges, timer(1000)),\n    ]).pipe(\n        filter(\n            () =>\n                this.form.getRawValue().date > 0 &&\n                this.form.getRawValue().duration > 0\n        ),\n        debounceTime(500),\n        tap(([{ type }]) =>\n            this._loading.next(`Checking ${type} availability...`)\n        ),\n        switchMap(([options, resources, restrictions]) =>\n            queryBookings({\n                period_start: getUnixTime(this.form.getRawValue().date),\n                period_end: getUnixTime(\n                    addMinutes(\n                        this.form.getRawValue().date,\n                        this.form.getRawValue().duration || 24 * 60\n                    )\n                ),\n                type: options.type,\n                zones: options.zone_id,\n            }).pipe(\n                map((bookings) => {\n                    const start = this.form.getRawValue().date;\n                    const end = addMinutes(\n                        start,\n                        this.form.getRawValue().duration\n                    ).valueOf();\n                    const restriction = restrictions.find(\n                        (_) =>\n                            (start >= _.start && start < _.end) ||\n                            (end <= _.end && end > _.start)\n                    );\n                    this._resource_use = {};\n                    bookings.forEach(\n                        (_) => (this._resource_use[_.asset_id] = _.user_name)\n                    );\n                    return resources.filter(\n                        (asset) =>\n                            (!restriction ||\n                                !restriction.assets.includes(asset.id)) &&\n                            (!asset.groups?.length ||\n                                asset.groups.some((grp) =>\n                                    currentUser().groups.includes(grp)\n                                )) &&\n                            asset.bookable !== false &&\n                            (!options.features ||\n                                options.features?.every((_) =>\n                                    asset.features.includes(_)\n                                )) &&\n                            (!options.zone_id ||\n                                options.zone_id === asset.zone?.id ||\n                                options.zone_id === asset.zone?.parent_id) &&\n                            !bookings.find(\n                                (bkn) =>\n                                    bkn.asset_id === asset.id &&\n                                    bkn.status !== 'declined'\n                            )\n                    );\n                })\n            )\n        ),\n        tap(() => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly grouped_availability = combineLatest([\n        this.options,\n        this.available_resources,\n    ]).pipe(\n        map(([options, resource]) => {\n            const groups = [];\n            const asset_list = [...resource].sort((a, b) =>\n                a.zone?.id?.localeCompare(b.zone?.id)\n            );\n            const members = options.members?.length\n                ? options.members\n                : [currentUser()];\n            while (asset_list.length) {\n                const group = [];\n                let asset = asset_list.pop();\n                while (group.length < members.length) {\n                    if (\n                        group.length &&\n                        !group.find((_) => _.zone?.id === asset.zone?.id)\n                    ) {\n                        break;\n                    }\n                    group.push(asset);\n                    asset = asset_list.pop();\n                }\n                if (group.length < members.length) continue;\n                groups.push(group);\n            }\n            return groups;\n        })\n    );\n\n    public get view() {\n        return this._view.getValue();\n    }\n\n    public get booking() {\n        return this._booking.getValue();\n    }\n\n    public resourceUserName(id: string) {\n        return this._resource_use[id];\n    }\n\n    public newForm(booking: Booking = new Booking()) {\n        this.form.reset();\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...booking,\n                    ...booking.extension_data,\n                },\n                [null, undefined, '']\n            )\n        );\n        this.subscription(\n            'form_change',\n            this.form.valueChanges.subscribe(() => this.storeForm())\n        );\n        this.timeout('date', () => {\n            this.form.patchValue({\n                date: booking.date,\n                duration: booking.duration,\n            });\n        });\n        this._booking.next(new Booking(booking));\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    constructor(\n        private _router: Router,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _payments: PaymentsService\n    ) {\n        super();\n        this.subscription(\n            'router.bookings',\n            this._router.events.subscribe((booking: Event) => {\n                if (\n                    booking instanceof NavigationEnd &&\n                    (!booking.url.includes('book') ||\n                        !BOOKING_TYPES.find((_) => booking.url.includes(_)))\n                ) {\n                    this.clearForm();\n                }\n            })\n        );\n        this._org.initialised\n            .pipe(first((_) => _))\n            .subscribe(() => this.setOptions({}));\n    }\n\n    public setView(value: BookingFlowView) {\n        this._view.next(value);\n    }\n\n    public setOptions(value: Partial<BookingFlowOptions>) {\n        this._options.next({ ...this._options.getValue(), ...value });\n    }\n\n    public setFeature(feature: string, enable: boolean) {\n        if (!feature?.length) return;\n        const features = this._options.getValue()?.features || [];\n        if (enable && !features.includes(feature)) features.push(feature);\n        if (!enable && features.includes(feature))\n            features.splice(\n                features.findIndex((e) => e === feature),\n                1\n            );\n        this.setOptions({ features });\n    }\n\n    public resetForm() {\n        const booking = this._booking.getValue();\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        this.form.patchValue(\n            cleanObject(\n                {\n                    ...(booking || {}),\n                    ...(booking?.extension_data || {}),\n                },\n                [null, undefined, '']\n            )\n        );\n        this._options.next({ type: this._options.getValue().type });\n    }\n\n    public clearForm() {\n        sessionStorage.removeItem('PLACEOS.booking_form');\n        sessionStorage.removeItem('PLACEOS.booking_form_options');\n        this.newForm();\n    }\n\n    public storeForm() {\n        sessionStorage.setItem(\n            'PLACEOS.booking_form',\n            JSON.stringify({\n                ...this._booking.getValue(),\n                ...cleanObject(this.form.getRawValue() || {}, [\n                    null,\n                    undefined,\n                    '',\n                ]),\n            })\n        );\n        sessionStorage.setItem(\n            'PLACEOS.booking_form_filters',\n            JSON.stringify(this._options.getValue() || {})\n        );\n    }\n\n    public loadForm() {\n        this.form.reset({ user: currentUser(), booked_by: currentUser() });\n        const data = JSON.parse(\n            sessionStorage.getItem('PLACEOS.booking_form') || '{}'\n        );\n        const booking = new Booking(data);\n        this._booking.next(booking);\n        const booking_data = cleanObject(\n            {\n                ...data,\n                ...(booking || {}),\n                ...(booking?.extension_data || {}),\n            },\n            [null, undefined, '']\n        );\n        this.form.patchValue(booking_data);\n        this.setOptions({\n            zone_id: this._org.building?.id,\n            ...JSON.parse(\n                sessionStorage.getItem('PLACEOS.booking_form_filters') || '{}'\n            ),\n        });\n    }\n\n    public clearOldState() {\n        sessionStorage.removeItem('PLACEOS.last_booked_booking');\n        this.last_success = new Booking();\n    }\n\n    public openBookingLinkModal(force: boolean = false) {\n        this.form.markAllAsTouched();\n        if (!this.form.valid && !force) return;\n        const event = new Booking({\n            ...this.booking,\n            ...this.form.getRawValue(),\n        });\n        this._dialog.open(BookingLinkModalComponent, { data: event });\n    }\n\n    public async confirmPost() {\n        await this.checkQuestions();\n        const options = this._options.getValue();\n        const value = this.form.getRawValue();\n        let content = `Would you like to book the ${options.type} ${\n            value.asset_name\n        } for ${format(value.date, 'dd MMM yyyy')}${\n            value.duration < 12 * 60\n                ? ' at ' + format(value.date, 'h:mm a')\n                : ''\n        }`;\n        if (options.group) {\n            content = `${content}.<br>You group members will be assigned desks nearby your selected desk.`;\n        }\n        const details = await openConfirmModal(\n            {\n                title: `Book ${options.type}`,\n                content,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details?.reason !== 'done') throw 'User cancelled';\n        details.loading('Performing booking request...');\n        if (options.group) {\n            await this.postFormForGroup().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        } else\n            await this.postForm().catch((_) => {\n                notifyError(JSON.stringify(_));\n                details.close();\n                throw _;\n            });\n        details.close();\n    }\n\n    public async postForm(ignore_check = false) {\n        if (!this.form) throw 'No form for booking';\n        if (!this.form.valid)\n            throw `Some form fields are invalid. [${getInvalidFields(\n                this.form\n            ).join(', ')}]`;\n        this.form.patchValue({\n            booking_type:\n                this.form.getRawValue().booking_type ||\n                this._options.getValue().type,\n        });\n        let value = this.form.getRawValue();\n        let booking = this._booking.getValue() || new Booking();\n        if (!ignore_check) {\n            await this.checkResourceAvailable(\n                { ...booking, ...value },\n                this._options.getValue().type\n            );\n        }\n        if (this._payments.payment_module) {\n            const receipt = await this._payments.makePayment({\n                type: this._options.getValue().type,\n                resource_name: value.asset_name,\n                date: value.date,\n                duration: value.duration,\n                all_day: value.all_day,\n            });\n            if (!receipt?.success) return;\n            (value as any).extension_data = {\n                invoice: receipt,\n                invoice_id: receipt.invoice_id,\n            };\n        }\n        if (!value.zones?.length && this._booking.getValue().zones?.length) {\n            value.zones = this._booking.getValue().zones;\n        }\n        this._loading.next('Saving booking');\n        const result = await saveBooking(\n            new Booking({\n                ...this._options.getValue(),\n                ...value,\n                description: value.asset_name || value.description,\n                user_name: value.user?.name,\n                user_id:\n                    (!value.user?.id?.includes('@') ? value?.user?.id : '') ||\n                    currentUser()?.id,\n                extension_data: {\n                    ...((value as any).extension_data || {}),\n                    department:\n                        value.user?.department || currentUser()?.department,\n                },\n                approved: !this._settings.get('app.bookings.no_approval'),\n            })\n        )\n            .toPromise()\n            .catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        if (value.assets?.length || booking.extension_data.assets?.length) {\n            await updateAssetRequestsForResource(\n                result as any,\n                {\n                    date: value.date,\n                    duration: value.duration,\n                    host: value.booked_by_email,\n                },\n                value.assets,\n                booking.extension_data.assets\n            ).catch((e) => {\n                this._loading.next('');\n                throw e?.error || e;\n            });\n        }\n        this._loading.next('');\n        const { booking_type } = value;\n        this.clearForm();\n        this.form?.patchValue({ booking_type });\n        this.last_success = result;\n        sessionStorage.setItem(\n            'PLACEOS.last_booked_booking',\n            JSON.stringify(result)\n        );\n        this.setView('success');\n        return result;\n    }\n\n    public async postFormForGroup() {\n        const { members, group, type } = this._options.getValue();\n        if (!group) throw 'No group available to book for';\n        const extra_members = members.filter(\n            (_) => _.email !== currentUser().email\n        );\n        if (extra_members.length <= 0)\n            throw 'No members in your group to book for.';\n        const form = this.form.value;\n        const asset_list = await this.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const active_resource = asset_list.find(\n            (_) => _.id === form.asset_id || _.map_id === form.asset_id\n        );\n        const level = this._org.levelWithID([active_resource.zone?.id]);\n        const resources = [\n            active_resource,\n            ...(await this._getNearbyResources(\n                level.map_id,\n                form.asset_id,\n                asset_list,\n                extra_members.length\n            )),\n        ];\n        const group_members = unique(\n            [currentUser(), ...extra_members],\n            'email'\n        );\n        const available = await Promise.all(\n            group_members.map((_, idx) =>\n                this.checkResourceAvailable(\n                    {\n                        ...form,\n                        asset_id: resources[idx].map_id || resources[idx].id,\n                        user_email: _.email,\n                    },\n                    type\n                )\n            )\n        );\n        const unavailable = group_members.filter((_, idx) => !available[idx]);\n        const group_name = `${currentUser().email}[${format(\n            Date.now(),\n            'yyyy-MM-dd'\n        )}]`;\n        let id = '';\n        for (let i = 0; i < group_members.length; i++) {\n            if (!available[i]) continue;\n            const user = group_members[i];\n            const asset = resources[i];\n            this.form.patchValue({\n                ...form,\n                parent_id: id,\n                user: user as any,\n                user_email: user.email,\n                user_id: user.id,\n                asset_id: asset?.id,\n                asset_name: asset.name,\n                description: asset.name,\n                map_id: asset?.map_id || asset?.id,\n                group: group_name,\n                zones: asset.zone\n                    ? unique([\n                          this._org.organisation.id,\n                          asset.zone?.parent_id,\n                          asset.zone?.id,\n                      ])\n                    : [this._org.organisation.id],\n            });\n            const bkn = await this.postForm(true);\n            if (bkn.id && !id) id = bkn.id;\n        }\n        if (unavailable.length) {\n            notifyWarn(\n                `Some members of your group already have a desk booking. [${unavailable\n                    .map((_) => _.name || _.email)\n                    ?.join(', ')}]`\n            );\n        }\n    }\n\n    private async checkQuestions() {\n        if (this._settings.get('app.desks.ignore_questions') !== false) return;\n        const ref = this._dialog.open(DeskQuestionsModalComponent);\n        const result = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (result?.reason !== 'done') throw 'User cancelled';\n        const form = ref.componentInstance.form.getRawValue();\n        for (const key in form) {\n            if (form[key]) throw 'User failed questionaire';\n        }\n        ref.close();\n    }\n\n    /** Check if the given resource is available for the selected user to book */\n    private async checkResourceAvailable(\n        { id, asset_id, date, duration, user_email }: Partial<Booking>,\n        type: BookingType\n    ) {\n        if (!user_email) throw 'No user was selected to book for';\n        const bookings = await queryBookings({\n            period_start: getUnixTime(date),\n            period_end: getUnixTime(date + duration * 60 * 1000),\n            type,\n        }).toPromise();\n        if (bookings.find((_) => _.asset_id === asset_id && id !== _.id)) {\n            if (asset_id.includes('@')) {\n                throw `${asset_id} already has an invite for the selected time`;\n            } else {\n                throw `${asset_id} is not available at the selected time`;\n            }\n        }\n        const allowed_bookings =\n            this._settings.get(`app.booking.allowed_daily_${type}_count`) ?? 1;\n        if (\n            allowed_bookings > 0 &&\n            bookings.filter(\n                (_) =>\n                    _.user_email === (user_email || currentUser()?.email) &&\n                    _.status !== 'declined' &&\n                    _.id !== id\n            ).length >= allowed_bookings\n        ) {\n            const current = user_email === currentUser()?.email;\n            throw `${current ? 'You' : user_email} already ${\n                current ? 'have' : 'has'\n            } a ${type} booked`;\n        }\n        return true;\n    }\n\n    public loadResourceList(type: BookingType) {\n        return listChildMetadata(this._org.building.id, {\n            name: type,\n        }).pipe(\n            map((data) =>\n                flatten(\n                    data.map((_) =>\n                        (_?.metadata[type]?.details instanceof Array\n                            ? _.metadata[type]?.details\n                            : []\n                        ).map((d) =>\n                            (type as any) !== 'lockers'\n                                ? {\n                                      ...d,\n                                      id: d.id || d.map_id,\n                                      zone: _.zone,\n                                  }\n                                : d.lockers?.map((_) => ({\n                                      ..._,\n                                      bank_id: d.id,\n                                      zone: _.zone,\n                                  })) || []\n                        )\n                    )\n                )\n            )\n        );\n    }\n\n    private async _getNearbyResources(\n        map_url: string,\n        id: string,\n        resources: BookingAsset[],\n        count: number\n    ): Promise<BookingAsset[]> {\n        const nearby_resources = [];\n        let asset_list = resources.filter(\n            (_) => _.id !== id && _.map_id !== id\n        );\n        for (let i = 0; i < count; i++) {\n            const item = await findNearbyFeature(\n                map_url,\n                id,\n                asset_list.map((_) => _.map_id || _.id)\n            );\n            if (item) {\n                nearby_resources.push(\n                    resources.find((_) => _.id === item || _.map_id === item)\n                );\n                asset_list = asset_list.filter(\n                    (_) => _.id !== item && _.map_id !== item\n                );\n            }\n        }\n        return nearby_resources;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\nimport { Booking } from './booking.class';\n\n@Component({\n    selector: 'booking-link-modal',\n    template: `\n        <div class=\"p-4 w-full pb-2\">Add event to your calendar</div>\n        <div class=\"flex flex-col items-center space-y-4 p-4 relative\">\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"outlook_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                <span i18n>Create in Outlook</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"google_link | sanitize: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                <span i18n>Create in Google Calendar</span>\n            </a>\n            <a\n                button\n                matRipple\n                class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                [href]=\"ical_link | safe: 'url'\"\n                target=\"_blank\"\n                rel=\"noopener noreferer\"\n            >\n                <app-icon class=\"text-xl\">download</app-icon>\n                <span i18n>Download iCal File</span>\n            </a>\n        </div>\n        <button icon mat-dialog-close class=\"absolute top-2 right-0\">\n            <app-icon>close</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n            }\n        `,\n    ],\n})\nexport class BookingLinkModalComponent {\n    public readonly outlook_link = generateMicrosoftCalendarLink(\n        this._event as any\n    );\n    public readonly google_link = generateGoogleCalendarLink(\n        this._event as any\n    );\n    public readonly ical_link = generateCalendarFileLink(this._event as any);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _event: Booking,\n        private _settings: SettingsService\n    ) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\nimport { FormFieldsModule } from 'libs/form-fields/src/lib/form-fields.module';\n\nimport { BookingCardComponent } from './booking-card.component';\nimport { BookingDetailsModalComponent } from './booking-details-modal.component';\n\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\nimport { DeskDetailsComponent } from './desk-select-modal/desk-details.component';\nimport { DeskFiltersDisplayComponent } from './desk-select-modal/desk-filters-display.component';\nimport { DeskFiltersComponent } from './desk-select-modal/desk-filters.component';\nimport { DeskListComponent } from './desk-select-modal/desk-list.component';\nimport { DeskMapComponent } from './desk-select-modal/desk-map.component';\nimport { DeskSelectModalComponent } from './desk-select-modal/desk-select-modal.component';\nimport { InviteVisitorFormComponent } from './invite-visitor-form.component';\nimport { ParkingSpaceDetailsComponent } from './parking-select-modal/parking-details.component';\nimport { ParkingSpaceFiltersDisplayComponent } from './parking-select-modal/parking-filters-display.component';\nimport { ParkingSpaceFiltersComponent } from './parking-select-modal/parking-filters.component';\nimport { ParkingSpaceListComponent } from './parking-select-modal/parking-list.component';\nimport { ParkingSpaceLocationPinComponent } from './parking-select-modal/parking-location-pin.component';\nimport { ParkingSpaceSelectMapComponent } from './parking-select-modal/parking-map.component';\nimport { ParkingSpaceSelectModalComponent } from './parking-select-modal/parking-select-modal.component';\nimport { ParkingSpaceListFieldComponent } from './parking-space-list-field.component';\nimport { DeskListFieldComponent } from './desk-list-field.component';\nimport { BookingLinkModalComponent } from './booking-link-modal.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatRippleModule } from '@angular/material/core';\nimport { LockerGridComponent } from './locker-grid.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { LockerSelectModalComponent } from './locker-select-modal/locker-select-modal.component';\nimport { LockerListFieldComponent } from './locker-list-field.component';\nimport { LockerFiltersComponent } from './locker-select-modal/locker-filters.component';\nimport { LockerFiltersDisplayComponent } from './locker-select-modal/locker-filters-display.component';\nimport { LockerBankListComponent } from './locker-select-modal/locker-bank-list.component';\nimport { LockerMapComponent } from './locker-select-modal/locker-map.component';\n\nconst COMPONENTS = [\n    DeskQuestionsModalComponent,\n    DeskConfirmModalComponent,\n    InviteVisitorFormComponent,\n    BookingDetailsModalComponent,\n    BookingCardComponent,\n    BookingLinkModalComponent,\n\n    ParkingSpaceSelectModalComponent,\n    ParkingSpaceFiltersComponent,\n    ParkingSpaceFiltersDisplayComponent,\n    ParkingSpaceListComponent,\n    ParkingSpaceLocationPinComponent,\n    ParkingSpaceSelectMapComponent,\n    ParkingSpaceDetailsComponent,\n    ParkingSpaceListFieldComponent,\n\n    DeskSelectModalComponent,\n    DeskDetailsComponent,\n    DeskFiltersComponent,\n    DeskFiltersDisplayComponent,\n    DeskListComponent,\n    DeskMapComponent,\n    DeskListFieldComponent,\n\n    LockerGridComponent,\n    LockerListFieldComponent,\n    LockerSelectModalComponent,\n    LockerFiltersComponent,\n    LockerFiltersDisplayComponent,\n    LockerBankListComponent,\n    LockerMapComponent,\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatDatepickerModule,\n        MatButtonModule,\n        MatDialogModule,\n        MatProgressSpinnerModule,\n        MatCheckboxModule,\n        MatAutocompleteModule,\n        FormFieldsModule,\n        ComponentsModule,\n        MatRippleModule,\n        MatTooltipModule,\n    ],\n    providers: [ReactiveFormsModule],\n    exports: [...COMPONENTS],\n})\nexport class SharedBookingsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, SettingsService } from '@placeos/common';\n\nimport { Desk } from 'libs/organisation/src/lib/desk.class';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\nexport interface DeskConfirmModalData {\n    host: User;\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2 i18n>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div host class=\"flex flex-col\" *ngIf=\"can_set_host\">\n                    <label i18n>Host</label>\n                    <a-user-search-field\n                        [(ngModel)]=\"host\"\n                    ></a-user-search-field>\n                </div>\n                <div date class=\"mb-4\">\n                    <label i18n>Date</label>\n                    <div *ngIf=\"!can_set_date\">\n                        {{ date | date: 'mediumDate' }}\n                    </div>\n                    <a-date-field\n                        *ngIf=\"can_set_date\"\n                        [(ngModel)]=\"date\"\n                    ></a-date-field>\n                </div>\n                <div reason class=\"flex flex-col mb-4\" *ngIf=\"!hide_reason\">\n                    <label i18n>Reason</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            [(ngModel)]=\"reason\"\n                            placeholder=\"Reason\"\n                        />\n                    </mat-form-field>\n                </div>\n                <p i18n>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be\n                    {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button btn matRipple (click)=\"confirm()\" i18n>Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main load class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n    public host = this._data.host;\n\n    public readonly can_set_date = this._data.can_set_date;\n\n    public reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map((_) => _.name).join(', ');\n    }\n\n    public get hide_reason() {\n        return !!this._settings.get('app.desks.hide_reason');\n    }\n\n    public get can_set_host() {\n        return !!this._settings.get('app.desks.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData,\n        private _settings: SettingsService\n    ) {}\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { BookingAsset } from './booking-form.service';\nimport {\n    DeskSelectModalComponent,\n    FAV_DESK_KEY,\n} from './desk-select-modal/desk-select-modal.component';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: `desk-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                desk\n                class=\"relative p-2 rounded-lg w-full flex items-center shadow border border-gray-200\"\n                *ngFor=\"let item of items\"\n            >\n                <div *ngIf=\"features?.length\" class=\"flex flex-col\">\n                    <label for=\"title\">Type</label>\n                    <div features class=\"flex items-center flex-wrap space-x-2\">\n                        <mat-checkbox\n                            *ngFor=\"let opt of features\"\n                            [ngModel]=\"(selected_features || []).includes(opt)\"\n                            (ngModelChange)=\"setFeature(opt, $event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            {{ opt }}\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"w-20 h-20 rounded-xl bg-black/20 mr-4 overflow-hidden flex items-center justify-center\"\n                >\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        [source]=\"item.images[0]\"\n                        class=\"min-h-full object-cover\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/desk-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 pb-4\">\n                    <div class=\"font-medium\">\n                        {{ item.name || 'Desk' }}\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-2\">\n                        <app-icon class=\"text-blue-500\">place</app-icon>\n                        <p>{{ item.zone?.display_name || item.zone?.name }}</p>\n                    </div>\n                    <div\n                        class=\"absolute bottom-0 right-0 flex items-center justify-end text-xs\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            name=\"edit-desk\"\n                            class=\"clear\"\n                            (click)=\"changeResources(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>edit</app-icon>\n                                Change\n                            </div>\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            name=\"remove-desk\"\n                            class=\"clear\"\n                            (click)=\"removeResource(item)\"\n                        >\n                            <div class=\"flex items-center space-x-2\" i18n>\n                                <app-icon>close</app-icon>\n                                Remove\n                            </div>\n                        </button>\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite\"\n                    class=\"absolute top-1 right-1\"\n                    [class.text-blue-400]=\"favorites.includes(item?.id)\"\n                    (click)=\"toggleFavourite(item)\"\n                >\n                    <app-icon>{{\n                        favorites.includes(item?.id)\n                            ? 'favorite'\n                            : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-desk\"\n            class=\"w-full inverse mt-2\"\n            (click)=\"changeResources()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span i18n>Add Desk</span>\n            </div>\n        </button>\n        <div class=\"flex items-center flex-wrap sm:space-x-2 mb-2\">\n            <div class=\"flex-1 min-w-[256px] space-y-2\"></div>\n        </div>\n    `,\n    styles: [``],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DeskListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DeskListFieldComponent implements ControlValueAccessor {\n    @Input() public features: string[] = [];\n    public room_size = 3;\n    public items: BookingAsset[] = [];\n    public disabled = false;\n    public selected_features: string[] = [];\n\n    private _onChange: (_: BookingAsset[]) => void;\n    private _onTouch: (_: BookingAsset[]) => void;\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || EMPTY_FAVS;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {}\n\n    /** Add or edit selected items */\n    public changeResources() {\n        const ref = this._dialog.open(DeskSelectModalComponent, {\n            data: {\n                items: this.items,\n                options: { capacity: this.room_size },\n            },\n        });\n        ref.afterClosed().subscribe((items?: BookingAsset[]) => {\n            if (!items) items = ref.componentInstance.selected;\n            this.setValue(items);\n        });\n    }\n\n    /** Remove the selected space from the list */\n    public removeResource(space: BookingAsset) {\n        this.setValue(this.items.filter((_) => _.id !== space.id));\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: BookingAsset[]) {\n        this.items = new_value;\n        if (this._onChange) this._onChange(this.items);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: BookingAsset[]) {\n        this.items = value || [];\n    }\n\n    /* istanbul ignore next */\n    public readonly registerOnChange = (fn: (_: BookingAsset[]) => void) =>\n        (this._onChange = fn);\n    /* istanbul ignore next */\n    public readonly registerOnTouched = (fn: (_: BookingAsset[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public toggleFavourite(space: BookingAsset) {\n        if (!space?.id) return;\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(space.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                space.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== space.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@placeos/common';\n\n@Component({\n    selector: 'desk-question-modal',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\" i18n>COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label i18n>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button btn matRipple (click)=\"submit()\" i18n>Submit</button>\n            </footer>\n            <button close icon matRipple mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main failure class=\"pt-8 relative\">\n                <p class=\"p-4\" i18n>\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close icon matRipple mat-dialog-close>\n                    <i class=\"material-icons\">close</i>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form = new FormGroup({\n        travelled: new FormControl(false),\n        unwell: new FormControl(false),\n        contact: new FormControl(false),\n    });\n    public failure: boolean;\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { ViewerFeature } from '@placeos/svg-viewer';\n\nimport { MapPinComponent } from 'libs/components/src/lib/map-pin.component';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-details',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n                background: white;\n            }\n        `,\n    ],\n    template: `\n        <ng-container *ngIf=\"desk; else emptyState\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-64]=\"desk.images?.length\"\n                [class.h-40]=\"desk.images?.length\"\n                [class.sm:h-0]=\"!desk.images?.length\"\n                [class.h-12]=\"!desk.images?.length\"\n                [class.!bg-transparent]=\"!desk.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"desk.images\"\n                    *ngIf=\"desk.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-desk-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div\n                class=\"p-2 space-y-2 flex-1 h-[calc(100%-19.75rem)] overflow-auto\"\n            >\n                <section actions class=\"z-0 pb-2 border-b\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ desk.display_name || desk.name || desk.id }}\n                    </h2>\n                </section>\n                <section\n                    details\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\">Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>person</app-icon>\n                        <p i18n>Single desk</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>desk</app-icon>\n                        <p>\n                            {{ desk.display_name || desk.name || desk.id }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>{{ desk.zone?.display_name || desk.zone?.name }}</p>\n                    </div>\n                </section>\n                <section\n                    facilities\n                    *ngIf=\"desk.features?.length\"\n                    class=\"space-y-2 pb-2 border-b dark:border-neutral-500\"\n                >\n                    <h2 class=\"text-xl font-medium\" i18n>Facilities</h2>\n                    <div\n                        *ngFor=\"let feat of desk.features || []\"\n                        class=\"flex items-center flex-wrap space-x-2\"\n                    >\n                        <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 dark:border-neutral-500 overflow-hidden rounded\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p i18n>\n                            { active, select, true { Remove from booking } false\n                            { Add to booking } }\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #emptyState>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a desk to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskDetailsComponent {\n    @Input() public desk?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n    @Input() public hide_map: boolean = false;\n\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.desk && this.desk) {\n            this.updateFeature();\n        }\n    }\n\n    private updateFeature() {\n        this.map_url = this.desk.zone.map_id;\n        this.features = [\n            {\n                location: this.desk.map_id || this.desk.id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\n\nimport { DeskFiltersComponent } from './desk-filters.component';\nimport { BookingFormService } from '../booking-form.service';\nimport { endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'desk-filters-display',\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n    template: `\n        <section\n            actions\n            class=\"sm:hidden space-x-2 flex flex-row items-center p-2\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"edit-desk-filters\"\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilter()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-map\"\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"view-desk-list\"\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <!-- TODO: filter chips -->\n            <div filter-item date>{{ start | date: 'mediumDate' }}</div>\n            <div filter-item time>\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div\n                filter-item\n                features\n                *ngFor=\"let feat of (options | async)?.features || []\"\n            >\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setFeature(feat, false)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div filter-item *ngIf=\"(options | async)?.show_fav\">\n                <span i18n>Favourites Only</span>\n                <button\n                    icon\n                    matRipple\n                    name=\"remove-desk-favs-filter\"\n                    class=\"-mr-4\"\n                    (click)=\"setOptions({ show_fav: false })\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n})\nexport class DeskFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._state.options;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get start() {\n        return this._state.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration, all_day } = this._state.form.value;\n        if (all_day) return endOfDay(date);\n        return date + duration * 60 * 1000;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly editFilter = () => this._bsheet.open(DeskFiltersComponent);\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay } from 'date-fns';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-filters',\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n    template: `\n        <div\n            class=\"flex rounded-t-md items-center border-b border-gray-200 dark:border-neutral-500 pb-2 sm:p-4\"\n        >\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    name=\"close-desk-filters\"\n                    class=\"sm:hidden\"\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Desk Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw] sm:max-w-[30vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <!-- Building -->\n                <div\n                    *ngIf=\"(buildings | async)?.length\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label i18n>Building</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"building\"\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <!-- level -->\n                <div\n                    *ngIf=\"(levels | async)?.length > 1\"\n                    class=\"flex-1 min-w-[256px] flex flex-col\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            [ngModel]=\"(options | async)?.zone_id\"\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n\n                <!-- Date -->\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label i18n>Date</label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n                <!-- Start End -->\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                            [disabled]=\"form.value.all_day\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label i18n>End Time</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                            [force]=\"form.value.all_day ? 'All Day' : ''\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <!-- All Day -->\n                <div *ngIf=\"allow_all_day\" class=\"flex justify-end -mt-2 mb-2\">\n                    <mat-checkbox formControlName=\"all_day\" i18n>\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>\n                    {{ 'COMMON.FAVOURITES' | translate }}\n                </h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        {{ 'DESKS.SHOW_FAVOURITES' | translate }}\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                class=\"space-y-2\"\n                features\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Type</h2>\n                <div\n                    *ngFor=\"let feat of features | async\"\n                    class=\"flex items-center flex-wrap space-x-2\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        [ngModel]=\"\n                            ((options | async)?.features || []).includes(feat)\n                        \"\n                        (ngModelChange)=\"setFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 py-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button\n                btn\n                matRipple\n                name=\"apply-desk-filters\"\n                class=\"w-full\"\n                (click)=\"close()\"\n                i18n\n            >\n                Apply Filters\n            </button>\n        </div>\n    `,\n})\nexport class DeskFiltersComponent {\n    public can_close = false;\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly buildings = this._org.active_buildings;\n    public readonly levels = this._org.active_levels;\n    public readonly form = this._state.form;\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._state.setOptions(o);\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n    public readonly setLevel = (l) => {};\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<DeskFiltersComponent>,\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingFormService, BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: 'desk-list',\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                background: rgba(0, 0, 0, 0.05);\n                overflow-y: auto;\n            }\n        `,\n    ],\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (desks | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async)?.length; else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(desks | async)?.length; else empty_state\"\n            >\n                <li\n                    desk\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"relative rounded-lg w-full shadow border bg-white dark:bg-neutral-600 border-gray-200 dark:border-neutral-500 overflow-hidden\"\n                    [class.!border-blue-400]=\"active === desk.id\"\n                >\n                    <button\n                        name=\"select-desk\"\n                        matRipple\n                        class=\"w-full h-full flex p-2\"\n                        (click)=\"selectDesk(desk)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 mr-4 flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(desk.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"desk.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"desk.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/desk-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2 pt-2 flex-1 text-left\">\n                            <span class=\"font-medium\">\n                                {{ desk.name || desk.id || 'Desk' }}\n                            </span>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p class=\"text-xs\">\n                                    {{\n                                        desk.zone?.display_name ||\n                                            desk.zone?.name ||\n                                            '&lt;No Level&gt;'\n                                    }}\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        name=\"toggle-desk-favourite\"\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(desk.id)\"\n                        (click)=\"toggleFav.emit(desk)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(desk.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available desks...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available desk for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n    `,\n})\nexport class DeskListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly desks = combineLatest([\n        this._state.options,\n        this._state.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: BookingFormService) {}\n\n    public isFavourite(desk_id: string) {\n        return this.favorites.includes(desk_id);\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, SettingsService, unique } from '@placeos/common';\nimport { map } from 'rxjs/operators';\n\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\nimport { ExploreDeskInfoComponent } from 'libs/explore/src/lib/explore-desk-info.component';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map',\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                display: flex;\n                flex-direction: column;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n    template: `\n        <div class=\"bg-white p-2 border-b border-gray-200 w-full\">\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select\n                    [(ngModel)]=\"level\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                    (ngModelChange)=\"setOptions({ zone_id: $event.id })\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"relative flex-1 w-full\">\n            <i-map\n                [src]=\"map_url\"\n                [(zoom)]=\"zoom\"\n                [(center)]=\"center\"\n                [features]=\"features | async\"\n                [styles]=\"styles | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n})\nexport class DeskMapComponent extends AsyncHandler implements OnInit {\n    @Input() public is_displayed: boolean = false;\n    @Input() public active = '';\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public readonly desks = this._state.available_resources;\n    public readonly loading = this._state.loading;\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n    public level?: BuildingLevel;\n\n    private _change = new BehaviorSubject(0);\n\n    public readonly levels = this._org.active_levels;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly actions = this._state.available_resources.pipe(\n        map((desks) =>\n            desks.map((desk) => ({\n                id: desk.map_id || desk.id,\n                action: ['touchend', 'mouseup'],\n                callback: () => this.selectDesk(desk as any),\n            }))\n        )\n    );\n\n    public readonly features = this._state.resources.pipe(\n        map((desks) => {\n            return this._settings.get('app.desks.hide_user')\n                ? []\n                : desks.map((desk) => ({\n                      location: desk.id,\n                      content: ExploreDeskInfoComponent,\n                      full_size: true,\n                      no_scale: true,\n                      data: {\n                          id: desk.map_id || desk.id,\n                          map_id: desk.name,\n                          name: desk.name || desk.map_id,\n                          user: this._state.resourceUserName(desk.id),\n                      },\n                      z_index: 20,\n                  }));\n        })\n    );\n\n    public readonly styles = combineLatest([\n        this._state.resources,\n        this._state.available_resources,\n        this._change,\n    ]).pipe(\n        map(([desks, free_desks]) =>\n            desks.reduce((styles, desk) => {\n                const colours = this._settings.get('app.explore.colors') || {};\n                const status =\n                    this.active === desk.id\n                        ? 'active'\n                        : free_desks.find((_) => _.id === desk.id)\n                        ? 'free'\n                        : 'busy';\n                styles[`#${desk.map_id || desk.id}`] = {\n                    fill:\n                        status === 'active'\n                            ? '#512DA8'\n                            : colours[`desk-${status}`] ||\n                              colours[`${status}`] ||\n                              DEFAULT_COLOURS[`${status}`],\n                };\n                return styles;\n            }, {})\n        )\n    );\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'levels_update',\n            this.levels.subscribe((levels) => {\n                if (!levels.find((_) => _.id === this.level?.id)) {\n                    this.level = levels[0];\n                    this.setOptions({ zone_id: this.level?.id });\n                }\n            })\n        );\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes.active) this._change.next(Date.now());\n    }\n\n    public selectDesk(desk: BookingAsset) {\n        this.onSelect.emit(desk);\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_DESK_KEY = 'favourite_desks';\n\n@Component({\n    selector: 'desk-select-modal',\n    styles: [],\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Desk</h3>\n                <div class=\"hidden sm:flex items-center justify-end flex-1\">\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-map\"\n                        class=\"rounded-l rounded-r-none\"\n                        [class.inverse]=\"view !== 'map'\"\n                        (click)=\"view = 'map'\"\n                    >\n                        Map\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        name=\"view-desk-list\"\n                        class=\"rounded-r rounded-l-none\"\n                        [class.inverse]=\"view !== 'list'\"\n                        (click)=\"view = 'list'\"\n                    >\n                        List\n                    </button>\n                </div>\n            </header>\n            <main\n                class=\"flex items-center divide-x divide-gray-200 dark:divide-neutral-500 h-[65vh] w-[calc(100vw-4rem)] overflow-hidden\"\n            >\n                <desk-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></desk-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <desk-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></desk-filters-display>\n                    <desk-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></desk-list>\n                </div>\n                <desk-details\n                    [desk]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    [hide_map]=\"view === 'map'\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></desk-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-desks\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"desk-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} desk(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-desk\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\" i18n>\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <desk-map\n                class=\"flex-1 h-1/2 w-full\"\n                [is_displayed]=\"!!displayed\"\n                [active]=\"displayed?.id\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </desk-map>\n        </ng-template>\n    `,\n})\nexport class DeskSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_DESK_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<DeskSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            items: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.items || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_DESK_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_DESK_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler, SettingsService, currentUser } from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { getInvalidFields, randomString } from 'libs/common/src/lib/general';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { BookingFormService } from './booking-form.service';\nimport { Booking } from './booking.class';\nimport { User } from 'libs/users/src/lib/user.class';\n\n@Component({\n    selector: `invite-visitor-form`,\n    template: `\n        <ng-container *ngIf=\"!sent; else send_state\">\n            <div\n                class=\"relative flex flex-col bg-white dark:bg-neutral-700 overflow-auto max-h-full\"\n                *ngIf=\"!(loading | async) && !loading_many; else load_state\"\n            >\n                <div\n                    class=\"w-full border-b border-gray-200 dark:border-neutral-500 px-4 py-2\"\n                >\n                    <h2 class=\"text-2xl\" i18n>Invite Visitor</h2>\n                </div>\n                <form *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4\">\n                    <div class=\"flex flex-col\" *ngIf=\"buildings?.length > 1\">\n                        <label for=\"building\" i18n>\n                            Building<span>*</span>\n                        </label>\n                        <mat-form-field appearance=\"outline\">\n                            <mat-select\n                                [ngModel]=\"form.value.zones[0]\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ zones: [$event] })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                name=\"building\"\n                                placeholder=\"Select building\"\n                                i18n-placeholder\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld.id\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                        ></a-date-field>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"start-time\" i18n>\n                                Start Time<span>*</span>\n                            </label>\n                            <a-time-field\n                                name=\"start-time\"\n                                [ngModel]=\"form.value.date\"\n                                (ngModelChange)=\"\n                                    form.patchValue({ date: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                [disabled]=\"form.value.all_day\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-time-field>\n                        </div>\n                        <div class=\"flex-1 flex flex-col w-1/3\">\n                            <label for=\"end-time\" i18n\n                                >End Time<span>*</span></label\n                            >\n                            <a-duration-field\n                                name=\"end-time\"\n                                formControlName=\"duration\"\n                                [time]=\"form.value.date\"\n                                [use_24hr]=\"use_24hr\"\n                            ></a-duration-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"!multiple; else multi_state\">\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n\n                                >Visitor Name<span>*</span></label\n                            >\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-name\"\n                                    formControlName=\"asset_name\"\n                                    placeholder=\"Name of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_name)\n                                    \"\n                                    [matAutocomplete]=\"name_auto\"\n                                />\n                            </mat-form-field>\n                            <mat-autocomplete #name_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.name\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-email\" i18n>\n                                Visitor Email<span>*</span>\n                            </label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"visitor-email\"\n                                    type=\"email\"\n                                    formControlName=\"asset_id\"\n                                    placeholder=\"Email of the visitor\"\n                                    (focus)=\"\n                                        filterVisitors(form.value.asset_id)\n                                    \"\n                                    [matAutocomplete]=\"email_auto\"\n                                />\n                                <mat-error i18n\n                                    >A valid email is required</mat-error\n                                >\n                            </mat-form-field>\n                            <mat-autocomplete #email_auto=\"matAutocomplete\">\n                                <mat-option\n                                    *ngFor=\"let item of filtered_visitors\"\n                                    [value]=\"item.email\"\n                                    (click)=\"setVisitor(item)\"\n                                >\n                                    <div class=\"flex flex-col leading-tight\">\n                                        <div>{{ item.name }}</div>\n                                        <div class=\"text-xs opacity-60\">\n                                            {{ item.email }}\n                                            {{\n                                                item.company\n                                                    ? '| ' + item.company\n                                                    : ''\n                                            }}\n                                        </div>\n                                    </div>\n                                </mat-option>\n                            </mat-autocomplete>\n                        </div>\n                        <div class=\"flex flex-col\">\n                            <label for=\"visitor-name\" i18n>Company</label>\n                            <mat-form-field appearance=\"outline\">\n                                <input\n                                    matInput\n                                    name=\"company\"\n                                    formControlName=\"company\"\n                                    placeholder=\"Company of the visitor\"\n                                />\n                            </mat-form-field>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex flex-col\">\n                        <label for=\"reason\" i18n>Reason for visit</label>\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"reason\"\n                                matInput\n                                formControlName=\"description\"\n                                placeholder=\"e.g. Meeting Catchup\"\n                            />\n                        </mat-form-field>\n                    </div>\n                </form>\n                <div\n                    class=\"sticky p-4 border-t bg-white border-gray-200 dark:border-neutral-500 bottom-0\"\n                >\n                    <button\n                        btn\n                        matRipple\n                        send\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"sendInvite()\"\n                        i18n\n                    >\n                        Send Visitor Invite\n                    </button>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #send_state>\n            <div\n                sent\n                class=\"absolute inset-0 bg-white dark:bg-neutral-700 flex flex-col items-center justify-center text-center\"\n            >\n                <div class=\"w-full max-w-[32rem] flex-1 h-1/2 space-y-2 m-8\">\n                    <h2 class=\"text-3xl\" i18n>\n                        Visitor invite sent to\n                        <ng-container *ngIf=\"!multiple\">\n                            {{\n                                last_success?.asset_name ||\n                                    last_success?.asset_id\n                            }}\n                        </ng-container>\n                        <ng-container *ngIf=\"multiple\">\n                            {{ last_count }} visitor{{\n                                last_count == 1 ? '' : 's'\n                            }}\n                        </ng-container>\n                    </h2>\n                    <img class=\"mx-auto\" src=\"assets/icons/sent.svg\" />\n                    <p i18n>\n                        Invite has been sent to\n                        <i>\n                            <ng-container *ngIf=\"!multiple\">\n                                {{\n                                    last_success?.asset_name ||\n                                        last_success?.asset_id\n                                }}\n                            </ng-container>\n                            <ng-container *ngIf=\"multiple\">\n                                {{ last_count }} visitor{{\n                                    last_count == 1 ? '' : 's'\n                                }}\n                            </ng-container>\n                        </i>\n                        to attend\n                        {{ building?.display_name || building?.name }} from\n                        {{ last_success?.date | date: 'mediumDate' }} at\n                        {{ last_success?.date | date: time_format }}\n                    </p>\n                </div>\n                <div\n                    class=\"w-full p-2 border-t border-gray-200 dark:border-neutral-500\"\n                >\n                    <div\n                        class=\"mx-auto flex items-center space-x-2 w-full max-w-[32rem]\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"onDone()\"\n                            i18n\n                        >\n                            Great, thanks\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"sent = false\"\n                            i18n\n                        >\n                            Book Another Visitor\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"relative flex flex-col items-center justify-center rounded overflow-hidden w-full h-full min-h-[18rem]\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p i18n>Sending invitation...</p>\n            </div>\n        </ng-template>\n        <ng-template #multi_state>\n            <div class=\"flex flex-col\" [formGroup]=\"form\">\n                <label for=\"visitor-name\" i18n>Visitors<span>*</span></label>\n                <a-user-list-field\n                    formControlName=\"assets\"\n                    [guests_only]=\"true\"\n                ></a-user-list-field>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorFormComponent extends AsyncHandler {\n    @Output() public done = new EventEmitter<void>();\n\n    public sent = false;\n    public booking?: Booking;\n    public readonly loading = this._service.loading;\n    public loading_many = false;\n    public readonly buildings = this._org.active_buildings;\n    public last_success = this._service.last_success;\n    public last_count = 0;\n    public visitors = [];\n    public filtered_visitors = [];\n\n    public get multiple() {\n        return this._settings.get('app.booking.multiple_visitors');\n    }\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._service.form;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _service: BookingFormService,\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this.sent = false;\n        this._service.clearOldState();\n        await this.initFormZone();\n        this.form\n            .get('asset_id')\n            .setValidators([Validators.required, Validators.email]);\n        const visitors = this._settings.get('visitor-invitees') || [];\n        for (const item of visitors) {\n            const [email, name, company] = item.split('|');\n            this.visitors.push({ email, name, company });\n        }\n        this.filterVisitors('');\n        this.subscription(\n            'email',\n            this.form\n                .get('asset_id')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        this.subscription(\n            'name',\n            this.form\n                .get('asset_name')\n                .valueChanges.subscribe((_) => this.filterVisitors(_))\n        );\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    public setVisitor(item) {\n        this.form.patchValue({\n            asset_id: item.email,\n            asset_name: item.name,\n            company: item.company,\n        });\n    }\n\n    public filterVisitors(filter: string) {\n        const s = (filter || '').toLowerCase();\n        this.filtered_visitors = this.visitors.filter(\n            ({ email, name, company }) =>\n                email.toLowerCase().includes(s) ||\n                name.toLowerCase().includes(s) ||\n                company.toLowerCase().includes(s)\n        );\n    }\n\n    public onDone() {\n        this.done.emit();\n        this.sent = false;\n    }\n\n    public async sendInvite() {\n        this.form.markAllAsTouched();\n        if (\n            !this.form.valid ||\n            (this.multiple && !this.form.value.assets.length)\n        ) {\n            return notifyError(\n                `Some fields are invalid. [${\n                    getInvalidFields(this.form).join(', ') || 'visitors'\n                }]`\n            );\n        }\n        const { asset_id, asset_name, company, assets } = this.form.value;\n        const visitor_details = `${asset_id}|${asset_name}|${company}`;\n        const old_visitors = this._settings.get('visitor-invitees') || [];\n        this._settings.saveUserSetting('visitor-invitees', [\n            ...old_visitors.filter((_) => !_.includes(asset_id)),\n            visitor_details,\n        ]);\n        await (this.multiple ? this._bookForMany() : this._bookForOne());\n        this.last_success = this._service.last_success;\n        await this.initFormZone();\n        this.sent = true;\n    }\n\n    private async initFormZone() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._service.setOptions({ type: 'visitor' });\n        this.form.patchValue({\n            booking_type: 'visitor',\n            zones: [this._org.building?.id],\n        });\n        if (this.multiple)\n            this.form.patchValue({ asset_id: 'multiple@place.tech' });\n    }\n\n    private async _bookForOne() {\n        const value = this.form.value;\n        this.form.patchValue({\n            name: value.asset_name,\n            attendees: [\n                new User({\n                    name: value.asset_name,\n                    email: value.asset_id,\n                    organisation: value.company,\n                }),\n            ],\n        });\n        await this._service.postForm().catch((e) => {\n            notifyError(e);\n            throw e;\n        });\n    }\n\n    private async _bookForMany() {\n        this.loading_many = true;\n        const group = `grp-${randomString(8)}`;\n        const value = this.form.value;\n        const assets = value.assets;\n        this.last_count = assets.length;\n        for (const user of assets) {\n            if (!user.email) continue;\n            this.form.patchValue({\n                ...value,\n                booking_type: 'visitor',\n                asset_id: user.email,\n                asset_name: user.name,\n                user: currentUser(),\n                description: group,\n                name: user.name,\n                assets: [],\n                attendees: [\n                    new User({\n                        name: user.name,\n                        email: user.email,\n                        organisation: user.company || user.organisation,\n                    }),\n                ],\n            });\n            await this._service.postForm().catch((e) => {\n                notifyError(e);\n                this.loading_many = false;\n                throw e;\n            });\n        }\n        this.loading_many = false;\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Locker, LockerBank } from './lockers.service';\nimport { SettingsService } from '@placeos/common';\nimport { DEFAULT_COLOURS } from 'libs/explore/src/lib/explore-spaces.service';\n\n@Component({\n    selector: 'locker-grid',\n    template: `\n        <div class=\"p-4 text-xl font-medium\">\n            {{ bank?.name }}\n        </div>\n        <div\n            class=\"flex-1 grid gap-2 overflow-hidden max-h-full h-[75vh] min-w-[60vw] p-2\"\n            [style.grid-template-columns]=\"'repeat(' + columns + ', 1fr)'\"\n            [style.grid-template-rows]=\"'repeat(' + bank?.height + ', 1fr)'\"\n        >\n            <button\n                *ngFor=\"let locker of bank?.lockers || []\"\n                matRipple\n                class=\"relative border border-black/20 rounded bg-teal-300 overflow-hidden\"\n                [class.opacity-60]=\"selected && selected !== locker.id\"\n                [style.grid-column-start]=\"locker.position[0] + 1\"\n                [style.grid-row-start]=\"locker.position[1] + 1\"\n                [style.grid-column-end]=\"\n                    locker.position[0] + (locker.size[0] + 1)\n                \"\n                [style.background-color]=\"status(locker)\"\n                [style.grid-row-end]=\"locker.position[1] + (locker.size[1] + 1)\"\n                [matTooltip]=\"locker.name\"\n                [disabled]=\"locker.bookable === false\"\n                (click)=\"clicked.emit(locker)\"\n            >\n                <div\n                    handle\n                    class=\"absolute top-1/2 -translate-y-1/2 left-2 w-1 h-6 bg-black/20 rounded\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-2 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-4 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    vent\n                    class=\"absolute left-1/2 -translate-x-1/2 top-6 w-3/5 h-1 bg-black/20 rounded-t\"\n                ></div>\n                <div\n                    class=\"absolute left-1/2 -translate-x-1/2 top-8 text-[0.6rem] font-medium text-black/60\"\n                >\n                    {{ locker.name }}\n                </div>\n\n                <div class=\"absolute inset-0 hover:bg-black/10\"></div>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            }\n            button[disabled] {\n                pointer-events: none;\n                opacity: 0.75;\n                background-color: #ccc !important;\n            }\n        `,\n    ],\n})\nexport class LockerGridComponent {\n    @Input() public bank: LockerBank;\n    @Input() public bank_status: Record<string, string> = {\n        '10': 'busy',\n        '7': 'pending',\n    };\n    @Input() public selected = '';\n    @Output() public clicked = new EventEmitter<Locker>();\n\n    public get columns() {\n        let columns = 1;\n        for (const locker of this.bank?.lockers || []) {\n            const x = locker.position[0] + locker.size[0];\n            if (x > columns) columns = x;\n        }\n        return columns;\n    }\n\n    constructor(private _settings: SettingsService) {}\n\n    public status(locker: Locker) {\n        const colours = this._settings.get('app.explore.colors') || {};\n        const value = this.bank_status[locker.id] || 'free';\n        return (\n            colours[`lockers-${value}`] ||\n            colours[`${value}`] ||\n            DEFAULT_COLOURS[`${value}`]\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { flatten } from '@placeos/common';\nimport {\n    PlaceMetadata,\n    PlaceZone,\n    PlaceZoneMetadata,\n    listChildMetadata,\n    updateMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, Observable, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nexport interface LockerBank {\n    id: string;\n    map_id: string;\n    level_id: string;\n    name: string;\n    height: number;\n    lockers: Locker[];\n    zone?: PlaceZone;\n}\n\nexport interface Locker {\n    id: string;\n    bank_id: string;\n    level_id?: string;\n    map_id?: string;\n    name: string;\n    accessible: boolean;\n    bookable: boolean;\n    position: [number, number];\n    size: [number, number];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LockersService {\n    private _level = new BehaviorSubject('');\n    private _change = new BehaviorSubject(0);\n    public readonly lockers_banks$: Observable<LockerBank[]> = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([bld]) => !!bld),\n        switchMap(([bld]) =>\n            listChildMetadata(bld.id, { name: 'lockers' }).pipe(\n                catchError(() => of(new PlaceMetadata()))\n            )\n        ),\n        map((_: PlaceZoneMetadata[]) =>\n            flatten(\n                _.map((_) =>\n                    _.metadata.lockers?.details instanceof Array\n                        ? _.metadata.lockers?.details.map((bank) => ({\n                              ...bank,\n                              zone: _.zone,\n                          }))\n                        : []\n                )\n            )\n        ),\n        shareReplay(1)\n    );\n\n    public readonly lockers$ = this.lockers_banks$.pipe(\n        map((bank_list) => {\n            const lockers: Locker[] = [];\n            for (const bank of bank_list) {\n                lockers.push(\n                    ...bank.lockers.map(\n                        (_) =>\n                            ({\n                                ..._,\n                                bank_id: bank.id,\n                                map_id: bank.map_id,\n                                level_id: bank.zone.id,\n                            } as Locker)\n                    )\n                );\n            }\n            return lockers;\n        })\n    );\n\n    public readonly filtered_lockers$ = combineLatest([\n        this._level,\n        this.lockers$,\n    ]).pipe(\n        map(([level, lockers]) =>\n            lockers.filter(\n                (_) => (!level || _.level_id === level) && _.bookable\n            )\n        )\n    );\n\n    public setLevel(level: string) {\n        this._level.next(level);\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public async saveLockers(lockers: LockerBank[]) {\n        await updateMetadata(this._org.building.id, {\n            name: 'lockers',\n            description: '',\n            details: lockers,\n        });\n        this._change.next(Date.now());\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { MapPinComponent } from '@placeos/components';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ViewerFeature } from '@placeos/svg-viewer';\nimport { BookingAsset } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-details`,\n    template: `\n        <ng-container *ngIf=\"space; else empty_state\">\n            <section\n                image\n                class=\"relative w-full bg-black/20\"\n                [class.sm:h-40]=\"space.images?.length\"\n                [class.h-64]=\"space.images?.length\"\n                [class.sm:h-0]=\"!space.images?.length\"\n                [class.h-12]=\"!space.images?.length\"\n                [class.!bg-transparent]=\"!space.images?.length\"\n            >\n                <image-carousel\n                    [images]=\"space.images\"\n                    *ngIf=\"space.images?.length\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    close\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-black/40 sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    fav\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-black/40\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0\">\n                    <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                        {{ space.display_name || space.name }}\n                    </h2>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Details</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>{{ space.capacity }} People</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <p>\n                            {{ level?.display_name || level?.name }}\n                        </p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <p>\n                            {{\n                                building?.address ||\n                                    building?.display_name ||\n                                    building?.name\n                            }}\n                        </p>\n                    </div>\n                </section>\n                <hr />\n                <section facilities class=\"space-y-2\">\n                    <h2 class=\"text-xl font-medium\" i18n>Room Facilities</h2>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>people</app-icon>\n                        <p i18n>WiFi Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>restaurant</app-icon>\n                        <p i18n>Catering Available</p>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>edit</app-icon>\n                        <p i18n>Whiteboard</p>\n                    </div>\n                </section>\n                <section\n                    map\n                    class=\"w-full mx-auto h-64 sm:h-48 relative border border-gray-200 overflow-hidden rounded\"\n                >\n                    <interactive-map\n                        class=\"pointer-events-none\"\n                        [src]=\"map_url\"\n                        [features]=\"features\"\n                        [options]=\"{ disable_pan: true, disable_zoom: true }\"\n                    ></interactive-map>\n                </section>\n            </div>\n            <div class=\"p-2 border-t border-gray-200 shadow sm:hidden\">\n                <button\n                    btn\n                    matRipple\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this room' : 'Add this room' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select a space to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceDetailsComponent {\n    @Input() public space?: BookingAsset;\n    @Input() public fav: boolean = false;\n    @Input() public active: boolean = false;\n\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public toggleFav = new EventEmitter<void>();\n\n    public map_url = '';\n    public features: ViewerFeature[] = [];\n\n    public get level() {\n        return this._org.levelWithID([this.space?.zone.id]) || this.space?.zone;\n    }\n\n    public get building() {\n        return this._org.buildings.find(\n            (_) =>\n                this.space?.zone.id === _.id ||\n                this.space?.zone.parent_id === _.id\n        );\n    }\n\n    constructor(private _org: OrganisationService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.space && this.space) {\n            this._updateFeature();\n        }\n    }\n\n    private _updateFeature() {\n        this.map_url = this.level?.map_id;\n        this.features = [\n            {\n                location: this.space?.map_id,\n                content: MapPinComponent,\n            },\n        ];\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { ParkingSpaceFiltersComponent } from './parking-filters.component';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters-display`,\n    template: `\n        <section actions class=\"sm:hidden space-x-2 flex items-center p-2\">\n            <button\n                matRipple\n                filters\n                class=\"flex-1 w-1/2\"\n                (click)=\"editFilters()\"\n                i18n\n            >\n                Filters\n            </button>\n            <div class=\"flex items-center\">\n                <button\n                    matRipple\n                    map\n                    class=\"rounded-l rounded-r-none\"\n                    [class.inverse]=\"view !== 'map'\"\n                    (click)=\"view = 'map'; viewChange.emit(view)\"\n                    i18n\n                >\n                    Map\n                </button>\n                <button\n                    matRipple\n                    list\n                    class=\"rounded-r rounded-l-none\"\n                    [class.inverse]=\"view !== 'list'\"\n                    (click)=\"view = 'list'; viewChange.emit(view)\"\n                    i18n\n                >\n                    List\n                </button>\n            </div>\n        </section>\n        <section filters class=\"flex items-center flex-wrap p-2\">\n            <div\n                filter-item\n                zone\n                class=\"dark:border-neutral-500\"\n                *ngIf=\"location\"\n            >\n                {{ location }}\n            </div>\n            <div filter-item date class=\"dark:border-neutral-500\">\n                {{ start | date: 'mediumDate' }}\n            </div>\n            <div filter-item time class=\"dark:border-neutral-500\">\n                {{ start | date: time_format }} &mdash;\n                {{ end | date: time_format }}\n            </div>\n            <div filter-item count class=\"dark:border-neutral-500\" i18n>\n                Min. {{ (options | async)?.capcaity || 2 }} People\n            </div>\n            <div filter-item *ngFor=\"let feat of (options | async)?.features\">\n                <p>{{ feat }}</p>\n                <button\n                    icon\n                    matRipple\n                    class=\"-mr-4 dark:border-neutral-500\"\n                    (click)=\"removeFeature(feat)\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            [filter-item] {\n                display: flex;\n                align-items: center;\n                padding: 0 1rem;\n                height: 2rem;\n                font-size: 0.875rem;\n                border: 1px solid rgba(0, 0, 0, 0.2);\n                border-radius: 1.25rem;\n                margin-right: 0.5rem;\n                margin-bottom: 0.5rem;\n            }\n\n            [filter-item]:hover {\n                background: rgba(0, 0, 0, 0.1);\n            }\n\n            [filter-item] > * + * {\n                margin-left: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersDisplayComponent extends AsyncHandler {\n    @Input() public view: 'map' | 'list' = 'list';\n    @Output() public viewChange = new EventEmitter<'map' | 'list'>();\n    public readonly options = this._event_form.options;\n    public location: string = '';\n\n    public get start() {\n        return this._event_form.form.value.date;\n    }\n\n    public get end() {\n        const { date, duration } = this._event_form.form.value;\n        return date + duration * 60 * 1000;\n    }\n\n    public readonly editFilters = () =>\n        this._bsheet.open(ParkingSpaceFiltersComponent);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _bsheet: MatBottomSheet,\n        private _event_form: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'opts',\n            this.options.subscribe(({ zone_id }) =>\n                this._updateLocation([zone_id])\n            )\n        );\n    }\n\n    public async removeFeature(feat: string) {\n        const value = await this._event_form.options.pipe(take(1)).toPromise();\n        this._event_form.setOptions({\n            ...value,\n            features: (value.features || []).filter((_) => _ !== feat),\n        });\n    }\n\n    private _updateLocation(zone_ids: string[] = []) {\n        const level = this._org.levelWithID(zone_ids);\n        const item = level || this._org.building;\n        this.location = item?.display_name || item?.name || '';\n    }\n}\n","import { Component, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\nimport { BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-filters`,\n    template: `\n        <div class=\"flex items-center border-b border-gray-200 pb-2 sm:hidden\">\n            <div class=\"flex-1 pl-2\">\n                <button\n                    icon\n                    matRipple\n                    close\n                    *ngIf=\"can_close\"\n                    (click)=\"close()\"\n                >\n                    <app-icon>keyboard_arrow_left</app-icon>\n                </button>\n            </div>\n            <h3 class=\"font-medium flex-2 text-center\" i18n>Space Filters</h3>\n            <div class=\"flex-1\"></div>\n        </div>\n        <form\n            class=\"max-h-[65vh] p-2 overflow-y-auto overflow-x-hidden divide-y divide-gray-200 w-full max-w-[100vw]\"\n            [formGroup]=\"form\"\n        >\n            <section details>\n                <h2 class=\"text-lg font-medium\" i18n>Details</h2>\n                <div class=\"flex-1 min-w-[256px] flex flex-col\">\n                    <label for=\"location\" i18n>Location</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            name=\"location\"\n                            [ngModel]=\"(options | async)?.zone_ids\"\n                            (ngModelChange)=\"setOptions({ zone_ids: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [placeholder]=\"bld?.display_name || bld?.name\"\n                            [multiple]=\"true\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.bld }},\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n\n                            >Start Time<span>*</span></label\n                        >\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n\n                            >End Time<span>*</span></label\n                        >\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form?.value?.date\"\n                            [max]=\"max_duration\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section favs class=\"space-y-2 pb-4\">\n                <h2 class=\"text-lg font-medium\" i18n>Favourites</h2>\n                <div class=\"flex items-center\">\n                    <div for=\"fav\" class=\"flex-1 w-1/2\" i18n>\n                        Only show favourite spaces\n                    </div>\n                    <mat-checkbox\n                        name=\"fav\"\n                        [ngModel]=\"(options | async)?.show_fav\"\n                        (ngModelChange)=\"setOptions({ show_fav: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    >\n                    </mat-checkbox>\n                </div>\n            </section>\n            <section\n                features\n                class=\"space-y-2\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <h2 class=\"text-lg font-medium\" i18n>Facilities</h2>\n                <div\n                    class=\"flex items-center\"\n                    *ngFor=\"let feat of features | async\"\n                >\n                    <div for=\"feat\" class=\"flex-1 w-1/2\">{{ feat }}</div>\n                    <mat-checkbox\n                        name=\"feat\"\n                        [ngModel]=\"(options | async)?.features?.includes(feat)\"\n                        (ngModelChange)=\"toggleFeature(feat, $event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></mat-checkbox>\n                </div>\n            </section>\n        </form>\n        <div\n            class=\"px-2 pt-2 w-full border-t border-gray-200\"\n            *ngIf=\"can_close\"\n        >\n            <button btn matRipple close class=\"w-full\" (click)=\"close()\" i18n>\n                Apply Filters\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                max-width: 100vw;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceFiltersComponent {\n    public can_close = false;\n    public readonly options = this._form.options;\n\n    public readonly levels = this._org.active_levels.pipe(\n        map((l) => {\n            for (const lvl of l) {\n                const bld = this._org.buildings.find(\n                    (_) => _.id === lvl.parent_id\n                );\n                (lvl as any).bld = bld?.display_name || bld?.name || '';\n            }\n            return l.filter((_) => _.tags.includes('parking'));\n        })\n    );\n    public readonly features = this._form.features;\n\n    public readonly close = () => this._bsheet_ref.dismiss();\n    public readonly setOptions = (o) => this._form.setOptions(o);\n\n    public get bld() {\n        return this._org.building;\n    }\n\n    public get form() {\n        return this._form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        @Optional()\n        private _bsheet_ref: MatBottomSheetRef<ParkingSpaceFiltersComponent>,\n        private _settings: SettingsService,\n        private _form: BookingFormService,\n        private _org: OrganisationService\n    ) {\n        this.can_close = !!this._bsheet_ref;\n    }\n\n    public async toggleFeature(feat: string, state: boolean) {\n        const { features } = await this.options.pipe(take(1)).toPromise();\n        const new_list = (features || []).filter((_) => feat !== _);\n        if (state) new_list.push(feat);\n        this.setOptions({ features: new_list });\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EventFormService } from '@placeos/events';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BookingAsset, BookingFormService } from '../booking-form.service';\n\n@Component({\n    selector: `parking-space-list`,\n    template: `\n        <h3 class=\"font-bold\" i18n>Results</h3>\n        <p count class=\"text-sm opacity-60 mb-4\" i18n>\n            {{ (assets | async)?.length || 0 }} result(s) found\n        </p>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <ul\n                class=\"list-style-none space-y-2\"\n                *ngIf=\"(assets | async)?.length; else empty_state\"\n            >\n                <li\n                    space\n                    *ngFor=\"let space of assets | async\"\n                    [class.!border-blue-400]=\"active === space.id\"\n                    class=\"relative p-2 rounded-lg w-full shadow border bg-white dark:bg-neutral-700 border-gray-200 dark:border-neutral-500\"\n                >\n                    <button\n                        matRipple\n                        select\n                        class=\"w-full h-full flex items-center\"\n                        (click)=\"selectSpace(space)\"\n                    >\n                        <div\n                            class=\"relative w-20 h-20 rounded-xl bg-black/20 dark:bg-white/30 mr-4 overflow-hidden flex items-center justify-center\"\n                        >\n                            <div\n                                class=\"absolute top-1 left-1 border border-white bg-black/50 rounded-full h-6 w-6 flex items-center justify-center text-white\"\n                                *ngIf=\"selected.includes(space.id)\"\n                            >\n                                <app-icon>done</app-icon>\n                            </div>\n                            <img\n                                auth\n                                *ngIf=\"space.images?.length; else placeholder\"\n                                class=\"object-cover h-full\"\n                                [source]=\"space.images[0]\"\n                            />\n                            <ng-template #placeholder>\n                                <img\n                                    class=\"m-auto\"\n                                    src=\"assets/icons/car-placeholder.svg\"\n                                />\n                            </ng-template>\n                        </div>\n                        <div class=\"space-y-2\">\n                            <div class=\"font-medium truncate mr-10\">\n                                {{ space.name || 'Meeting Space' }}\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\">place</app-icon>\n                                <p>\n                                    {{\n                                        space.location ||\n                                            space.level?.display_name ||\n                                            space.level?.name ||\n                                            space.zone?.display_name ||\n                                            space.zone?.name\n                                    }}\n                                </p>\n                            </div>\n                            <div class=\"flex items-center text-sm space-x-2\">\n                                <app-icon class=\"text-blue-500\"\n                                    >people</app-icon\n                                >\n                                <p i18n>\n                                    {{\n                                        space.capacity < 1 ? 2 : space.capacity\n                                    }}\n                                    People\n                                </p>\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        fav\n                        class=\"absolute top-1 right-1\"\n                        [class.text-blue-400]=\"isFavourite(space.id)\"\n                        (click)=\"toggleFav.emit(space)\"\n                    >\n                        <app-icon>{{\n                            isFavourite(space.id)\n                                ? 'favorite'\n                                : 'favorite_border'\n                        }}</app-icon>\n                    </button>\n                </li>\n            </ul>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    No available spaces for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\" i18n>Finding available spaces...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                height: 100%;\n                padding: 0.5rem;\n                overflow: auto;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public favorites: string[] = [];\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n    @Output() public toggleFav = new EventEmitter<BookingAsset>();\n\n    public readonly assets = combineLatest([\n        this._form.options,\n        this._form.available_resources,\n    ]).pipe(\n        map(([{ show_fav }, _]) =>\n            _.filter((i) => !show_fav || this.isFavourite(i.id))\n        )\n    );\n    public readonly loading = this._form.loading;\n\n    constructor(private _form: BookingFormService) {}\n\n    public isFavourite(space_id: string) {\n        return this.favorites.includes(space_id);\n    }\n\n    public selectSpace(space: BookingAsset) {\n        this.onSelect.emit(space);\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\n\n@Component({\n    selector: 'parking-space-location-pin',\n    template: `\n        <div class=\"absolute bottom-0 left-1/2 -translate-x-1/2\">\n            <svg\n                width=\"66\"\n                height=\"80\"\n                viewBox=\"0 0 66 80\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <g filter=\"url(#filter0_d_1065_10313)\">\n                    <path\n                        d=\"M19.724 53.0408C25.0871 60.3435 30.5582 65.8583 31.0184 66.3178C31.4558 66.755 32.0489 67.0007 32.6674 67.0008H32.6678C33.2863 67.0007 33.8795 66.755 34.3169 66.3178C34.7771 65.8583 40.2481 60.3435 45.6112 53.0408C48.2928 49.3894 50.963 45.2701 52.9663 41.0957C54.9629 36.935 56.3331 32.6459 56.3342 28.6724C56.364 25.5564 55.7725 22.4657 54.5941 19.5809C53.415 16.6946 51.6722 14.0724 49.4675 11.8677C47.2629 9.66308 44.6407 7.92024 41.7544 6.74121C38.8711 5.5634 35.782 4.97184 32.6676 5.00103C29.5533 4.97184 26.4642 5.5634 23.5809 6.74121C20.6946 7.92024 18.0724 9.66308 15.8677 11.8677C13.6631 14.0724 11.9202 16.6946 10.7412 19.5809C9.56278 22.4657 8.97122 25.5565 9.00108 28.6726C9.0022 32.646 10.3724 36.9351 12.369 41.0957C14.3723 45.2701 17.0425 49.3894 19.724 53.0408Z\"\n                        fill=\"#309251\"\n                        stroke=\"#0B421D\"\n                        stroke-width=\"2\"\n                    />\n                </g>\n                <defs>\n                    <filter\n                        id=\"filter0_d_1065_10313\"\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"65.3353\"\n                        height=\"80.001\"\n                        filterUnits=\"userSpaceOnUse\"\n                        color-interpolation-filters=\"sRGB\"\n                    >\n                        <feFlood\n                            flood-opacity=\"0\"\n                            result=\"BackgroundImageFix\"\n                        />\n                        <feColorMatrix\n                            in=\"SourceAlpha\"\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n                            result=\"hardAlpha\"\n                        />\n                        <feOffset dy=\"4\" />\n                        <feGaussianBlur stdDeviation=\"4\" />\n                        <feComposite in2=\"hardAlpha\" operator=\"out\" />\n                        <feColorMatrix\n                            type=\"matrix\"\n                            values=\"0 0 0 0 0.0196078 0 0 0 0 0.109804 0 0 0 0 0.172549 0 0 0 0.2 0\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in2=\"BackgroundImageFix\"\n                            result=\"effect1_dropShadow_1065_10313\"\n                        />\n                        <feBlend\n                            mode=\"normal\"\n                            in=\"SourceGraphic\"\n                            in2=\"effect1_dropShadow_1065_10313\"\n                            result=\"shape\"\n                        />\n                    </filter>\n                </defs>\n            </svg>\n            <div\n                class=\"absolute top-0 left-0 w-full h-3/4 flex items-center justify-center\"\n            >\n                <div\n                    class=\"relative z-10 h-4 w-4 rounded-full bg-white border-2 border-[#0B421D]\"\n                    *ngIf=\"!selected\"\n                ></div>\n                <app-icon class=\"relative text-white z-10 text-2xl\" *ngIf=\"selected\">\n                    done\n                </app-icon>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class ParkingSpaceLocationPinComponent {\n    public get selected() {\n        return this._data.selected === true;\n    }\n    constructor(@Inject(MAP_FEATURE_DATA) private _data: any) {}\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AsyncHandler, unique } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { BuildingLevel } from '@placeos/organisation';\nimport { debounceTime, map } from 'rxjs/operators';\nimport { BookingAsset } from '../booking-form.service';\nimport { ParkingSpaceLocationPinComponent } from './parking-location-pin.component';\n\n@Component({\n    selector: `parking-space-map`,\n    template: `\n        <i-map\n            *ngIf=\"!is_displayed\"\n            [src]=\"map_url\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [(zoom)]=\"zoom\"\n            [(center)]=\"center\"\n        ></i-map>\n        <div\n            class=\"absolute inset-x-0 top-0 bg-white p-2 border-b border-gray-200\"\n        >\n            <mat-form-field\n                levels\n                appearance=\"outline\"\n                class=\"w-full h-[3.25rem]\"\n            >\n                <mat-select [(ngModel)]=\"level\">\n                    <mat-option\n                        *ngFor=\"let opt of levels | async\"\n                        [value]=\"opt\"\n                    >\n                        {{ opt.display_name || opt.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div\n            zoom\n            class=\"absolute bottom-2 right-2 rounded-lg border border-gray-200 bg-white flex flex-col overflow-hidden\"\n        >\n            <button zoom-in icon matRipple (click)=\"setZoom(zoom * 1.1)\">\n                <app-icon>zoom_in</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button zoom-out icon matRipple (click)=\"setZoom(zoom * (1 / 1.1))\">\n                <app-icon>zoom_out</app-icon>\n            </button>\n            <div class=\"border-t border-gray-200 w-full\"></div>\n            <button reset icon matRipple (click)=\"resetMap()\">\n                <app-icon>refresh</app-icon>\n            </button>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                background: rgba(0, 0, 0, 0.05);\n                padding-top: 4rem;\n            }\n\n            button {\n                border-radius: 0;\n            }\n        `,\n    ],\n})\nexport class ParkingSpaceSelectMapComponent extends AsyncHandler {\n    @Input() public selected: string[] = [];\n    @Input() public is_displayed: boolean = false;\n    @Output() public onSelect = new EventEmitter<BookingAsset>();\n\n    public zoom = 1;\n    public center = { x: 0.5, y: 0.5 };\n\n    private _seletedSpace = (s) => () => this.onSelect.emit(s);\n    public level: BuildingLevel = null;\n\n    public get map_url() {\n        return this.level?.map_id || '';\n    }\n\n    public readonly levels = this._event_form.available_spaces.pipe(\n        map((_) => unique(_.map(({ level }) => level)))\n    );\n\n    public readonly features = this._event_form.available_spaces.pipe(\n        debounceTime(1000),\n        map((l) =>\n            l.map((space) => ({\n                location: space.map_id,\n                content: ParkingSpaceLocationPinComponent,\n                data: {\n                    ...space,\n                    selected: this.selected.includes(space.id),\n                },\n            }))\n        )\n    );\n\n    public readonly actions = this._event_form.available_spaces.pipe(\n        map((l) =>\n            l.map((space) => ({\n                id: space.map_id,\n                action: ['touchend', 'mouseup'],\n                callback: this._seletedSpace(space),\n            }))\n        )\n    );\n\n    constructor(private _event_form: EventFormService) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'spaces',\n            this._event_form.available_spaces.subscribe((_) => {\n                if (!this.level && _.length) this.level = _[0].level;\n            })\n        );\n    }\n\n    public setZoom(new_zoom: number) {\n        this.zoom = Math.max(0.5, Math.min(10, new_zoom));\n    }\n\n    public resetMap() {\n        this.zoom = 1;\n        this.center = { x: 0.5, y: 0.5 };\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport {\n    BookingAsset,\n    BookingFlowOptions,\n    BookingFormService,\n} from '../booking-form.service';\n\nexport const FAV_PARKING_KEY = 'favourite_parking_spaces';\n\n@Component({\n    selector: 'parking-space-select-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-white dark:bg-neutral-700\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button icon matRipple mat-dialog-close class=\"bg-black/20\">\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Find Parking Space</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-gray-200 dark:divide-neutral-500 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <parking-space-filters\n                    class=\"h-full hidden sm:flex max-w-[20rem] sm:h-[65vh] sm:max-h-full\"\n                ></parking-space-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <parking-space-filters-display\n                        class=\"w-full border-b border-gray-200 dark:border-neutral-500\"\n                        [(view)]=\"view\"\n                    ></parking-space-filters-display>\n                    <parking-space-list\n                        *ngIf=\"view === 'list'; else map_view\"\n                        [active]=\"displayed?.id\"\n                        [selected]=\"selected_ids\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 bg-black/5 dark:bg-white/10\"\n                    ></parking-space-list>\n                </div>\n                <parking-space-details\n                    [space]=\"displayed\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[20rem] z-20 bg-white dark:bg-neutral-600 block\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.id)\"\n                    (activeChange)=\"setSelected(displayed, $event)\"\n                    [fav]=\"displayed && this.favorites.includes(displayed?.id)\"\n                    (toggleFav)=\"toggleFavourite(displayed)\"\n                    (close)=\"displayed = null\"\n                ></parking-space-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    return\n                    class=\"inverse sm:hidden w-full\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    save\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-32 sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-gray-200 dark:border-neutral-500 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-primary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ selected.length }} bay(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.id)\"\n                    (click)=\"setSelected(displayed, !isSelected(displayed?.id))\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n        <ng-template #map_view>\n            <parking-space-map\n                class=\"flex-1 h-1/2 w-full\"\n                [selected]=\"selected_ids\"\n                [is_displayed]=\"!!displayed\"\n                (onSelect)=\"displayed = $event\"\n            >\n            </parking-space-map>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ParkingSpaceSelectModalComponent {\n    public displayed?: BookingAsset;\n    public selected: BookingAsset[] = [];\n    public view = 'list';\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.id).join(',');\n    }\n\n    public get favorites() {\n        return this._settings.get<string[]>(FAV_PARKING_KEY) || [];\n    }\n\n    constructor(\n        private _dialog_ref: MatDialogRef<ParkingSpaceSelectModalComponent>,\n        private _settings: SettingsService,\n        private _event_form: BookingFormService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: {\n            spaces: BookingAsset[];\n            options: Partial<BookingFlowOptions>;\n        }\n    ) {\n        this.selected = [...(_data.spaces || [])];\n        this._event_form.setOptions(_data.options);\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: BookingAsset, state: boolean) {\n        const list = this.selected.filter((_) => _.id !== item.id);\n        if (state) list.push(item);\n        this.selected = list;\n        if (!this._data.options.group && state) this._dialog_ref.close([item]);\n    }\n\n    public toggleFavourite(item: BookingAsset) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting(FAV_PARKING_KEY, [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                FAV_PARKING_KEY,\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","// @ts-nocheck\n/** From https://github.com/chuckfairy/VanillaQR.js */\nexport function VanillaQR(r){var e=this;r=\"object\"==typeof r?r:{},e.revision=3,e.imageTypes={bmp:\"image/bmp\",gif:\"image/gif\",jpeg:\"image/jpeg\",jpg:\"image/jpg\",png:\"image/png\",\"svg+xml\":\"image/svg+xml\",tiff:\"image/tiff\",webp:\"image/webp\",\"x-icon\":\"image/x-icon\"},e.toTable=r.toTable,e.domElement=e.toTable?document.createElement(\"div\"):document.createElement(\"canvas\"),e.url=r.url||\"\",e.size=r.size||280,e.qrc=!1,e.colorLight=r.colorLight||\"#fff\",e.colorDark=r.colorDark||\"#000\",e.ecclevel=r.ecclevel||1,e.noBorder=r.noBorder,e.borderSize=r.borderSize||4;var o,a,t,i,n,l,f,c=[],s=[],d=[],g=[],h=[],v=[],m=function(r,e){var o;r>e&&(o=r,r=e,e=o),o=e,o*=e,o+=e,o>>=1,g[o+=r]=1},u=function(r,e){var o;for(d[r+t*e]=1,o=-2;o<2;o++)d[r+o+t*(e-2)]=1,d[r-2+t*(e+o+1)]=1,d[r+2+t*(e+o)]=1,d[r+o+1+t*(e+2)]=1;for(o=0;o<2;o++)m(r-1,e+o),m(r+1,e-o),m(r-o,e-1),m(r+o,e+1)},p=function(r){for(;r>=255;)r=((r-=255)>>8)+(255&r);return r},b=function(r,e,o,a){var t,i,n,l=VanillaQR.gexp,f=VanillaQR.glog;for(t=0;t<a;t++)c[o+t]=0;for(t=0;t<e;t++){if(255!=(n=f[c[r+t]^c[o]]))for(i=1;i<a;i++)c[o+i-1]=c[o+i]^l[p(n+v[a-i])];else for(i=o;i<o+a;i++)c[i]=c[i+1];c[o+a-1]=255==n?0:l[p(n+v[0])]}},R=function(r,e){var o;return r>e&&(o=r,r=e,e=o),o=e,o+=e*e,o>>=1,g[o+=r]},Q=function(r){var e,o,a,i;switch(r){case 0:for(o=0;o<t;o++)for(e=0;e<t;e++)e+o&1||R(e,o)||(d[e+o*t]^=1);break;case 1:for(o=0;o<t;o++)for(e=0;e<t;e++)1&o||R(e,o)||(d[e+o*t]^=1);break;case 2:for(o=0;o<t;o++)for(a=0,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 3:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=i,e=0;e<t;e++,a++)3==a&&(a=0),a||R(e,o)||(d[e+o*t]^=1);break;case 4:for(o=0;o<t;o++)for(a=0,i=o>>1&1,e=0;e<t;e++,a++)3==a&&(a=0,i=!i),i||R(e,o)||(d[e+o*t]^=1);break;case 5:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+!(!a|!i)||R(e,o)||(d[e+o*t]^=1);break;case 6:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(e&o&1)+(a&&a==i)&1||R(e,o)||(d[e+o*t]^=1);break;case 7:for(i=0,o=0;o<t;o++,i++)for(3==i&&(i=0),a=0,e=0;e<t;e++,a++)3==a&&(a=0),(a&&a==i)+(e+o&1)&1||R(e,o)||(d[e+o*t]^=1)}},V=function(r){var e,o=0;for(e=0;e<=r;e++)h[e]>=5&&(o+=VanillaQR.N1+h[e]-5);for(e=3;e<r-1;e+=2)h[e-2]==h[e+2]&&h[e+2]==h[e-1]&&h[e-1]==h[e+1]&&3*h[e-1]==h[e]&&(0==h[e-3]||e+3>r||3*h[e-3]>=4*h[e]||3*h[e+3]>=4*h[e])&&(o+=VanillaQR.N3);return o},k=function(){var r,e,o,a,i,n=0,l=0;for(e=0;e<t-1;e++)for(r=0;r<t-1;r++)(d[r+t*e]&&d[r+1+t*e]&&d[r+t*(e+1)]&&d[r+1+t*(e+1)]||!(d[r+t*e]||d[r+1+t*e]||d[r+t*(e+1)]||d[r+1+t*(e+1)]))&&(n+=VanillaQR.N2);for(e=0;e<t;e++){for(h[0]=0,o=a=r=0;r<t;r++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,l+=(a=i)?1:-1;n+=V(o)}l<0&&(l=-l);var f=l,c=0;for(f+=f<<2,f<<=1;f>t*t;)f-=t*t,c++;for(n+=c*VanillaQR.N4,r=0;r<t;r++){for(h[0]=0,o=a=e=0;e<t;e++)(i=d[r+t*e])==a?h[o]++:h[++o]=1,a=i;n+=V(o)}return n};e.genframe=function(r){var e,h,V,x,C,w,E,N,T=VanillaQR.eccblocks,y=VanillaQR.gexp,z=VanillaQR.glog;x=r.length,a=0;do{if(a++,V=4*(o-1)+16*(a-1),i=T[V++],n=T[V++],l=T[V++],f=T[V],x<=(V=l*(i+n)+n-3+(a<=9)))break}while(a<40);for(t=17+4*a,C=l+(l+f)*(i+n)+n,x=0;x<C;x++)s[x]=0;for(c=r.slice(0),x=0;x<t*t;x++)d[x]=0;for(x=0;x<(t*(t+1)+1)/2;x++)g[x]=0;for(x=0;x<3;x++){for(V=0,h=0,1==x&&(V=t-7),2==x&&(h=t-7),d[h+3+t*(V+3)]=1,e=0;e<6;e++)d[h+e+t*V]=1,d[h+t*(V+e+1)]=1,d[h+6+t*(V+e)]=1,d[h+e+1+t*(V+6)]=1;for(e=1;e<5;e++)m(h+e,V+1),m(h+1,V+e+1),m(h+5,V+e),m(h+e+1,V+5);for(e=2;e<4;e++)d[h+e+t*(V+2)]=1,d[h+2+t*(V+e+1)]=1,d[h+4+t*(V+e)]=1,d[h+e+1+t*(V+4)]=1}if(a>1)for(x=VanillaQR.adelta[a],h=t-7;;){for(e=t-7;e>x-3&&(u(e,h),!(e<x));)e-=x;if(h<=x+9)break;u(6,h-=x),u(h,6)}for(d[8+t*(t-8)]=1,h=0;h<7;h++)m(7,h),m(t-8,h),m(7,h+t-7);for(e=0;e<8;e++)m(e,7),m(e+t-8,7),m(e,t-8);for(e=0;e<9;e++)m(e,8);for(e=0;e<8;e++)m(e+t-8,8),m(8,e);for(h=0;h<7;h++)m(8,h+t-7);for(e=0;e<t-14;e++)1&e?(m(8+e,6),m(6,8+e)):(d[8+e+6*t]=1,d[6+t*(8+e)]=1);if(a>6)for(x=VanillaQR.vpat[a-7],V=17,e=0;e<6;e++)for(h=0;h<3;h++,V--)1&(V>11?a>>V-12:x>>V)?(d[5-e+t*(2-h+t-11)]=1,d[2-h+t-11+t*(5-e)]=1):(m(5-e,2-h+t-11),m(2-h+t-11,5-e));for(h=0;h<t;h++)for(e=0;e<=h;e++)d[e+t*h]&&m(e,h);for(C=c.length,w=0;w<C;w++)s[w]=c.charCodeAt(w);if(c=s.slice(0),C>=(e=l*(i+n)+n)-2&&(C=e-2,a>9&&C--),w=C,a>9){for(c[w+2]=0,c[w+3]=0;w--;)x=c[w],c[w+3]|=255&x<<4,c[w+2]=x>>4;c[2]|=255&C<<4,c[1]=C>>4,c[0]=64|C>>12}else{for(c[w+1]=0,c[w+2]=0;w--;)x=c[w],c[w+2]|=255&x<<4,c[w+1]=x>>4;c[1]|=255&C<<4,c[0]=64|C>>4}for(w=C+3-(a<10);w<e;)c[w++]=236,c[w++]=17;for(v[0]=1,w=0;w<f;w++){for(v[w+1]=1,E=w;E>0;E--)v[E]=v[E]?v[E-1]^y[p(z[v[E]]+w)]:v[E-1];v[0]=y[p(z[v[0]]+w)]}for(w=0;w<=f;w++)v[w]=z[v[w]];for(V=e,h=0,w=0;w<i;w++)b(h,l,V,f),h+=l,V+=f;for(w=0;w<n;w++)b(h,l+1,V,f),h+=l+1,V+=f;for(h=0,w=0;w<l;w++){for(E=0;E<i;E++)s[h++]=c[w+E*l];for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)]}for(E=0;E<n;E++)s[h++]=c[i*l+w+E*(l+1)];for(w=0;w<f;w++)for(E=0;E<i+n;E++)s[h++]=c[e+w+E*f];for(c=s,e=h=t-1,V=C=1,N=(l+f)*(i+n)+n,w=0;w<N;w++)for(x=c[w],E=0;E<8;E++,x<<=1){128&x&&(d[e+t*h]=1);do{C?e--:(e++,V?0!=h?h--:(V=!V,6==(e-=2)&&(e--,h=9)):h!=t-1?h++:(V=!V,6==(e-=2)&&(e--,h-=8))),C=!C}while(R(e,h))}for(c=d.slice(0),x=0,h=3e4,V=0;V<8&&(Q(V),(e=k())<h&&(h=e,x=V),7!=x);V++)d=c.slice(0);for(x!=V&&Q(x),h=VanillaQR.fmtword[x+(o-1<<3)],V=0;V<8;V++,h>>=1)1&h&&(d[t-1-V+8*t]=1,V<6?d[8+t*V]=1:d[8+t*(V+1)]=1);for(V=0;V<7;V++,h>>=1)1&h&&(d[8+t*(t-7+V)]=1,V?d[6-V+8*t]=1:d[7+8*t]=1);return d},e.init=function(){o=e.ecclevel;var r=e.genframe(e.url);e.toTable?e.tableWrite(r,t):e.canvasWrite(r,t)},e.init()}VanillaQR.prototype={canvasWrite:function(r,e){if(!this.qrc&&(this.qrc=this.getContext(this.domElement),!this.qrc))return this.toTable=!0,this.domElement=document.createElement(\"div\"),void this.tableWrite(r,e);var o=this.size,a=this.qrc;a.lineWidth=1;var t=o;t/=e+10,t=Math.round(t-.5);var i=4;this.noBorder?(a.canvas.width=a.canvas.height=t*e,i=0):a.canvas.width=a.canvas.height=o,a.clearRect(0,0,o,o),a.fillStyle=this.colorLight,a.fillRect(0,0,t*(e+8),t*(e+8)),a.fillStyle=this.colorDark;for(var n=0;n<e;n++)for(var l=0;l<e;l++)r[l*e+n]&&a.fillRect(t*(i+n),t*(i+l),t,t)},tableWrite:function(r,e){var o=this,a=Math.round(this.size/e-3.5)+\"px\",t=e+(o.noBorder?0:2*o.borderSize),i=o.borderSize,n=\"width:\"+a+\";height:\"+a+\";\",l=o.colorLight,f=o.colorDark,c=document.createElement(\"table\");c.style.cssText=\"border:0;border-collapse:collapse;\";for(var s,d=document.createElement(\"tr\"),g=document.createElement(\"td\"),h=function(){return g.cloneNode()},v=function(){var r=h();return r.style.cssText=n+\"background:\"+l,r},m=function(r){for(var e=r.firstChild,o=0;o<i;o++)r.insertBefore(v(),e),r.appendChild(v())},u=0;u<e;u++){var p=d.cloneNode();c.appendChild(p);for(var b=0;b<e;b++)if(1===r[u*e+b]){var R=(s=void 0,(s=h()).style.cssText=n+\"background:\"+f,s);p.appendChild(R)}else{var Q=v();p.appendChild(Q)}o.noBorder||m(p)}o.noBorder||function(r){for(var e=r.firstChild,a=0;a<o.borderSize;a++){for(var i=d.cloneNode(),n=0;n<t;n++){var l=v();i.appendChild(l)}r.appendChild(i),r.insertBefore(i.cloneNode(!0),e)}}(c),o.domElement.innerHTML=\"\",o.domElement.appendChild(c)},getContext:function(r){return r.getContext&&r.getContext(\"2d\")?r.getContext(\"2d\"):(console.log(\"Browser does not have 2d Canvas support\"),!1)},toImage:function(r){if(this.qrc){var e=this.imageTypes[r];if(!e)throw new Error(r+\" is not a valid image type \");var o=new Image;return o.src=this.domElement.toDataURL(e),o}}},VanillaQR.adelta=[0,11,15,19,23,27,31,16,18,20,22,24,26,28,20,22,24,24,26,28,28,22,24,24,26,26,28,28,24,24,26,26,26,28,28,24,26,26,26,28,28],VanillaQR.vpat=[3220,1468,2713,1235,3062,1890,2119,1549,2344,2936,1117,2583,1330,2470,1667,2249,2028,3780,481,4011,142,3098,831,3445,592,2517,1776,2234,1951,2827,1070,2660,1345,3177],VanillaQR.fmtword=[30660,29427,32170,30877,26159,25368,27713,26998,21522,20773,24188,23371,17913,16590,20375,19104,13663,12392,16177,14854,9396,8579,11994,11245,5769,5054,7399,6608,1890,597,3340,2107],VanillaQR.eccblocks=[1,0,19,7,1,0,16,10,1,0,13,13,1,0,9,17,1,0,34,10,1,0,28,16,1,0,22,22,1,0,16,28,1,0,55,15,1,0,44,26,2,0,17,18,2,0,13,22,1,0,80,20,2,0,32,18,2,0,24,26,4,0,9,16,1,0,108,26,2,0,43,24,2,2,15,18,2,2,11,22,2,0,68,18,4,0,27,16,4,0,19,24,4,0,15,28,2,0,78,20,4,0,31,18,2,4,14,18,4,1,13,26,2,0,97,24,2,2,38,22,4,2,18,22,4,2,14,26,2,0,116,30,3,2,36,22,4,4,16,20,4,4,12,24,2,2,68,18,4,1,43,26,6,2,19,24,6,2,15,28,4,0,81,20,1,4,50,30,4,4,22,28,3,8,12,24,2,2,92,24,6,2,36,22,4,6,20,26,7,4,14,28,4,0,107,26,8,1,37,22,8,4,20,24,12,4,11,22,3,1,115,30,4,5,40,24,11,5,16,20,11,5,12,24,5,1,87,22,5,5,41,24,5,7,24,30,11,7,12,24,5,1,98,24,7,3,45,28,15,2,19,24,3,13,15,30,1,5,107,28,10,1,46,28,1,15,22,28,2,17,14,28,5,1,120,30,9,4,43,26,17,1,22,28,2,19,14,28,3,4,113,28,3,11,44,26,17,4,21,26,9,16,13,26,3,5,107,28,3,13,41,26,15,5,24,30,15,10,15,28,4,4,116,28,17,0,42,26,17,6,22,28,19,6,16,30,2,7,111,28,17,0,46,28,7,16,24,30,34,0,13,24,4,5,121,30,4,14,47,28,11,14,24,30,16,14,15,30,6,4,117,30,6,14,45,28,11,16,24,30,30,2,16,30,8,4,106,26,8,13,47,28,7,22,24,30,22,13,15,30,10,2,114,28,19,4,46,28,28,6,22,28,33,4,16,30,8,4,122,30,22,3,45,28,8,26,23,30,12,28,15,30,3,10,117,30,3,23,45,28,4,31,24,30,11,31,15,30,7,7,116,30,21,7,45,28,1,37,23,30,19,26,15,30,5,10,115,30,19,10,47,28,15,25,24,30,23,25,15,30,13,3,115,30,2,29,46,28,42,1,24,30,23,28,15,30,17,0,115,30,10,23,46,28,10,35,24,30,19,35,15,30,17,1,115,30,14,21,46,28,29,19,24,30,11,46,15,30,13,6,115,30,14,23,46,28,44,7,24,30,59,1,16,30,12,7,121,30,12,26,47,28,39,14,24,30,22,41,15,30,6,14,121,30,6,34,47,28,46,10,24,30,2,64,15,30,17,4,122,30,29,14,46,28,49,10,24,30,24,46,15,30,4,18,122,30,13,32,46,28,48,14,24,30,42,32,15,30,20,4,117,30,40,7,47,28,43,22,24,30,10,67,15,30,19,6,118,30,18,31,47,28,34,34,24,30,20,61,15,30],VanillaQR.glog=[255,0,1,25,2,50,26,198,3,223,51,238,27,104,199,75,4,100,224,14,52,141,239,129,28,193,105,248,200,8,76,113,5,138,101,47,225,36,15,33,53,147,142,218,240,18,130,69,29,181,194,125,106,39,249,185,201,154,9,120,77,228,114,166,6,191,139,98,102,221,48,253,226,152,37,179,16,145,34,136,54,208,148,206,143,150,219,189,241,210,19,92,131,56,70,64,30,66,182,163,195,72,126,110,107,58,40,84,250,133,186,61,202,94,155,159,10,21,121,43,78,212,229,172,115,243,167,87,7,112,192,247,140,128,99,13,103,74,222,237,49,197,254,24,227,165,153,119,38,184,180,124,17,68,146,217,35,32,137,46,55,63,209,91,149,188,207,205,144,135,151,178,220,252,190,97,242,86,211,171,20,42,93,158,132,60,57,83,71,109,65,162,31,45,67,216,183,123,164,118,196,23,73,236,127,12,111,246,108,161,59,82,41,157,85,170,251,96,134,177,187,204,62,90,203,89,95,176,156,169,160,81,11,245,22,235,122,117,44,215,79,174,213,233,230,231,173,232,116,214,244,234,168,80,88,175],VanillaQR.gexp=[1,2,4,8,16,32,64,128,29,58,116,232,205,135,19,38,76,152,45,90,180,117,234,201,143,3,6,12,24,48,96,192,157,39,78,156,37,74,148,53,106,212,181,119,238,193,159,35,70,140,5,10,20,40,80,160,93,186,105,210,185,111,222,161,95,190,97,194,153,47,94,188,101,202,137,15,30,60,120,240,253,231,211,187,107,214,177,127,254,225,223,163,91,182,113,226,217,175,67,134,17,34,68,136,13,26,52,104,208,189,103,206,129,31,62,124,248,237,199,147,59,118,236,197,151,51,102,204,133,23,46,92,184,109,218,169,79,158,33,66,132,21,42,84,168,77,154,41,82,164,85,170,73,146,57,114,228,213,183,115,230,209,191,99,198,145,63,126,252,229,215,179,123,246,241,255,227,219,171,75,150,49,98,196,149,55,110,220,165,87,174,65,130,25,50,100,200,141,7,14,28,56,112,224,221,167,83,166,81,162,89,178,121,242,249,239,195,155,43,86,172,69,138,9,18,36,72,144,61,122,244,245,247,243,251,235,203,139,11,22,44,88,176,125,250,233,207,131,27,54,108,216,173,71,142,0],VanillaQR.N1=3,VanillaQR.N2=3,VanillaQR.N3=40,VanillaQR.N4=10;\n","import { VanillaQR } from './vanillaqr.min';\n\n/** Generates a DataURL for QR code image */\nexport function generateQRCode(code: string, colorLight = '#fff0', colorDark = '#000') {\n    const qr = new VanillaQR({\n        url: code || 'Hello',\n        size: 360,\n        colorLight,\n        colorDark,\n        toTable: false,\n        ecclevel: 1,\n        noBorder: true,\n        borderSize: 0,\n    });\n    return qr?.toImage('svg+xml')?.src;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\n\nconst DEFAULT_PATH = `workplace/#/explore?space={{id}}`;\n\n@Component({\n    selector: 'explore-book-qr',\n    template: `\n        <header>\n            <h2 class=\"truncate\" i18n>Book - {{ space?.name }}</h2>\n            <div class=\"flex-1\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"p-4\">\n            <img class=\"w-64 h-64 m-auto\" [src]=\"qr_code\" />\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreBookQrComponent {\n    public readonly space = this._data.space;\n    public readonly qr_code = generateQRCode(\n        `${location.origin}${(\n            this._settings.get('app.booking_qr_path') || DEFAULT_PATH\n        ).replace('{{id}}', this._data.space?.email)}`\n    );\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public _data: { space: Space },\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { currentUser, notifySuccess, SettingsService } from '@placeos/common';\n\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { Router } from '@angular/router';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2 i18n>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!(loading | async)\" icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!(loading | async); else load_state\">\n            <main *ngIf=\"form\" [formGroup]=\"form\" class=\"p-4 max-w-[85vw]\">\n                <div class=\"flex flex-col\">\n                    <label for=\"title\">Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                            i18n-placeholder\n                        />\n                        <mat-error i18n>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"can_book_for_others\">\n                    <label for=\"host\">Host<span>*</span>:</label>\n                    <a-user-search-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label i18n>Space:</label>\n                    <div name=\"space\" class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0]?.display_name ||\n                                form.controls.resources?.value[0]?.name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label i18n>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div\n                        class=\"flex flex-col w-full sm:w-auto\"\n                        *ngIf=\"form.controls.duration\"\n                    >\n                        <label i18n>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                            class=\"w-full\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button btn matRipple class=\"w-32\" (click)=\"save()\" i18n>\n                    Save\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div load class=\"h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n\n            [load] {\n                width: 32rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent implements OnInit {\n    public readonly loading = this._event_form.loading;\n\n    public get form() {\n        return this._event_form.form;\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>,\n        private _router: Router\n    ) {}\n\n    public ngOnInit() {\n        this._event_form.newForm();\n        this.form.patchValue({\n            resources: [this._data.space],\n            host: currentUser().email,\n            organiser: currentUser(),\n        });\n    }\n\n    public async save() {\n        await this._event_form.postForm();\n        if (this._settings.app_name.toLowerCase().includes('workplace')) {\n            this._router.navigate(['/book', 'meeting', 'success']);\n        } else {\n            notifySuccess('Succefully booked room.');\n        }\n        this._dialog_ref.close();\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\n\nexport interface DeskInfoData {\n    id: string;\n    map_id: string;\n    user: string;\n    name: string;\n    start?: number;\n    end?: number;\n    department?: string;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            customTooltip\n            [content]=\"desk_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            class=\"h-full w-full pointer-events-auto relative z-20\"\n            [attr.id]=\"id\"\n            [attr.map_id]=\"map_id\"\n        ></div>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <h4 map-id class=\"m-0 font-medium\">\n                        {{ name || map_id || id }}\n                    </h4>\n                    <p user class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                    <p user class=\"mt-1 text-sm\" *ngIf=\"user && department\">\n                        {{ department }}\n                    </p>\n                    <p start class=\"mt-1 text-sm\" *ngIf=\"start\">\n                        {{ start | date: 'shortTime' }} &ndash;\n                        {{ end | date: 'shortTime' }}\n                    </p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly id = this._details.id;\n    public readonly map_id = this._details.map_id;\n    public readonly name = this._details.name;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n    public readonly status = this._details.status;\n    public readonly department = this._details.department;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeskInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { Locker, LockerBank } from 'libs/bookings/src/lib/lockers.service';\nimport { ExploreLockerBankModalComponent } from './explore-locker-bank-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface LockerBankInfoData {\n    bank: LockerBank;\n    lockers: Locker[];\n    in_use_count: number;\n    locker_count: number;\n}\n\n@Component({\n    selector: 'explore-locker-bank-info',\n    template: `\n        <button\n            class=\"h-full w-full pointer-events-auto relative\"\n            (click)=\"openBankModal()\"\n        >\n            <div\n                customTooltip\n                [content]=\"desk_tooltip\"\n                [backdrop]=\"false\"\n                [xPosition]=\"'center'\"\n                [yPosition]=\"'center'\"\n                [hover]=\"true\"\n                [delay]=\"3000\"\n                class=\"h-full w-full pointer-events-auto relative\"\n            ></div>\n        </button>\n        <ng-template #desk_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"map_id\"\n                [class]=\"\n                    'absolute rounded bg-white dark:bg-neutral-800 p-4 top-0 left-0 shadow pointer-events-none ' +\n                    x_pos +\n                    ' ' +\n                    y_pos\n                \"\n            >\n                <h3 class=\"font-medium\">{{ bank.name }}</h3>\n                <p class=\"whitespace-nowrap text-sm\">\n                    {{ in_use_count }} lockers in use of\n                    {{ bank.lockers.length || 1 }}\n                </p>\n            </div></ng-template\n        >\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankInfoComponent {\n    public bank: LockerBank = this._details.bank;\n    public in_use_count: number = this._details.in_use_count;\n    public y_pos: 'top' | 'bottom';\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: LockerBankInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _dialog: MatDialog\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent =\n                this._element.nativeElement.parentElement?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public openBankModal() {\n        this._dialog.open(ExploreLockerBankModalComponent, {\n            data: { ...this._details },\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {\n    Locker,\n    LockerBank,\n    LockersService,\n} from 'libs/bookings/src/lib/lockers.service';\n\nexport interface LockerBankModalData {\n    bank: LockerBank;\n    lockers: Locker[];\n}\n\n@Component({\n    selector: 'explore-locker-bank-modal',\n    template: `\n        <header>\n            <h2 class=\"text-xl font-medium\">{{ bank.name }}</h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"h-[65vh] overflow-hidden\">\n            <locker-grid [bank]=\"bank\" [bank_status]=\"lockers\"></locker-grid>\n        </main>\n    `,\n    styles: [``],\n})\nexport class ExploreLockerBankModalComponent {\n    public readonly bank = this._data.bank;\n    public readonly lockers = this._data.lockers.reduce((map, l) => {\n        map[l.id] = 'busy';\n        return map;\n    }, {});\n\n    constructor(@Inject(MAT_DIALOG_DATA) private _data: LockerBankModalData) {}\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\nimport { SettingsService } from 'libs/common/src/lib/settings.service';\nimport { MAP_FEATURE_DATA } from 'libs/components/src/lib/interactive-map.component';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status:\n        | 'free'\n        | 'busy'\n        | 'pending'\n        | 'reserved'\n        | 'not-bookable'\n        | 'unknown'\n        | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            #tooltip\n            customTooltip\n            [content]=\"space_tooltip\"\n            [backdrop]=\"false\"\n            [xPosition]=\"'center'\"\n            [yPosition]=\"'center'\"\n            [hover]=\"true\"\n            [delay]=\"3000\"\n            [attr.id]=\"space?.map_id || space?.id\"\n            (mouseenter)=\"updateOffset()\"\n            class=\"h-full w-full pointer-events-auto relative hidden sm:block cursor-pointer\"\n        ></div>\n        <ng-template #space_tooltip>\n            <div\n                name=\"space-info\"\n                [id]=\"space?.id\"\n                class=\"\n                    absolute rounded bg-white dark:bg-neutral-800 top-0 left-0 transform shadow pointer-events-none overflow-hidden\n                \"\n                [class.-translate-x-full]=\"x_pos === 'end'\"\n                [class.-translate-y-full]=\"y_pos === 'bottom'\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"relative\">\n                    <div\n                        class=\"w-full overflow-hidden flex items-center justify-center relative bg-opacity-20\"\n                        [class.bg-black]=\"space.images[0]\"\n                        [class.h-32]=\"space.images[0]\"\n                        [class.h-8]=\"!space.images[0]\"\n                    >\n                        <img\n                            auth\n                            *ngIf=\"space.images[0]\"\n                            [source]=\"space.images[0]\"\n                            class=\"object-cover min-h-full min-w-full\"\n                        />\n                        <div\n                            class=\"absolute inset-0 bg-black/30\"\n                            *ngIf=\"space.images[0]\"\n                        ></div>\n                    </div>\n                    <div class=\"absolute top-2 left-2 flex flex-wrap text-sm \">\n                        <div\n                            status\n                            [class]=\"\n                                'capitalize rounded p-1 px-2 text-light border border-white shadow ' +\n                                status\n                            \"\n                        >\n                            { status, select, free { Free } busy { Busy }\n                            pending { Pending } reserved { Reserved } other {\n                            Not Bookable } }\n                        </div>\n                        <div available-until *ngIf=\"status !== 'not-bookable'\">\n                            {{ available_until }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col py-4 px-2\">\n                        <h4 class=\"font-medium text-xl mb-2 px-2\">\n                            {{ space.display_name || space.name }}\n                        </h4>\n                        <div\n                            capacity\n                            class=\"text-base px-2 mb-2\"\n                            *ngIf=\"space.capacity >= 0\"\n                        >\n                            <span i18n>Capacity: </span>{{ space.capacity }}\n                            {{ space.capacity === 1 ? 'person' : 'people' }}\n                        </div>\n                        <ul\n                            class=\"flex flex-wrap\"\n                            *ngIf=\"space.features?.length > 0 && show_features\"\n                        >\n                            <li\n                                class=\"text-xs px-2 py-1 m-1 rounded-2xl bg-gray-200 dark:bg-neutral-600 font-medium\"\n                                *ngFor=\"let feature of space.features\"\n                            >\n                                {{ feature }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [status] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [status].busy {\n                background-color: #e53935;\n            }\n\n            [status].pending {\n                background-color: #ffb300;\n            }\n\n            [status].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'start' | 'end';\n\n    public get show_features() {\n        return !this._settings.get('app.spaces.hide_features');\n    }\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _settings: SettingsService,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit() {\n        setTimeout(() => this.updateOffset(), 200);\n    }\n\n    public updateOffset() {\n        const pos = this._element.nativeElement.getBoundingClientRect();\n        this.x_pos = pos.x < document.body.clientWidth / 2 ? 'start' : 'end';\n        this.y_pos = pos.y < document.body.clientHeight / 2 ? 'top' : 'bottom';\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@placeos/svg-viewer';\nimport { map } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    currentUser,\n    HashMap,\n    SettingsService,\n} from '@placeos/common';\nimport { notifyError } from 'libs/common/src/lib/notifications';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { EventFormService } from 'libs/events/src/lib/event-form.service';\nimport { rulesForSpace } from 'libs/events/src/lib/helpers';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreBookQrComponent } from './explore-book-qr.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'signs-of-life': '#1565c0',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends AsyncHandler implements OnDestroy {\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _statuses: HashMap<string> = {};\n\n    private _bind = this._state.spaces.pipe(\n        map((list) => {\n            this.unsubWith('b-');\n            this.unsubWith('s-');\n            this._statuses = {};\n            if (!list?.length) return;\n            for (const space of list) {\n                const mod = getModule(space.id, 'Bookings');\n                let binding = mod.binding('bookings');\n                this.subscription(\n                    `b-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleBookingsChange(list, space, d)\n                        )\n                );\n                this.subscription(`b-bind-${space.id}`, binding.bind());\n                binding = mod.binding('status');\n                this.subscription(\n                    `s-${space.id}`,\n                    binding\n                        .listen()\n                        .subscribe((d) =>\n                            this.handleStatusChange(list, space, d)\n                        )\n                );\n                this.subscription(`s-bind-${space.id}`, binding.bind());\n            }\n            this.updateActions(list);\n            this.updateHoverElements(list);\n        })\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _event_form: EventFormService,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.subscription('spaces', this._bind.subscribe());\n    }\n\n    public bookSpace(space: Space, force: boolean = false) {\n        const { hidden } =\n            rulesForSpace(\n                { date: Date.now(), duration: 60, space, host: currentUser() },\n                this._org.building.booking_rules\n            ) || {};\n        if (hidden)\n            return notifyError(\n                'You do not have permission to book this space at this time.'\n            );\n        if (\n            (this._statuses[space.id] !== 'free' && !force) ||\n            !space.bookable\n        ) {\n            return notifyError(\n                `${\n                    space.display_name || space.name\n                } is unavailable for the selected time and duration`\n            );\n        }\n        this._event_form.newForm();\n        this._event_form.form.patchValue({\n            host: currentUser()?.email,\n            resources: [space],\n        });\n        if (this._settings.get('app.events.booking_unavailable')) {\n            return this._event_form.openEventLinkModal();\n        }\n        this._dialog.open(\n            (this._settings.get('app.explore.show_booking_qr')\n                ? ExploreBookQrComponent\n                : ExploreBookingModalComponent) as any,\n            {\n                data: { space },\n            }\n        );\n    }\n\n    public handleBookingsChange(\n        spaces: Space[],\n        space: Space,\n        bookings: HashMap[]\n    ) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout(\n            'update_hover_els',\n            () => this.updateHoverElements(spaces),\n            100\n        );\n    }\n\n    public handleStatusChange(spaces: Space[], space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus(spaces);\n                this.updateHoverElements(spaces);\n            },\n            100\n        );\n    }\n\n    private updateStatus(spaces: Space[]) {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const space of spaces) {\n            const status = this._statuses[space.id] || 'not-bookable';\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${status}`] ||\n                    colours[`${status}`] ||\n                    DEFAULT_COLOURS[`${status}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements(spaces: Space[]) {\n        const features: ViewerFeature[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            features.push({\n                location: space.map_id,\n                full_size: true,\n                no_scale: true,\n                content: ExploreSpaceInfoComponent,\n                z_index: 10,\n                data: {\n                    space: new Space(space),\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions(spaces: Space[]) {\n        const actions: ViewAction[] = [];\n        for (const space of spaces) {\n            if (!space.map_id) continue;\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                priority: 5,\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this.timeout(\n            'set-actions',\n            () => this._state.setActions('spaces', actions),\n            50\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@placeos/svg-viewer';\nimport { querySystems } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    HashMap,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { BuildingLevel } from 'libs/organisation/src/lib/level.class';\nimport { OrganisationService } from 'libs/organisation/src/lib/organisation.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\nimport { SpacesService } from 'libs/spaces/src/lib/spaces.service';\n\nexport interface MapOptions {\n    /** List of keys to ignore for any map resource */\n    disable?: string[];\n    /** List of keys to ignore for map labels */\n    disable_labels?: string[];\n    /** List of keys to ignore for map actions */\n    disable_actions?: string[];\n    /** List of keys to ignore for map features */\n    disable_features?: string[];\n    /** List of keys to ignore for map styles */\n    disable_styles?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends AsyncHandler {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({\n        disable: ['zones', 'devices'],\n    });\n\n    private _message = new BehaviorSubject<string>('');\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Currently active level */\n    public readonly message = this._message.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = this._level.pipe(\n        switchMap((level) =>\n            querySystems({ zone_id: level?.id, limit: 50 }).pipe(\n                map(({ data }) => data.map((_) => new Space(_ as any))),\n                catchError((_) => of([] as Space[]))\n            )\n        ),\n        shareReplay(1)\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([features, options]) => {\n            let list = [];\n            for (const key in features) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_features?.includes(key)\n                )\n                    continue;\n                list = list.concat(features[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = combineLatest([\n        this._actions,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([actions, options]) => {\n            let list = [];\n            for (const key in actions) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_actions?.includes(key)\n                )\n                    continue;\n                list = list.concat(actions[key]);\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([labels, options]) => {\n            let list = [];\n            for (const key in labels) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_labels?.includes(key)\n                )\n                    continue;\n                list = list.concat(labels[key]);\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(200),\n        map(([styles, options]) => {\n            let style_mappings = { text: { display: 'none' } };\n            for (const key in styles) {\n                if (\n                    options.disable?.includes(key) ||\n                    options.disable_styles?.includes(key)\n                )\n                    continue;\n                style_mappings = { ...style_mappings, ...styles[key] };\n            }\n            if (options.disable?.includes('zones')) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._org.active_levels\n            .pipe(filter((_) => !!_))\n            .subscribe((level_list) => {\n                const level = this._level.getValue();\n                const has_level = level_list.find(\n                    (lvl) => level?.id === lvl.id\n                );\n                if (!has_level && level_list.length) {\n                    this.setLevel(level_list[0].id);\n                }\n                if (this._settings.get('app.explore.disable_actions')) {\n                    this.setOptions({\n                        disable_actions: this._settings.get(\n                            'app.explore.disable_actions'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_labels')) {\n                    this.setOptions({\n                        disable_labels: this._settings.get(\n                            'app.explore.disable_labels'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_features')) {\n                    this.setOptions({\n                        disable_features: this._settings.get(\n                            'app.explore.disable_features'\n                        ),\n                    });\n                }\n                if (this._settings.get('app.explore.disable_styles')) {\n                    this.setOptions({\n                        disable_styles: this._settings.get(\n                            'app.explore.disable_styles'\n                        ),\n                    });\n                }\n            });\n    }\n\n    public setOptions(options: MapOptions) {\n        const old_options = this._options.getValue();\n        const disable = unique([\n            ...(options.disable || old_options.disable),\n            ...(this._settings.get('app.explore.disable') || []),\n        ]);\n        this._options.next({\n            ...this._options.getValue(),\n            ...options,\n            disable,\n        });\n    }\n\n    public reset() {\n        this._styles.next({});\n        this._features.next({});\n        this._labels.next({});\n        this._actions.next({});\n        this._options.next({\n            disable: ['zones', 'devices'],\n        });\n        this.setPositions(1, { x: 0.5, y: 0.5 });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) this._level.next(lvl);\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n"],"x_google_ignoreList":[]}