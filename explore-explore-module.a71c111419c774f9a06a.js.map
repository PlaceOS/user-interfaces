{"version":3,"sources":["/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-space-info.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/form-fields/src/lib/duration-field.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-booking-modal.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-state.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-spaces.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-zones.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/booking.class.ts","/home/runner/work/user-interfaces/user-interfaces/libs/form-fields/src/lib/date-field.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/form-fields/src/lib/form-fields.module.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/desk-confirm-modal.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/desk-questions-modal.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/bookings.fn.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/getUnixTime/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/endOfDay/index.js","/home/runner/work/user-interfaces/user-interfaces/libs/bookings/src/lib/desk.service.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/compareAsc/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInCalendarMonths/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInMonths/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInSeconds/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/_lib/cloneObject/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/_lib/assign/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/formatDistance/index.js","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-device-info.component.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/formatDistanceToNow/index.js","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-desk-info.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-desks.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-zoom-control.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-map-control.component.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-map-view.component.ts","./src/app/explore/footer-legend/footer-legend.component.html","./src/app/explore/footer-legend/footer-legend.component.ts","./src/app/explore/explore.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore.module.ts","./src/app/explore/explore.module.ts"],"names":["ExploreSpaceInfoComponent","_details","_element","space","this","events","status","tries","setTimeout","parent","nativeElement","parentElement","ngOnInit","position","parseInt","style","top","left","y_pos","x_pos","DurationFieldComponent","max","min","step","specialPreprops","duration","duration_options","generateDurationOptions","changes","time","new_value","_onChange","value","disabled","fn","_onTouch","blocks","date","option","push","id","name","add","format","formatDuration","hours","Math","floor","minutes","provide","useExisting","multi","setValue","ExploreBookingModalComponent","_data","_calendars","_dialog_ref","booking","attendees","resource","form","markAllAsTouched","on_error","msg","loading","disableClose","valid","list","key","controls","invalid","Promise","reject","join","availability","system_ids","resources","map","s","period_start","period_end","toPromise","catch","e","length","display_name","close","ExploreStateService","_org","_spaces","_settings","super","_level","BehaviorSubject","_positions","zoom","center","x","y","_styles","_features","_actions","_labels","_options","level","asObservable","spaces","combineLatest","pipe","filter","zones","includes","map_url","lvl","map_id","map_positions","map_features","debounceTime","details","features","options","show_zones","show_devices","concat","show_contacts","map_actions","i","Object","values","reduce","a","map_labels","labels","map_styles","styles","style_mappings","keys","h","display","initialised","first","_","subscribe","subscription","active_building","bld","getValue","level_list","levelsForBuilding","find","setLevel","setOptions","get","next","zone_id","levelWithID","style_map","feature_map","actions","actions_map","labels_map","DEFAULT_COLOURS","free","pending","reserved","busy","unknown","ExploreSpacesService","_state","_dialog","_bookings","_bindings","_statuses","clearBindings","bindToSpaces","ngOnDestroy","unsub","forEach","b","unbind","binding","listen","d","handleBookingsChange","bind","handleStatusChange","updateActions","updateHoverElements","open","data","bookings","timeout","bookable","clearTimeout","updateStatus","colours","fill","opacity","setStyles","location","hover","content","setFeatures","action","callback","bookSpace","setActions","ExploreZonesService","_location","_capacity","init","zone_metadata","all","levels","zone","areas","area","properties","capacity","label_location","bindToZones","buildings","parent_id","system_id","organisation","bindings","area_management","parseData","filled","count","area_id","setLabels","hasOwnProperty","asset_id","booking_type","type","booking_start","start","valueOf","minute","ceil","startOf","booking_end","diff","timezone","user_email","user_id","user_name","title","description","checked_in","rejected","approved","approver_id","approver_email","approver_name","extension_data","access","all_day","toJSON","unix","endOf","Intl","DateTimeFormat","resolvedOptions","timeZone","email","isSame","end","isAfter","FieldDateAdapter","displayFormat","FIELD_DATE_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DateFieldComponent","_from","offset","Date","toDate","_to","toISOString","old_date","new_date","hour","from","show_tooltip","useClass","useValue","FormFieldsModule","DeskConfirmModalComponent","event","desks","reason","can_set_date","emit","DeskQuestionsModalComponent","travelled","required","unwell","contact","failure","BOOKINGS_ENDPOINT","queryBookings","q","query","item","getUnixTime","dirtyDate","requiredArgs","arguments","getTime","endOfDay","setHours","DesksService","error_on_host","host","Array","ref","success","race","componentInstance","afterClosed","desk_list","startOfDay","toLowerCase","users","desk","idx","makeDeskBooking","for_user","groups","method","encodeURIComponent","updateBooking","createBooking","compareAsc","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","differenceInCalendarMonths","yearDiff","getFullYear","monthDiff","getMonth","differenceInMonths","sign","difference","abs","setMonth","isLastMonthNotFull","result","differenceInSeconds","differenceInMilliseconds","cloneObject","dirtyObject","target","TypeError","property","MINUTES_IN_DAY","MINUTES_IN_MONTH","formatDistance","dirtyBaseDate","dirtyOptions","locale","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","months","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","round","includeSeconds","days","nearestMonth","monthsSinceStartOfYear","years","ExploreDeviceInfoComponent","_overlay","username","user","mac","manufacturer","os","ssid","variance","toFixed","diameter","bg_color","distance_color","overlay_ref","onEnter","loadUser","onLeave","onClick","onTouch","now","formatDistanceToNow","last_seen","differenceInMinutes","distance","mod","system","execute","assigned_to","_portal","create","positionStrategy","flexibleConnectedTo","_dot","withPositions","originX","originY","overlayX","overlayY","attach","dispose","ExploreDeskInfoComponent","ExploreDesksService","_desks_service","_in_use","_desks","_reserved","_stats","occupied","total","_poll","_desk_bookings","switchMap","j","catchError","enable_booking","bindToDesks","in_use","is_used","some","is_reserved","processDesks","delay","interval","clearInterval","building","startPolling","devices","v","at_location","processDevices","desk_id","device","map_width","map_height","coordinates_from","sort","sqrt","pow","bookDesk","ExploreZoomControlComponent","zoomIn","setPositions","positions","zoomOut","reset","ExploreMapControlComponent","building_list","active_levels","setBuilding","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","providedIn","factory","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggleChange","source","checked","MatSlideToggleBase","_elementRef","_MatSlideToggleMixinBase","MatSlideToggle","elementRef","_focusMonitor","_changeDetectorRef","tabIndex","defaults","_animationMode","_onTouched","_uniqueId","_required","_checked","labelPosition","ariaLabel","ariaLabelledby","change","toggleChange","markForCheck","monitor","focusOrigin","_inputElement","focus","resolve","then","stopMonitoring","stopPropagation","_emitChangeEvent","isDisabled","focusVia","detectChanges","ɵfac","t","ɵcmp","selectors","viewQuery","rf","ctx","_t","_thumbEl","_thumbBarEl","hostAttrs","hostVars","hostBindings","inputs","disableRipple","color","outputs","exportAs","ngContentSelectors","decls","vars","consts","template","$event","_onChangeEvent","_onInputClick","_onLabelTextChange","_r0","_r4","inputId","textContent","trim","toString","directives","encapsulation","changeDetection","_MatSlideToggleRequiredValidatorModule","ɵmod","ɵinj","MatSlideToggleModule","imports","ExploreMapViewComponent","_s","_zones","_route","url","o","queryParamMap","params","has","locateSpace","locateUser","feature","message","locate_details","location_services","module","locations","priority","indexOf","radius","FooterLegendComponent","colour","dark","icon_list","icon","src","ExploreComponent","_router","localStorage","getItem","navigate","refreshKiosk","level_id","phone_numbers","emergency","closeAll","queryParams","post","SharedExploreModule","ROUTES","path","component","AppExploreModule","forChild"],"mappings":"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","file":"explore-explore-module.a71c111419c774f9a06a.js","sourcesContent":["import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@user-interfaces/components';\nimport { CalendarEvent } from '@user-interfaces/events';\nimport { Space } from '@user-interfaces/spaces';\nimport { getViewer, coordinatesForElement } from '@yuion/svg-viewer';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            *ngIf=\"space\"\n            name=\"space-info\"\n            [id]=\"space.id\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <h4 class=\"m-0 mb-2\">{{ space.display_name || space.name }}</h4>\n                <div class=\"text-sm\" *ngIf=\"space.capacity >= 0\">\n                    <span>Capacity: </span>{{ space.capacity }}\n                    {{ space.capacity === 1 ? 'person' : 'people' }}\n                </div>\n                <div class=\"flex flex-wrap my-2 text-sm\">\n                    <div\n                        name=\"status\"\n                        [class]=\"\n                            'capitalize rounded p-1 px-2 text-light ' + status\n                        \"\n                    >\n                        {{ status }}\n                    </div>\n                    <div\n                        name=\"available-until\"\n                        *ngIf=\"status !== 'not-bookable'\"\n                    >\n                        {{ available_until }}\n                    </div>\n                </div>\n                <div class=\"features\" *ngIf=\"space.features?.length > 0\">\n                    <h4 class=\"m-0 mb-2\">Room Features</h4>\n                    <ul class=\"pl-2\">\n                        <li\n                            class=\"text-sm\"\n                            *ngFor=\"let feature of space.features\"\n                        >\n                            {{ feature }}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, OnInit, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Identity } from '@user-interfaces/common';\nimport { formatDuration } from 'date-fns';\n\nimport * as dayjs from 'dayjs';\n\n@Component({\n    selector: 'a-duration-field',\n    template: `\n        <div class=\"duration-field\" [attr.disabled]=\"disabled\">\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    #select\n                    [value]=\"duration\"\n                    [disabled]=\"disabled\"\n                    (valueChange)=\"setValue($event)\"\n                >\n                    <mat-option *ngFor=\"let option of duration_options\" [value]=\"option.id\">\n                        {{ option.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DurationFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DurationFieldComponent implements OnInit, OnChanges, ControlValueAccessor {\n    /** Maximum duration option available */\n    @Input() public max: number = 240;\n    /** Minimum duration option available */\n    @Input() public min: number = 30;\n    /** Step value between options */\n    @Input() public step: number = 15;\n    /** Reference time for displaying next to durations */\n    @Input() public time: number;\n    /** Whether form field is disabled */\n    @Input() public disabled: boolean;\n    /** Special case prepopulation i.e. out of step options */\n    @Input() public specialPreprops: Array<number> = [];\n\n    public duration: number = 60;\n    /** List of available duration options */\n    public duration_options: Identity[];\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    public ngOnInit(): void {\n        this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        /* istanbul ignore else */\n        if (changes.max || changes.min || changes.step || changes.time) {\n            this.duration_options = this.generateDurationOptions(this.max, this.min, this.step);\n        }\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number): void {\n        this.duration = new_value;\n        /* istanbul ignore else */\n        if (this._onChange) {\n            this._onChange(+new_value);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.duration = value;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    private generateDurationOptions(max: number, min: number, step: number): Identity[] {\n        const blocks: Identity[] = [];\n        let time = min;\n        let date = this.time ? dayjs(this.time) : null;\n\n        // Add special case for 10min duration/prepropulation\n        for (const option of this.specialPreprops) {\n            blocks.push({\n                id: option,\n                name: date\n                    ? `${date.add(option, 'm').format('h:mm A')} (${formatDuration({\n                          hours: Math.floor(option / 60),\n                          minutes: option % 60,\n                      })})`\n                    : `${formatDuration({ hours: Math.floor(option / 60), minutes: option % 60 })}`,\n            });\n        }\n\n        while (time <= max) {\n            blocks.push({\n                id: time,\n                name: date\n                    ? `${date.add(time, 'm').format('h:mm A')} (${formatDuration({\n                          hours: Math.floor(time / 60),\n                          minutes: time % 60,\n                      })})`\n                    : `${formatDuration({ hours: Math.floor(time / 60), minutes: time % 60 })}`,\n            });\n            time += step;\n        }\n        return blocks;\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess } from '@user-interfaces/common';\nimport {\n    CalendarEvent,\n    generateEventForm,\n    saveEvent,\n} from '@user-interfaces/events';\nimport { Space } from '@user-interfaces/spaces';\nimport { CalendarService } from '@user-interfaces/calendar';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!loading\" mat-icon-button mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main [formGroup]=\"form\" class=\"p-4\">\n                <div class=\"flex flex-col\">\n                    <label>Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            formControlName=\"title\"\n                            placeholder=\"Booking Title\"\n                        />\n                        <mat-error>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>Space:</label>\n                    <div class=\"sm:mt-4 mb-4\">\n                        {{\n                            form.controls.resources?.value[0].display_name ||\n                                form.controls.resources?.value[0].name\n                        }}\n                    </div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.date\">\n                        <label>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">\n                            {{ form.controls.date?.value | date: 'medium' }}\n                        </div>\n                    </div>\n                    <div class=\"flex flex-col\" *ngIf=\"form.controls.duration\">\n                        <label>Duration:</label>\n                        <a-duration-field\n                            formControlName=\"duration\"\n                        ></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button mat-button (click)=\"save()\">Save</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div class=\"w-full h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            header {\n                max-width: calc(100vw + 100%);\n            }\n        `,\n    ],\n})\nexport class ExploreBookingModalComponent {\n    public booking: CalendarEvent;\n    public form: FormGroup;\n    public loading: string;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _calendars: CalendarService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.booking = new CalendarEvent({\n            attendees: [{ ...this._data.space, resource: true } as any],\n        });\n        this.form = generateEventForm(this.booking);\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        const on_error = (msg) => {\n            this.loading = '';\n            notifyError(msg);\n            this._dialog_ref.disableClose = false;\n        };\n        if (!this.form.valid) {\n            const list = [];\n            for (const key in this.form.controls) {\n                if (this.form.controls[key].invalid) {\n                    list.push(key);\n                }\n            }\n            return Promise.reject(\n                on_error(`Some form fields are not valid: [${list.join(', ')}]`)\n            );\n        }\n        this._dialog_ref.disableClose = true;\n        this.loading = 'Checking space availability...';\n        const spaces = await this._calendars\n            .availability({\n                system_ids: this.form.controls.resources.value\n                    ?.map((s) => s.id)\n                    .join(','),\n                period_start: Math.floor(this.form.value.date / 1000),\n                period_end:\n                    Math.floor(this.form.value.date / 1000) +\n                    this.form.value.duration * 60,\n            })\n            .toPromise()\n            .catch((e) => {\n                on_error(\n                    'Space is unavailble for the selected time and duration'\n                );\n                throw e;\n            });\n        if (spaces.length <= 0) {\n            return on_error(\n                'Space is unavailble for the selected time and duration'\n            );\n        }\n        this.loading = 'Creating booking...';\n        await saveEvent(new CalendarEvent(this.form.value))\n            .toPromise()\n            .catch((e) => {\n                on_error('Error creating booking.');\n                throw e;\n            });\n        notifySuccess(\n            `Successfully created booking in ${\n                this._data.space.display_name || this._data.space.name\n            }`\n        );\n        this._dialog_ref.close();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@yuion/svg-viewer';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService } from '@user-interfaces/common';\nimport {\n    BuildingLevel,\n    OrganisationService,\n} from '@user-interfaces/organisation';\nimport { SpacesService } from '@user-interfaces/spaces';\n\nexport interface MapOptions {\n    show_zones?: boolean;\n    show_devices?: boolean;\n    show_contacts?: boolean;\n    show_levels?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends BaseClass {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({});\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._spaces.list,\n    ]).pipe(\n        map(([level, spaces]) =>\n            spaces.filter((space) => space.zones.includes(level.id))\n        )\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(500),\n        map((details) => {\n            const [features, options] = details;\n            let list = [];\n            for (const key in features) {\n                switch (key) {\n                    case 'devices':\n                        options.show_zones && options.show_devices\n                            ? (list = list.concat(features[key]))\n                            : '';\n                        break;\n                    case 'contacts':\n                        options.show_contacts\n                            ? (list = list.concat(features[key]))\n                            : '';\n                        break;\n                    default:\n                        list = list.concat(features[key]);\n                }\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = this._actions.pipe(\n        debounceTime(500),\n        map((i) => Object.values(i).reduce((list, a) => list.concat(a), []))\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(500),\n        map((details) => {\n            const [labels, options] = details;\n            let list = [];\n            for (const key in labels) {\n                if (key !== 'zones' || options.show_zones) {\n                    list = list.concat(labels[key]);\n                }\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(500),\n        map((details) => {\n            const [styles, options] = details;\n            const style_mappings = Object.keys(styles).reduce(\n                (a, h) => ({ ...a, ...styles[h] }),\n                {}\n            );\n            if (!options.show_zones) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            style_mappings['text'] = { display: 'none' };\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'building',\n                this._org.active_building\n                    .pipe(filter((_) => !!_))\n                    .subscribe((bld) => {\n                        const level = this._level.getValue();\n                        const level_list = this._org.levelsForBuilding(bld);\n                        const has_level = level_list.find(\n                            (lvl) => level?.id === lvl.id\n                        );\n                        if (!has_level && level_list.length) {\n                            this.setLevel(level_list[0].id);\n                        }\n                        this.setOptions({\n                            show_devices:\n                                this._settings.get(\n                                    'app.explore.display_devices'\n                                ) !== false,\n                        });\n                    })\n            );\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) {\n            this._level.next(lvl);\n        }\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@yuion/svg-viewer';\n\nimport { BaseClass, HashMap, notifyError, SettingsService } from '@user-interfaces/common';\nimport { Space } from '@user-interfaces/spaces';\nimport { CalendarEvent } from '@user-interfaces/events';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends BaseClass implements OnDestroy {\n    private _spaces: Space[] = [];\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _bindings: any[] = [];\n    private _statuses: HashMap<string> = {};\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            this._state.spaces.subscribe((list) => {\n                this.clearBindings();\n                this._spaces = list;\n                this.bindToSpaces();\n            })\n        );\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.clearBindings();\n    }\n\n    public clearBindings() {\n        if (!this._spaces) return;\n        for (const space of this._spaces) {\n            this.unsub(`bookings-${space.id}`);\n            this.unsub(`status-${space.id}`);\n        }\n        this._bindings.forEach((b) => b.unbind());\n        this._bindings = [];\n        this._statuses = {};\n    }\n\n    public bindToSpaces() {\n        if (!this._spaces) return;\n        for (const space of this._spaces) {\n            let binding = getModule(space.id, 'Bookings').binding('bookings');\n            this.subscription(\n                `bookings-${space.id}`,\n                binding\n                    .listen()\n                    .subscribe((d) => this.handleBookingsChange(space, d))\n            );\n            binding.bind();\n            this._bindings.push(binding);\n            binding = getModule(space.id, 'Bookings').binding('status');\n            this.subscription(\n                `status-${space.id}`,\n                binding\n                    .listen()\n                    .subscribe((d) => this.handleStatusChange(space, d))\n            );\n            binding.bind();\n            this._bindings.push(binding);\n        }\n        this.updateActions();\n        this.updateHoverElements();\n    }\n\n    public bookSpace(space: Space) {\n        if (this._statuses[space.id] === 'busy') {\n            return notifyError(`${space.display_name || space.name} is unavailable at the current time`);\n        }\n        this._dialog.open(ExploreBookingModalComponent, {\n            data: { space }\n        });\n    }\n\n    private handleBookingsChange(space: Space, bookings: HashMap[]) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout('update_hover_els', () => this.updateHoverElements(), 100);\n    }\n\n    private handleStatusChange(space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus();\n                this.updateHoverElements();\n            },\n            100\n        );\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours =\n            this._settings.get('app.explore.colors') || {};\n        for (const space of this._spaces) {\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${this._statuses[space.id]}`] ||\n                    colours[`${this._statuses[space.id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[space.id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements() {\n        const features: ViewerFeature[] = [];\n        for (const space of this._spaces) {\n            features.push({\n                location: space.map_id,\n                hover: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space,\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions() {\n        const actions: ViewAction[] = [];\n        for (const space of this._spaces) {\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this._state.setActions('spaces', actions);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point } from '@yuion/svg-viewer';\n\nimport { BaseClass, HashMap, SettingsService } from '@user-interfaces/common';\nimport {\n    BuildingLevel,\n    OrganisationService,\n} from '@user-interfaces/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { first } from 'rxjs/operators';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\n@Injectable()\nexport class ExploreZonesService extends BaseClass {\n    private _level: BuildingLevel = null;\n    private _bindings: any[] = [];\n    private _statuses: HashMap<string> = {};\n    private _labels: HashMap<ViewerLabel> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        const zone_metadata = await Promise.all(this._org.levels.map(bld => showMetadata(bld.id, { name: 'map_regions' }).toPromise()));\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (areas) {\n                for (const area of areas) {\n                    this._capacity[area.id] = area.properties?.capacity || 100;\n                    this._location[area.id] = area.properties?.label_location || { x: .5, y: .5 };\n                }\n            }\n        }\n        this.subscription(\n            'spaces',\n            this._state.level.subscribe((level) => {\n                this.clearBindings();\n                this._level = level;\n                this.bindToZones();\n            })\n        );\n    }\n\n    public clearBindings() {\n        if (!this._level) return;\n        this.unsub('zones');\n        this._bindings.forEach(b => b.unbind());\n        this._bindings = [];\n        this._statuses = {};\n    }\n\n    public bindToZones() {\n        if (!this._level) return;\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this._level.parent_id\n        );\n        if (!building) return;\n        const system_id = this._org.organisation.bindings.area_management;\n        if (!system_id) return;\n        const binding = getModule(system_id, 'AreaManagement').binding(`${this._level.id}:areas`);\n        this.subscription(\n            `zones`,\n            binding.listen().subscribe((d) => this.parseData(d))\n        );\n        binding.bind();\n        this._bindings.push(binding);\n    }\n\n    public parseData(d) {\n        const value = d?.value || [];\n        const labels = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < .4 ? 'free' : filled < .75 ? 'pending' : 'busy';\n            this._labels[zone.area_id] = {\n                location: this._location[zone.area_id],\n                content: `${zone.count} ${zone.count === 1 ? 'Device' : 'Devices'}`\n            };\n            labels.push(this._labels[zone.area_id]);\n        }\n        this._state.setLabels('zones', labels);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours =\n            this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            if (!this._statuses.hasOwnProperty(zone_id)) continue;\n            style_map[`#${zone_id}`] = {\n                fill:\n                    colours[`zone-${this._statuses[zone_id]}`] ||\n                    colours[`${this._statuses[zone_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[zone_id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('zones', style_map);\n    }\n}\n","\nimport { BaseDataClass, HashMap } from '@user-interfaces/common'\n\nimport * as dayjs from 'dayjs';\n\n/** General purpose booking class */\nexport class Booking extends BaseDataClass {\n    /** User Id */\n    public readonly user_id: string;\n    /** User email */\n    public readonly user_email: string;\n    /** User name */\n    public readonly user_name: string;\n    /** Desk asset id */\n    public readonly asset_id: string;\n    /** Zones */\n    public readonly zones: string[];\n    /** Type of booking */\n    public readonly booking_type: 'desk' | null;\n    /** Start time of booking in ms */\n    public readonly date: number;\n    /** Duration of the event in minutes */\n    public readonly duration: number;\n    /** Whether it is an all day booking */\n    public readonly all_day: boolean;\n    /** Timezone of the booking */\n    public readonly timezone: string;\n    /** Title of the booking */\n    public readonly title: string;\n    /** Description */\n    public readonly description: string;\n    /** Whether user checked in */\n    public readonly checked_in: boolean;\n    /** Whether booking is rejected */\n    public readonly rejected: boolean;\n    /** Whether booking is approved */\n    public readonly approved: boolean;\n    /** Id of the approver */\n    public readonly approver_id: string;\n    /** Email of the approver */\n    public readonly approver_email: string;\n    /** Name of the approver */\n    public readonly approver_name: string;\n    /** Metadata */\n    public readonly extension_data: HashMap<any>;\n    /** Default type */\n    public readonly type: string;\n    /** Default type */\n    public readonly access: boolean;\n    /** Status of the booking */\n    public readonly status: 'declined' | 'approved' | 'tentative';\n\n    constructor(data: Partial<Booking> = {}) {\n        super(data);\n        this.asset_id = data.asset_id;\n        this.zones = data.zones;\n        this.booking_type = data.booking_type;\n        this.type = data.type || 'booking';\n        const time = (data as any).booking_start * 1000 || data.date;\n        const start = time\n            ? dayjs(time).valueOf()\n            : dayjs()\n                  .minute(Math.ceil(dayjs().minute() / 5) * 5)\n                  .startOf('m')\n                  .valueOf();\n        this.date = start;\n        this.duration = data.duration || dayjs((data as any).booking_end * 1000).diff(start, 'm') || 60;\n        this.timezone = data.timezone;\n        this.user_email = data.user_email;\n        this.user_id = data.user_id;\n        this.user_name = data.user_name;\n        this.title = data.title || 'Desk booking';\n        this.description = data.description;\n        this.checked_in = data.checked_in;\n        this.rejected = !!data.rejected;\n        this.approved = !!data.approved;\n        this.approver_id = data.approver_id;\n        this.approver_email = data.approver_email;\n        this.approver_name = data.approver_name;\n        this.extension_data = data.extension_data;\n        this.access = !!data.extension_data?.access;\n        this.all_day = data.all_day || true;\n        this.status = this.rejected ? 'declined' : this.approved ? 'approved' : 'tentative';\n    }\n\n    public toJSON(this: Booking): HashMap<any> {\n        const data = super.toJSON();\n        data.booking_start = dayjs(this.date).unix();\n        if (this.all_day) {\n            data.booking_end = dayjs(this.date).endOf('d').unix();\n        } else {\n            data.booking_end = dayjs(this.date).add(this.duration, 'm').unix();\n        }\n        if (!data.timezone) {\n            data.timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        }\n        if (!this.id) {\n            delete data.id;\n        }\n        delete data.date;\n        delete data.duration;\n        delete data.email;\n        delete data.name;\n        return data;\n    }\n\n    public get location(): string {\n        return this.description;\n    }\n\n    public get is_today(): boolean {\n        return dayjs(this.date).isSame(dayjs(), 'd');\n    }\n\n    /** Whether booking is done */\n    public get is_done(): boolean {\n        const start = dayjs(this.date);\n        const end = this.all_day ? dayjs(this.date).endOf('d') : start.add(this.duration, 'm');\n        return start.isAfter(end, 'm');\n    }\n}\n","import {\n    Component,\n    OnInit,\n    forwardRef,\n    Input,\n    Injectable,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport {\n    DateAdapter,\n    MatDateFormats,\n    MAT_DATE_FORMATS,\n    NativeDateAdapter,\n} from '@angular/material/core';\nimport { BaseClass } from '@user-interfaces/common';\nimport { format } from 'date-fns';\n\nimport * as dayjs from 'dayjs';\n\n@Injectable()\nclass FieldDateAdapter extends NativeDateAdapter {\n    format(date: Date, displayFormat: Object): string {\n        if (displayFormat === 'input') {\n            return format(date, 'MMMM d, yyyy');\n        }\n        return format(date, 'MMM yyyy');\n    }\n}\nconst FIELD_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'input',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'a-date-field',\n    template: `\n        <mat-form-field appearance=\"outline\" overlay (click)=\"picker.open()\">\n            <input\n                matInput\n                [ngModel]=\"date\"\n                [disabled]=\"disabled\"\n                [min]=\"from\"\n                [max]=\"until\"\n                (ngModelChange)=\"setValue($event)\"\n                [matDatepicker]=\"picker\"\n            />\n            <mat-datepicker-toggle\n                matSuffix\n                [for]=\"picker\"\n            ></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                width: 100%;\n            }\n        `,\n    ],\n    providers: [\n        { provide: DateAdapter, useClass: FieldDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: FIELD_DATE_FORMATS },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class DateFieldComponent\n    extends BaseClass\n    implements OnInit, ControlValueAccessor {\n    /** Earliest date available the user is allowed to pick */\n    @Input('from') public _from: number = dayjs().valueOf();\n    /** Latest date available the user is allowed to pick */\n    @Input('to') public _to: number;\n    /** Position of the tooltip */\n    @Input() public position: 'right' | 'left' = 'right';\n    /** Offset of the tooltip */\n    @Input() public offset: 'top' | 'bottom' = 'bottom';\n    /** Whether form control is disabled */\n    @Input() public disabled: boolean;\n    /** Whether to show the calendar tooltip */\n    public show_tooltip: boolean;\n    /** Currently selected date */\n    public date: string;\n\n    /** Form control on change handler */\n    private _onChange: (_: number) => void;\n    /** Form control on touch handler */\n    private _onTouch: (_: number) => void;\n\n    /** First allowed date on the calendar */\n    public get from(): Date {\n        return new Date(this._from) || dayjs().startOf('d').toDate();\n    }\n    /** Current date value */\n    public get until(): Date {\n        return new Date(this._to) || dayjs().endOf('d').add(1, 'y').toDate();\n    }\n    /** Display value for the current date */\n    public get date_string(): string {\n        return dayjs(this.date).format('DD MMM YYYY');\n    }\n\n    public ngOnInit() {\n        this.date = new Date().toISOString();\n    }\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: number) {\n        // Keep hours and minutes of the old date\n        const old_date = dayjs(this.date);\n        let new_date = dayjs(new_value)\n            .hour(old_date.hour())\n            .minute(old_date.minute())\n            .startOf('m')\n            .valueOf();\n        // Check that new date is before from\n        if (new_date < this.from.valueOf()) {\n            new_date = this.from.valueOf();\n        }\n        this.date = new Date(new_date).toISOString();\n        if (this._onChange) {\n            this._onChange(new_date);\n        }\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: number) {\n        this.date = new Date(value).toISOString();\n        this.show_tooltip = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function that is called when the control's value changes in the UI.\n     * @param fn The callback function to register\n     */\n    public registerOnChange(fn: (_: number) => void): void {\n        this._onChange = fn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Registers a callback function is called by the forms API on initialization to update the form model on blur.\n     * @param fn The callback function to register\n     */\n    public registerOnTouched(fn: (_: number) => void): void {\n        this._onTouch = fn;\n    }\n\n    public setDisabledState(disabled: boolean) {\n        this.disabled = disabled;\n    }\n}\n","import { NgModule, Type } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\nimport { ComponentsModule } from '@user-interfaces/components';\n\nimport { ActionFieldComponent } from './action-field.component';\nimport { CounterComponent } from './counter.component';\nimport { DateFieldComponent } from './date-field.component';\nimport { DurationFieldComponent } from './duration-field.component';\nimport { TimeFieldComponent } from './time-field.component';\nimport { UserListFieldComponent } from './user-list-field.component';\nimport { UserSearchFieldComponent } from './user-search-field.component';\nimport { ItemListFieldComponent } from './item-list-field.component';\n\nexport * from './action-field.component';\nexport * from './counter.component';\nexport * from './date-field.component';\nexport * from './duration-field.component';\nexport * from './time-field.component';\nexport * from './user-list-field.component';\nexport * from './user-search-field.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ActionFieldComponent,\n    CounterComponent,\n    DateFieldComponent,\n    DurationFieldComponent,\n    TimeFieldComponent,\n    UserListFieldComponent,\n    UserSearchFieldComponent,\n    ItemListFieldComponent\n];\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatAutocompleteModule,\n        ComponentsModule\n    ],\n    exports: [...COMPONENTS],\n})\nexport class FormFieldsModule {}\n","import { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent } from '@user-interfaces/common';\nimport { BuildingLevel, Desk } from '@user-interfaces/organisation';\n\nexport interface DeskConfirmModalData {\n    desks: Desk[];\n    date: number;\n    reason: string;\n    level: BuildingLevel;\n    can_set_date: boolean;\n}\n\n@Component({\n    selector: 'desk-flow-confirm-modal-component',\n    template: `\n        <header>\n            <h2>Confirm Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button mat-icon-button mat-dialog-close *ngIf=\"!loading\">\n                <i class=\"material-icons\">close</i>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main class=\"p-4\">\n                <div class=\"mb-4\">\n                    <label>Date</label>\n                    <div *ngIf=\"!can_set_date\">{{ date | date: 'mediumDate' }}</div>\n                    <a-date-field *ngIf=\"can_set_date\" [(ngModel)]=\"date\"></a-date-field>\n                </div>\n                <div class=\"mb-4\">\n                    <label>Reason</label>\n                    <div>{{ reason || '~No set reason~' }}</div>\n                </div>\n                <p>\n                    Your desk{{ desks.length === 1 ? '' : 's' }} will be {{ desk_list }} on\n                    {{ level?.display_name || level?.name }}\n                </p>\n            </main>\n            <footer class=\"flex items-center justify-center p-2\">\n                <button mat-button (click)=\"confirm()\">Confirm</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <main class=\"flex flex-col p-12 items-center justify-center\">\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n        `,\n    ],\n})\nexport class DeskConfirmModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public readonly desks = this._data.desks || [];\n\n    public date = this._data.date;\n\n    public can_set_date: boolean;\n\n    public readonly reason = this._data.reason;\n\n    public readonly level = this._data.level;\n\n    public loading: string;\n\n    public get desk_list() {\n        return this.desks.map(_ => _.name).join(', ');\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: DeskConfirmModalData\n    ) {\n    }\n\n    public ngOnInit() {\n        this.can_set_date = this._data.can_set_date;\n    }\n\n    public confirm() {\n        this.loading = 'Requesting desk booking...';\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { DialogEvent, notifyError } from '@user-interfaces/common';\n\n@Component({\n    selector: 'desk-flow-question',\n    template: `\n        <div *ngIf=\"!failure; else fail_state\" class=\"relative\">\n            <h2 class=\"p-4 text-xl\">COVID-19 Questionnaire</h2>\n            <main class=\"p-4\" [formGroup]=\"form\">\n                <div class=\"flex flex-col mb-4\">\n                    <label>\n                        Have you travelled overseas within the last 14\n                        days?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"travelled\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col mb-4\">\n                    <label>\n                        Are you unwell or experiencing any cold or flu-like\n                        symptoms?<span>*</span>\n                    </label>\n                    <mat-radio-group formControlName=\"unwell\" class=\"space-x-2\">\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>\n                        Have you had contact with anyone with suspected\n                        COVID-19?<span>*</span>\n                    </label>\n                    <mat-radio-group\n                        formControlName=\"contact\"\n                        class=\"space-x-2\"\n                    >\n                        <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                        <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n            </main>\n            <footer class=\"flex justify-center items-center p-2\">\n                <button mat-button (click)=\"submit()\">Submit</button>\n            </footer>\n            <button close mat-icon-button mat-dialog-close>\n                <i class=\"material-icons\">close</i>\n            </button>\n        </div>\n        <ng-template #fail_state>\n            <main class=\"pt-8 relative\">\n                <p class=\"p-4\">\n                    Your request to work from the office has been rejected based\n                    on your response to the compulsory Covid-19 questions.\n                    Please feel free to submit a new request when circumstances\n                    change in a way that changes your answer to the questions.\n                </p>\n                <button close mat-icon-button mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </main>\n        </ng-template>\n    `,\n    styles: [\n        `\n            main {\n                width: 24rem;\n                max-width: calc(100vw - 4.5rem);\n            }\n\n            [close] {\n                position: absolute;\n                top: 0.5rem;\n                right: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class DeskQuestionsModalComponent implements OnInit {\n    @Output() public event = new EventEmitter<DialogEvent>();\n\n    public form: FormGroup;\n    public failure: boolean;\n\n    public ngOnInit() {\n        this.form = new FormGroup({\n            travelled: new FormControl('', [Validators.required]),\n            unwell: new FormControl('', [Validators.required]),\n            contact: new FormControl('', [Validators.required]),\n        });\n    }\n\n    public submit() {\n        this.form.markAllAsTouched();\n        if (!this.form.valid) {\n            notifyError('All the questions must be answered');\n            return;\n        } else if (\n            Object.keys(this.form.value).find(\n                (key) =>\n                    this.form.value[key] === true ||\n                    this.form.value[key] === 'true'\n            )\n        ) {\n            this.failure = true;\n            return;\n        }\n        this.event.emit({ reason: 'done' });\n    }\n}\n","import { del, get, patch, post, put } from \"@placeos/ts-client\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nimport { toQueryString } from \"libs/common/src/lib/api\";\nimport { Booking } from \"./booking.class\";\n\nexport interface BookingsQueryParams {\n    /** Comma seperated list of zone ids to check availability */\n    zones?: string;\n    /** User ID to filter bookings */\n    user?: string;\n    /** Email address to filter bookings */\n    email?: string;\n    /** Epoch in seconds for the start of the availability period */\n    period_start: number;\n    /** Epoch in seconds for the end of the availability period */\n    period_end: number;\n    /** Category of booking */\n    type: string;\n}\n\nconst BOOKINGS_ENDPOINT = `/api/staff/v1/bookings`;\n\n/**\n * List bookings\n * @param q Parameters to pass to the API request\n */\nexport function queryBookings(q: BookingsQueryParams): Observable<Booking[]> {\n    const query = toQueryString(q);\n    return get(`${BOOKINGS_ENDPOINT}${query ? '?' + query : ''}`).pipe(\n        map((list) => list.map((item) => new Booking(item)))\n    );\n}\n\n/**\n * Get booking details\n * @param id ID of the booking to grab\n * @param q Parameters to pass to the API request\n */\nexport function showBooking(id: string) {\n    return get(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Create new booking and add it to the database\n * @param data New booking fields\n */\nexport function createBooking(data: Partial<Booking>) {\n    return post(`${BOOKINGS_ENDPOINT}`, data).pipe(\n        map((item) => new Booking(item))\n    );\n}\n\n/**\n * Update an existing booking\n * @param id ID of the booking to update\n * @param data New values for booking fields\n * @param method HTTP verb to use with API request\n */\nexport function updateBooking(\n    id: string,\n    data: Partial<Booking>,\n    method: 'put' | 'patch' = 'patch'\n) {\n    return (method === 'patch' ? patch : put)(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`,\n        data\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Save changes to or create a booking\n * @param data State of the booking\n * @param q Parameters to pass to the API request\n */\nexport const saveBooking = (\n    data: Partial<Booking>,\n) => (data.id ? updateBooking(data.id, data) : createBooking(data));\n\n/**\n * Remove booking from the database\n * @param id ID of the booking to remove\n * @param q Parameters to pass to the API request\n */\nexport function removeBooking(id: string) {\n    return del(`${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}`, {\n        response_type: 'void',\n    });\n}\n\n/**\n * Set the approval state of the booking to approved\n * @param id ID of the booking to approve\n * @param system_id Associated system to approve\n */\nexport function approveBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/approve`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the approval state of the booking to rejected\n * @param id ID of the booking to reject\n * @param system_id Associated system to reject\n */\nexport function rejectBooking(id: string) {\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/reject`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n\n/**\n * Set the checkin state of a booking\n * @param id ID of the booking to grab\n * @param state New checkin state of the booking\n */\nexport function checkinBooking(id: string, state: boolean) {\n    const query = toQueryString({ state });\n    return post(\n        `${BOOKINGS_ENDPOINT}/${encodeURIComponent(id)}/check_in?${query}`,\n        ''\n    ).pipe(map((item) => new Booking(item)));\n}\n","import getTime from '../getTime/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getUnixTime\n * @category Timestamp Helpers\n * @summary Get the seconds timestamp of the given date.\n *\n * @description\n * Get the seconds timestamp of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the timestamp\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05 CET:\n * var result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 1330512305\n */\n\nexport default function getUnixTime(dirtyDate) {\n  requiredArgs(1, arguments);\n  return Math.floor(getTime(dirtyDate) / 1000);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport {\n    currentUser,\n    DialogEvent,\n    notifyError,\n    notifySuccess,\n} from '@user-interfaces/common';\nimport { Desk, OrganisationService } from '@user-interfaces/organisation';\nimport { StaffUser, User } from '@user-interfaces/users';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\nimport { first, map } from 'rxjs/operators';\n\nimport { queryBookings, saveBooking } from './bookings.fn';\nimport { DeskConfirmModalComponent } from './desk-confirm-modal.component';\nimport { DeskQuestionsModalComponent } from './desk-questions-modal.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DesksService {\n    public can_set_date: boolean = true;\n    public error_on_host: boolean = true;\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public async bookDesk({\n        desks,\n        host,\n        reason,\n        attendees,\n        date,\n    }: {\n        desks: Desk[];\n        host?: StaffUser;\n        attendees?: User[];\n        reason?: string;\n        date?: Date;\n    }) {\n        if (this.error_on_host && !host) {\n            return notifyError('You need to select a host to book a desk.');\n        }\n        host = host || currentUser();\n        reason = reason || '';\n        const level = this._org.levelWithID(\n            desks[0].zone instanceof Array ? desks[0].zone : [desks[0].zone?.id]\n        );\n        let ref: MatDialogRef<any> = this._dialog.open(\n            DeskQuestionsModalComponent\n        );\n        let success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        ref.close();\n        ref = this._dialog.open(DeskConfirmModalComponent, {\n            data: {\n                desks,\n                date: date ? new Date(date) : new Date(),\n                reason,\n                level,\n                can_set_date: this.can_set_date,\n            },\n        });\n        success = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_: DialogEvent) => _.reason === 'done'))\n                .toPromise(),\n            ref\n                .afterClosed()\n                .pipe(map((_) => null))\n                .toPromise(),\n        ]);\n        if (!success) return;\n        date = ref.componentInstance.date;\n        ref.componentInstance.loading =\n            'Checking for existing desk bookings...';\n        const bookings = await queryBookings({\n            type: 'desk',\n            period_start: getUnixTime(startOfDay(date || new Date())),\n            period_end: getUnixTime(endOfDay(date || new Date())),\n        }).toPromise();\n        const desk_list = bookings.filter(\n            (d) => d.user_email.toLowerCase() === host.email.toLowerCase()\n        );\n        if (desk_list?.length) {\n            ref.close();\n            return notifyError(\n                'You currently already have a desk booked for the selected date.'\n            );\n        }\n        ref.componentInstance.loading = 'Booking desk...';\n        const users = [host, ...attendees];\n        await Promise.all([\n            desks.map((desk, idx) =>\n                this.makeDeskBooking(\n                    desk,\n                    host,\n                    date.valueOf() || new Date().valueOf(),\n                    reason,\n                    users[idx]\n                )\n            ),\n        ]);\n        notifySuccess('Successfully booked desk');\n        ref.close();\n        return true;\n    }\n\n    private async makeDeskBooking(\n        desk: Desk,\n        host: StaffUser,\n        date: number,\n        reason: string,\n        for_user: User = null\n    ) {\n        const location = `${desk.zone?.name}-${desk.id}`;\n        const level = this._org.levelWithID(\n            desk.zone instanceof Array ? desk.zone : [desk.zone?.id]\n        );\n        const zones = desk.zone?.id\n            ? [desk.zone?.id, level?.parent_id]\n            : [level?.parent_id];\n        const booking_data = {\n            booking_start: getUnixTime(startOfDay(date)),\n            user_id: host.id,\n            user_name: host.name,\n            user_email: host.email,\n            booking_end: Math.floor(endOfDay(date).valueOf() / 1000),\n            asset_id: desk.id,\n            title: reason,\n            description: location,\n            zones,\n            booking_type: 'desk',\n            extension_data: {\n                groups: desk.groups,\n                for_user: for_user?.email\n            },\n        };\n        return saveBooking(booking_data as any).toPromise();\n    }\n}\n","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import assign from '../assign/index.js';\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport toDate from '../toDate/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n    Component,\n    ElementRef,\n    HostListener,\n    Inject,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { MAP_FEATURE_DATA } from '@user-interfaces/components';\nimport { differenceInMinutes, formatDistanceToNow } from 'date-fns';\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n    user?: any;\n    bg_color?: string;\n}\n\n@Component({\n    selector: '[explore-device-info]',\n    template: `\n        <div\n            name=\"radius\"\n            (mouseenter)=\"loadUser()\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-4 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            name=\"dot\"\n            #dot\n            class=\"h-2 w-2 absolute center rounded-full pointer-events-auto\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n\n        <ng-template cdk-portal>\n            <div\n                name=\"device-info\"\n                class=\"rounded bg-white p-4 top-0 left-0 shadow pointer-events-none\"\n                (mouseleave)=\"close()\"\n            >\n                <div class=\"arrow\"></div>\n                <div class=\"details\">\n                    <p><label>MAC:</label> {{ mac }}</p>\n                    <p><label>Accuracy:</label> {{ variance }}m</p>\n                    <p><label>Last Seen:</label> {{ last_seen }}</p>\n                    <p *ngIf=\"manufacturer\">\n                        <label>Manufacturer:</label> {{ manufacturer }}\n                    </p>\n                    <p *ngIf=\"os\"><label>OS:</label> {{ os }}</p>\n                    <p *ngIf=\"ssid\"><label>SSID:</label> {{ ssid }}</p>\n                    <p *ngIf=\"username\">\n                        <label>Username:</label>\n                        {{ user?.name || user?.username || username }}\n                    </p>\n                    <p *ngIf=\"user\"><label>Type:</label> {{ user.type }}</p>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.35);\n                background-color: #616161;\n            }\n\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n\n            [name='device-info'] {\n                width: 16rem;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** User details associated with device */\n    public readonly user = this._details.user;\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance.toFixed(2);\n    /** Diameter of the radius circle */\n    public readonly diameter = this._details.variance * 100;\n    /** Background color for the dot */\n    public readonly bg_color = this._details.bg_color || this.distance_color;\n\n    public overlay_ref: OverlayRef = null;\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow(new Date(this._details.last_seen * 1000), {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'end' | 'start';\n    public get distance() {\n        return Math.abs(\n            differenceInMinutes(this._details.last_seen * 1000, new Date())\n        );\n    }\n\n    public get distance_color() {\n        return this.distance < 10\n            ? '#43a047'\n            : this.distance < 20\n            ? '#ffb300'\n            : '#e53935';\n    }\n\n    @HostListener('mouseenter') public onEnter = () => this.loadUser();\n    @HostListener('mouseleave') public onLeave = () => this.close();\n    @HostListener('click') public onClick = () => this.loadUser();\n    @HostListener('touchend') public onTouch = () => this.loadUser();\n\n    @ViewChild(CdkPortal) private _portal: CdkPortal;\n    @ViewChild('dot') private _dot: ElementRef<HTMLDivElement>;\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _element: ElementRef<HTMLElement>,\n        private _overlay: Overlay\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'end' : 'start';\n        }, 200);\n    }\n\n    public async loadUser() {\n        this.open();\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (mod) {\n            this.username = 'Loading...';\n            const details = await mod\n                .execute('check_ownership_of', [this.mac])\n                .catch((_) => null);\n            this.username =\n                details && details.assigned_to ? details.assigned_to : '';\n        }\n    }\n\n    public open() {\n        if (this.overlay_ref) this.close();\n        if (!this._portal) return;\n        this.overlay_ref = this._overlay.create({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._dot)\n                .withPositions([\n                    {\n                        originX: this.x_pos === 'start' ? 'end' : 'start',\n                        originY: this.y_pos === 'top' ? 'bottom' : 'top',\n                        overlayX: this.x_pos || 'end',\n                        overlayY: this.y_pos || 'bottom',\n                    },\n                ]),\n        });\n        this.overlay_ref.attach(this._portal);\n    }\n\n    public close() {\n        if (this.overlay_ref) {\n            this.overlay_ref.dispose();\n            this.overlay_ref = null;\n        }\n    }\n}\n","import distanceInWords from '../formatDistance/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *   ```\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), dirtyOptions);\n}","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\n\nimport { MAP_FEATURE_DATA } from '@user-interfaces/components';\n\nexport interface SpaceInfoData {\n    map_id: string;\n    user: string;\n    start?: number;\n    end?: number;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            name=\"space-info\"\n            [id]=\"map_id\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <h4 class=\"m-0 font-medium\">{{ map_id }}</h4>\n                <p class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                <p class=\"mt-1 text-sm\" *ngIf=\"start\">\n                    {{ start | date: 'shortTime' }} &ndash;\n                    {{ end | date: 'shortTime' }}\n                </p>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly map_id = this._details.map_id;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\n\nimport { BaseClass, HashMap, SettingsService } from '@user-interfaces/common';\n\nimport { DesksService, queryBookings } from '@user-interfaces/bookings';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport {\n    BuildingLevel,\n    Desk,\n    OrganisationService,\n} from '@user-interfaces/organisation';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { catchError, first, map, switchMap } from 'rxjs/operators';\nimport { StaffUser } from '@user-interfaces/users';\nimport { endOfDay, getUnixTime, startOfDay } from 'date-fns';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends BaseClass implements OnDestroy {\n    private _level: BuildingLevel = null;\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _desks = new BehaviorSubject<string[]>([]);\n    private _reserved = new BehaviorSubject<string[]>([]);\n    private _statuses: HashMap<string> = {};\n    private _bindings: any[] = [];\n    private _stats = new BehaviorSubject<DesksStats>({\n        free: 0,\n        occupied: 0,\n        total: 0,\n    });\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _desk_bookings = combineLatest([\n        this._state.level,\n        this._poll,\n    ]).pipe(\n        switchMap(([lvl, _]) =>\n            queryBookings({\n                period_start: getUnixTime(startOfDay(new Date())),\n                period_end: getUnixTime(endOfDay(new Date())),\n                type: 'desk',\n                zones: lvl.id,\n            })\n        )\n    );\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, { name: 'desks' }).pipe(\n                map((i) => i.details.map((j) => new Desk({ ...j, zone: lvl })))\n            )\n        ),\n        catchError((_) => [])\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _desks_service: DesksService\n    ) {\n        super();\n        this.ngOnInit();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking: this._settings.get('app.desks.enabled') !== false,\n        });\n        this.subscription(\n            'spaces',\n            this._state.level.subscribe((level) => {\n                this.clearBindings();\n                this._level = level;\n                this.bindToDesks();\n            })\n        );\n        this.subscription(\n            'changes',\n            combineLatest([\n                this.desk_list,\n                this._in_use,\n                this._reserved,\n                this._options,\n            ]).subscribe(([desks, in_use, reserved]) => {\n                this._statuses = {};\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const is_reserved = reserved.some((i) => id === i);\n                    this._statuses[id] = bookable\n                        ? !is_used\n                            ? 'free'\n                            : is_reserved\n                            ? 'reserved'\n                            : 'busy'\n                        : 'not-bookable';\n                }\n                this.processDesks(desks);\n                this.timeout('update', () => this.updateStatus(), 100);\n            })\n        );\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n        this.subscription(\n            'desks_in_use_bookings',\n            this._desk_bookings.subscribe((_) =>\n                this._in_use.next(_.map((i) => i.asset_id))\n            )\n        );\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.clearBindings();\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(new Date().valueOf()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public clearBindings() {\n        const bindings = ['desks_in_use', 'desk_list'];\n        for (const id of bindings) {\n            this.unsub(id);\n        }\n        this._bindings.forEach((b) => b.unbind());\n        this._bindings = [];\n        this._statuses = {};\n    }\n\n    public bindToDesks() {\n        if (!this._level) return;\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this._level.parent_id\n        );\n        if (!building) return;\n        const system_id =\n            this._org.building.bindings.area_management ||\n            this._org.organisation.bindings.area_management;\n        if (!system_id) {\n            this.startPolling();\n            return;\n        }\n        let binding = getModule(system_id, 'AreaManagement').binding(\n            this._level.id\n        );\n        this.subscription(\n            `desks_in_use`,\n            binding.listen().subscribe((d) => {\n                const devices = (d?.value || []).filter(\n                    (v) => v.location !== 'desk'\n                );\n                const desks = (d?.value || []).filter(\n                    (v) => v.location === 'desk'\n                );\n                this._in_use.next(desks.map((v) => v.map_id));\n                this._reserved.next(\n                    desks.filter((v) => !v.at_location).map((v) => v.map_id)\n                );\n                this.processDevices(devices, system_id);\n            })\n        );\n        binding.bind();\n        this._bindings.push(binding);\n        binding = getModule(system_id, 'AreaManagement').binding(\n            `${this._level.id}:desk_ids`\n        );\n        this.subscription(\n            `desks_list`,\n            binding.listen().subscribe((d) => this._desks.next(d || []))\n        );\n        binding.bind();\n        this._bindings.push(binding);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses.hasOwnProperty(desk_id)) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: HashMap[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                data: { ...device, system: system_id },\n            });\n        }\n        list.sort((a, b) => {\n            const dist_a =\n                1 - Math.sqrt(Math.pow(a.x - 0.5, 2) + Math.pow(a.x - 0.5, 2));\n            const dist_b =\n                1 - Math.sqrt(Math.pow(b.x - 0.5, 2) + Math.pow(b.x - 0.5, 2));\n            return dist_a - dist_b;\n        });\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: HashMap[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                hover: true,\n                data: {\n                    map_id: desk.name,\n                    status: this._statuses[desk.map_id],\n                },\n            });\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: () =>\n                    this._desks_service.bookDesk({\n                        desks: [desk as any],\n                        host: options.host,\n                        date: options.date as any,\n                    }),\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: () =>\n                    this._desks_service.bookDesk({\n                        desks: [desk as any],\n                        host: options.host,\n                        date: options.date as any,\n                    }),\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button mat-icon-button class=\"bg-white\" (click)=\"zoomIn()\">\n            <app-icon>add</app-icon>\n        </button>\n        <button mat-icon-button class=\"bg-white\" (click)=\"zoomOut()\">\n            <app-icon>remove</app-icon>\n        </button>\n        <button mat-icon-button class=\"bg-white\" (click)=\"reset()\">\n            <app-icon>autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                padding: .5rem;\n            }\n\n            button {\n                border: 1px solid #ccc;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () => this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { OrganisationService } from '@user-interfaces/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2\">\n            <mat-form-field\n                overlay\n                class=\"flex-1\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                class=\"flex-1\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 0.5rem;\n            }\n\n            mat-form-field {\n                min-width: 10rem;\n            }\n\n            mat-form-field[has-bld=\"true\"] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent {\n    /** List of available buildings */\n    public readonly buildings = this._org.building_list;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => this._state.setLevel(lvl.id);\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService\n    ) {}\n}\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n        ɵngcc0.ɵɵviewQuery(_c1, 1);\n        ɵngcc0.ɵɵviewQuery(_c2, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); };\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵfac = function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); };\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { getModule } from '@placeos/ts-client';\nimport { first } from 'rxjs/operators';\n\nimport {\n    BaseClass,\n    notifyError,\n    SettingsService,\n} from '@user-interfaces/common';\nimport { Space, SpacesService } from '@user-interfaces/spaces';\nimport { MapLocation, showStaff, User } from '@user-interfaces/users';\nimport {\n    MapPinComponent,\n    MapRadiusComponent,\n} from '@user-interfaces/components';\nimport { OrganisationService } from '@user-interfaces/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async).zoom\"\n            [center]=\"(positions | async).center\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-0 right-0\"\n        ></explore-zoom-controls>\n        <explore-map-controls\n            class=\"absolute top-0 left-0\"\n        ></explore-map-controls>\n        <!-- <explore-search class=\"absolute top-0 right-0\"></explore-search> -->\n        <div\n            name=\"zones\"\n            class=\"p-2 bg-white border border-gray-400 absolute left-0 m-2 rounded flex items-center\"\n        >\n            Zones\n            <mat-slide-toggle\n                class=\"ml-2\"\n                [ngModel]=\"(options | async)?.show_zones\"\n                (ngModelChange)=\"setOptions({ show_zones: $event })\"\n            ></mat-slide-toggle>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n\n            [name='zones'] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [ExploreSpacesService, ExploreDesksService, ExploreZonesService],\n})\nexport class ExploreMapViewComponent extends BaseClass implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _route: ActivatedRoute,\n        private _spaces: SpacesService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                this._state.setFeatures('_located', []);\n                if (params.has('space')) {\n                    const space = this._spaces.find(params.get('space'));\n                    if (!space) return;\n                    this.locateSpace(space);\n                } else if (params.has('user')) {\n                    let user = this._settings.value('last_search');\n                    if (!user || params.get('user') !== user.email) {\n                        user = null;\n                        user = await showStaff(params.get('user')).toPromise();\n                    }\n                    if (!user)\n                        return notifyError(\n                            `Unable to user details for ${params.get('user')}`\n                        );\n                    this.locateUser(user);\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private locateSpace(space: Space) {\n        this._state.setLevel(this._org.levelWithID(space.zones).id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n\n    private async locateUser(user: User) {\n        let locate_details: any = this._org.organisation.bindings\n            .location_services;\n        if (!locate_details) return;\n        if (typeof locate_details === 'string') {\n            locate_details = {\n                system_id: locate_details,\n                module: 'LocationServices',\n            };\n        }\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [user.email, user.id])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        if (!locations?.length) {\n            return notifyError(`Unable to locate ${user.name}`);\n        }\n        this._state.setLevel(this._org.levelWithID([locations[0]?.level]).id);\n        const feature: any = {\n            location: locations[0].position,\n            content:\n                locations[0].type === 'wireless'\n                    ? MapRadiusComponent\n                    : MapPinComponent,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance,\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","<div class=\"footer-legend\">\n    <div class=\"tag\" (click)=\"show = !show\">\n        <button mat-button class=\"content\">\n            <app-icon [icon]=\"{ class: 'material-icons', content: 'keyboard_arrow_up' }\"></app-icon>\n        </button>\n    </div>\n    <div class=\"header\">\n        <div class=\"text\">Keys</div>\n    </div>\n    <div class=\"colour-legend\">\n        <div class=\"colour\" *ngFor=\"let item of colours\" [class.dark]=\"item.dark\" [style.background-color]=\"item.colour\">\n            {{ item.name }}\n        </div>\n    </div>\n    <div class=\"icon-legend\" [class.show]=\"show\">\n        <div class=\"icon\" *ngFor=\"let item of icon_list\">\n            <app-icon [icon]=\"item.icon\"></app-icon>\n            <div class=\"text\">{{ item.name }}</div>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { Identity } from '@user-interfaces/common';\n\n@Component({\n  selector: 'a-footer-legend',\n  templateUrl: './footer-legend.component.html',\n  styleUrls: ['./footer-legend.component.scss']\n})\nexport class FooterLegendComponent {\n    /** Whether icon legend should be shown */\n    public show: boolean;\n    /** List of colour legend items */\n    public readonly colours: readonly Identity[] = [\n        { id: 'in-use', name: 'In Use', colour: '#C52A1A', dark: true },\n        { id: 'available', name: 'Available', colour: '#22992E', dark: true },\n        { id: 'not-bookable', name: 'Not Bookable', colour: '#7D7D7D', dark: true },\n        { id: 'collab', name: 'Collaborative', colour: '#FED769' },\n        { id: 'focus', name: 'Focus', colour: '#F5A478' }\n    ];\n    /** List of icon legend items */\n    public readonly icon_list: readonly Identity[] = [\n        { id: '', name: 'Lifts Up/Down', icon: { type: 'img', src: 'assets/img/lift.svg' } },\n        { id: '', name: 'Fire Extinguisher', icon: { type: 'img', src: 'assets/img/fireExt.svg' } },\n        { id: '', name: 'First Aid & AED', icon: { type: 'img', src: 'assets/img/aid.svg' } },\n        { id: '', name: 'Cafe/Service', icon: { type: 'img', src: 'assets/img/Cafe.svg' } },\n        { id: '', name: 'Mail/Noticeboard', icon: { type: 'img', src: 'assets/img/mail.svg' } },\n        { id: '', name: 'Restrooms M/F', icon: { type: 'img', src: 'assets/img/Restrooms.svg' } },\n        { id: '', name: 'Map Kiosk', icon: { type: 'img', src: 'assets/img/kiosk.svg' } },\n        { id: '', name: 'Screen', icon: { type: 'img', src: 'assets/img/Screen.svg' } },\n        { id: '', name: 'Projector', icon: { type: 'img', src: 'assets/img/Projector.svg' } },\n        { id: '', name: 'Showers', icon: { type: 'img', src: 'assets/img/shower.svg' } },\n        { id: '', name: 'Chairs', icon: { type: 'img', src: 'assets/img/chair.svg' } },\n        { id: '', name: 'Chairs', icon: { type: 'img', src: 'assets/img/chair2.svg' } },\n        { id: '', name: 'Chairs/Couch', icon: { type: 'img', src: 'assets/img/couch.svg' } },\n        { id: '', name: 'Chairs/Couch', icon: { type: 'img', src: 'assets/img/couch2.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table1.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table2.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table3.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table4.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table5.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table6.svg' } },\n        { id: '', name: 'Tables', icon: { type: 'img', src: 'assets/img/Table7.svg' } },\n        { id: '', name: 'Funzone Games', icon: { type: 'img', src: 'assets/img/Tennis.svg' } },\n        { id: '', name: 'Concierge Pods', icon: { type: 'img', src: 'assets/img/Pod.svg' } },\n        { id: '', name: 'Phone Booths', icon: { type: 'img', src: 'assets/img/booth.svg' } }\n    ];\n}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { BaseClass, log, SettingsService } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\n\n@Component({\n    selector: 'app-explore',\n    template: `\n        <header>\n            <a-topbar-header></a-topbar-header>\n        </header>\n        <main class=\"flex flex-1 w-full relative\">\n            <explore-map-view></explore-map-view>\n        </main>\n        <footer class=\"flex w-full\">\n            <a-footer-legend></a-footer-legend>\n        </footer>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 0;\n                left: 0;\n                right: 0;\n                bottom: 0;\n                overflow: hidden;\n                display: flex;\n                flex-direction: column;\n            }\n        `,\n    ],\n})\nexport class ExploreComponent extends BaseClass implements OnInit {\n    /** Whether to show the overlay menu */\n    public show_menu: boolean;\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._settings.title = 'Explore';\n        let level = '';\n        if (localStorage) {\n            level = localStorage.getItem('KIOSK.level');\n        }\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n        }\n        this.timeout('refresh', () => this.refreshKiosk(), 2 * 60 * 1000);\n    }\n\n    public get emergency_phone(): string {\n        const level_id = localStorage.getItem('KIOSK.level');\n        const level = this._org.levelWithID([level_id]);\n        if (!level) {\n            return;\n        }\n        const building = this._org.buildings.find(\n            bld => bld.id === level.parent_id\n        );\n        if (!building) {\n            return;\n        }\n        return building.phone_numbers.emergency || '';\n    }\n\n    /**\n     * Reset the timeout for refreshing the kiosk view\n     */\n    public resetRefresh() {\n        this.timeout('refresh', () => this.refreshKiosk(), 2 * 60 * 1000);\n    }\n\n    /**\n     * Refresh the kiosk view\n     */\n    public refreshKiosk() {\n        log('EXPLORE', 'Refreshing kiosk...');\n        this._dialog.closeAll();\n        let level = '';\n        if (localStorage) {\n            level = localStorage.getItem('KIOSK.level');\n        }\n        if (!level) {\n            this._router.navigate(['/bootstrap']);\n        } else {\n            this._router.navigate(['/explore', 'none'], { queryParams: { level } });\n        }\n        this._dialog.closeAll();\n        this._settings.post('KIOSK.reset', new Date().getTime());\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@user-interfaces/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { FormFieldsModule } from '@user-interfaces/form-fields';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n        OverlayModule,\n        PortalModule,\n        FormFieldsModule\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { ExploreComponent } from './explore.component';\nimport { SharedContentModule } from '../ui/shared.module';\nimport { FooterLegendComponent } from './footer-legend/footer-legend.component';\nimport { FiltersComponent } from './filters/filters.component';\nimport { ComponentsModule } from '@user-interfaces/components';\nimport { SharedExploreModule } from '@user-interfaces/explore';\n\nconst ROUTES: Route[] = [\n    { path: '', component: ExploreComponent },\n    { path: ':search_type', component: ExploreComponent }\n];\n\n@NgModule({\n    declarations: [\n        ExploreComponent,\n        FooterLegendComponent,\n        FiltersComponent\n    ],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        SharedContentModule,\n        ComponentsModule,\n        FormsModule,\n        SharedExploreModule\n    ],\n    entryComponents: [\n        FiltersComponent\n    ]\n})\nexport class AppExploreModule {}\n"],"sourceRoot":"webpack:///"}