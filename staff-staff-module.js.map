{"version":3,"sources":["./src/app/staff/staff-state.service.ts","./src/app/staff/staff-details.component.ts","./src/app/staff/staff-topbar.component.ts","./src/app/staff/staff.component.ts","./src/app/staff/staff.module.ts","./src/app/staff/staff-listing.component.ts"],"names":[],"mappings":"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","file":"staff-staff-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { StaffUser } from '@user-interfaces/users';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\n\nimport { StaffService } from '@user-interfaces/users';\nimport { Booking, BookingsService } from '@user-interfaces/bookings';\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\nimport { endOfDay, startOfDay } from 'date-fns';\nimport { BaseClass, timePeriodsIntersect } from '@user-interfaces/common';\nimport { HashMap } from '@placeos/ts-client/dist/esm/utilities/types';\nimport { OrganisationService } from '@user-interfaces/organisation';\n\nexport interface StaffFilters {\n    date?: number;\n    zones?: string[];\n    only_onsite?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StaffStateService extends BaseClass {\n    private _onsite: HashMap<boolean> = {};\n    private _events: HashMap<Booking> = {};\n\n    private _filters = new BehaviorSubject<StaffFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    private _users = new BehaviorSubject<StaffUser[]>([]);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly users = this._filters.asObservable();\n\n    public readonly filtered_users = combineLatest([\n        this._search,\n        this._users,\n        this._filters,\n    ]).pipe(\n        map((details) => {\n            const [filter, users, options] = details;\n            return users.filter(\n                (i) =>\n                    (!filter ||\n                        i.name.toLowerCase().includes(filter) ||\n                        i.email.toLowerCase().includes(filter)) &&\n                    (!options.only_onsite || this._onsite[i.email])\n            );\n        })\n    );\n\n    public readonly user_events = combineLatest([this._filters]).pipe(\n        switchMap(async (_) => {\n            this._loading.next(true);\n            const bookings = await this._bookings.query({\n                period_start: Math.floor(startOfDay(new Date()).valueOf() / 1000),\n                period_end: Math.floor(endOfDay(new Date()).valueOf() / 1000),\n                type: 'staff',\n            });\n            const checkin_map = {};\n            const now = new Date().valueOf();\n            for (const bkn of bookings) {\n                if (\n                    timePeriodsIntersect(\n                        now,\n                        now,\n                        bkn.date,\n                        bkn.date + bkn.duration * 60 * 1000\n                    )\n                ) {\n                    checkin_map[bkn.asset_id] = true;\n                    this._events[bkn.asset_id] = bkn;\n                }\n            }\n            this._onsite = checkin_map;\n            this._loading.next(false);\n            return checkin_map;\n        }),\n        shareReplay()\n    );\n\n    constructor(\n        private _staff: StaffService,\n        private _bookings: BookingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n        this.loadUsers();\n    }\n\n    public setFilters(filters: StaffFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.setFilters(this._filters.getValue());\n        this.interval('poll', () => this.setFilters(this._filters.getValue()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async checkin(user: StaffUser) {\n        const result = await this._bookings.add({\n            booking_start: Math.floor(\n                startOfDay(new Date).valueOf() / 1000\n            ),\n            booking_end: Math.floor(endOfDay(new Date()).valueOf() / 1000),\n            asset_id: user.email,\n            title: 'Checked-in Onsite',\n            description: this._org.building.display_name || this._org.building.name,\n            zones: [this._org.building.id],\n            booking_type: 'staff',\n        });\n        this._events[user.email] = result;\n        this._onsite[user.email] = true;\n    }\n\n    public async checkout(user: StaffUser) {\n        const event = this._events[user.email];\n        if (event) {\n            const result = await this._bookings.update(event.id, {\n                ...event.toJSON(),\n                booking_end: Math.floor(new Date().valueOf() / 1000),\n            });\n            this._events[user.email] = result;\n            this._onsite[user.email] = false;\n        }\n    }\n\n    private async loadUsers() {\n        const user_list = await this._staff.query();\n        user_list.sort((a, b) => a.name.localeCompare(b.name));\n        this._users.next(user_list);\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { notifyError } from '@user-interfaces/common';\nimport { StaffUser } from '@user-interfaces/users';\n\nimport { StaffStateService } from './staff-state.service';\n\n@Component({\n    selector: 'staff-details',\n    template: `\n        <div class=\"w-full flex items-center px-4 py-2 bg-white border-b border-gray-200\">\n            <a-user-avatar [user]=\"user\"></a-user-avatar>\n            <div class=\"flex flex-col flex-1\">\n                <div class=\"px-2\">{{ user?.name }}</div>\n                <div class=\"px-2 text-xs text-opacity-50\">{{ user?.email }}</div>\n            </div>\n            <div *ngIf=\"onsite\" class=\"text-xs opacity-50 px-4\">Onsite</div>\n            <div class=\"flex items-center\">\n                <action-icon\n                    [matTooltip]=\"onsite ? 'Checkout Staff' : 'Checkin Staff'\"\n                    [loading]=\"loading\"\n                    className=\"material-icons\"\n                    [content]=\"onsite ? 'event_busy' : 'event_available'\"\n                    (click)=\"onsite ? checkout() : checkin()\"\n                >\n                </action-icon>\n                <a mat-icon-button matTooltip=\"Email Staff\" [disabled]=\"!user?.email\" [href]=\"'mailto:' + user?.email\">\n                    <app-icon className=\"material-icons\">email</app-icon>\n                </a>\n                <a mat-icon-button matTooltip=\"Phone Staff\" [disabled]=\"!user?.phone\" [href]=\"'tel:' + user?.phone\">\n                    <app-icon className=\"material-icons\">call</app-icon>\n                </a>\n            </div>\n        </div>\n    `,\n    styles: [`\n        :host > div:hover {\n            background-color: #f0f0f0 !important;\n        }\n    `]\n})\nexport class StaffDetailsComponent {\n\n    @Input() public user: StaffUser;\n    @Input() public onsite: boolean;\n\n    public loading: boolean;\n\n    public readonly checkin = async () => {\n        this.loading = true;\n        await this._state.checkin(this.user).catch(e => notifyError('Error checking in Staff member'));\n        this.loading = false;\n    };\n    public readonly checkout = async () => {\n        this.loading = true;\n        await this._state.checkout(this.user).catch(e => notifyError('Error checking out Staff member'));\n        this.loading = false;\n    };\n\n    constructor(private _state: StaffStateService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass } from '@user-interfaces/common';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { StaffStateService } from './staff-state.service';\n\n@Component({\n    selector: 'staff-topbar',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                multiple\n                [(ngModel)]=\"zones\"\n                (ngModelChange)=\"updateZones($event)\"\n                placeholder=\"All Levels\"\n            >\n                <mat-option\n                    *ngFor=\"let level of levels | async\"\n                    [value]=\"level.id\"\n                >\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-slide-toggle\n            class=\"m-2\"\n            [ngModel]=\"(filters | async)?.only_onsite\"\n            (ngModelChange)=\"setFilters({ only_onsite: $event })\"\n            ><div class=\"text-xs\">Onsite Only</div></mat-slide-toggle\n        >\n        <div class=\"flex-1 w-2\"></div>\n        <searchbar class=\"mr-2\" (modelChange)=\"setSearch($event)\"></searchbar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 2em;\n                border-bottom: 1px solid #ccc;\n            }\n\n            :host > * + * {\n                margin-left: 0.5rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class StaffTopbarComponent extends BaseClass implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones })\n    };\n\n    constructor(\n        private _state: StaffStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.zones = zones;\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { StaffStateService } from './staff-state.service';\n\n@Component({\n    selector: 'app-staff',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden flex-1 flex flex-col\">\n            <staff-topbar class=\"w-full\"></staff-topbar>\n            <staff-listings class=\"w-full flex-1 h-0\"></staff-listings>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class StaffComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: StaffStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { StaffComponent } from './staff.component';\nimport { StaffTopbarComponent } from './staff-topbar.component';\nimport { StaffListingComponent } from './staff-listing.component';\nimport { StaffDetailsComponent } from './staff-details.component';\nimport { UIModule } from '../ui/ui.module';\n\nconst ROUTES: Route[] = [{ path: '', component: StaffComponent }];\n\nexport const COMPONENTS: Type<any>[] = [\n    StaffComponent,\n    StaffTopbarComponent,\n    StaffListingComponent,\n    StaffDetailsComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class StaffModule {}\n","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { BaseClass } from '@user-interfaces/common';\nimport { map } from 'rxjs/operators';\n\nimport { StaffStateService } from './staff-state.service';\n\nconst CHARS = '#abcdefghijklmnopqrstuvwxyz'.split('');\n\n@Component({\n    selector: 'staff-listings',\n    template: `\n        <div class=\"w-full p-2 flex items-center justify-center\">\n            <div\n                letter\n                *ngFor=\"let group of groups\"\n                class=\"capitalize h-6 w-6 flex items-center justify-center text-xs cursor-pointer\"\n                [class.disabled]=\"(user_list | async)[group].length <= 0\"\n                [class.active]=\"group === active_group\"\n                (click)=\"scrollTo(group)\"\n            >\n                {{ group }}\n            </div>\n        </div>\n        <div\n            class=\"flex-1 overflow-auto w-full relative bg-gray-100\"\n            style=\"height: 50%\"\n            #container\n            (scroll)=\"onScroll($event)\"\n        >\n            <ng-container *ngIf=\"user_count | async; else empty_state\">\n                <ng-container *ngFor=\"let group of groups\">\n                    <ng-container *ngIf=\"(user_list | async)[group].length\">\n                        <div\n                            group\n                            [id]=\"'letter-' + (group === '#' ? '0' : group)\"\n                            class=\"capitalize bg-gray-300 border-b text-sm font-medium sticky top-0 z-10\"\n                        >\n                            {{ group }}\n                        </div>\n                        <staff-details\n                            *ngFor=\"\n                                let user of (user_list | async)[group];\n                                let i = index\n                            \"\n                            [id]=\"'letter-' + group + '-' + i\"\n                            [user]=\"user\"\n                            [onsite]=\"(events | async) ? (events | async)[user.email]: false\"\n                        ></staff-details>\n                    </ng-container>\n                </ng-container>\n            </ng-container>\n        </div>\n        <mat-progress-bar *ngIf=\"loading | async\" mode=\"indeterminate\"></mat-progress-bar>\n        <ng-template #empty_state>\n            <div class=\"absolute inset-0 flex flex-col items-center justify-center\">\n                <p>No matching staff members</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                height: 50%;\n            }\n\n            [letter] {\n                transition: font-size 200ms, color 200ms;\n            }\n\n            [group] {\n                border-color: #ccc;\n                padding: 0.5rem 1.65rem;\n            }\n\n            .disabled {\n                opacity: 0.2;\n                pointer-events: none;\n            }\n\n            .active {\n                font-size: 1.25rem;\n                opacity: 1;\n                color: #d81b60;\n            }\n        `,\n    ],\n})\nexport class StaffListingComponent extends BaseClass {\n    public active_group = '#';\n\n    public readonly groups = CHARS;\n    public readonly events = this._state.user_events;\n    public readonly loading = this._state.loading;\n\n    public readonly user_count = this._state.filtered_users.pipe(\n        map((list) => list.length)\n    );\n\n    public readonly user_list = this._state.filtered_users.pipe(\n        map((list) => {\n            const user_map = {};\n            for (const char of CHARS) {\n                user_map[char] = (list || []).filter(\n                    (user) =>\n                        user.name.toLowerCase()[0].startsWith(char) ||\n                        (char === '#' &&\n                            !CHARS.includes(user.name.toLowerCase()[0]))\n                );\n            }\n            this.timeout('scroll', () => this.onScroll({}), 30);\n            return user_map;\n        })\n    );\n\n    @ViewChild('container') private _el: ElementRef<HTMLDivElement>;\n\n    constructor(private _state: StaffStateService) {\n        super();\n    }\n\n    public onScroll(_) {\n        const scroll_top = this._el.nativeElement.scrollTop;\n        for (const group of CHARS) {\n            const el: HTMLDivElement = document.querySelector(`#letter-${group === '#' ? '0' : group}`);\n            if (el) {\n                if (el.offsetTop - scroll_top > 0) {\n                    break;\n                }\n                this.active_group = group;\n            }\n        }\n    }\n\n    public scrollTo(group: string) {\n        const el = document.querySelector(`#letter-${group}-0`);\n        if (el) {\n            el.scrollIntoView({ behavior: 'smooth', block: 'center' });\n            this.active_group = group;\n        }\n    }\n}\n"],"sourceRoot":"webpack:///"}