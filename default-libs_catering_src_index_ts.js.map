{"version":3,"file":"default-libs_catering_src_index_ts.js","mappings":"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","sources":["./libs/catering/src/index.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-menu.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/catering-order-item.component.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-orders.service.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering.interfaces.ts","./libs/catering/src/lib/catering.module.ts","./libs/catering/src/lib/catering.ts","./libs/catering/src/lib/catering.vars.ts","./libs/catering/src/lib/charge-code-list-modal.component.ts"],"sourcesContent":["export * from './lib/catering.module';\nexport * from './lib/catering';\nexport * from './lib/charge-code-list-modal.component';","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { CateringStateService } from './catering-state.service';\nimport { CateringItem } from './catering-item.class';\nimport { unique } from '@placeos/common';\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-menu',\n    template: `\n        <simple-table\n            class=\"w-full min-w-[32rem] block text-sm\"\n            [data]=\"menu\"\n            [columns]=\"[\n                {\n                    key: 'active',\n                    name: ' ',\n                    content: active_template,\n                    size: '3.5rem',\n                    sortable: false\n                },\n                { key: 'name', name: 'Name' },\n                { key: 'category', name: 'Category' },\n                {\n                    key: 'unit_price',\n                    name: 'Price',\n                    content: price_template,\n                    size: '6rem'\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: actions_template,\n                    size: '6.5rem',\n                    sortable: false\n                }\n            ]\"\n            [filter]=\"filters?.search\"\n            [show_children]=\"show_children\"\n            [child_template]=\"child_template\"\n            [sortable]=\"true\"\n            empty_message=\"No Items in Menu\"\n        ></simple-table>\n        <ng-template #active_template let-row=\"row\">\n            <mat-checkbox\n                class=\"mx-auto\"\n                matTooltip=\"Allow Ordering Item for this zone\"\n                matTooltipPosition=\"right\"\n                [ngModel]=\"isEnabled(row)\"\n                (ngModelChange)=\"setEnabled(row, $event)\"\n            ></mat-checkbox>\n        </ng-template>\n        <ng-template #price_template let-data=\"data\">\n            <div\n                class=\"px-2 py-1 font-mono text-xs flex items-center mx-auto bg-secondary text-secondary-content rounded\"\n            >\n                {{ data / 100 | currency: (symbol | async) }}\n            </div>\n        </ng-template>\n        <ng-template #actions_template let-row=\"row\">\n            <div class=\"p-2 flex items-center mx-auto space-x-2\">\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!can_edit\"\n                    [class.opacity-0]=\"!can_edit\"\n                    [matMenuTriggerFor]=\"menu\"\n                >\n                    <app-icon>more_vert</app-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"addOption(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon>add</app-icon>\n                            <div>Add Option</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"editItem(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon>edit</app-icon>\n                            <div>Edit Item</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        class=\"flex items-center\"\n                        (click)=\"removeItem(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2 pr-2\">\n                            <app-icon class=\"text-error\">delete</app-icon>\n                            <div>Remove Item</div>\n                        </div>\n                    </button>\n                </mat-menu>\n                <button\n                    icon\n                    matRipple\n                    [disabled]=\"!row.options?.length\"\n                    [matTooltip]=\"\n                        row.options?.length\n                            ? (show_children[row.id] ? 'Hide' : 'Show') +\n                              ' Menu Item Options'\n                            : ''\n                    \"\n                    (click)=\"show_children[row.id] = !show_children[row.id]\"\n                >\n                    <app-icon>\n                        {{\n                            show_children[row.id]\n                                ? 'keyboard_arrow_down'\n                                : 'chevron_right'\n                        }}\n                    </app-icon>\n                </button>\n            </div>\n        </ng-template>\n        <ng-template #child_template let-row=\"row\">\n            <div\n                class=\"flex p-2 items-center border-b border-solid border-base-200 relative space-x-2\"\n                *ngFor=\"let option of row.options\"\n            >\n                <div\n                    class=\"absolute inset-y-0 left-0 w-2 bg-black opacity-10\"\n                ></div>\n                <div class=\"flex-1 pl-4 pr-2\">\n                    <div class=\"text\">{{ option.name }}</div>\n                    <div class=\"text-xs opacity-60\">\n                        {{ option.group }}\n                    </div>\n                </div>\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Menu Item Option\"\n                    (click)=\"editOption(row, option)\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"!mr-1\"\n                    matTooltip=\"Remove Menu Item Option\"\n                    (click)=\"removeOption(row, option)\"\n                    *ngIf=\"can_edit\"\n                >\n                    <app-icon class=\"text-error\">delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 90%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringMenuComponent {\n    public show_children: Record<string, boolean> = {};\n    /** Observable for the currently active menu */\n    public readonly menu = this._catering.menu;\n\n    public readonly addOption = (item) => this._catering.addOption(item);\n\n    public readonly editOption = (item, option) =>\n        this._catering.addOption(item, option);\n\n    public readonly removeOption = (item, option) =>\n        this._catering.deleteOption(item, option);\n\n    public readonly editItem = (item) => this._catering.addItem(item);\n\n    public readonly removeItem = (item) => this._catering.deleteItem(item);\n\n    public get filters() {\n        return this._orders.filters;\n    }\n\n    public get can_edit() {\n        return this._catering.is_editable;\n    }\n    public get categories() {\n        return this._catering.categories;\n    }\n\n    constructor(\n        private _catering: CateringStateService,\n        private _orders: CateringOrdersService\n    ) {}\n\n    public isEnabled(item: CateringItem) {\n        return !item.hide_for_zones.includes(this._catering.zone);\n    }\n\n    public setEnabled(item: CateringItem, state: boolean) {\n        let list = item.hide_for_zones;\n        if (!state) list = unique([...list, this._catering.zone]);\n        else list = list.filter((_) => _ !== this._catering.zone);\n        this._catering.updateItem(\n            new CateringItem({ ...item, hide_for_zones: list })\n        );\n    }\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { Component, Input } from '@angular/core';\n\nimport { CateringItem } from './catering-item.class';\n\nconst ACTIVE_ITEMS = new Set<string>();\n\n@Component({\n    selector: '[catering-order-item]',\n    template: `\n        <ng-container *ngIf=\"item\">\n            <div class=\"w-16 text-right h-14 relative\">\n                <div\n                    arm\n                    class=\"border-b-2 border-l-2 border-base-200 w-4 h-16 absolute top-1/2 left-1/2 -translate-y-full -translate-x-px\"\n                ></div>\n            </div>\n            <div class=\"w-12 mr-4\">\n                <button\n                    action\n                    icon\n                    matRipple\n                    class=\"border-2 border-base-200 border-dashed text-xl text-dark-fade p-2\"\n                    [class.bg-success]=\"active\"\n                    [class.text-white]=\"active\"\n                    [class.border-solid]=\"active\"\n                    (click)=\"toggle()\"\n                >\n                    <app-icon>{{ active ? 'done' : 'local_pizza' }}</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-1 items-center border-b border-base-200 border-solid py-4 space-x-4\"\n            >\n                <div class=\"\">\n                    <div\n                        class=\"p-1 rounded-full bg-base-300 w-10 h-10 flex items-center justify-center font-mono text-sm\"\n                    >\n                        {{ item?.amount || item?.quantity || 1 }}×\n                    </div>\n                </div>\n                <div class=\"flex-1\">{{ item?.name }}</div>\n                <div class=\"flex space-x-2 mr-2 px-4\">\n                    <ng-container *ngFor=\"let opt of item.option_list\">\n                        <div\n                            class=\"text-xs py-1 px-2 bg-warning text-warning-content rounded-2xl shadow\"\n                            *ngIf=\"opt\"\n                        >\n                            {{ opt.name }}\n                        </div>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host:last-child > div {\n                border: none !important;\n            }\n        `,\n    ],\n})\nexport class CateringOrderItemComponent {\n    @Input() public order_id: string;\n    @Input() public item: CateringItem;\n\n    public active = false;\n\n    public get item_key() {\n        return `${this.order_id}|${this.item?.id}`;\n    }\n\n    public ngOnInit() {\n        this.active = ACTIVE_ITEMS.has(this.item_key);\n    }\n\n    public toggle() {\n        if (ACTIVE_ITEMS.has(this.item_key)) {\n            ACTIVE_ITEMS.delete(this.item_key);\n            this.active = false;\n        } else {\n            ACTIVE_ITEMS.add(this.item_key);\n            this.active = true;\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CATERING_STATUSES } from './catering.vars';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div class=\"flex flex-col h-full w-full overflow-auto\">\n            <mat-progress-bar\n                [class.opacity-0]=\"!(loading | async)\"\n                class=\"sticky top-0 left-0 w-full\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n            <simple-table\n                class=\"min-w-[72rem] w-full block text-sm\"\n                [data]=\"order_list\"\n                [columns]=\"[\n                    {\n                        key: 'state',\n                        name: ' ',\n                        size: '4rem',\n                        sortable: false,\n                        content: state_template,\n                    },\n                    {\n                        key: 'deliver_at',\n                        name: 'Time',\n                        content: time_template,\n                    },\n                    {\n                        key: 'event',\n                        name: 'Location',\n                        content: location_template,\n                        sortable: false,\n                    },\n                    {\n                        key: 'event',\n                        name: 'Host',\n                        content: host_template,\n                        sortable: false,\n                    },\n                    { key: 'charge_code', name: 'Charge Code' },\n                    {\n                        key: 'invoice_number',\n                        name: 'Invoice No.',\n                        empty: 'No Invoice',\n                    },\n                    {\n                        key: 'status',\n                        name: 'Status',\n                        content: status_template,\n                        size: '11rem',\n                    },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        size: '6.5rem',\n                        content: actions_template,\n                        sortable: false,\n                    },\n                ]\"\n                [sortable]=\"true\"\n                [show_children]=\"show_children\"\n                [child_template]=\"child_template\"\n                empty_message=\"No Catering Orders\"\n            >\n            </simple-table>\n            <ng-template #state_template let-data=\"data\">\n                <div class=\"p-2\">\n                    <div\n                        class=\"rounded-full bg-base-200 p-2 text-2xl flex items-center justify-center\"\n                    >\n                        <app-icon>room_service</app-icon>\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #time_template let-data=\"data\" let-row=\"row\">\n                <div class=\"p-4\">\n                    <div>Deliver at {{ data | date: time_format }}</div>\n                    <div class=\"text-xs opacity-30\">\n                        {{ row?.event?.date | date: 'MMM d' }},\n                        {{ row?.event?.date | date: time_format }}\n                        -\n                        {{ row?.event?.date_end | date: 'MMM d' }},\n                        {{ row?.event?.date_end | date: time_format }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #location_template let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    {{ data?.space?.display_name || data?.space?.name || '' }}\n                    <span\n                        class=\"opacity-30\"\n                        *ngIf=\"\n                            !(data?.space?.display_name || data?.space?.name)\n                        \"\n                    >\n                        No Location\n                    </span>\n                </div>\n            </ng-template>\n            <ng-template #host_template let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    <div>\n                        {{ data?.organiser?.name || data?.host || '' }}\n                        <span\n                            class=\"opacity-30\"\n                            *ngIf=\"!(data?.organiser?.name || data?.host)\"\n                        >\n                            Unknown Host\n                        </span>\n                    </div>\n                    <div class=\"text-xs opacity-30\">\n                        {{ data?.organiser?.email || data?.host }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-row=\"row\" let-data=\"data\">\n                <div class=\"px-4 py-2\">\n                    <button\n                        status\n                        matRipple\n                        class=\"rounded-3xl text-base border-none h-10 px-4 flex items-center text-white w-36\"\n                        [style.background]=\"status(data)?.colour\"\n                        [matMenuTriggerFor]=\"menu\"\n                    >\n                        <div class=\"flex text-center capitalize mx-2\">\n                            {{ status(data)?.name }}\n                        </div>\n                        <app-icon class=\"pl-2\">arrow_drop_down</app-icon>\n                    </button>\n                </div>\n                <mat-menu #menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        *ngFor=\"let status of statuses\"\n                        class=\"flex items-center\"\n                        (click)=\"updateStatus(row, status.id)\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <div\n                                class=\"rounded-full h-4 w-4 mr-2\"\n                                [style.background-color]=\"status.colour\"\n                            ></div>\n                            <span class=\"mr-2 w-20\">{{ status.name }}</span>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #actions_template let-row=\"row\">\n                <div class=\"flex items-center space-x-2 p-2 mx-auto\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [hover]=\"true\"\n                        xPosition=\"end\"\n                        yPosition=\"top\"\n                        [content]=\"notes_template\"\n                        [disabled]=\"!row.notes\"\n                    >\n                        <app-icon>description</app-icon>\n                    </button>\n                    <ng-template #notes_template>\n                        <div\n                            class=\"p-2 rounded-lg bg-base-100 text-base-content max-w-[32rem] min-w-[8rem] shadow border border-base-200\"\n                        >\n                            <div class=\"mb-2\">Notes</div>\n                            <p class=\"text-sm px-4 py-2 bg-base-200 rounded\">\n                                {{ row.notes }}\n                            </p>\n                        </div>\n                    </ng-template>\n                    <button\n                        icon\n                        matRipple\n                        (click)=\"show_children[row.id] = !show_children[row.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_children[row.id]\n                                    ? 'keyboard_arrow_down'\n                                    : 'chevron_right'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n            </ng-template>\n            <ng-template #child_template let-row=\"row\">\n                <ul\n                    *ngIf=\"row?.items.length\"\n                    class=\"list-none p-0 m-0 w-full relative z-0\"\n                >\n                    <li\n                        catering-order-item\n                        class=\"flex items-center\"\n                        *ngFor=\"let item of row.items; let i = index\"\n                        [order_id]=\"row?.id\"\n                        [item]=\"item\"\n                    ></li>\n                </ul>\n            </ng-template>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent extends AsyncHandler {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    public readonly statuses = CATERING_STATUSES;\n    public readonly show_children: Record<string, boolean> = {};\n\n    public readonly updateStatus = async (order, s) => {\n        await this._orders.updateStatus(order, s);\n        this.timeout('status-change', () => ((order as any).status = s));\n    };\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public status(value: string) {\n        return CATERING_STATUSES.find((i) => i.id === value);\n    }\n\n    constructor(\n        private _orders: CateringOrdersService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    map,\n    switchMap,\n    debounceTime,\n    tap,\n    shareReplay,\n    catchError,\n} from 'rxjs/operators';\nimport { startOfDay, endOfDay, getUnixTime, format } from 'date-fns';\n\nimport { AsyncHandler, currentUser, flatten } from '@placeos/common';\nimport {\n    queryEvents,\n    saveEvent,\n    updateEventMetadata,\n} from 'libs/events/src/lib/events.fn';\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\n\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOrderStatus } from './catering.interfaces';\n\nexport interface CateringOrderFilters {\n    /** UTC epoch of the date to get catering orders for */\n    date?: number;\n    /** List of zones to filter catering order bookings */\n    zones?: string[];\n    /** Search string to filter orders on */\n    search?: string;\n}\n\nfunction checkOrder(\n    order: CateringOrder,\n    filters: CateringOrderFilters\n): boolean {\n    const s = (filters.search || '').toLowerCase();\n    return !!order.items.find(\n        (item) =>\n            item.name.toLowerCase().includes(s) ||\n            !!item.options.find((option) =>\n                option.name.toLowerCase().includes(s)\n            )\n    );\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrdersService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n    private _loading = new BehaviorSubject<boolean>(false);\n    private _filters = new BehaviorSubject<CateringOrderFilters>({});\n\n    /** Observable for list of orders */\n    public readonly orders: Observable<CateringOrder[]> = combineLatest([\n        this._filters,\n        this._poll,\n    ]).pipe(\n        debounceTime(1000),\n        switchMap(([{ date, zones }]) => {\n            this._loading.next(true);\n            const start = getUnixTime(startOfDay(date || Date.now()));\n            const end = getUnixTime(endOfDay(date || Date.now()));\n            return queryEvents({\n                zone_ids: (zones || []).join(','),\n                period_start: start,\n                period_end: end,\n            }).pipe(\n                catchError(() => of([])),\n                map((events) =>\n                    flatten(\n                        events.map((event) =>\n                            event.valid_catering.map(\n                                (o) => new CateringOrder({ ...o, event })\n                            )\n                        )\n                    )\n                ),\n                map((orders) =>\n                    orders.filter(\n                        (o) =>\n                            format(o.deliver_at, 'yyyy-MM-dd') ===\n                            format(start * 1000, 'yyyy-MM-dd')\n                    )\n                )\n            );\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n    /** Observable for loading status of orders */\n    public readonly loading = this._loading.asObservable();\n    /** Order filters */\n    public get filters() {\n        return this._filters.getValue();\n    }\n    /** Order filters */\n    public set filters(filters: CateringOrderFilters) {\n        this._filters.next(filters);\n    }\n    /** Filtered list of catering orders */\n    public readonly filtered = this.orders.pipe(\n        map((list) =>\n            list\n                .filter((order) => checkOrder(order, this._filters.getValue()))\n                .sort((a, b) => a.deliver_at - b.deliver_at)\n        )\n    );\n\n    constructor() {\n        super();\n        this.subscription('changes', this.orders.subscribe());\n    }\n\n    /** Start polling for catering orders */\n    public startPolling(delay: number = 15 * 1000) {\n        this.interval(\n            'polling',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    /** Stop polling for new catering orders */\n    public stopPolling() {\n        this.clearInterval('polling');\n    }\n\n    /**\n     * Update the status of the order\n     * @param order Order to update\n     * @param status New order status\n     */\n    public async updateStatus(\n        order: CateringOrder,\n        status: CateringOrderStatus\n    ) {\n        order.status = status;\n        const updated_order = new CateringOrder({\n            ...order,\n            status,\n            event: null,\n        });\n        const catering = [\n            ...(order.event.extension_data.catering || []).filter(\n                (o) => o.id !== order.id\n            ),\n            updated_order,\n        ].map((i) => new CateringOrder({ ...i }));\n        const event = new CalendarEvent({\n            ...order.event,\n            catering,\n        });\n        const system_id = event?.resources[0]?.id || event?.system?.id;\n        const booking = await updateEventMetadata(\n            event.id,\n            system_id,\n            event.extension_data\n        ).toPromise();\n        this.timeout('refresh-list', () => this._poll.next(Date.now()), 1000);\n        (order as any).status = status;\n        return booking;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","// Event catering order interfaces\nexport type CateringOrderStatus =\n    | 'accepted'\n    | 'preparing'\n    | 'ready'\n    | 'delivered'\n    | 'cancelled';\n\nexport interface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\nexport interface CateringOption {\n    /** Unique Identifier of the catering option */\n    readonly id: string;\n    /** Display name for the catering option */\n    readonly name: string;\n    /** Name of the group associated with the option */\n    readonly group: string;\n    /** Whether multiple items in the group can be selected */\n    readonly multiple: boolean;\n    /** Cost of adding the option to the item */\n    readonly unit_price: number;\n    /** Whether the catering option is active for the item */\n    active?: boolean;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","export * from './catering-order-options-modal.component';\nexport * from './catering-order-modal.component';\nexport * from './catering-item-modal.component';\nexport * from './catering-item.class';\nexport * from './catering-menu.component';\nexport * from './catering-option-modal.component';\nexport * from './catering-order-item.component';\nexport * from './catering-order-list.component';\nexport * from './catering-order.class';\nexport * from './catering-orders.service';\nexport * from './catering-state.service';\nexport * from './catering.interfaces';\nexport * from './catering.module';\nexport * from './catering.vars';\nexport * from './catering-order-modal/new-catering-order-modal.component';\n","import { Identity } from '@placeos/common';\n\nexport const CATERING_STATUSES: Identity[] = [\n    { id: 'pending', name: 'Pending', icon: { class: 'custom-pending' }, colour: '#ccc' },\n    { id: 'accepted', name: 'Accepted', icon: { class: 'custom-accepted' }, colour: '#3996B6' },\n    {\n        id: 'preparing',\n        name: 'Preparing',\n        icon: { class: 'custom-preparing' },\n        colour: '#E7536B',\n    },\n    { id: 'ready', name: 'Ready', icon: { class: 'custom-ready' }, colour: '#FFD028' },\n    {\n        id: 'delivered',\n        name: 'Delivered',\n        icon: { class: 'custom-delivered' },\n        colour: '#75BB43',\n    },\n    {\n        id: 'cancelled',\n        name: 'Cancelled',\n        icon: { class: 'custom-cancelled' },\n        colour: '#747474',\n    },\n];\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { csvToJson, notifyError, unique } from '@placeos/common';\nimport { take } from 'rxjs/operators';\nimport { CateringStateService } from './catering-state.service';\n\n@Component({\n    selector: 'charge-code-list-modal',\n    template: `\n        <header>\n            <h2>Edit Charge Codes</h2>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!loading; else load_state\"\n            class=\"overflow-auto max-h-[65vh] min-h-[20rem] flex flex-col\"\n        >\n            <div\n                class=\"flex items-center space-x-2 w-full hover:bg-neutral px-2\"\n                *ngFor=\"\n                    let code of charge_codes;\n                    let i = index;\n                    trackBy: trackByFn\n                \"\n            >\n                <mat-form-field appearance=\"outline\" class=\"h-14 flex-1\">\n                    <input\n                        matInput\n                        [(ngModel)]=\"charge_codes[i]\"\n                        placeholder=\"Charge Code\"\n                    />\n                </mat-form-field>\n                <button icon (click)=\"removeCode(i)\">\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </main>\n        <footer\n            class=\"flex items-center p-2 space-x-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-48 inverse relative\">\n                Import Codes\n                <input\n                    class=\"opacity-0 absolute inset-0\"\n                    type=\"file\"\n                    (change)=\"addCodesFromFile($event)\"\n                />\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"newCode()\">\n                Add Code\n            </button>\n            <button btn matRipple class=\"w-48\" (click)=\"saveChargeCodes()\">\n                Save Changes\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center p-20 space-y-2\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving changes to charge codes...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class ChargeCodeListModalComponent {\n    public charge_codes: string[] = [];\n    public loading = false;\n\n    constructor(\n        private _state: CateringStateService,\n        private _dialog_ref: MatDialogRef<ChargeCodeListModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        this.charge_codes =\n            (await this._state.charge_codes.pipe(take(1)).toPromise()) || [];\n    }\n\n    public newCode() {\n        this.charge_codes.push('');\n    }\n\n    public removeCode(index: number) {\n        this.charge_codes.splice(index, 1);\n    }\n\n    /**\n     * Load CSV file and populate the code list with the contents\n     * @param event File input field event\n     */\n    public addCodesFromFile(event) {\n        /* istanbul ignore else */\n        if (event.target) {\n            const file = event.target.files[0];\n            /* istanbul ignore else */\n            if (file) {\n                const reader = new FileReader();\n                reader.readAsText(file, 'UTF-8');\n                reader.addEventListener('load', (evt) => {\n                    const list =\n                        csvToJson((evt.srcElement as any).result) || [];\n                    for (const { code, description } of list) {\n                        this.charge_codes.push(code);\n                    }\n                    this.charge_codes = unique(this.charge_codes);\n                    event.target.value = '';\n                });\n                reader.addEventListener('error', (_) =>\n                    notifyError('Error reading file.')\n                );\n            }\n        }\n    }\n\n    public async saveChargeCodes() {\n        this.loading = true;\n        const cleaned_codes = this.charge_codes.filter((_) => _ && _.trim());\n        await this._state.saveSettings({ charge_codes: cleaned_codes });\n        this._dialog_ref.close();\n    }\n\n    public trackByFn(idx: number, item: any) {\n        return idx;\n    }\n}\n"],"names":["EventEmitter","csvToJson","downloadFile","CateringItem","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CateringImportMenuModalComponent_main_4_Template_input_change_6_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","handleFileEvent","CateringImportMenuModalComponent_main_4_Template_button_click_8_listener","downloadTemplate","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","loading","CateringImportMenuModalComponent","constructor","event","element","target","files","length","file","fileReader","FileReader","addEventListener","e","contents","result","data","emit","reason","metadata","filter","_","type","toLowerCase","map","i","options","tags","id","name","group","category","multiple","unit_price","readAsText","template","_2","selectors","outputs","decls","vars","consts","CateringImportMenuModalComponent_Template","rf","ctx","ɵɵtemplate","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","ɵɵtemplateRefExtractor","ɵɵproperty","load_state_r3","COMMA","ENTER","SPACE","FormControl","FormGroup","Validators","MAT_DIALOG_DATA","randomInt","ɵɵclassProp","form","controls","invalid","touched","auto_r3","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template_mat_chip_row_removed_0_listener","item_r6","_r5","$implicit","removeTag","ɵɵtextInterpolate1","ɵɵi18n","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","CateringItemModalComponent_form_4_div_4_Template_input_matChipInputTokenEnd_7_listener","_r4","addTag","tag_list","chipList_r7","separators","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_13_listener","value","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_15_listener","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_17_listener","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_19_listener","CateringItemModalComponent_form_4_Template_mat_checkbox_ngModelChange_21_listener","CateringItemModalComponent_form_4_div_27_Template","description","tmp_9_0","get","hasTag","ɵɵpureFunction0","_c0","renderPercent","images","CateringItemModalComponent_footer_5_Template_button_click_1_listener","_r8","saveChanges","dirty","option_r9","CateringItemModalComponent","item","_data","categories","tag","includes","required","accept_points","discount_cap","markAsDirty","input","trim","push","setValue","existing_tag","index","indexOf","splice","ɵɵdirectiveInject","i18n_0","ngI18nClosureMode","$localize","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","load_state_r10","CateringStateService","unique","CateringOrdersService","CateringMenuComponent_ng_template_1_Template_mat_checkbox_ngModelChange_0_listener","row_r2","row","ctx_r2","setEnabled","isEnabled","ɵɵpipeBind2","data_r4","ɵɵpipeBind1","symbol","CateringMenuComponent_ng_template_5_Template_button_click_6_listener","row_r6","addOption","CateringMenuComponent_ng_template_5_Template_button_click_12_listener","editItem","CateringMenuComponent_ng_template_5_Template_button_click_18_listener","removeItem","CateringMenuComponent_ng_template_5_Template_button_click_24_listener","show_children","can_edit","menu_r7","CateringMenuComponent_ng_template_7_div_0_button_7_Template_button_click_0_listener","row_r10","editOption","CateringMenuComponent_ng_template_7_div_0_button_8_Template_button_click_0_listener","_r11","removeOption","CateringMenuComponent_ng_template_7_div_0_button_7_Template","CateringMenuComponent_ng_template_7_div_0_button_8_Template","CateringMenuComponent_ng_template_7_div_0_Template","CateringMenuComponent","filters","_orders","_catering","is_editable","menu","option","deleteOption","addItem","deleteItem","hide_for_zones","zone","state","list","updateItem","i1","i2","CateringMenuComponent_Template","CateringMenuComponent_ng_template_1_Template","CateringMenuComponent_ng_template_3_Template","CateringMenuComponent_ng_template_5_Template","CateringMenuComponent_ng_template_7_Template","ɵɵpureFunction5","_c5","ɵɵpureFunction1","active_template_r12","_c1","_c2","_c3","price_template_r13","_c4","actions_template_r14","search","child_template_r15","ctx_r0","auto_r2","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","CateringItemOptionModalComponent_footer_5_Template_button_click_1_listener","_r3","option_r4","CateringItemOptionModalComponent","types","new_option","parent","concat","CateringItemOptionModalComponent_Template","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","load_state_r5","opt_r3","ɵɵelementContainerStart","CateringOrderItemComponent_ng_container_0_ng_container_14_div_1_Template","CateringOrderItemComponent_ng_container_0_Template_button_click_4_listener","toggle","CateringOrderItemComponent_ng_container_0_ng_container_14_Template","active","amount","quantity","option_list","ACTIVE_ITEMS","Set","CateringOrderItemComponent","item_key","order_id","ngOnInit","has","delete","add","inputs","attrs","CateringOrderItemComponent_Template","CateringOrderItemComponent_ng_container_0_Template","AsyncHandler","SettingsService","CATERING_STATUSES","data_r1","time_format","ɵɵtextInterpolate4","date","date_end","CateringOrderListComponent_ng_template_8_span_2_Template","space","display_name","CateringOrderListComponent_ng_template_10_span_3_Template","data_r5","organiser","host","email","CateringOrderListComponent_ng_template_12_button_8_Template_button_click_0_listener","status_r7","_r6","row_r8","updateStatus","ɵɵstyleProp","colour","CateringOrderListComponent_ng_template_12_button_8_Template","tmp_11_0","status","data_r9","menu_r10","tmp_13_0","statuses","row_r12","notes","CateringOrderListComponent_ng_template_14_ng_template_4_Template","CateringOrderListComponent_ng_template_14_Template_button_click_6_listener","notes_template_r13","row_r15","item_r14","CateringOrderListComponent_ng_template_16_ul_0_li_1_Template","items","CateringOrderListComponent_ng_template_16_ul_0_Template","CateringOrderListComponent","_settings","find","_this","this","order_list","filtered","_ref","_asyncToGenerator","order","s","timeout","_x","_x2","apply","arguments","startPolling","ngOnDestroy","stopPolling","trackByFn","undefined","features","ɵɵInheritDefinitionFeature","CateringOrderListComponent_Template","CateringOrderListComponent_ng_template_4_Template","CateringOrderListComponent_ng_template_6_Template","CateringOrderListComponent_ng_template_8_Template","CateringOrderListComponent_ng_template_10_Template","CateringOrderListComponent_ng_template_12_Template","CateringOrderListComponent_ng_template_14_Template","CateringOrderListComponent_ng_template_16_Template","ɵɵpureFunction8","_c8","state_template_r16","time_template_r17","location_template_r18","host_template_r19","_c6","status_template_r20","_c7","actions_template_r21","child_template_r22","CateringOrder","OrganisationService","cateringItemAvailable","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template_a_counter_ngModelChange_0_listener","item_r2","updateItemQuantity","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template_button_click_7_listener","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r5","menu_items","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","CateringOrderModalComponent_div_0_ng_container_1_Template","show_order_details","order_details_r6","CateringOrderModalComponent_footer_1_ng_container_1_Template_button_click_3_listener","_r7","item_count","CateringOrderModalComponent_footer_1_ng_template_2_Template_button_click_0_listener","CateringOrderModalComponent_footer_1_ng_template_2_Template_button_click_2_listener","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","order_actions_r9","optionsFor","item_r11","ɵɵtextInterpolate2","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","CateringOrderModalComponent_ng_template_4_div_4_Template_a_counter_ngModelChange_8_listener","_r10","total_cost","CateringOrderModalComponent_ng_template_4_div_4_Template","CateringOrderModalComponent","_org","currency_code","rules","getCateringConfig","level","parent_id","subscribe","cat","updateMenuQuantities","choose_options","old_item","itm","reduce","c","o","opt","selectOptions","then","new_item","options_string","sort","a","b","localeCompare","join","confirmOrder","CateringOrderModalComponent_Template","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","load_state_r12","opt_r4","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template_mat_radio_group_ngModelChange_1_listener","group_r2","updateGroupOption","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r6","ɵɵtwoWayListener","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template_mat_checkbox_ngModelChange_0_listener","ɵɵtwoWayBindingSet","option_state","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","ɵɵtwoWayProperty","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","multi_options_r7","CateringOrderOptionsModalComponent","groups","group_list","saveOptions","CateringOrderOptionsModalComponent_Template","CateringOrderOptionsModalComponent_div_7_Template","CateringOrderOptionsModalComponent_Template_button_click_9_listener","BehaviorSubject","combineLatest","of","switchMap","debounceTime","tap","shareReplay","catchError","startOfDay","endOfDay","getUnixTime","format","flatten","queryEvents","updateEventMetadata","CalendarEvent","checkOrder","_filters","getValue","next","_poll","_loading","orders","pipe","zones","start","Date","now","end","zone_ids","period_start","period_end","events","valid_catering","deliver_at","asObservable","subscription","delay","interval","valueOf","clearInterval","updated_order","catering","extension_data","system_id","resources","system","booking","toPromise","factory","ɵfac","providedIn","MatDialog","updateMetadata","showMetadata","first","take","notifyError","notifySuccess","openConfirmModal","AttachedResourceConfigModalComponent","building","_menu","_dialog","_updated","_currency","_change","currency","settings","active_building","details","post","require_notes","charge_codes","availability","disabled_rooms","bld","getCateringForZone","manageCateringOrder","_this2","ref","open","Promise","race","componentInstance","afterClosed","close","_this3","findIndex","updateMenu","_this4","_this5","_this6","title","content","icon","class","_this7","editConfig","_this8","config","saveNotes","saveSettings","updateConfig","importMenu","_this9","updated_menu","catch","zone_id","_this10","old_settings","Array","addItemToOrder","match","new_order","ɵɵinject","i3","CommonModule","Type","FormsModule","ReactiveFormsModule","MatAutocompleteModule","MatCheckboxModule","MatDialogModule","MatMenuModule","MatTabsModule","MatRadioModule","MatTooltipModule","MatFormFieldModule","MatProgressSpinnerModule","MatProgressBarModule","FormFieldsModule","ComponentsModule","NewCateringOrderModalComponent","CateringItemListComponent","CateringItemDetailsComponent","CateringItemFiltersComponent","CateringListFieldComponent","ChargeCodeListModalComponent","CateringItemListItemComponent","COMPONENTS","SharedCateringModule","_3","declarations","imports","exports","MatDialogRef","ChargeCodeListModalComponent_main_6_div_1_Template_input_ngModelChange_2_listener","i_r2","ChargeCodeListModalComponent_main_6_div_1_Template_button_click_3_listener","removeCode","ChargeCodeListModalComponent_main_6_div_1_Template","ChargeCodeListModalComponent_footer_7_Template_input_change_3_listener","addCodesFromFile","ChargeCodeListModalComponent_footer_7_Template_button_click_4_listener","newCode","ChargeCodeListModalComponent_footer_7_Template_button_click_6_listener","saveChargeCodes","_state","_dialog_ref","reader","evt","srcElement","cleaned_codes","idx","ChargeCodeListModalComponent_Template","ChargeCodeListModalComponent_main_6_Template","ChargeCodeListModalComponent_footer_7_Template","ChargeCodeListModalComponent_ng_template_8_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}