{"version":3,"file":"apps_concierge_src_app_visitors_visitors_module_ts.js","mappings":"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","names":["VisitorsStateService","AsyncHandler","search","this","_search","getValue","constructor","_dialog","_org","super","_poll","BehaviorSubject","_filters","_loading","loading","asObservable","filters","guests","combineLatest","pipe","debounceTime","switchMap","next","date","Date","start","startOfDay","end","addDays","period","queryGuests","period_start","getUnixTime","period_end","zone_ids","zones","join","tap","shareReplay","events","zip","queryEvents","catchError","_","of","queryBookings","type","building","id","map","i","newCalendarEventFromBooking","e_list","v_list","r_list","list","all_bookings","filter","event","length","attendees","filtered_events","toLowerCase","find","user","name","includes","email","filtered_guests","guest_list","flatten","is_external","g","GuestUser","extension_data","host","organiser","setFilters","setSearchString","startPolling","delay","interval","now","stopPolling","clearInterval","checkGuestIn","_this","_asyncToGenerator","new_user","_checkinCall","toPromise","catch","e","notifyError","notifySuccess","new_attendees","unique","sort","a","b","organizer","localeCompare","CalendarEvent","setExt","guest","field","value","updateGuest","approveVisitor","_this2","details","openConfirmModal","title","content","icon","reason","close","status","declineVisitor","_this3","checkGuestOut","_this4","checkAllGuestsIn","_this5","checked_in","Error","Promise","all","checkAllGuestsOut","_this6","state","from_bookings","checkinBookingAttendee","checkinEventGuest","system_id","system","resources","downloadVisitorsList","_this7","take","Name","Email","Host","Status","format","data","jsonToCsv","downloadFile","t","i0","i1","i2","core","Yz7","factory","ɵfac","providedIn","level_r2","display_name","$event","_r4","ctx_r3","tmp_0_0","ctx_r1","VisitorsTopbarComponent","_state","_route","_router","levels","active_levels","setDate","setSearch","str","updateZones","navigate","relativeTo","queryParams","ngOnInit","initialised","first","subscription","queryParamMap","subscribe","params","has","get","split","level","levelWithID","buildings","bld","parent_id","zone","lvl","push","i3","Xpm","selectors","features","decls","vars","consts","template","rf","ctx","VisitorsTopbarComponent_mat_option_3_Template","show_guests","VisitorsTopbarComponent_mat_slide_toggle_18_Template","tmp_2_0","tmp_6_0","tmp_7_0","VisitorDetailsComponent_ng_container_0_ng_container_2_i_1_Template","visitor","_r2","_r10","ctx_r9","toggleRemote","ctx_r6","remote","ctx_r7","creator","location","today","qr","code","VisitorDetailsComponent_ng_container_0_ng_container_2_Template","VisitorDetailsComponent_ng_container_0_ng_template_3_Template","VisitorDetailsComponent_ng_container_0_ng_template_5_Template","VisitorDetailsComponent_ng_container_0_action_icon_10_Template","_r12","ctx_r11","checkin","ctx_r13","checkout","ctx_r14","printQRCode","VisitorDetailsComponent_ng_container_0_div_18_Template","ctx_r0","is_event","can_print","show_qr_code","VisitorDetailsComponent","_settings","eventChange","EventEmitter","emit","remote_list","ext","new_item","toJSON","saveEvent","statusText","message","timeout","window","print","ngOnChanges","changes","loadGuest","tries","showGuest","inputs","outputs","VisitorDetailsComponent_ng_container_0_Template","VisitorEventComponent_div_0_i_2_Template","VisitorEventComponent_div_0_i_3_Template","VisitorEventComponent_div_0_i_4_Template","_r6","ctx_r5","checkinGuests","checkoutGuests","ctx_r8","show_attendees","tmp_3_0","guestCount","has_search","user_r10","matches","VisitorEventComponent_ng_container_2_div_1_Template","_c0","VisitorEventComponent","reduce","c","u","updateMatches","VisitorEventComponent_div_0_Template","VisitorEventComponent_ng_container_2_Template","VisitorListingsComponent_ng_container_15_visitor_event_1_Template","bookings","trackByFn","VisitorListingsComponent","index","undefined","VisitorListingsComponent_ng_container_15_Template","VisitorListingsComponent_ng_template_17_Template","_r1","GuestListingComponent_ng_template_4_i_0_Template","GuestListingComponent_ng_template_4_ng_template_1_Template","row_r15","_r17","row_r19","row_r20","vaccination_confirmed","_r27","row","ctx_r25","ctx_r28","vaccination_proof","url","GuestListingComponent_ng_template_8_button_1_Template","GuestListingComponent_ng_template_8_ng_template_2_Template","_r22","row_r31","id_confirmed","_r38","ctx_r36","ctx_r39","id_data","GuestListingComponent_ng_template_10_button_1_Template","GuestListingComponent_ng_template_10_ng_template_2_Template","_r33","row_r42","_r45","ctx_r44","ctx_r46","_r43","row_r47","item_r51","GuestListingComponent_ng_template_16_a_5_Template","_r53","ctx_r52","ctx_r54","ctx_r55","ctx_r56","row_r48","attachments","_r49","_r58","ctx_r57","downloadVisitorList","GuestListingComponent","columns","display_columns","fields","vaccinated","actions","column_sizes","f","v","GuestListingComponent_ng_template_4_Template","GuestListingComponent_ng_template_6_Template","GuestListingComponent_ng_template_8_Template","GuestListingComponent_ng_template_10_Template","GuestListingComponent_ng_template_12_Template","GuestListingComponent_ng_template_14_Template","GuestListingComponent_ng_template_16_Template","GuestListingComponent_button_18_Template","_r0","_r8","ROUTES","path","component","VisitorsComponent","ngOnDestroy","attrs","VisitorsComponent_visitor_listings_3_Template","VisitorsComponent_guest_listings_5_Template","VisitorsComponent_mat_progress_bar_7_Template","tmp_1_0","VisitorsModule","oAB","cJS","CommonModule","FormsModule","UIModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/visitor-details.component.ts","./apps/concierge/src/app/visitors/visitor-event.component.ts","./apps/concierge/src/app/visitors/visitor-listings.component.ts","./apps/concierge/src/app/visitors/guest-listing.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { startOfDay, getUnixTime, addDays, format } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    downloadFile,\n    flatten,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    unique,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    checkinEventGuest,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { GuestUser, queryGuests, updateGuest, User } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\nimport { checkinBookingAttendee, queryBookings } from '@placeos/bookings';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    period?: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly guests = combineLatest([this._filters, this._poll]).pipe(\n        debounceTime(150),\n        switchMap(([filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return queryGuests({\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zone_ids: (filters.zones || []).join(','),\n            });\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n\n    public readonly events = combineLatest([this._filters, this._poll]).pipe(\n        debounceTime(150),\n        switchMap(([filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return zip(\n                queryEvents({\n                    period_start: getUnixTime(start),\n                    period_end: getUnixTime(end),\n                    zone_ids: (filters.zones || []).join(','),\n                }).pipe(catchError((_) => of([]))),\n                queryBookings({\n                    type: 'visitor',\n                    period_start: getUnixTime(start),\n                    period_end: getUnixTime(end),\n                    zones: this._org.building?.id,\n                }).pipe(\n                    map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                    catchError((_) => of([]))\n                ),\n                queryBookings({\n                    type: 'room',\n                    period_start: getUnixTime(start),\n                    period_end: getUnixTime(end),\n                    zones: (filters.zones || []).join(','),\n                }).pipe(\n                    map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        map(([e_list, v_list, r_list]) => {\n            const list = [...e_list, ...v_list, ...r_list];\n            this._loading.next(false);\n            return this._filters.getValue().all_bookings\n                ? list\n                : list.filter(\n                      (event) =>\n                          event?.guests?.length && event?.attendees?.length > 1\n                  );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_events = combineLatest([\n        this._search,\n        this.events,\n    ]).pipe(\n        map(([search, events]) => {\n            const filter = search.toLowerCase();\n            return events.filter((event) =>\n                event.attendees.find(\n                    (user) =>\n                        user.name?.toLowerCase().includes(filter) ||\n                        user.email?.toLowerCase().includes(filter)\n                )\n            );\n        })\n    );\n\n    public readonly filtered_guests = combineLatest([\n        this._search,\n        this.filtered_events,\n        this.guests,\n    ]).pipe(\n        map(([search, events, guest_list]) => {\n            const filter = search.toLowerCase();\n            return flatten(\n                events.map((event) => {\n                    const guests = event.attendees.filter(\n                        (user) =>\n                            user.is_external &&\n                            (user.name?.toLowerCase().includes(filter) ||\n                                user.email?.toLowerCase().includes(filter))\n                    );\n                    return guests.map((_) => {\n                        const g: any =\n                            guest_list.find((g) => g.email === _.email) || {};\n                        return new GuestUser({\n                            ..._,\n                            ...g,\n                            extension_data: {\n                                ..._.extension_data,\n                                ...g.extension_data,\n                                date: event.date,\n                                host:\n                                    event.organiser?.name ||\n                                    event.organiser?.email ||\n                                    event.host,\n                            },\n                        });\n                    });\n                })\n            );\n        })\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    constructor(private _dialog: MatDialog, private _org: OrganisationService) {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async checkGuestIn(event: CalendarEvent, user: User) {\n        const checkin_fn = this._checkinCall(event, user.email, true);\n        const new_user = await checkin_fn.toPromise().catch((e) => {\n            notifyError(\n                `Error checking in ${user.name} for ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked in ${user.name} for ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async setExt<T = any>(guest: GuestUser, field: string, value: T) {\n        const extension_data = { ...guest.extension_data };\n        extension_data[field] = value;\n        await updateGuest(guest.id, { ...guest, extension_data }).toPromise();\n    }\n\n    public async approveVisitor(guest: GuestUser) {\n        const details = await openConfirmModal(\n            {\n                title: 'Approve Visitor',\n                content: `Approve attendance of ${guest.name} to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await updateGuest(guest.id, {\n            ...guest,\n            extension_data: { ...guest.extension_data, status: 'approved' },\n        }).toPromise();\n        details.close();\n    }\n\n    public async declineVisitor(guest: GuestUser) {\n        const details = await openConfirmModal(\n            {\n                title: 'Decline Visitor',\n                content: `Decline attendance of ${guest.name} to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await updateGuest(guest.id, {\n            ...guest,\n            extension_data: { ...guest.extension_data, status: 'declined' },\n        }).toPromise();\n        details.close();\n    }\n\n    public async checkGuestOut(event: CalendarEvent, user: User) {\n        const new_user = await this._checkinCall(event, user.email, false)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking out ${user.name} from ${event.organiser?.name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked out ${user.name} from ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsIn(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && !user.checked_in\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkin');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                this._checkinCall(event, user.email, true).toPromise()\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking in all guests for ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked in all guests for ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsOut(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && user.checked_in && !user.organizer\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkout');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                this._checkinCall(event, user.email, false).toPromise()\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking out all guests from ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked out all guests from ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    private _checkinCall(\n        event: CalendarEvent,\n        email: string,\n        state: boolean = true\n    ) {\n        return event.from_bookings\n            ? checkinBookingAttendee(event.id, email, state)\n            : checkinEventGuest(event.id, email, state, {\n                  system_id: event.system?.id || event.resources[0]?.id,\n              });\n    }\n\n    public async downloadVisitorsList() {\n        const guests: GuestUser[] = await this.filtered_guests\n            .pipe(take(1))\n            .toPromise();\n        if (!guests.length) return;\n        const { date } = this._filters.getValue();\n        const list = guests.map((_) => ({\n            Name: _.name,\n            Email: _.email,\n            'Checked In': _.checked_in,\n            Host: _.extension_data?.host || '',\n            Status: _.status,\n            Date: format(_.extension_data?.date, 'dd MMM h:mm a'),\n        }));\n        const data = jsonToCsv(list);\n        downloadFile(\n            `visitor-list-${format(date || Date.now(), 'MMM-dd')}.csv`,\n            data\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-white dark:bg-neutral-700 h-20 px-4 border-b border-gray-300 dark:border-neutral-500 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.period || 1\"\n                    (ngModelChange)=\"setFilters({ period: $event })\"\n                    placeholder=\"Viewing Period\"\n                >\n                    <mat-option [value]=\"1\">Show Day</mat-option>\n                    <mat-option [value]=\"7\">Show Week</mat-option>\n                    <mat-option [value]=\"30\">Show Month</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(filters | async)?.show_guests\"\n                (ngModelChange)=\"setFilters({ show_guests: $event })\"\n                ><div class=\"text-xs\">Only Guests</div></mat-slide-toggle\n            >\n            <mat-slide-toggle\n                class=\"m-2\"\n                *ngIf=\"!(filters | async)?.show_guests\"\n                [ngModel]=\"(filters | async)?.all_bookings\"\n                (ngModelChange)=\"setFilters({ all_bookings: $event })\"\n                ><div class=\"text-xs\">All Bookings</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, notifyError, SettingsService } from '@placeos/common';\nimport { CalendarEvent, saveEvent } from '@placeos/events';\nimport { showGuest, User } from '@placeos/users';\n\nimport { VisitorsStateService } from './visitors-state.service';\nimport { Booking } from '@placeos/bookings';\nimport { is } from 'date-fns/locale';\n\n@Component({\n    selector: 'visitor-details',\n    template: `\n        <ng-container *ngIf=\"visitor\">\n            <div details class=\"w-12 text-lg flex justify-center\">\n                <ng-container *ngIf=\"!visitor?.organizer; else host_state\">\n                    <i\n                        *ngIf=\"!visitor?.checked_in; else checkin_state\"\n                        class=\"p-2 rounded-full material-icons border-2 border-dotted border-gray-600 dark:border-neutral-800\"\n                        >face</i\n                    >\n                </ng-container>\n                <ng-template #checkin_state>\n                    <i\n                        class=\"p-2 rounded-full material-icons bg-green-600 border-2 border-green-600 text-white\"\n                        >done</i\n                    >\n                </ng-template>\n                <ng-template #host_state>\n                    <i\n                        class=\"p-2 rounded-full material-icons bg-blue-600 border-2 border-blue-600 text-white\"\n                        >assignment_ind</i\n                    >\n                </ng-template>\n            </div>\n            <div flex class=\"p-2 flex-1\">\n                {{ visitor?.name || visitor?.email }}\n            </div>\n            <div class=\"w-48 py-2 flex items-center justify-end\">\n                <action-icon\n                    remote\n                    [matTooltip]=\"\n                        remote\n                            ? 'Set as In-Person Visitor'\n                            : 'Set as Remote Visitior'\n                    \"\n                    [loading]=\"loading === 'remote'\"\n                    [content]=\"remote ? 'tap_and_play' : 'business'\"\n                    (click)=\"toggleRemote()\"\n                    [class.invisible]=\"\n                        !visitor?.is_external || visitor?.organizer\n                    \"\n                    *ngIf=\"is_event\"\n                >\n                </action-icon>\n                <action-icon\n                    checkin\n                    matTooltip=\"Checkin Guest\"\n                    [loading]=\"loading === 'checkin'\"\n                    [state]=\"visitor?.checked_in ? 'success' : ''\"\n                    content=\"event_available\"\n                    (click)=\"checkin()\"\n                    [class.invisible]=\"\n                        !visitor?.is_external || visitor?.organizer\n                    \"\n                >\n                </action-icon>\n                <action-icon\n                    checkout\n                    matTooltip=\"Checkout Guest\"\n                    [loading]=\"loading === 'checkout'\"\n                    content=\"event_busy\"\n                    (click)=\"checkout()\"\n                    [class.invisible]=\"\n                        !visitor?.is_external || visitor?.organizer\n                    \"\n                >\n                </action-icon>\n                <a\n                    [href]=\"'mailto:' + visitor?.email\"\n                    icon\n                    matRipple\n                    [matTooltip]=\"\n                        visitor?.organizer ? 'Email Host' : 'Email Guest'\n                    \"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n                <action-icon\n                    matTooltip=\"Print QR Code\"\n                    [loading]=\"loading === 'printing'\"\n                    content=\"event_busy\"\n                    (click)=\"printQRCode()\"\n                    [class.invisible]=\"!can_print\"\n                >\n                </action-icon>\n            </div>\n            <div class=\"w-14 p-2\"></div>\n            <div\n                qr-code\n                *ngIf=\"show_qr_code\"\n                class=\"print-only fixed inset-0 flex flex-col justify-center bg-white space-y-2\"\n            >\n                <h2>{{ visitor?.name || visitor?.email }}</h2>\n                <div>\n                    <span>Host:</span>\n                    {{\n                        event?.organiser?.name ||\n                            event?.organiser?.name ||\n                            event?.creator\n                    }}\n                </div>\n                <div><span>Purpose:</span> {{ event?.title }}</div>\n                <div>\n                    <span>Location:</span>\n                    {{ event?.location || '&lt;Unspecified&gt;' }}\n                </div>\n                <div>\n                    <span>Issue Date:</span> {{ today | date: 'mediumDate' }}\n                </div>\n                <div class=\"flex justify-center\">\n                    <img\n                        [src]=\"visitor?.extension_data?.qr?.code || ''\"\n                        alt=\"qr-code\"\n                    />\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                width: 100%;\n                padding: 0 0.5rem;\n            }\n\n            :host > div {\n                display: flex;\n                align-items: center;\n                height: 100%;\n                border-bottom: 1px solid #ccc;\n                height: 3.5rem;\n            }\n\n            :host > div:first-child {\n                border: none;\n            }\n\n            .invisible {\n                opacity: 0;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class VisitorDetailsComponent extends AsyncHandler implements OnChanges {\n    @Input() public event: CalendarEvent;\n    @Input() public visitor: User;\n    @Output() public eventChange = new EventEmitter<CalendarEvent>();\n\n    public show_attendees: boolean;\n    public loading: string;\n    public show_qr_code: boolean;\n\n    public get is_event() {\n        return !this.event.from_bookings;\n    }\n\n    public readonly checkin = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkGuestIn(this.event as CalendarEvent, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public readonly toggleRemote = async () => {\n        if (!this.is_event) {\n            return notifyError(\n                'Unable to set remote status for standalone visitor bookings.'\n            );\n        }\n        this.loading = 'remote';\n        const remote_list =\n            this.event.ext('remote')?.filter((e) => e !== this.visitor.email) ||\n            [];\n        if (!this.remote) {\n            remote_list.push(this.visitor.email);\n        }\n        const new_item = new CalendarEvent({\n            ...this.event.toJSON(),\n            remote: remote_list,\n        }).toJSON();\n        this.event = await saveEvent(new_item)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error setting visitor status. Error: ${\n                        e.statusText || e.message || e\n                    }`\n                );\n                return this.event;\n            });\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public readonly checkout = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkGuestOut(this.event as CalendarEvent, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    /** Open print dialog for user's QR code */\n    public readonly printQRCode = () => {\n        this.show_qr_code = true;\n        this.timeout(\n            'print',\n            () => {\n                window.print();\n                this.show_qr_code = false;\n            },\n            50\n        );\n    };\n\n    public get can_print(): boolean {\n        return (\n            this._settings.get('app.can_print_qr') &&\n            this.visitor.checked_in &&\n            this.visitor?.extension_data.qr\n        );\n    }\n\n    public get today(): number {\n        return Date.now();\n    }\n\n    public get remote(): boolean {\n        return !!this.event?.extension_data?.remote?.find(\n            (e) => e === this.visitor?.email\n        );\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.visitor) this.loadGuest();\n    }\n\n    public async loadGuest(tries: number = 0) {\n        if (!this.visitor) return;\n        this.loading = 'printing';\n        if (this.visitor.checked_in) {\n            const guest = await showGuest(this.visitor.email)\n                .toPromise()\n                .catch((_) => null);\n            if (!guest?.extension_data?.qr?.code && tries < 5) {\n                this.timeout('load_guest', () => this.loadGuest(++tries), 1000);\n            } else this.loading = '';\n        } else this.loading = '';\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { HashMap } from '@placeos/ts-client/dist/esm/utilities/types';\nimport { AsyncHandler } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-event',\n    template: `\n        <div\n            event\n            class=\"flex items-center px-2 bg-gray-100 dark:bg-neutral-700\"\n            *ngIf=\"event\"\n        >\n            <div class=\"w-12 text-lg flex justify-center\">\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400 dark:bg-neutral-800\"\n                    *ngIf=\"\n                        event?.status !== 'declined' && event?.state !== 'done'\n                    \"\n                    >event</i\n                >\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400 dark:bg-neutral-800\"\n                    *ngIf=\"event?.status === 'declined'\"\n                    >close</i\n                >\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400 dark:bg-neutral-800 opacity-40\"\n                    *ngIf=\"\n                        event?.state === 'done' && event?.status !== 'declined'\n                    \"\n                    >done</i\n                >\n            </div>\n            <div class=\"w-24 p-2\">\n                {{\n                    event?.date\n                        | date\n                            : ((filters | async)?.period > 1\n                                  ? 'MMM d, h:mm a'\n                                  : 'shortTime')\n                }}\n            </div>\n            <div class=\"w-48 p-2\">\n                {{ event?.organiser?.name || event?.organiser?.email }}\n            </div>\n            <div flex class=\"p-2 flex-1\">{{ event?.title }}</div>\n            <div class=\"w-64 p-2 truncate\">{{ event?.location }}</div>\n            <div class=\"w-32 py-2 flex items-center\">\n                <action-icon\n                    checkin\n                    matTooltip=\"Checkin All Guests\"\n                    [loading]=\"loading === 'checkin'\"\n                    [disabled]=\"guestCount <= 0\"\n                    content=\"event_available\"\n                    (click)=\"checkinGuests()\"\n                >\n                </action-icon>\n                <action-icon\n                    checkout\n                    matTooltip=\"Checkout All Guests\"\n                    [loading]=\"loading === 'checkout'\"\n                    [disabled]=\"guestCount <= 0\"\n                    content=\"event_busy\"\n                    (click)=\"checkoutGuests()\"\n                >\n                </action-icon>\n                <a\n                    icon\n                    matRipple\n                    [href]=\"'mailto:' + event?.organiser?.email\"\n                    matTooltip=\"Email Host\"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n            </div>\n            <div class=\"w-16 p-2\">\n                <button\n                    icon\n                    matRipple\n                    (click)=\"show_attendees = !show_attendees\"\n                    [disabled]=\"!event?.attendees?.length\"\n                    [matTooltip]=\"\n                        show_attendees || has_search\n                            ? 'Hide Attendees'\n                            : 'Show Attendees'\n                    \"\n                >\n                    <app-icon>{{\n                        show_attendees\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            attendees\n            class=\"w-full overflow-hidden relative border-b border-gray-300 dark:border-neutral-600\"\n            [style.height]=\"\n                !show_attendees && !has_search\n                    ? '0rem'\n                    : event?.attendees?.length * 3.5 + 'rem'\n            \"\n        >\n            <ng-container *ngIf=\"show_attendees || has_search\">\n                <div\n                    visitor\n                    class=\"relative w-full pl-12 bg-gray-200 dark:bg-neutral-600\"\n                    *ngFor=\"let user of event?.attendees || []\"\n                >\n                    <div\n                        class=\"absolute left-8 top-1/2 -translate-y-full border-b-2 border-l-2 border-gray-400 dark:border-neutral-700 w-4 h-full\"\n                    ></div>\n                    <visitor-details\n                        [attr.disabled]=\"!matches[user.email]\"\n                        [visitor]=\"user\"\n                        [(event)]=\"event\"\n                    ></visitor-details>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            visitor-details {\n                transition: opacity 200ms;\n            }\n\n            [attendees] {\n                transition: height 200ms;\n            }\n\n            [visitor] {\n                height: 3.5rem;\n            }\n\n            [disabled='true'] {\n                opacity: 0.35;\n            }\n        `,\n    ],\n})\nexport class VisitorEventComponent extends AsyncHandler implements OnInit {\n    @Input() public event: CalendarEvent;\n\n    public show_attendees: boolean;\n    public loading: string;\n    public matches: HashMap<boolean> = {};\n    public readonly filters = this._state.filters;\n\n    public readonly checkinGuests = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkAllGuestsIn(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n    public readonly checkoutGuests = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkAllGuestsOut(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n\n    public get guestCount() {\n        return (\n            this.event?.attendees?.reduce(\n                (c, u) => c + (u.is_external && !u.organizer ? 1 : 0),\n                0\n            ) || 0\n        );\n    }\n\n    public get has_search() {\n        return this._state.search;\n    }\n\n    constructor(private _state: VisitorsStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'events',\n            this._state.filtered_events.subscribe(() => this.updateMatches())\n        );\n    }\n\n    public updateMatches() {\n        if (!this.event) return;\n        this.matches = {};\n        const filter = (this._state.search || '').toLowerCase();\n        for (const user of this.event?.attendees || []) {\n            this.matches[user.email] =\n                !filter ||\n                user.email.toLowerCase().includes(filter) ||\n                user.name.toLowerCase().includes(filter);\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CalendarEvent } from '@placeos/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-listings',\n    template: `\n        <div class=\"w-full flex flex-col flex-1 text-sm h-full\">\n            <div\n                class=\"w-full flex items-center bg-white dark:bg-neutral-700 border-b border-gray-500 p-2 font-medium\"\n            >\n                <div class=\"w-12 p-2\"></div>\n                <div class=\"w-24 p-2\">Time</div>\n                <div class=\"w-48 p-2\">Host</div>\n                <div flex class=\"p-2 flex-1\">Title</div>\n                <div class=\"w-64 p-2\">Location</div>\n                <div class=\"w-32 p-2\">Actions</div>\n                <div class=\"w-16 p-2\"></div>\n            </div>\n            <div class=\"w-full flex-1 overflow-auto h-1/2\">\n                <ng-container\n                    *ngIf=\"(bookings | async)?.length; else empty_state\"\n                >\n                    <visitor-event\n                        *ngFor=\"\n                            let event of bookings | async;\n                            trackBy: trackByFn\n                        \"\n                        [event]=\"event\"\n                    ></visitor-event>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex items-center justify-center\">\n                <p class=\"p-8\">\n                    There are no visitors for the currently selected date.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class VisitorListingsComponent {\n    public readonly bookings = this._state.filtered_events;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, event: CalendarEvent) {\n        return event ? event.id : undefined;\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'guest-listings',\n    template: `\n        <div\n            class=\"w-full flex flex-col flex-1 text-sm h-full overflow-auto pb-20\"\n        >\n            <custom-table\n                class=\"min-w-[88rem]\"\n                [dataSource]=\"guests\"\n                [filter]=\"search | async\"\n                [columns]=\"columns\"\n                [display_column]=\"display_columns\"\n                [column_size]=\"column_sizes\"\n                [template]=\"{\n                    state: state_template,\n                    status: status_template,\n                    date: date_template,\n                    host: host_template,\n                    vaccinated: vaccinated_template,\n                    id_data: id_template,\n                    actions: action_template\n                }\"\n                [empty]=\"\n                    (search | async)\n                        ? 'No matching visitors'\n                        : 'There are visitors for the currently selected date.'\n                \"\n            ></custom-table>\n        </div>\n        <ng-template #state_template let-row=\"row\">\n            <i\n                *ngIf=\"!row?.checked_in; else checkin_state\"\n                class=\"p-2 rounded-full material-icons border-2 border-dotted border-gray-600 dark:border-neutral-800\"\n                >face</i\n            >\n            <ng-template #checkin_state>\n                <i\n                    class=\"p-2 rounded-full material-icons bg-green-600 border-2 border-green-600 text-white\"\n                    >done</i\n                >\n            </ng-template>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            {{ row.extension_data?.host }}\n        </ng-template>\n        <ng-template #vaccinated_template let-row=\"row\">\n            <div customTooltip [content]=\"vaccine_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.vaccination_proof?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.vaccination_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.vaccination_confirmed ===\n                              false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #vaccine_confirmation>\n                <div\n                    class=\"bg-white rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.vaccination_proof?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] p-2 object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'vaccination_confirmed', true)\"\n                    >\n                        Confirm Vaccination Proof\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'vaccination_confirmed', false)\"\n                    >\n                        Reject Vaccination Proof\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #id_template let-row=\"row\">\n            <div customTooltip [content]=\"id_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.id_data?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.id_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.id_confirmed === false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #id_confirmation>\n                <div\n                    class=\"bg-white rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.id_data?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'id_confirmed', true)\"\n                    >\n                        Confirm ID\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'id_confirmed', false)\"\n                    >\n                        Reject ID\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"rounded-3xl bg-pending border-none\"\n                [class.bg-success]=\"row?.status === 'approved'\"\n                [class.!bg-error]=\"row?.status === 'declined'\"\n                [matMenuTriggerFor]=\"menu\"\n            >\n                <div class=\"flex items-center\">\n                    <div class=\"mx-2\">\n                        {{\n                            row?.status === 'approved'\n                                ? 'Approved'\n                                : row?.status === 'declined'\n                                ? 'Declined'\n                                : 'Pending'\n                        }}\n                    </div>\n                    <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                </div>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approveVisitor(row)\">\n                    Approve Visitor\n                </button>\n                <button mat-menu-item (click)=\"declineVisitor(row)\">\n                    Decline Visitor\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            {{\n                row.extension_data?.date\n                    | date\n                        : ((filters | async)?.period > 1\n                              ? 'MMM d, h:mm a'\n                              : 'shortTime')\n            }}\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <button\n                icon\n                matRipple\n                [disabled]=\"!row.attachments?.length\"\n                title=\"\"\n                matTooltip=\"View Attachments\"\n                [matMenuTriggerFor]=\"menu\"\n            >\n                <app-icon>attachment</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <a\n                    *ngFor=\"let item of row.attachments\"\n                    [href]=\"item.url\"\n                    mat-menu-item\n                    >{{ item.name }}</a\n                >\n            </mat-menu>\n            <action-icon\n                remote\n                [matTooltip]=\"\n                    remote\n                        ? 'Set as In-Person Visitor'\n                        : 'Set as Remote Visitior'\n                \"\n                [loading]=\"loading === 'remote'\"\n                [content]=\"remote ? 'tap_and_play' : 'business'\"\n                (click)=\"toggleRemote()\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                checkin\n                matTooltip=\"Checkin Guest\"\n                [loading]=\"loading === 'checkin'\"\n                [state]=\"row?.checked_in ? 'success' : ''\"\n                content=\"event_available\"\n                (click)=\"checkin()\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                checkout\n                matTooltip=\"Checkout Guest\"\n                [loading]=\"loading === 'checkout'\"\n                content=\"event_busy\"\n                (click)=\"checkout()\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <a\n                [href]=\"'mailto:' + row?.email\"\n                icon\n                matRipple\n                [matTooltip]=\"row?.organizer ? 'Email Host' : 'Email Guest'\"\n            >\n                <app-icon>email</app-icon>\n            </a>\n            <action-icon\n                matTooltip=\"Print QR Code\"\n                [loading]=\"loading === 'printing'\"\n                content=\"event_busy\"\n                (click)=\"printQRCode()\"\n                [class.invisible]=\"!can_print\"\n            >\n            </action-icon>\n        </ng-template>\n        <button\n            class=\"bg-secondary hover:shadow-lg shadow absolute bottom-4 right-4 text-white h-12 w-12\"\n            matTooltip=\"Download Visitor List\"\n            matTooltipPosition=\"left\"\n            icon\n            matRipple\n            *ngIf=\"(guests | async)?.length\"\n            (click)=\"downloadVisitorList()\"\n        >\n            <app-icon>download</app-icon>\n        </button>\n    `,\n    styles: [``],\n})\nexport class GuestListingComponent {\n    public readonly guests = this._state.filtered_guests;\n    public readonly search = this._state.search;\n    public readonly filters = this._state.filters;\n\n    public readonly downloadVisitorList = () =>\n        this._state.downloadVisitorsList();\n\n    public readonly approveVisitor = (u) => this._state.approveVisitor(u);\n    public readonly declineVisitor = (u) => this._state.declineVisitor(u);\n    public readonly setExt = (u, f, v) => this._state.setExt(u, f, v);\n\n    public get columns() {\n        return this._settings.get('app.guests.vaccine_check')\n            ? [\n                  'state',\n                  'date',\n                  'name',\n                  'host',\n                  'email',\n                  'vaccinated',\n                  'id_data',\n                  'status',\n                  'actions',\n              ]\n            : ['state', 'date', 'name', 'host', 'email', 'status', 'actions'];\n    }\n\n    public get display_columns() {\n        const fields = {\n            state: ' ',\n            date: 'Date',\n            name: 'Person',\n            host: 'Host',\n            email: 'Email',\n            vaccinated: 'Vaccinated',\n            id_data: 'ID',\n            status: 'State',\n            actions: ' ',\n        };\n        return this.columns.map((_) => fields[_] || _);\n    }\n\n    public get column_sizes() {\n        const fields = {\n            state: '3.5r',\n            date: '8r',\n            name: '12r',\n            host: '12r',\n            email: 'flex',\n            vaccinated: '8r',\n            id_data: '8r',\n            status: '10r',\n            actions: '12r',\n        };\n        return this.columns.map((_) => fields[_] || _);\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col bg-gray-200 dark:bg-neutral-600\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <visitor-listings *ngIf=\"!(filters | async)?.show_guests\" class=\"w-full flex-1 h-0\"></visitor-listings>\n            <guest-listings *ngIf=\"(filters | async)?.show_guests\" class=\"w-full flex-1 h-0\"></guest-listings>\n            <mat-progress-bar class=\"w-full\" *ngIf=\"loading | async\" mode=\"indeterminate\"></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { VisitorListingsComponent } from './visitor-listings.component';\nimport { VisitorEventComponent } from './visitor-event.component';\nimport { VisitorDetailsComponent } from './visitor-details.component';\nimport { GuestListingComponent } from './guest-listing.component';\n\nconst ROUTES: Route[] = [{ path: '', component: VisitorsComponent }];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        VisitorListingsComponent,\n        VisitorEventComponent,\n        VisitorDetailsComponent,\n        GuestListingComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n"],"x_google_ignoreList":[]}