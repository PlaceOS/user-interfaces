{"version":3,"file":"apps_concierge_src_app_visitors_visitors_module_ts.js","mappings":"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","names":["VisitorsStateService","AsyncHandler","search","this","_search","getValue","time_format","_settings","constructor","_dialog","_org","super","_poll","BehaviorSubject","_filters","_loading","loading","asObservable","filters","guests","combineLatest","pipe","debounceTime","switchMap","next","date","Date","start","startOfDay","end","addDays","period","queryGuests","period_start","getUnixTime","period_end","zone_ids","zones","join","building","id","catchError","_","of","tap","shareReplay","events","zip","queryEvents","queryBookings","type","map","i","newCalendarEventFromBooking","e_list","v_list","r_list","list","all_bookings","filter","event","length","attendees","filtered_events","toLowerCase","find","user","name","includes","email","sort","a","b","filtered_guests","guest_list","booking","Booking","CalendarEvent","extension_data","GuestUser","event_id","booking_id","host","organiser","user_name","user_email","status","rejected","approved","setFilters","setSearchString","startPolling","delay","interval","now","stopPolling","clearInterval","checkGuestIn","_this","_asyncToGenerator","new_user","_checkinCall","toPromise","catch","e","notifyError","notifySuccess","new_attendees","unique","organizer","localeCompare","setExt","guest","field","value","_this2","updateGuest","approveVisitor","_this3","details","openConfirmModal","title","content","icon","reason","close","approveBooking","message","error","declineVisitor","_this4","rejectBooking","checkGuestOut","_this5","checkAllGuestsIn","_this6","is_external","checked_in","Error","Promise","all","checkAllGuestsOut","_this7","state","from_bookings","checkinBookingAttendee","checkinEventGuest","system_id","system","resources","downloadVisitorsList","_this8","take","Name","Email","Host","Status","format","data","jsonToCsv","downloadFile","t","i0","i1","i2","i3","core","Yz7","factory","ɵfac","providedIn","level_r2","display_name","$event","_r4","ctx_r3","tmp_0_0","ctx_r1","VisitorsTopbarComponent","_state","_route","_router","levels","active_levels","setDate","setSearch","str","updateZones","navigate","relativeTo","queryParams","ngOnInit","initialised","first","subscription","queryParamMap","subscribe","params","has","get","split","level","levelWithID","buildings","bld","parent_id","zone","lvl","push","Xpm","selectors","features","decls","vars","consts","template","rf","ctx","VisitorsTopbarComponent_mat_option_3_Template","show_guests","VisitorsTopbarComponent_mat_slide_toggle_18_Template","tmp_2_0","tmp_6_0","tmp_7_0","VisitorDetailsComponent_ng_container_0_ng_container_2_i_1_Template","visitor","_r2","_r12","ctx_r11","toggleRemote","ctx_r6","is_host","remote","_r14","ctx_r13","checkin","ctx_r7","_r16","ctx_r15","checkout","ctx_r8","ctx_r9","creator","location","today","qr","code","VisitorDetailsComponent_ng_container_0_ng_container_2_Template","VisitorDetailsComponent_ng_container_0_ng_template_3_Template","VisitorDetailsComponent_ng_container_0_ng_template_5_Template","VisitorDetailsComponent_ng_container_0_action_icon_10_Template","VisitorDetailsComponent_ng_container_0_action_icon_11_Template","VisitorDetailsComponent_ng_container_0_action_icon_12_Template","_r18","ctx_r17","printQRCode","VisitorDetailsComponent_ng_container_0_div_18_Template","ctx_r0","is_event","is_cancelled","can_print","show_qr_code","VisitorDetailsComponent","_space_pipe","eventChange","EventEmitter","emit","remote_list","ext","space","transform","updateEventMetadata","ical_uid","statusText","timeout","window","print","ngOnChanges","changes","loadGuest","tries","showGuest","inputs","outputs","SpacePipe","VisitorDetailsComponent_ng_container_0_Template","VisitorEventComponent_div_0_i_2_Template","VisitorEventComponent_div_0_i_3_Template","VisitorEventComponent_div_0_i_4_Template","_r6","ctx_r5","checkinGuests","checkoutGuests","show_attendees","tmp_3_0","guestCount","has_search","user_r10","matches","VisitorEventComponent_ng_container_2_div_1_Template","_c0","VisitorEventComponent","reduce","c","u","updateMatches","VisitorEventComponent_div_0_Template","VisitorEventComponent_ng_container_2_Template","VisitorListingsComponent_ng_container_15_visitor_event_1_Template","bookings","trackByFn","VisitorListingsComponent","index","undefined","VisitorListingsComponent_ng_container_15_Template","VisitorListingsComponent_ng_template_17_Template","_r1","GuestListingComponent_ng_template_4_i_0_Template","GuestListingComponent_ng_template_4_ng_template_1_Template","row_r15","_r17","row_r19","row_r20","vaccination_confirmed","_r27","row","ctx_r25","ctx_r28","vaccination_proof","url","GuestListingComponent_ng_template_8_button_1_Template","GuestListingComponent_ng_template_8_ng_template_2_Template","_r22","row_r31","id_confirmed","_r38","ctx_r36","ctx_r39","id_data","GuestListingComponent_ng_template_10_button_1_Template","GuestListingComponent_ng_template_10_ng_template_2_Template","_r33","row_r42","_r45","ctx_r44","ctx_r46","_r43","row_r47","item_r51","GuestListingComponent_ng_template_16_a_5_Template","row_r48","_r53","ctx_r52","ctx_r54","ctx_r55","ctx_r56","attachments","_r49","_r58","ctx_r57","downloadVisitorList","GuestListingComponent","columns","display_columns","fields","vaccinated","actions","column_sizes","f","v","GuestListingComponent_ng_template_4_Template","GuestListingComponent_ng_template_6_Template","GuestListingComponent_ng_template_8_Template","GuestListingComponent_ng_template_10_Template","GuestListingComponent_ng_template_12_Template","GuestListingComponent_ng_template_14_Template","GuestListingComponent_ng_template_16_Template","GuestListingComponent_button_18_Template","_r0","_r8","_r10","VisitorsComponent","ngOnDestroy","attrs","VisitorsComponent_visitor_listings_3_Template","VisitorsComponent_guest_listings_5_Template","VisitorsComponent_mat_progress_bar_7_Template","tmp_1_0","InviteVisitorModalComponent","_dialog_ref","onDone","level_r5","_r7","ROUTES","path","component","NewVisitorsComponent","inviteVisitor","open","i4","NewVisitorsComponent_mat_option_14_Template","NewVisitorsComponent_mat_slide_toggle_17_Template","NewVisitorsComponent_visitor_listings_24_Template","NewVisitorsComponent_guest_listings_26_Template","NewVisitorsComponent_mat_progress_bar_28_Template","tmp_4_0","tmp_5_0","VisitorsModule","oAB","cJS","CommonModule","FormsModule","UIModule","SharedBookingsModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/visitor-details.component.ts","./apps/concierge/src/app/visitors/visitor-event.component.ts","./apps/concierge/src/app/visitors/visitor-listings.component.ts","./apps/concierge/src/app/visitors/guest-listing.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/invite-visitor-modal.component.ts","./apps/concierge/src/app/visitors/new-visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { startOfDay, getUnixTime, addDays, format } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    SettingsService,\n    downloadFile,\n    flatten,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    unique,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    checkinEventGuest,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { GuestUser, queryGuests, updateGuest, User } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    approveBooking,\n    checkinBookingAttendee,\n    queryBookings,\n    rejectBooking,\n} from '@placeos/bookings';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    period?: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly guests = combineLatest([this._filters, this._poll]).pipe(\n        debounceTime(150),\n        switchMap(([filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return queryGuests({\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zone_ids:\n                    (filters.zones || []).join(',') || this._org.building.id,\n            }).pipe(catchError((_) => of([])));\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n\n    public readonly events = combineLatest([this._filters, this._poll]).pipe(\n        debounceTime(150),\n        switchMap(([filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return zip(\n                queryEvents({\n                    period_start: getUnixTime(start),\n                    period_end: getUnixTime(end),\n                    zone_ids: (filters.zones || []).join(','),\n                }).pipe(catchError((_) => of([]))),\n                queryBookings({\n                    type: 'visitor',\n                    period_start: getUnixTime(start),\n                    period_end: getUnixTime(end),\n                    zones: this._org.building?.id,\n                }).pipe(\n                    map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                    catchError((_) => of([]))\n                ),\n                queryBookings({\n                    type: 'room',\n                    period_start: getUnixTime(start),\n                    period_end: getUnixTime(end),\n                    zones: (filters.zones || []).join(','),\n                }).pipe(\n                    map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        map(([e_list, v_list, r_list]) => {\n            const list = [...e_list, ...v_list, ...r_list];\n            this._loading.next(false);\n            return this._filters.getValue().all_bookings\n                ? list\n                : list.filter(\n                      (event) =>\n                          event?.guests?.length && event?.attendees?.length > 1\n                  );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_events = combineLatest([\n        this._search,\n        this.events,\n    ]).pipe(\n        map(([search, events]) => {\n            const filter = search.toLowerCase();\n            return events\n                .filter((event) =>\n                    event.attendees.find(\n                        (user) =>\n                            user.name?.toLowerCase().includes(filter) ||\n                            user.email?.toLowerCase().includes(filter)\n                    )\n                )\n                .sort((a, b) => a.date - b.date);\n        })\n    );\n\n    public readonly filtered_guests = combineLatest([\n        this._search,\n        this.guests,\n    ]).pipe(\n        map(([search, guest_list]) => {\n            const filter = search.toLowerCase();\n            const out = guest_list\n                .filter(\n                    (_) =>\n                        _.name.toLowerCase().includes(filter) ||\n                        _.email.toLowerCase().includes(filter)\n                )\n                .map((_) => {\n                    const event: any = _.booking\n                        ? new Booking(_.booking)\n                        : new CalendarEvent(_.event || _.extension_data?.event);\n                    return new GuestUser({\n                        ..._,\n                        extension_data: {\n                            ..._.extension_data,\n                            event_id:\n                                event instanceof CalendarEvent ? event.id : '',\n                            booking_id:\n                                event instanceof Booking ? event.id : '',\n                            date: event.date,\n                            host:\n                                event.organiser?.name ||\n                                event.organiser?.email ||\n                                event.user_name ||\n                                event.user_email ||\n                                event.host,\n                            status:\n                                event.status ||\n                                (event.rejected\n                                    ? 'declined'\n                                    : event.approved\n                                    ? 'approved'\n                                    : 'pending') ||\n                                _.status,\n                        },\n                    });\n                })\n                .sort((a, b) => a.extension_data.date - b.extension_data.date);\n            return out;\n        })\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async checkGuestIn(event: CalendarEvent, user: User) {\n        const checkin_fn = this._checkinCall(event, user.email, true);\n        const new_user = await checkin_fn.toPromise().catch((e) => {\n            notifyError(\n                `Error checking in ${user.name} for ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked in ${user.name} for ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async setExt<T = any>(guest: GuestUser, field: string, value: T) {\n        const extension_data = { ...guest.extension_data };\n        extension_data[field] = value;\n        await updateGuest(guest.id, { ...guest, extension_data }).toPromise();\n        this._poll.next(Date.now());\n    }\n\n    public async approveVisitor(guest: GuestUser) {\n        const details = await openConfirmModal(\n            {\n                title: 'Approve Visitor',\n                content: `Approve attendance of ${guest.name} to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        const event = (guest as any).event || guest.extension_data.event;\n        await (guest.extension_data.event_id || event?.id\n            ? updateGuest(guest.id, {\n                  ...guest,\n                  extension_data: {\n                      ...guest.extension_data,\n                      status: 'approved',\n                  },\n              })\n            : (approveBooking(guest.booking.id) as any)\n        )\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error approving visitor: ${e.message || e.error || e}`\n                );\n                details.close();\n                throw e;\n            });\n        notifySuccess(`Successfully approved visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async declineVisitor(guest: GuestUser) {\n        const details = await openConfirmModal(\n            {\n                title: 'Decline Visitor',\n                content: `Decline attendance of ${guest.name} to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        const event = (guest as any).event || guest.extension_data.event;\n        await (guest.extension_data.event_id || event?.id\n            ? updateGuest(guest.id, {\n                  ...guest,\n                  extension_data: {\n                      ...guest.extension_data,\n                      status: 'declined',\n                  },\n              })\n            : (rejectBooking(guest.booking.id) as any)\n        )\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error declining visitor: ${e.message || e.error || e}`\n                );\n                details.close();\n                throw e;\n            });\n        notifySuccess(`Successfully declining visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async checkGuestOut(event: CalendarEvent, user: User) {\n        const new_user = await this._checkinCall(event, user.email, false)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking out ${user.name} from ${event.organiser?.name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked out ${user.name} from ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsIn(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && !user.checked_in\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkin');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                this._checkinCall(event, user.email, true).toPromise()\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking in all guests for ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked in all guests for ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsOut(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && user.checked_in && !user.organizer\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkout');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                this._checkinCall(event, user.email, false).toPromise()\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking out all guests from ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked out all guests from ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    private _checkinCall(\n        event: CalendarEvent,\n        email: string,\n        state: boolean = true\n    ) {\n        return event.from_bookings\n            ? checkinBookingAttendee(event.id, email, state)\n            : checkinEventGuest(event.id, email, state, {\n                  system_id: event.system?.id || event.resources[0]?.id,\n              });\n    }\n\n    public async downloadVisitorsList() {\n        const guests: GuestUser[] = await this.filtered_guests\n            .pipe(take(1))\n            .toPromise();\n        if (!guests.length) return;\n        const { date } = this._filters.getValue();\n        const list = guests.map((_) => ({\n            Name: _.name,\n            Email: _.email,\n            'Checked In': _.checked_in,\n            Host: _.extension_data?.host || '',\n            Status: _.status,\n            Date: format(_.extension_data?.date, 'dd MMM ' + this.time_format),\n        }));\n        const data = jsonToCsv(list);\n        downloadFile(\n            `visitor-list-${format(date || Date.now(), 'MMM-dd')}.csv`,\n            data\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-white dark:bg-neutral-700 h-20 px-4 border-b border-gray-300 dark:border-neutral-500 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.period || 1\"\n                    (ngModelChange)=\"setFilters({ period: $event })\"\n                    placeholder=\"Viewing Period\"\n                >\n                    <mat-option [value]=\"1\">Show Day</mat-option>\n                    <mat-option [value]=\"7\">Show Week</mat-option>\n                    <mat-option [value]=\"30\">Show Month</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(filters | async)?.show_guests\"\n                (ngModelChange)=\"setFilters({ show_guests: $event })\"\n                ><div class=\"text-xs\">Only Guests</div></mat-slide-toggle\n            >\n            <mat-slide-toggle\n                class=\"m-2\"\n                *ngIf=\"!(filters | async)?.show_guests\"\n                [ngModel]=\"(filters | async)?.all_bookings\"\n                (ngModelChange)=\"setFilters({ all_bookings: $event })\"\n                ><div class=\"text-xs\">All Bookings</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Optional,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, notifyError, SettingsService } from '@placeos/common';\nimport { CalendarEvent, saveEvent, updateEventMetadata } from '@placeos/events';\nimport { showGuest, User } from '@placeos/users';\n\nimport { VisitorsStateService } from './visitors-state.service';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'visitor-details',\n    template: `\n        <ng-container *ngIf=\"visitor\">\n            <div details class=\"w-12 text-lg flex justify-center\">\n                <ng-container *ngIf=\"!is_host; else host_state\">\n                    <i\n                        *ngIf=\"!visitor?.checked_in; else checkin_state\"\n                        class=\"p-2 rounded-full material-icons border-2 border-dotted border-gray-600 dark:border-neutral-800\"\n                        >face</i\n                    >\n                </ng-container>\n                <ng-template #checkin_state>\n                    <i\n                        class=\"p-2 rounded-full material-icons bg-green-600 border-2 border-green-600 text-white\"\n                        >done</i\n                    >\n                </ng-template>\n                <ng-template #host_state>\n                    <i\n                        class=\"p-2 rounded-full material-icons bg-blue-600 border-2 border-blue-600 text-white\"\n                    >\n                        assignment_ind\n                    </i>\n                </ng-template>\n            </div>\n            <div flex class=\"p-2 flex-1\">\n                {{ visitor?.name || visitor?.email }}\n            </div>\n            <div class=\"w-48 py-2 flex items-center justify-end\">\n                <action-icon\n                    remote\n                    [matTooltip]=\"\n                        remote\n                            ? 'Set as In-Person Visitor'\n                            : 'Set as Remote Visitior'\n                    \"\n                    [loading]=\"loading === 'remote'\"\n                    [content]=\"remote ? 'tap_and_play' : 'business'\"\n                    (click)=\"toggleRemote()\"\n                    [class.invisible]=\"!visitor?.is_external || is_host\"\n                    *ngIf=\"is_event && !is_cancelled\"\n                >\n                </action-icon>\n                <action-icon\n                    checkin\n                    matTooltip=\"Checkin Guest\"\n                    [loading]=\"loading === 'checkin'\"\n                    [state]=\"visitor?.checked_in ? 'success' : ''\"\n                    content=\"event_available\"\n                    (click)=\"checkin()\"\n                    [class.invisible]=\"!visitor?.is_external || is_host\"\n                    *ngIf=\"!is_cancelled\"\n                >\n                </action-icon>\n                <action-icon\n                    checkout\n                    matTooltip=\"Checkout Guest\"\n                    [loading]=\"loading === 'checkout'\"\n                    content=\"event_busy\"\n                    (click)=\"checkout()\"\n                    [class.invisible]=\"!visitor?.is_external || is_host\"\n                    *ngIf=\"!is_cancelled\"\n                >\n                </action-icon>\n                <a\n                    [href]=\"'mailto:' + visitor?.email\"\n                    icon\n                    matRipple\n                    [matTooltip]=\"is_host ? 'Email Host' : 'Email Guest'\"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n                <action-icon\n                    matTooltip=\"Print QR Code\"\n                    [loading]=\"loading === 'printing'\"\n                    content=\"event_busy\"\n                    (click)=\"printQRCode()\"\n                    [class.invisible]=\"!can_print\"\n                >\n                </action-icon>\n            </div>\n            <div class=\"w-9\"></div>\n            <div\n                qr-code\n                *ngIf=\"show_qr_code\"\n                class=\"print-only fixed inset-0 flex flex-col justify-center bg-white space-y-2\"\n            >\n                <h2>{{ visitor?.name || visitor?.email }}</h2>\n                <div>\n                    <span>Host:</span>\n                    {{\n                        event?.organiser?.name ||\n                            event?.organiser?.name ||\n                            event?.creator\n                    }}\n                </div>\n                <div><span>Purpose:</span> {{ event?.title }}</div>\n                <div>\n                    <span>Location:</span>\n                    {{ event?.location || '&lt;Unspecified&gt;' }}\n                </div>\n                <div>\n                    <span>Issue Date:</span> {{ today | date: 'mediumDate' }}\n                </div>\n                <div class=\"flex justify-center\">\n                    <img\n                        [src]=\"visitor?.extension_data?.qr?.code || ''\"\n                        alt=\"qr-code\"\n                    />\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                width: 100%;\n                padding: 0;\n                padding-left: 0.5rem;\n            }\n\n            :host > div {\n                display: flex;\n                align-items: center;\n                height: 100%;\n                border-bottom: 1px solid #ccc;\n                height: 3.5rem;\n            }\n\n            :host > div:first-child {\n                border: none;\n            }\n\n            .invisible {\n                opacity: 0;\n                pointer-events: none;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class VisitorDetailsComponent extends AsyncHandler implements OnChanges {\n    @Input() public event: CalendarEvent;\n    @Input() public visitor: User;\n    @Output() public eventChange = new EventEmitter<CalendarEvent>();\n\n    public show_attendees: boolean;\n    public loading: string;\n    public show_qr_code: boolean;\n\n    public get is_event() {\n        return !this.event.from_bookings;\n    }\n\n    public get is_cancelled() {\n        return this.event.status === 'declined';\n    }\n\n    public get is_host() {\n        return (\n            this.event.host.toLowerCase() === this.visitor.email.toLowerCase()\n        );\n    }\n\n    public readonly checkin = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkGuestIn(this.event as CalendarEvent, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public readonly toggleRemote = async () => {\n        if (!this.is_event) {\n            return notifyError(\n                'Unable to set remote status for standalone visitor bookings.'\n            );\n        }\n        this.loading = 'remote';\n        const remote_list =\n            this.event.ext('remote')?.filter((e) => e !== this.visitor.email) ||\n            [];\n        if (!this.remote) {\n            remote_list.push(this.visitor.email);\n        }\n        const space = await this._space_pipe?.transform(\n            this.event?.resources[0]?.email\n        );\n        (this.event as any).extension_data = await updateEventMetadata(\n            this.event.id,\n            space.id,\n            { remote: remote_list },\n            { ical_uid: this.event.ical_uid }\n        )\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error setting visitor status. Error: ${\n                        e.statusText || e.message || e\n                    }`\n                );\n                return this.event.extension_data;\n            });\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public readonly checkout = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkGuestOut(this.event as CalendarEvent, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    /** Open print dialog for user's QR code */\n    public readonly printQRCode = () => {\n        this.show_qr_code = true;\n        this.timeout(\n            'print',\n            () => {\n                window.print();\n                this.show_qr_code = false;\n            },\n            50\n        );\n    };\n\n    public get can_print(): boolean {\n        return (\n            this._settings.get('app.can_print_qr') &&\n            this.visitor.checked_in &&\n            this.visitor?.extension_data.qr\n        );\n    }\n\n    public get today(): number {\n        return Date.now();\n    }\n\n    public get remote(): boolean {\n        return !!this.event?.extension_data?.remote?.find(\n            (e) => e === this.visitor?.email\n        );\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService,\n        @Optional() private _space_pipe: SpacePipe\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.visitor) this.loadGuest();\n    }\n\n    public async loadGuest(tries: number = 0) {\n        if (!this.visitor) return;\n        this.loading = 'printing';\n        if (this.visitor.checked_in) {\n            const guest = await showGuest(this.visitor.email)\n                .toPromise()\n                .catch((_) => null);\n            if (!guest?.extension_data?.qr?.code && tries < 5) {\n                this.timeout('load_guest', () => this.loadGuest(++tries), 1000);\n            } else this.loading = '';\n        } else this.loading = '';\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { HashMap } from '@placeos/ts-client/dist/esm/utilities/types';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-event',\n    template: `\n        <div\n            event\n            class=\"flex items-center px-2 bg-gray-100 dark:bg-neutral-700\"\n            *ngIf=\"event\"\n        >\n            <div class=\"w-12 text-lg flex justify-center\">\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400 dark:bg-neutral-800\"\n                    *ngIf=\"\n                        event?.status !== 'declined' && event?.state !== 'done'\n                    \"\n                    >event</i\n                >\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400 dark:bg-neutral-800\"\n                    *ngIf=\"event?.status === 'declined'\"\n                    >close</i\n                >\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400 dark:bg-neutral-800 opacity-40\"\n                    *ngIf=\"\n                        event?.state === 'done' && event?.status !== 'declined'\n                    \"\n                    >done</i\n                >\n            </div>\n            <div class=\"w-24 p-2\">\n                {{\n                    event?.date\n                        | date\n                            : ((filters | async)?.period > 1\n                                  ? 'MMM d, ' + time_format\n                                  : time_format)\n                }}\n            </div>\n            <div class=\"w-48 p-2\">\n                {{ event?.organiser?.name || event?.organiser?.email }}\n            </div>\n            <div flex class=\"p-2 flex-1\">{{ event?.title }}</div>\n            <div class=\"w-64 p-2 truncate\">{{ event?.location }}</div>\n            <div class=\"w-32 min-w-[8rem] py-2 flex items-center justify-end\">\n                <action-icon\n                    checkin\n                    matTooltip=\"Checkin All Guests\"\n                    [loading]=\"loading === 'checkin'\"\n                    [disabled]=\"guestCount <= 0\"\n                    content=\"event_available\"\n                    (click)=\"checkinGuests()\"\n                >\n                </action-icon>\n                <action-icon\n                    checkout\n                    matTooltip=\"Checkout All Guests\"\n                    [loading]=\"loading === 'checkout'\"\n                    [disabled]=\"guestCount <= 0\"\n                    content=\"event_busy\"\n                    (click)=\"checkoutGuests()\"\n                >\n                </action-icon>\n                <a\n                    icon\n                    matRipple\n                    [href]=\"'mailto:' + event?.organiser?.email\"\n                    matTooltip=\"Email Host\"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n            </div>\n            <div class=\"w-16 min-w-[4rem] p-2\">\n                <button\n                    icon\n                    matRipple\n                    (click)=\"show_attendees = !show_attendees\"\n                    [disabled]=\"!event?.attendees?.length\"\n                    [matTooltip]=\"\n                        show_attendees || has_search\n                            ? 'Hide Attendees'\n                            : 'Show Attendees'\n                    \"\n                >\n                    <app-icon>{{\n                        show_attendees\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            attendees\n            class=\"w-full overflow-hidden relative border-b border-gray-300 dark:border-neutral-600\"\n            [style.height]=\"\n                !show_attendees && !has_search\n                    ? '0rem'\n                    : event?.attendees?.length * 3.5 + 'rem'\n            \"\n        >\n            <ng-container *ngIf=\"show_attendees || has_search\">\n                <div\n                    visitor\n                    class=\"relative w-full pl-12 bg-gray-200 dark:bg-neutral-600\"\n                    *ngFor=\"let user of event?.attendees || []\"\n                >\n                    <div\n                        class=\"absolute left-8 top-1/2 -translate-y-full border-b-2 border-l-2 border-gray-400 dark:border-neutral-700 w-4 h-full\"\n                    ></div>\n                    <visitor-details\n                        [attr.disabled]=\"!matches[user.email]\"\n                        [visitor]=\"user\"\n                        [(event)]=\"event\"\n                    ></visitor-details>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            visitor-details {\n                transition: opacity 200ms;\n            }\n\n            [attendees] {\n                transition: height 200ms;\n            }\n\n            [visitor] {\n                height: 3.5rem;\n            }\n\n            [disabled='true'] {\n                opacity: 0.35;\n            }\n        `,\n    ],\n})\nexport class VisitorEventComponent extends AsyncHandler implements OnInit {\n    @Input() public event: CalendarEvent;\n\n    public show_attendees: boolean;\n    public loading: string;\n    public matches: HashMap<boolean> = {};\n    public readonly filters = this._state.filters;\n\n    public readonly checkinGuests = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkAllGuestsIn(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n    public readonly checkoutGuests = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkAllGuestsOut(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n\n    public get guestCount() {\n        return (\n            this.event?.attendees?.reduce(\n                (c, u) => c + (u.is_external && !u.organizer ? 1 : 0),\n                0\n            ) || 0\n        );\n    }\n\n    public get has_search() {\n        return this._state.search;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'events',\n            this._state.filtered_events.subscribe(() => this.updateMatches())\n        );\n    }\n\n    public updateMatches() {\n        if (!this.event) return;\n        this.matches = {};\n        const filter = (this._state.search || '').toLowerCase();\n        for (const user of this.event?.attendees || []) {\n            this.matches[user.email] =\n                !filter ||\n                user.email.toLowerCase().includes(filter) ||\n                user.name.toLowerCase().includes(filter);\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CalendarEvent } from '@placeos/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-listings',\n    template: `\n        <div class=\"w-full flex flex-col flex-1 text-sm h-full\">\n            <div\n                class=\"w-full flex items-center bg-white dark:bg-neutral-700 border-b border-gray-500 p-2 font-medium\"\n            >\n                <div class=\"w-12 p-2\"></div>\n                <div class=\"w-24 p-2\">Time</div>\n                <div class=\"w-48 p-2\">Host</div>\n                <div flex class=\"p-2 flex-1\">Title</div>\n                <div class=\"w-64 p-2\">Location</div>\n                <div class=\"w-32 p-2\">Actions</div>\n                <div class=\"w-16 p-2\"></div>\n            </div>\n            <div class=\"w-full flex-1 overflow-auto h-1/2\">\n                <ng-container\n                    *ngIf=\"(bookings | async)?.length; else empty_state\"\n                >\n                    <visitor-event\n                        *ngFor=\"\n                            let event of bookings | async;\n                            trackBy: trackByFn\n                        \"\n                        [event]=\"event\"\n                    ></visitor-event>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex items-center justify-center\">\n                <p class=\"p-8\">\n                    There are no visitors for the currently selected date.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class VisitorListingsComponent {\n    public readonly bookings = this._state.filtered_events;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, event: CalendarEvent) {\n        return event ? event.id : undefined;\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'guest-listings',\n    template: `\n        <div\n            class=\"w-full flex flex-col flex-1 text-sm h-full overflow-auto pb-20\"\n        >\n            <custom-table\n                class=\"min-w-[88rem]\"\n                [dataSource]=\"guests\"\n                [filter]=\"search | async\"\n                [columns]=\"columns\"\n                [display_column]=\"display_columns\"\n                [column_size]=\"column_sizes\"\n                [template]=\"{\n                    state: state_template,\n                    status: status_template,\n                    date: date_template,\n                    host: host_template,\n                    vaccinated: vaccinated_template,\n                    id_data: id_template,\n                    actions: action_template\n                }\"\n                [empty]=\"\n                    (search | async)\n                        ? 'No matching visitors'\n                        : 'There are visitors for the currently selected date.'\n                \"\n            ></custom-table>\n        </div>\n        <ng-template #state_template let-row=\"row\">\n            <i\n                *ngIf=\"!row?.checked_in; else checkin_state\"\n                class=\"p-2 rounded-full material-icons border-2 border-dotted border-gray-600 dark:border-neutral-800\"\n                >face</i\n            >\n            <ng-template #checkin_state>\n                <i\n                    class=\"p-2 rounded-full material-icons bg-green-600 border-2 border-green-600 text-white\"\n                    >done</i\n                >\n            </ng-template>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            {{ row.extension_data?.host }}\n        </ng-template>\n        <ng-template #vaccinated_template let-row=\"row\">\n            <div customTooltip [content]=\"vaccine_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.vaccination_proof?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.vaccination_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.vaccination_confirmed ===\n                              false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #vaccine_confirmation>\n                <div\n                    class=\"bg-white rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.vaccination_proof?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] p-2 object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'vaccination_confirmed', true)\"\n                    >\n                        Confirm Vaccination Proof\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'vaccination_confirmed', false)\"\n                    >\n                        Reject Vaccination Proof\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #id_template let-row=\"row\">\n            <div customTooltip [content]=\"id_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.id_data?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.id_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.id_confirmed === false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #id_confirmation>\n                <div\n                    class=\"bg-white rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.id_data?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'id_confirmed', true)\"\n                    >\n                        Confirm ID\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'id_confirmed', false)\"\n                    >\n                        Reject ID\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"rounded-3xl bg-yellow-300 border-none\"\n                [class.!bg-green-400]=\"row?.status === 'approved'\"\n                [class.!bg-red-400]=\"row?.status === 'declined'\"\n                [matMenuTriggerFor]=\"menu\"\n            >\n                <div class=\"flex items-center\">\n                    <div class=\"mx-2\">\n                        {{\n                            row?.status === 'approved'\n                                ? 'Approved'\n                                : row?.status === 'declined'\n                                ? 'Declined'\n                                : 'Pending'\n                        }}\n                    </div>\n                    <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                </div>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approveVisitor(row)\">\n                    Approve Visitor\n                </button>\n                <button mat-menu-item (click)=\"declineVisitor(row)\">\n                    Decline Visitor\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            {{\n                row.extension_data?.date\n                    | date\n                        : ((filters | async)?.period > 1\n                              ? 'MMM d, ' + time_format\n                              : time_format)\n            }}\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <button\n                icon\n                matRipple\n                [disabled]=\"!row.attachments?.length\"\n                title=\"\"\n                matTooltip=\"View Attachments\"\n                [matMenuTriggerFor]=\"menu\"\n            >\n                <app-icon>attachment</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <a\n                    *ngFor=\"let item of row.attachments\"\n                    [href]=\"item.url\"\n                    mat-menu-item\n                    >{{ item.name }}</a\n                >\n            </mat-menu>\n            <action-icon\n                remote\n                [matTooltip]=\"\n                    row.extension_data.remote\n                        ? 'Set as In-Person Visitor'\n                        : 'Set as Remote Visitior'\n                \"\n                [loading]=\"loading === 'remote'\"\n                [content]=\"\n                    row.extension_data.remote ? 'tap_and_play' : 'business'\n                \"\n                (click)=\"setExt(row, 'remote', !row.extension_data.remote)\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                checkin\n                matTooltip=\"Checkin Guest\"\n                [loading]=\"loading === 'checkin'\"\n                [state]=\"row?.checked_in ? 'success' : ''\"\n                content=\"event_available\"\n                (click)=\"checkin()\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                checkout\n                matTooltip=\"Checkout Guest\"\n                [loading]=\"loading === 'checkout'\"\n                content=\"event_busy\"\n                (click)=\"checkout()\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <a\n                [href]=\"'mailto:' + row?.email\"\n                icon\n                matRipple\n                [matTooltip]=\"row?.organizer ? 'Email Host' : 'Email Guest'\"\n            >\n                <app-icon>email</app-icon>\n            </a>\n            <action-icon\n                matTooltip=\"Print QR Code\"\n                [loading]=\"loading === 'printing'\"\n                content=\"event_busy\"\n                (click)=\"printQRCode()\"\n                [class.invisible]=\"!can_print\"\n            >\n            </action-icon>\n        </ng-template>\n        <button\n            class=\"bg-secondary hover:shadow-lg shadow absolute bottom-4 right-4 text-white h-12 w-12\"\n            matTooltip=\"Download Visitor List\"\n            matTooltipPosition=\"left\"\n            icon\n            matRipple\n            *ngIf=\"(guests | async)?.length\"\n            (click)=\"downloadVisitorList()\"\n        >\n            <app-icon>download</app-icon>\n        </button>\n    `,\n    styles: [``],\n})\nexport class GuestListingComponent {\n    public readonly guests = this._state.filtered_guests;\n    public readonly search = this._state.search;\n    public readonly filters = this._state.filters;\n\n    public readonly downloadVisitorList = () =>\n        this._state.downloadVisitorsList();\n\n    public readonly approveVisitor = (u) => this._state.approveVisitor(u);\n    public readonly declineVisitor = (u) => this._state.declineVisitor(u);\n    public readonly setExt = (u, f, v) => this._state.setExt(u, f, v);\n\n    public get columns() {\n        return this._settings.get('app.guests.vaccine_check')\n            ? [\n                  'state',\n                  'date',\n                  'name',\n                  'host',\n                  'email',\n                  'vaccinated',\n                  'id_data',\n                  'status',\n                  'actions',\n              ]\n            : ['state', 'date', 'name', 'host', 'email', 'status', 'actions'];\n    }\n\n    public get display_columns() {\n        const fields = {\n            state: ' ',\n            date: 'Time',\n            name: 'Person',\n            host: 'Host',\n            email: 'Email',\n            vaccinated: 'Vaccinated',\n            id_data: 'ID',\n            status: 'State',\n            actions: ' ',\n        };\n        return this.columns.map((_) => fields[_] || _);\n    }\n\n    public get column_sizes() {\n        const fields = {\n            state: '3.5r',\n            date: '8r',\n            name: '12r',\n            host: '12r',\n            email: 'flex',\n            vaccinated: '8r',\n            id_data: '8r',\n            status: '10r',\n            actions: '12r',\n        };\n        return this.columns.map((_) => fields[_] || _);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main\n            class=\"relative w-full flex flex-col bg-gray-200 dark:bg-neutral-600\"\n        >\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <visitor-listings\n                *ngIf=\"!(filters | async)?.show_guests\"\n                class=\"w-full flex-1 h-0\"\n            ></visitor-listings>\n            <guest-listings\n                *ngIf=\"(filters | async)?.show_guests\"\n                class=\"w-full flex-1 h-0\"\n            ></guest-listings>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'invite-visitor-modal',\n    template: `\n        <main class=\"relative min-w-[40rem] min-h-[40rem]\">\n            <invite-visitor-form (done)=\"onDone()\"></invite-visitor-form>\n        </main>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorModalComponent {\n    constructor(\n        private _dialog_ref: MatDialogRef<InviteVisitorModalComponent>\n    ) {}\n\n    public onDone() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\n\n@Component({\n    selector: '[app-new-visitors]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center p-4 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">Visitors</h2>\n                    <div class=\"flex-1 w-2\"></div>\n                    <date-options (dateChange)=\"setDate($event)\"></date-options>\n                    <button btn matRipple (click)=\"inviteVisitor()\">\n                        Invite Visitor\n                    </button>\n                </div>\n                <div class=\"flex items-center px-4 pb-4\">\n                    <mat-form-field appearance=\"outline\" class=\"no-subscript\">\n                        <mat-select\n                            multiple\n                            [(ngModel)]=\"zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"flex-1 w-2\"></div>\n                    <mat-slide-toggle\n                        class=\"m-2\"\n                        *ngIf=\"!(filters | async)?.show_guests\"\n                        [ngModel]=\"(filters | async)?.all_bookings\"\n                        (ngModelChange)=\"setFilters({ all_bookings: $event })\"\n                    >\n                        <div class=\"text-xs\">All Bookings</div>\n                    </mat-slide-toggle>\n                    <mat-slide-toggle\n                        class=\"m-2\"\n                        [ngModel]=\"(filters | async)?.show_guests\"\n                        (ngModelChange)=\"setFilters({ show_guests: $event })\"\n                    >\n                        <div class=\"text-xs\">Only Guests</div>\n                    </mat-slide-toggle>\n                    <searchbar (modelChange)=\"setSearch($event)\"></searchbar>\n                </div>\n                <visitor-listings\n                    *ngIf=\"!(filters | async)?.show_guests\"\n                    class=\"w-full flex-1 h-0\"\n                ></visitor-listings>\n                <guest-listings\n                    *ngIf=\"(filters | async)?.show_guests\"\n                    class=\"w-full flex-1 h-0\"\n                ></guest-listings>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"loading | async\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: #fff;\n            }\n        `,\n    ],\n})\nexport class NewVisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog\n    ) {}\n\n    public inviteVisitor() {\n        this._dialog.open(InviteVisitorModalComponent);\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { VisitorListingsComponent } from './visitor-listings.component';\nimport { VisitorEventComponent } from './visitor-event.component';\nimport { VisitorDetailsComponent } from './visitor-details.component';\nimport { GuestListingComponent } from './guest-listing.component';\nimport { NewVisitorsComponent } from './new-visitors.component';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: 'new', component: NewVisitorsComponent },\n];\n\n@NgModule({\n    declarations: [\n        NewVisitorsComponent,\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        VisitorListingsComponent,\n        VisitorEventComponent,\n        VisitorDetailsComponent,\n        GuestListingComponent,\n        InviteVisitorModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedBookingsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n"],"x_google_ignoreList":[]}