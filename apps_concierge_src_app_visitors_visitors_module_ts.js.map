{"version":3,"file":"apps_concierge_src_app_visitors_visitors_module_ts.js","mappings":"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","names":["VisitorsStateService","AsyncHandler","search","this","_search","getValue","constructor","_dialog","_org","super","BehaviorSubject","_loading","asObservable","_filters","combineLatest","_poll","pipe","debounceTime","switchMap","filters","next","date","Date","start","startOfDay","end","addDays","period","queryGuests","period_start","getUnixTime","period_end","zone_ids","zones","join","tap","shareReplay","zip","queryEvents","catchError","_","of","queryBookings","type","building","id","map","i","newCalendarEventFromBooking","e_list","v_list","r_list","list","all_bookings","filter","event","guests","length","attendees","events","toLowerCase","find","user","name","includes","email","filtered_events","guest_list","flatten","is_external","g","GuestUser","extension_data","host","organiser","setFilters","setSearchString","startPolling","delay","interval","now","stopPolling","clearInterval","checkGuestIn","new_user","_this","_checkinCall","toPromise","catch","e","notifyError","notifySuccess","new_attendees","unique","sort","a","b","organizer","localeCompare","CalendarEvent","setExt","guest","field","value","updateGuest","approveVisitor","details","openConfirmModal","title","content","icon","_this2","reason","close","loading","status","declineVisitor","_this3","checkGuestOut","_this4","checkAllGuestsIn","checked_in","Error","Promise","all","_this5","checkAllGuestsOut","_this6","state","from_bookings","checkinBookingAttendee","checkinEventGuest","system_id","system","resources","downloadVisitorsList","_this7","filtered_guests","take","Name","Email","Host","Status","format","data","jsonToCsv","downloadFile","core","factory","i0","VisitorsTopbarComponent","_state","_route","_router","active_levels","str","navigate","relativeTo","queryParams","ngOnInit","initialised","first","subscription","queryParamMap","subscribe","params","has","get","split","level","levelWithID","buildings","bld","parent_id","levels","zone","lvl","push","updateZones","setSearch","selectors","ctx","VisitorDetailsComponent","can_print","_settings","visitor","qr","today","remote","EventEmitter","eventChange","emit","remote_list","ext","new_item","toJSON","saveEvent","statusText","message","show_qr_code","timeout","window","print","ngOnChanges","changes","loadGuest","tries","showGuest","code","VisitorEventComponent","guestCount","reduce","c","u","has_search","updateMatches","matches","VisitorListingsComponent","trackByFn","index","undefined","GuestListingComponent","columns","display_columns","fields","vaccinated","id_data","actions","column_sizes","f","v","VisitorsComponent","ngOnDestroy","ROUTES","path","component","VisitorsModule","CommonModule","FormsModule","UIModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/visitor-details.component.ts","./apps/concierge/src/app/visitors/visitor-event.component.ts","./apps/concierge/src/app/visitors/visitor-listings.component.ts","./apps/concierge/src/app/visitors/guest-listing.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { startOfDay, getUnixTime, addDays, format } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    downloadFile,\n    flatten,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    unique,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    checkinEventGuest,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { GuestUser, queryGuests, updateGuest, User } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\nimport { checkinBookingAttendee, queryBookings } from '@placeos/bookings';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    period?: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly guests = combineLatest([this._filters, this._poll]).pipe(\n        debounceTime(150),\n        switchMap(([filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return queryGuests({\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zone_ids: (filters.zones || []).join(','),\n            });\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n\n    public readonly events = combineLatest([this._filters, this._poll]).pipe(\n        debounceTime(150),\n        switchMap(([filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return zip(\n                queryEvents({\n                    period_start: getUnixTime(start),\n                    period_end: getUnixTime(end),\n                    zone_ids: (filters.zones || []).join(','),\n                }).pipe(catchError((_) => of([]))),\n                queryBookings({\n                    type: 'visitor',\n                    period_start: getUnixTime(start),\n                    period_end: getUnixTime(end),\n                    zones: this._org.building?.id,\n                }).pipe(\n                    map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                    catchError((_) => of([]))\n                ),\n                queryBookings({\n                    type: 'room',\n                    period_start: getUnixTime(start),\n                    period_end: getUnixTime(end),\n                    zones: (filters.zones || []).join(','),\n                }).pipe(\n                    map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        map(([e_list, v_list, r_list]) => {\n            const list = [...e_list, ...v_list, ...r_list];\n            this._loading.next(false);\n            return this._filters.getValue().all_bookings\n                ? list\n                : list.filter(\n                      (event) =>\n                          event?.guests?.length && event?.attendees?.length > 1\n                  );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_events = combineLatest([\n        this._search,\n        this.events,\n    ]).pipe(\n        map(([search, events]) => {\n            const filter = search.toLowerCase();\n            return events.filter((event) =>\n                event.attendees.find(\n                    (user) =>\n                        user.name?.toLowerCase().includes(filter) ||\n                        user.email?.toLowerCase().includes(filter)\n                )\n            );\n        })\n    );\n\n    public readonly filtered_guests = combineLatest([\n        this._search,\n        this.filtered_events,\n        this.guests,\n    ]).pipe(\n        map(([search, events, guest_list]) => {\n            const filter = search.toLowerCase();\n            return flatten(\n                events.map((event) => {\n                    const guests = event.attendees.filter(\n                        (user) =>\n                            user.is_external &&\n                            (user.name?.toLowerCase().includes(filter) ||\n                                user.email?.toLowerCase().includes(filter))\n                    );\n                    return guests.map((_) => {\n                        const g: any =\n                            guest_list.find((g) => g.email === _.email) || {};\n                        return new GuestUser({\n                            ..._,\n                            ...g,\n                            extension_data: {\n                                ..._.extension_data,\n                                ...g.extension_data,\n                                date: event.date,\n                                host:\n                                    event.organiser?.name ||\n                                    event.organiser?.email ||\n                                    event.host,\n                            },\n                        });\n                    });\n                })\n            );\n        })\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    constructor(private _dialog: MatDialog, private _org: OrganisationService) {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async checkGuestIn(event: CalendarEvent, user: User) {\n        const checkin_fn = this._checkinCall(event, user.email, true);\n        const new_user = await checkin_fn.toPromise().catch((e) => {\n            notifyError(\n                `Error checking in ${user.name} for ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked in ${user.name} for ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async setExt<T = any>(guest: GuestUser, field: string, value: T) {\n        const extension_data = { ...guest.extension_data };\n        extension_data[field] = value;\n        await updateGuest(guest.id, { ...guest, extension_data }).toPromise();\n    }\n\n    public async approveVisitor(guest: GuestUser) {\n        const details = await openConfirmModal(\n            {\n                title: 'Approve Visitor',\n                content: `Approve attendance of ${guest.name} to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await updateGuest(guest.id, {\n            ...guest,\n            extension_data: { ...guest.extension_data, status: 'approved' },\n        }).toPromise();\n        details.close();\n    }\n\n    public async declineVisitor(guest: GuestUser) {\n        const details = await openConfirmModal(\n            {\n                title: 'Decline Visitor',\n                content: `Decline attendance of ${guest.name} to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await updateGuest(guest.id, {\n            ...guest,\n            extension_data: { ...guest.extension_data, status: 'declined' },\n        }).toPromise();\n        details.close();\n    }\n\n    public async checkGuestOut(event: CalendarEvent, user: User) {\n        const new_user = await this._checkinCall(event, user.email, false)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking out ${user.name} from ${event.organiser?.name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked out ${user.name} from ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsIn(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && !user.checked_in\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkin');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                this._checkinCall(event, user.email, true).toPromise()\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking in all guests for ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked in all guests for ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsOut(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && user.checked_in && !user.organizer\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkout');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                this._checkinCall(event, user.email, false).toPromise()\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking out all guests from ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked out all guests from ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    private _checkinCall(\n        event: CalendarEvent,\n        email: string,\n        state: boolean = true\n    ) {\n        return event.from_bookings\n            ? checkinBookingAttendee(event.id, email, state)\n            : checkinEventGuest(event.id, email, state, {\n                  system_id: event.system?.id || event.resources[0]?.id,\n              });\n    }\n\n    public async downloadVisitorsList() {\n        const guests: GuestUser[] = await this.filtered_guests\n            .pipe(take(1))\n            .toPromise();\n        if (!guests.length) return;\n        const { date } = this._filters.getValue();\n        const list = guests.map((_) => ({\n            Name: _.name,\n            Email: _.email,\n            'Checked In': _.checked_in,\n            Host: _.extension_data?.host || '',\n            Status: _.status,\n            Date: format(_.extension_data?.date, 'dd MMM h:mm a'),\n        }));\n        const data = jsonToCsv(list);\n        downloadFile(\n            `visitor-list-${format(date || Date.now(), 'MMM-dd')}.csv`,\n            data\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-white dark:bg-neutral-700 h-20 px-4 border-b border-gray-300 dark:border-neutral-500 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.period || 1\"\n                    (ngModelChange)=\"setFilters({ period: $event })\"\n                    placeholder=\"Viewing Period\"\n                >\n                    <mat-option [value]=\"1\">Show Day</mat-option>\n                    <mat-option [value]=\"7\">Show Week</mat-option>\n                    <mat-option [value]=\"30\">Show Month</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(filters | async)?.show_guests\"\n                (ngModelChange)=\"setFilters({ show_guests: $event })\"\n                ><div class=\"text-xs\">Only Guests</div></mat-slide-toggle\n            >\n            <mat-slide-toggle\n                class=\"m-2\"\n                *ngIf=\"!(filters | async)?.show_guests\"\n                [ngModel]=\"(filters | async)?.all_bookings\"\n                (ngModelChange)=\"setFilters({ all_bookings: $event })\"\n                ><div class=\"text-xs\">All Bookings</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { AsyncHandler, notifyError, SettingsService } from '@placeos/common';\nimport { CalendarEvent, saveEvent } from '@placeos/events';\nimport { showGuest, User } from '@placeos/users';\n\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-details',\n    template: `\n        <ng-container *ngIf=\"visitor\">\n            <div details class=\"w-12 text-lg flex justify-center\">\n                <ng-container *ngIf=\"!visitor?.organizer; else host_state\">\n                    <i\n                        *ngIf=\"!visitor?.checked_in; else checkin_state\"\n                        class=\"p-2 rounded-full material-icons border-2 border-dotted border-gray-600 dark:border-neutral-800\"\n                        >face</i\n                    >\n                </ng-container>\n                <ng-template #checkin_state>\n                    <i\n                        class=\"p-2 rounded-full material-icons bg-green-600 border-2 border-green-600 text-white\"\n                        >done</i\n                    >\n                </ng-template>\n                <ng-template #host_state>\n                    <i\n                        class=\"p-2 rounded-full material-icons bg-blue-600 border-2 border-blue-600 text-white\"\n                        >assignment_ind</i\n                    >\n                </ng-template>\n            </div>\n            <div flex class=\"p-2 flex-1\">\n                {{ visitor?.name || visitor?.email }}\n            </div>\n            <div class=\"w-48 py-2 flex items-center justify-end\">\n                <action-icon\n                    remote\n                    [matTooltip]=\"\n                        remote\n                            ? 'Set as In-Person Visitor'\n                            : 'Set as Remote Visitior'\n                    \"\n                    [loading]=\"loading === 'remote'\"\n                    [content]=\"remote ? 'tap_and_play' : 'business'\"\n                    (click)=\"toggleRemote()\"\n                    [class.invisible]=\"\n                        !visitor?.is_external || visitor?.organizer\n                    \"\n                >\n                </action-icon>\n                <action-icon\n                    checkin\n                    matTooltip=\"Checkin Guest\"\n                    [loading]=\"loading === 'checkin'\"\n                    [state]=\"visitor?.checked_in ? 'success' : ''\"\n                    content=\"event_available\"\n                    (click)=\"checkin()\"\n                    [class.invisible]=\"\n                        !visitor?.is_external || visitor?.organizer\n                    \"\n                >\n                </action-icon>\n                <action-icon\n                    checkout\n                    matTooltip=\"Checkout Guest\"\n                    [loading]=\"loading === 'checkout'\"\n                    content=\"event_busy\"\n                    (click)=\"checkout()\"\n                    [class.invisible]=\"\n                        !visitor?.is_external || visitor?.organizer\n                    \"\n                >\n                </action-icon>\n                <a\n                    [href]=\"'mailto:' + visitor?.email\"\n                    icon\n                    matRipple\n                    [matTooltip]=\"\n                        visitor?.organizer ? 'Email Host' : 'Email Guest'\n                    \"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n                <action-icon\n                    matTooltip=\"Print QR Code\"\n                    [loading]=\"loading === 'printing'\"\n                    content=\"event_busy\"\n                    (click)=\"printQRCode()\"\n                    [class.invisible]=\"!can_print\"\n                >\n                </action-icon>\n            </div>\n            <div class=\"w-14 p-2\"></div>\n            <div\n                qr-code\n                *ngIf=\"show_qr_code\"\n                class=\"print-only fixed inset-0 flex flex-col justify-center bg-white space-y-2\"\n            >\n                <h2>{{ visitor?.name || visitor?.email }}</h2>\n                <div>\n                    <span>Host:</span>\n                    {{\n                        event?.organiser?.name ||\n                            event?.organiser?.name ||\n                            event?.creator\n                    }}\n                </div>\n                <div><span>Purpose:</span> {{ event?.title }}</div>\n                <div>\n                    <span>Location:</span>\n                    {{ event?.location || '&lt;Unspecified&gt;' }}\n                </div>\n                <div>\n                    <span>Issue Date:</span> {{ today | date: 'mediumDate' }}\n                </div>\n                <div class=\"flex justify-center\">\n                    <img\n                        [src]=\"visitor?.extension_data?.qr?.code || ''\"\n                        alt=\"qr-code\"\n                    />\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                width: 100%;\n                padding: 0 0.5rem;\n            }\n\n            :host > div {\n                display: flex;\n                align-items: center;\n                height: 100%;\n                border-bottom: 1px solid #ccc;\n                height: 3.5rem;\n            }\n\n            :host > div:first-child {\n                border: none;\n            }\n\n            .invisible {\n                opacity: 0;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class VisitorDetailsComponent extends AsyncHandler implements OnChanges {\n    @Input() public event: CalendarEvent;\n    @Input() public visitor: User;\n    @Output() public eventChange = new EventEmitter<CalendarEvent>();\n\n    public show_attendees: boolean;\n    public loading: string;\n    public show_qr_code: boolean;\n\n    public readonly checkin = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkGuestIn(this.event, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public readonly toggleRemote = async () => {\n        this.loading = 'remote';\n        const remote_list =\n            this.event.ext('remote')?.filter((e) => e !== this.visitor.email) ||\n            [];\n        if (!this.remote) {\n            remote_list.push(this.visitor.email);\n        }\n        const new_item = new CalendarEvent({\n            ...this.event.toJSON(),\n            remote: remote_list,\n        }).toJSON();\n        this.event = await saveEvent(new_item)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error setting visitor status. Error: ${\n                        e.statusText || e.message || e\n                    }`\n                );\n                return this.event;\n            });\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public readonly checkout = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkGuestOut(this.event, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    /** Open print dialog for user's QR code */\n    public readonly printQRCode = () => {\n        this.show_qr_code = true;\n        this.timeout(\n            'print',\n            () => {\n                window.print();\n                this.show_qr_code = false;\n            },\n            50\n        );\n    };\n\n    public get can_print(): boolean {\n        return (\n            this._settings.get('app.can_print_qr') &&\n            this.visitor.checked_in &&\n            this.visitor?.extension_data.qr\n        );\n    }\n\n    public get today(): number {\n        return Date.now();\n    }\n\n    public get remote(): boolean {\n        return !!this.event?.extension_data?.remote?.find(\n            (e) => e === this.visitor?.email\n        );\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.visitor) this.loadGuest();\n    }\n\n    public async loadGuest(tries: number = 0) {\n        if (!this.visitor) return;\n        this.loading = 'printing';\n        if (this.visitor.checked_in) {\n            const guest = await showGuest(this.visitor.email)\n                .toPromise()\n                .catch((_) => null);\n            if (!guest?.extension_data?.qr?.code && tries < 5) {\n                this.timeout('load_guest', () => this.loadGuest(++tries), 1000);\n            } else this.loading = '';\n        } else this.loading = '';\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { HashMap } from '@placeos/ts-client/dist/esm/utilities/types';\nimport { AsyncHandler } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-event',\n    template: `\n        <div\n            event\n            class=\"flex items-center px-2 bg-gray-100 dark:bg-neutral-700\"\n            *ngIf=\"event\"\n        >\n            <div class=\"w-12 text-lg flex justify-center\">\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400 dark:bg-neutral-800\"\n                    *ngIf=\"\n                        event?.status !== 'declined' && event?.state !== 'done'\n                    \"\n                    >event</i\n                >\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400 dark:bg-neutral-800\"\n                    *ngIf=\"event?.status === 'declined'\"\n                    >close</i\n                >\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400 dark:bg-neutral-800 opacity-40\"\n                    *ngIf=\"\n                        event?.state === 'done' && event?.status !== 'declined'\n                    \"\n                    >done</i\n                >\n            </div>\n            <div class=\"w-24 p-2\">\n                {{\n                    event?.date\n                        | date\n                            : ((filters | async)?.period > 1\n                                  ? 'MMM d, h:mm a'\n                                  : 'shortTime')\n                }}\n            </div>\n            <div class=\"w-48 p-2\">\n                {{ event?.organiser?.name || event?.organiser?.email }}\n            </div>\n            <div flex class=\"p-2 flex-1\">{{ event?.title }}</div>\n            <div class=\"w-64 p-2 truncate\">{{ event?.location }}</div>\n            <div class=\"w-32 py-2 flex items-center\">\n                <action-icon\n                    checkin\n                    matTooltip=\"Checkin All Guests\"\n                    [loading]=\"loading === 'checkin'\"\n                    [disabled]=\"guestCount <= 0\"\n                    content=\"event_available\"\n                    (click)=\"checkinGuests()\"\n                >\n                </action-icon>\n                <action-icon\n                    checkout\n                    matTooltip=\"Checkout All Guests\"\n                    [loading]=\"loading === 'checkout'\"\n                    [disabled]=\"guestCount <= 0\"\n                    content=\"event_busy\"\n                    (click)=\"checkoutGuests()\"\n                >\n                </action-icon>\n                <a\n                    icon\n                    matRipple\n                    [href]=\"'mailto:' + event?.organiser?.email\"\n                    matTooltip=\"Email Host\"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n            </div>\n            <div class=\"w-16 p-2\">\n                <button\n                    icon\n                    matRipple\n                    (click)=\"show_attendees = !show_attendees\"\n                    [disabled]=\"!event?.attendees?.length\"\n                    [matTooltip]=\"\n                        show_attendees || has_search\n                            ? 'Hide Attendees'\n                            : 'Show Attendees'\n                    \"\n                >\n                    <app-icon>{{\n                        show_attendees\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            attendees\n            class=\"w-full overflow-hidden relative border-b border-gray-300 dark:border-neutral-600\"\n            [style.height]=\"\n                !show_attendees && !has_search\n                    ? '0rem'\n                    : event?.attendees?.length * 3.5 + 'rem'\n            \"\n        >\n            <ng-container *ngIf=\"show_attendees || has_search\">\n                <div\n                    visitor\n                    class=\"relative w-full pl-12 bg-gray-200 dark:bg-neutral-600\"\n                    *ngFor=\"let user of event?.attendees || []\"\n                >\n                    <div\n                        class=\"absolute left-8 top-1/2 -translate-y-full border-b-2 border-l-2 border-gray-400 dark:border-neutral-700 w-4 h-full\"\n                    ></div>\n                    <visitor-details\n                        [attr.disabled]=\"!matches[user.email]\"\n                        [visitor]=\"user\"\n                        [(event)]=\"event\"\n                    ></visitor-details>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            visitor-details {\n                transition: opacity 200ms;\n            }\n\n            [attendees] {\n                transition: height 200ms;\n            }\n\n            [visitor] {\n                height: 3.5rem;\n            }\n\n            [disabled='true'] {\n                opacity: 0.35;\n            }\n        `,\n    ],\n})\nexport class VisitorEventComponent extends AsyncHandler implements OnInit {\n    @Input() public event: CalendarEvent;\n\n    public show_attendees: boolean;\n    public loading: string;\n    public matches: HashMap<boolean> = {};\n    public readonly filters = this._state.filters;\n\n    public readonly checkinGuests = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkAllGuestsIn(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n    public readonly checkoutGuests = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkAllGuestsOut(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n\n    public get guestCount() {\n        return (\n            this.event?.attendees?.reduce(\n                (c, u) => c + (u.is_external && !u.organizer ? 1 : 0),\n                0\n            ) || 0\n        );\n    }\n\n    public get has_search() {\n        return this._state.search;\n    }\n\n    constructor(private _state: VisitorsStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'events',\n            this._state.filtered_events.subscribe(() => this.updateMatches())\n        );\n    }\n\n    public updateMatches() {\n        if (!this.event) return;\n        this.matches = {};\n        const filter = (this._state.search || '').toLowerCase();\n        for (const user of this.event?.attendees || []) {\n            this.matches[user.email] =\n                !filter ||\n                user.email.toLowerCase().includes(filter) ||\n                user.name.toLowerCase().includes(filter);\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CalendarEvent } from '@placeos/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-listings',\n    template: `\n        <div class=\"w-full flex flex-col flex-1 text-sm h-full\">\n            <div\n                class=\"w-full flex items-center bg-white dark:bg-neutral-700 border-b border-gray-500 p-2 font-medium\"\n            >\n                <div class=\"w-12 p-2\"></div>\n                <div class=\"w-24 p-2\">Time</div>\n                <div class=\"w-48 p-2\">Host</div>\n                <div flex class=\"p-2 flex-1\">Title</div>\n                <div class=\"w-64 p-2\">Location</div>\n                <div class=\"w-32 p-2\">Actions</div>\n                <div class=\"w-16 p-2\"></div>\n            </div>\n            <div class=\"w-full flex-1 overflow-auto h-1/2\">\n                <ng-container\n                    *ngIf=\"(bookings | async)?.length; else empty_state\"\n                >\n                    <visitor-event\n                        *ngFor=\"\n                            let event of bookings | async;\n                            trackBy: trackByFn\n                        \"\n                        [event]=\"event\"\n                    ></visitor-event>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex items-center justify-center\">\n                <p class=\"p-8\">\n                    There are no visitors for the currently selected date.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class VisitorListingsComponent {\n    public readonly bookings = this._state.filtered_events;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, event: CalendarEvent) {\n        return event ? event.id : undefined;\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'guest-listings',\n    template: `\n        <div\n            class=\"w-full flex flex-col flex-1 text-sm h-full overflow-auto pb-20\"\n        >\n            <custom-table\n                class=\"min-w-[88rem]\"\n                [dataSource]=\"guests\"\n                [filter]=\"search | async\"\n                [columns]=\"columns\"\n                [display_column]=\"display_columns\"\n                [column_size]=\"column_sizes\"\n                [template]=\"{\n                    state: state_template,\n                    status: status_template,\n                    date: date_template,\n                    host: host_template,\n                    vaccinated: vaccinated_template,\n                    id_data: id_template,\n                    actions: action_template\n                }\"\n                [empty]=\"\n                    (search | async)\n                        ? 'No matching visitors'\n                        : 'There are visitors for the currently selected date.'\n                \"\n            ></custom-table>\n        </div>\n        <ng-template #state_template let-row=\"row\">\n            <i\n                *ngIf=\"!row?.checked_in; else checkin_state\"\n                class=\"p-2 rounded-full material-icons border-2 border-dotted border-gray-600 dark:border-neutral-800\"\n                >face</i\n            >\n            <ng-template #checkin_state>\n                <i\n                    class=\"p-2 rounded-full material-icons bg-green-600 border-2 border-green-600 text-white\"\n                    >done</i\n                >\n            </ng-template>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            {{ row.extension_data?.host }}\n        </ng-template>\n        <ng-template #vaccinated_template let-row=\"row\">\n            <div customTooltip [content]=\"vaccine_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.vaccination_proof?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.vaccination_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.vaccination_confirmed ===\n                              false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #vaccine_confirmation>\n                <div\n                    class=\"bg-white rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.vaccination_proof?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] p-2 object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'vaccination_confirmed', true)\"\n                    >\n                        Confirm Vaccination Proof\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'vaccination_confirmed', false)\"\n                    >\n                        Reject Vaccination Proof\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #id_template let-row=\"row\">\n            <div customTooltip [content]=\"id_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.id_data?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.id_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.id_confirmed === false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #id_confirmation>\n                <div\n                    class=\"bg-white rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.id_data?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'id_confirmed', true)\"\n                    >\n                        Confirm ID\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'id_confirmed', false)\"\n                    >\n                        Reject ID\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <button\n                matRipple\n                class=\"rounded-3xl bg-pending border-none\"\n                [class.bg-success]=\"row?.status === 'approved'\"\n                [class.!bg-error]=\"row?.status === 'declined'\"\n                [matMenuTriggerFor]=\"menu\"\n            >\n                <div class=\"flex items-center\">\n                    <div class=\"mx-2\">\n                        {{\n                            row?.status === 'approved'\n                                ? 'Approved'\n                                : row?.status === 'declined'\n                                ? 'Declined'\n                                : 'Pending'\n                        }}\n                    </div>\n                    <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                </div>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approveVisitor(row)\">\n                    Approve Visitor\n                </button>\n                <button mat-menu-item (click)=\"declineVisitor(row)\">\n                    Decline Visitor\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            {{\n                row.extension_data?.date\n                    | date\n                        : ((filters | async)?.period > 1\n                              ? 'MMM d, h:mm a'\n                              : 'shortTime')\n            }}\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <button\n                icon\n                matRipple\n                [disabled]=\"!row.attachments?.length\"\n                title=\"\"\n                matTooltip=\"View Attachments\"\n                [matMenuTriggerFor]=\"menu\"\n            >\n                <app-icon>attachment</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <a\n                    *ngFor=\"let item of row.attachments\"\n                    [href]=\"item.url\"\n                    mat-menu-item\n                    >{{ item.name }}</a\n                >\n            </mat-menu>\n            <action-icon\n                remote\n                [matTooltip]=\"\n                    remote\n                        ? 'Set as In-Person Visitor'\n                        : 'Set as Remote Visitior'\n                \"\n                [loading]=\"loading === 'remote'\"\n                [content]=\"remote ? 'tap_and_play' : 'business'\"\n                (click)=\"toggleRemote()\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                checkin\n                matTooltip=\"Checkin Guest\"\n                [loading]=\"loading === 'checkin'\"\n                [state]=\"row?.checked_in ? 'success' : ''\"\n                content=\"event_available\"\n                (click)=\"checkin()\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                checkout\n                matTooltip=\"Checkout Guest\"\n                [loading]=\"loading === 'checkout'\"\n                content=\"event_busy\"\n                (click)=\"checkout()\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <a\n                [href]=\"'mailto:' + row?.email\"\n                icon\n                matRipple\n                [matTooltip]=\"row?.organizer ? 'Email Host' : 'Email Guest'\"\n            >\n                <app-icon>email</app-icon>\n            </a>\n            <action-icon\n                matTooltip=\"Print QR Code\"\n                [loading]=\"loading === 'printing'\"\n                content=\"event_busy\"\n                (click)=\"printQRCode()\"\n                [class.invisible]=\"!can_print\"\n            >\n            </action-icon>\n        </ng-template>\n        <button\n            class=\"bg-secondary hover:shadow-lg shadow absolute bottom-4 right-4 text-white h-12 w-12\"\n            matTooltip=\"Download Visitor List\"\n            matTooltipPosition=\"left\"\n            icon\n            matRipple\n            *ngIf=\"(guests | async)?.length\"\n            (click)=\"downloadVisitorList()\"\n        >\n            <app-icon>download</app-icon>\n        </button>\n    `,\n    styles: [``],\n})\nexport class GuestListingComponent {\n    public readonly guests = this._state.filtered_guests;\n    public readonly search = this._state.search;\n    public readonly filters = this._state.filters;\n\n    public readonly downloadVisitorList = () =>\n        this._state.downloadVisitorsList();\n\n    public readonly approveVisitor = (u) => this._state.approveVisitor(u);\n    public readonly declineVisitor = (u) => this._state.declineVisitor(u);\n    public readonly setExt = (u, f, v) => this._state.setExt(u, f, v);\n\n    public get columns() {\n        return this._settings.get('app.guests.vaccine_check')\n            ? [\n                  'state',\n                  'date',\n                  'name',\n                  'host',\n                  'email',\n                  'vaccinated',\n                  'id_data',\n                  'status',\n                  'actions',\n              ]\n            : ['state', 'date', 'name', 'host', 'email', 'status', 'actions'];\n    }\n\n    public get display_columns() {\n        const fields = {\n            state: ' ',\n            date: 'Date',\n            name: 'Person',\n            host: 'Host',\n            email: 'Email',\n            vaccinated: 'Vaccinated',\n            id_data: 'ID',\n            status: 'State',\n            actions: ' ',\n        };\n        return this.columns.map((_) => fields[_] || _);\n    }\n\n    public get column_sizes() {\n        const fields = {\n            state: '3.5r',\n            date: '8r',\n            name: '12r',\n            host: '12r',\n            email: 'flex',\n            vaccinated: '8r',\n            id_data: '8r',\n            status: '10r',\n            actions: '12r',\n        };\n        return this.columns.map((_) => fields[_] || _);\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col bg-gray-200 dark:bg-neutral-600\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <visitor-listings *ngIf=\"!(filters | async)?.show_guests\" class=\"w-full flex-1 h-0\"></visitor-listings>\n            <guest-listings *ngIf=\"(filters | async)?.show_guests\" class=\"w-full flex-1 h-0\"></guest-listings>\n            <mat-progress-bar class=\"w-full\" *ngIf=\"loading | async\" mode=\"indeterminate\"></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { VisitorListingsComponent } from './visitor-listings.component';\nimport { VisitorEventComponent } from './visitor-event.component';\nimport { VisitorDetailsComponent } from './visitor-details.component';\nimport { GuestListingComponent } from './guest-listing.component';\n\nconst ROUTES: Route[] = [{ path: '', component: VisitorsComponent }];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        VisitorListingsComponent,\n        VisitorEventComponent,\n        VisitorDetailsComponent,\n        GuestListingComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n"],"x_google_ignoreList":[]}