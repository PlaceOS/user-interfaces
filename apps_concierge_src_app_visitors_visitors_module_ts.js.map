{"version":3,"mappings":"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","names":["VisitorsStateService","BaseClass","constructor","super","this","BehaviorSubject","_loading","asObservable","_filters","combineLatest","_poll","pipe","debounceTime","switchMap","filters","next","date","Date","start","show_week","startOfWeek","startOfDay","end","endOfWeek","endOfDay","queryEvents","period_start","getUnixTime","period_end","zone_ids","zones","join","map","list","getValue","all_bookings","filter","event","s","guests","_a","length","o","attendees","_b","shareReplay","_search","events","details","search","toLowerCase","find","user","d","name","includes","u","email","setFilters","Object","setSearchString","startPolling","delay","interval","now","stopPolling","clearInterval","checkGuestIn","new_user","checkinEventGuest","id","system_id","system","resources","toPromise","catch","e","notifyError","p","organiser","notifySuccess","c","_c","new_attendees","unique","sort","a","b","organizer","localeCompare","CalendarEvent","checkGuestOut","checkAllGuestsIn","is_external","checked_in","Error","Promise","all","i","checkAllGuestsOut","factory","i0","VisitorsTopbarComponent","_state","_org","_route","_router","active_levels","str","navigate","relativeTo","queryParams","ngOnInit","initialised","first","_","subscription","queryParamMap","subscribe","params","has","get","split","level","levelWithID","building","buildings","bld","parent_id","levels","zone","lvl","push","updateZones","setSearch","selectors","ctx","VisitorDetailsComponent","_settings","EventEmitter","__awaiter","loading","visitor","eventChange","emit","remote_list","ext","remote","new_item","toJSON","saveEvent","statusText","message","show_qr_code","timeout","window","print","t","extension_data","qr","ngOnChanges","changes","loadGuest","tries","guest","showGuest","code","VisitorEventComponent","reduce","filtered_events","updateMatches","matches","VisitorListingsComponent","trackByFn","index","undefined","ROUTES","path","component","ngOnDestroy","VisitorsComponent","VisitorsModule","CommonModule","FormsModule","UIModule","RouterModule"],"sources":["./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/visitor-details.component.ts","./apps/concierge/src/app/visitors/visitor-event.component.ts","./apps/concierge/src/app/visitors/visitor-listings.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, shareReplay, switchMap } from 'rxjs/operators';\nimport {\n    endOfDay,\n    endOfWeek,\n    startOfDay,\n    startOfWeek,\n    getUnixTime,\n} from 'date-fns';\n\nimport { BaseClass, notifyError, notifySuccess, unique } from '@placeos/common';\nimport { CalendarEvent, checkinEventGuest, queryEvents } from '@placeos/events';\nimport { User } from '@placeos/users';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    show_week?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends BaseClass {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly events = combineLatest([this._filters, this._poll]).pipe(\n        debounceTime(150),\n        switchMap(([filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = filters.show_week\n                ? startOfWeek(date)\n                : startOfDay(date);\n            const end = filters.show_week ? endOfWeek(date) : endOfDay(date);\n            return queryEvents({\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zone_ids: (filters.zones || []).join(','),\n            });\n        }),\n        map((list) => {\n            this._loading.next(false);\n            return this._filters.getValue().all_bookings\n                ? list\n                : list.filter(\n                      (event) =>\n                          event.guests?.length && event.attendees?.length > 1\n                  );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_events = combineLatest([\n        this._search,\n        this.events,\n    ]).pipe(\n        map((details) => {\n            const [search, events] = details;\n            const filter = search.toLowerCase();\n            return events.filter((event) =>\n                event.attendees.find(\n                    (user) =>\n                        user.name?.toLowerCase().includes(filter) ||\n                        user.email?.toLowerCase().includes(filter)\n                )\n            );\n        })\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    constructor() {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async checkGuestIn(event: CalendarEvent, user: User) {\n        const new_user = await checkinEventGuest(event.id, user.email, true, {\n            system_id: event.system?.id || event.resources[0]?.id,\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking in ${user.name} for ${event.organiser?.name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked in ${user.name} for ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkGuestOut(event: CalendarEvent, user: User) {\n        const new_user = await checkinEventGuest(event.id, user.email, false, {\n            system_id: event.system?.id || event.resources[0]?.id,\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking out ${user.name} from ${event.organiser?.name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked out ${user.name} from ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsIn(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && !user.checked_in\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkin');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                checkinEventGuest(event.id, user.email, true, {\n                    system_id: event.system?.id || event.resources[0]?.id,\n                }).toPromise()\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking in all guests for ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked in all guests for ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsOut(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && user.checked_in && !user.organizer\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkout');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                checkinEventGuest(event.id, user.email, false, {\n                    system_id: event.system?.id || event.resources[0]?.id,\n                }).toPromise()\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking out all guests from ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked out all guests from ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                multiple\n                [(ngModel)]=\"zones\"\n                (ngModelChange)=\"updateZones($event)\"\n                placeholder=\"All Levels\"\n            >\n                <mat-option\n                    *ngFor=\"let level of levels | async\"\n                    [value]=\"level.id\"\n                >\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-slide-toggle\n            class=\"m-2\"\n            [ngModel]=\"(filters | async)?.all_bookings\"\n            (ngModelChange)=\"setFilters({ all_bookings: $event })\"\n            ><div class=\"text-xs\">All Bookings</div></mat-slide-toggle\n        >\n        <mat-slide-toggle\n            class=\"m-2\"\n            [ngModel]=\"(filters | async)?.show_week\"\n            (ngModelChange)=\"setFilters({ show_week: $event })\"\n            ><div class=\"text-xs\">Show Week</div></mat-slide-toggle\n        >\n        <div class=\"flex-1 w-2\"></div>\n        <searchbar class=\"mr-2\" (modelChange)=\"setSearch($event)\"></searchbar>\n        <date-options (dateChange)=\"setDate($event)\"></date-options>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 1em;\n                border-bottom: 1px solid #ccc;\n            }\n\n            :host > * + * {\n                margin-left: 0.5rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends BaseClass implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BaseClass, notifyError, SettingsService } from '@placeos/common';\nimport { CalendarEvent, saveEvent } from '@placeos/events';\nimport { showGuest, User } from '@placeos/users';\n\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-details',\n    template: `\n        <div class=\"w-12 text-lg flex justify-center\">\n            <ng-container *ngIf=\"!visitor?.organizer; else host_state\">\n                <i\n                    *ngIf=\"!visitor?.checked_in; else checkin_state\"\n                    class=\"p-2 rounded-full material-icons border-2 border-dotted border-gray-600\"\n                    >face</i\n                >\n            </ng-container>\n            <ng-template #checkin_state>\n                <i\n                    class=\"p-2 rounded-full material-icons bg-green-600 border-2 border-green-600 text-white\"\n                    >done</i\n                >\n            </ng-template>\n            <ng-template #host_state>\n                <i\n                    class=\"p-2 rounded-full material-icons bg-blue-600 border-2 border-blue-600 text-white\"\n                    >assignment_ind</i\n                >\n            </ng-template>\n        </div>\n        <div flex class=\"p-2 flex-1\">{{ visitor?.name || visitor?.email }}</div>\n        <div class=\"w-48 py-2 flex items-center justify-end\">\n            <action-icon\n                remote\n                [matTooltip]=\"\n                    remote\n                        ? 'Set as In-Person Visitor'\n                        : 'Set as Remote Visitior'\n                \"\n                [loading]=\"loading === 'remote'\"\n                [content]=\"remote ? 'tap_and_play' : 'business'\"\n                (click)=\"toggleRemote()\"\n                [class.invisible]=\"!visitor?.is_external || visitor?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                checkin\n                matTooltip=\"Checkin Guest\"\n                [loading]=\"loading === 'checkin'\"\n                [state]=\"visitor?.checked_in ? 'success' : ''\"\n                content=\"event_available\"\n                (click)=\"checkin()\"\n                [class.invisible]=\"!visitor?.is_external || visitor?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                checkout\n                matTooltip=\"Checkout Guest\"\n                [loading]=\"loading === 'checkout'\"\n                content=\"event_busy\"\n                (click)=\"checkout()\"\n                [class.invisible]=\"!visitor?.is_external || visitor?.organizer\"\n            >\n            </action-icon>\n            <a\n                [href]=\"'mailto:' + visitor?.email\"\n                mat-icon-button\n                [matTooltip]=\"visitor?.organizer ? 'Email Host' : 'Email Guest'\"\n            >\n                <app-icon>email</app-icon>\n            </a>\n            <action-icon\n                matTooltip=\"Print QR Code\"\n                [loading]=\"loading === 'printing'\"\n                content=\"event_busy\"\n                (click)=\"printQRCode()\"\n                [class.invisible]=\"!can_print\"\n            >\n            </action-icon>\n        </div>\n        <div class=\"w-14 p-2\"></div>\n        <div\n            qr-code\n            *ngIf=\"show_qr_code\"\n            class=\"print-only fixed inset-0 flex flex-col justify-center bg-white space-y-2\"\n        >\n            <h2>{{ visitor?.name || visitor?.email }}</h2>\n            <div>\n                <span>Host:</span>\n                {{\n                    event?.organiser?.name ||\n                        event?.organiser?.name ||\n                        event?.creator\n                }}\n            </div>\n            <div><span>Purpose:</span> {{ event?.title }}</div>\n            <div>\n                <span>Location:</span>\n                {{ event?.location || '&lt;Unspecified&gt;' }}\n            </div>\n            <div><span>Issue Date:</span> {{ today | date: 'mediumDate' }}</div>\n            <div class=\"flex justify-center\">\n                <img\n                    [src]=\"visitor?.extension_data?.qr?.code || ''\"\n                    alt=\"qr-code\"\n                />\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                width: 100%;\n                padding: 0 0.5rem;\n            }\n\n            :host > div {\n                display: flex;\n                align-items: center;\n                height: 100%;\n                border-bottom: 1px solid #ccc;\n                height: 3.5rem;\n            }\n\n            :host > div:first-child {\n                border: none;\n            }\n\n            .invisible {\n                opacity: 0;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class VisitorDetailsComponent extends BaseClass implements OnChanges {\n    @Input() public event: CalendarEvent;\n    @Input() public visitor: User;\n    @Output() public eventChange = new EventEmitter<CalendarEvent>();\n\n    public show_attendees: boolean;\n    public loading: string;\n    public show_qr_code: boolean;\n\n    public readonly checkin = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkGuestIn(this.event, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public readonly toggleRemote = async () => {\n        this.loading = 'remote';\n        const remote_list =\n            this.event.ext('remote')?.filter((e) => e !== this.visitor.email) ||\n            [];\n        if (!this.remote) {\n            remote_list.push(this.visitor.email);\n        }\n        const new_item = new CalendarEvent({\n            ...this.event.toJSON(),\n            remote: remote_list,\n        }).toJSON();\n        this.event = await saveEvent(new_item)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error setting visitor status. Error: ${\n                        e.statusText || e.message || e\n                    }`\n                );\n                return this.event;\n            });\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public readonly checkout = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkGuestOut(this.event, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    /** Open print dialog for user's QR code */\n    public readonly printQRCode = () => {\n        this.show_qr_code = true;\n        this.timeout(\n            'print',\n            () => {\n                window.print();\n                this.show_qr_code = false;\n            },\n            50\n        );\n    };\n\n    public get can_print(): boolean {\n        return (\n            this._settings.get('app.can_print_qr') &&\n            this.visitor.checked_in &&\n            this.visitor?.extension_data.qr\n        );\n    }\n\n    public get today(): number {\n        return Date.now();\n    }\n\n    public get remote(): boolean {\n        return !!this.event?.extension_data?.remote?.find(\n            (e) => e === this.visitor?.email\n        );\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.visitor) this.loadGuest();\n    }\n\n    public async loadGuest(tries: number = 0) {\n        if (!this.visitor) return;\n        this.loading = 'printing';\n        if (this.visitor.checked_in) {\n            const guest = await showGuest(this.visitor.email)\n                .toPromise()\n                .catch((_) => null);\n            if (!guest?.extension_data?.qr?.code && tries < 5) {\n                this.timeout('load_guest', () => this.loadGuest(++tries), 1000);\n            } else this.loading = '';\n        } else this.loading = '';\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { HashMap } from '@placeos/ts-client/dist/esm/utilities/types';\nimport { BaseClass } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-event',\n    template: `\n        <div class=\"flex items-center px-2 bg-gray-100\" *ngIf=\"event\">\n            <div class=\"w-12 text-lg flex justify-center\">\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400\"\n                    *ngIf=\"\n                        event?.status !== 'declined' && event?.state !== 'done'\n                    \"\n                    >event</i\n                >\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400\"\n                    *ngIf=\"event?.status === 'declined'\"\n                    >close</i\n                >\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400 opacity-40\"\n                    *ngIf=\"\n                        event?.state === 'done' && event?.status !== 'declined'\n                    \"\n                    >done</i\n                >\n            </div>\n            <div class=\"w-24 p-2\">\n                {{\n                    event?.date\n                        | date\n                            : ((filters | async)?.show_week\n                                  ? 'MMM d, h:mm a'\n                                  : 'shortTime')\n                }}\n            </div>\n            <div class=\"w-48 p-2\">\n                {{ event?.organiser?.name || event?.organiser?.email }}\n            </div>\n            <div flex class=\"p-2 flex-1\">{{ event?.title }}</div>\n            <div class=\"w-64 p-2 truncate\">{{ event?.location }}</div>\n            <div class=\"w-32 py-2 flex items-center\">\n                <action-icon\n                    checkin\n                    matTooltip=\"Checkin All Guests\"\n                    [loading]=\"loading === 'checkin'\"\n                    [disabled]=\"guestCount <= 0\"\n                    content=\"event_available\"\n                    (click)=\"checkinGuests()\"\n                >\n                </action-icon>\n                <action-icon\n                    checkout\n                    matTooltip=\"Checkout All Guests\"\n                    [loading]=\"loading === 'checkout'\"\n                    [disabled]=\"guestCount <= 0\"\n                    content=\"event_busy\"\n                    (click)=\"checkoutGuests()\"\n                >\n                </action-icon>\n                <a\n                    mat-icon-button\n                    [href]=\"'mailto:' + event?.organiser?.email\"\n                    matTooltip=\"Email Host\"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n            </div>\n            <div class=\"w-16 p-2\">\n                <button\n                    mat-icon-button\n                    (click)=\"show_attendees = !show_attendees\"\n                    [disabled]=\"!event?.attendees?.length\"\n                    [matTooltip]=\"\n                        show_attendees || has_search\n                            ? 'Hide Attendees'\n                            : 'Show Attendees'\n                    \"\n                >\n                    <app-icon>{{\n                        show_attendees\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            attendees\n            class=\"w-full overflow-hidden relative border-b border-gray-300\"\n            [style.height]=\"\n                !show_attendees && !has_search\n                    ? '0rem'\n                    : event?.attendees.length * 3.5 + 'rem'\n            \"\n        >\n            <div\n                bar\n                class=\"absolute top-0 bg-gray-400 z-10\"\n                [style.height]=\"\n                    'calc(' +\n                    ((event?.attendees.length - 1) * 3.5 + 1.75) +\n                    'rem + 1px)'\n                \"\n            ></div>\n            <ng-container *ngIf=\"show_attendees || has_search\">\n                <div\n                    visitor\n                    class=\"relative w-full pl-12 bg-gray-200\"\n                    *ngFor=\"let user of event?.attendees || []\"\n                >\n                    <div l-bar class=\"absolute bg-gray-400\"></div>\n                    <visitor-details\n                        [attr.disabled]=\"!matches[user.email]\"\n                        [visitor]=\"user\"\n                        [(event)]=\"event\"\n                    ></visitor-details>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            visitor-details {\n                transition: opacity 200ms;\n            }\n\n            [attendees] {\n                transition: height 200ms;\n            }\n\n            [visitor] {\n                height: 3.5rem;\n            }\n\n            [bar] {\n                width: 2px;\n                left: calc(2rem - 1px);\n            }\n\n            [l-bar] {\n                height: 2px;\n                left: 2rem;\n                top: calc(50% - 1px);\n                width: 1rem;\n            }\n\n            [disabled='true'] {\n                opacity: 0.35;\n            }\n        `,\n    ],\n})\nexport class VisitorEventComponent extends BaseClass implements OnInit {\n    @Input() public event: CalendarEvent;\n\n    public show_attendees: boolean;\n    public loading: string;\n    public matches: HashMap<boolean> = {};\n    public readonly filters = this._state.filters;\n\n    public readonly checkinGuests = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkAllGuestsIn(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n    public readonly checkoutGuests = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkAllGuestsOut(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n\n    public get guestCount() {\n        return (\n            this.event?.attendees.reduce(\n                (c, u) => c + (u.is_external && !u.organizer ? 1 : 0),\n                0\n            ) || 0\n        );\n    }\n\n    public get has_search() {\n        return this._state.search;\n    }\n\n    constructor(private _state: VisitorsStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'events',\n            this._state.filtered_events.subscribe(() => this.updateMatches())\n        );\n    }\n\n    public updateMatches() {\n        if (!this.event) return;\n        this.matches = {};\n        const filter = (this._state.search || '').toLowerCase();\n        for (const user of this.event?.attendees || []) {\n            this.matches[user.email] =\n                !filter ||\n                user.email.toLowerCase().includes(filter) ||\n                user.name.toLowerCase().includes(filter);\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CalendarEvent } from '@placeos/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-listings',\n    template: `\n        <div class=\"w-full flex flex-col flex-1 text-sm h-full\">\n            <div\n                class=\"w-full flex items-center bg-white border-b border-gray-500 p-2 font-medium\"\n            >\n                <div class=\"w-12 p-2\"></div>\n                <div class=\"w-24 p-2\">Time</div>\n                <div class=\"w-48 p-2\">Host</div>\n                <div flex class=\"p-2 flex-1\">Title</div>\n                <div class=\"w-64 p-2\">Location</div>\n                <div class=\"w-32 p-2\">Actions</div>\n                <div class=\"w-16 p-2\"></div>\n            </div>\n            <div class=\"w-full flex-1 overflow-auto h-1/2\">\n                <ng-container\n                    *ngIf=\"(bookings | async)?.length; else empty_state\"\n                >\n                    <visitor-event\n                        *ngFor=\"\n                            let event of bookings | async;\n                            trackBy: trackByFn\n                        \"\n                        [event]=\"event\"\n                    ></visitor-event>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex items-center justify-center\">\n                <p class=\"p-8\">\n                    There are no visitors for the currently selected date.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class VisitorListingsComponent {\n    public readonly bookings = this._state.filtered_events;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, event: CalendarEvent) {\n        return event ? event.id : undefined;\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden flex-1 flex flex-col\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <visitor-listings class=\"w-full flex-1 h-0\"></visitor-listings>\n            <mat-progress-bar class=\"w-full\" *ngIf=\"loading | async\" mode=\"indeterminate\"></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n        `\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { VisitorListingsComponent } from './visitor-listings.component';\nimport { VisitorEventComponent } from './visitor-event.component';\nimport { VisitorDetailsComponent } from './visitor-details.component';\n\nconst ROUTES: Route[] = [{ path: '', component: VisitorsComponent }];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        VisitorListingsComponent,\n        VisitorEventComponent,\n        VisitorDetailsComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n"],"sourceRoot":"webpack:///","file":"apps_concierge_src_app_visitors_visitors_module_ts.js"}