{"version":3,"sources":["./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/visitor-details.component.ts","./apps/concierge/src/app/visitors/visitor-event.component.ts","./apps/concierge/src/app/visitors/visitor-listings.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts"],"names":["VisitorsStateService","super","_poll","BehaviorSubject","_filters","_search","_loading","loading","this","asObservable","filters","events","combineLatest","pipe","debounceTime","switchMap","next","date","Date","start","show_week","startOfWeek","startOfDay","end","endOfWeek","endOfDay","period_start","getUnixTime","period_end","zone_ids","zones","join","map","list","getValue","all_bookings","filter","event","guests","length","attendees","shareReplay","filtered_events","details","search","toLowerCase","find","user","name","includes","email","delay","interval","valueOf","clearInterval","new_user","id","system_id","system","resources","toPromise","catch","e","organiser","new_attendees","sort","a","b","organizer","localeCompare","is_external","checked_in","Error","Promise","all","VisitorsTopbarComponent","_state","_org","_route","_router","levels","active_levels","setDate","setFilters","setSearch","str","setSearchString","updateZones","navigate","relativeTo","queryParams","initialised","first","_","subscription","queryParamMap","subscribe","params","has","get","split","level","levelWithID","building","buildings","bld","parent_id","zone","lvl","push","VisitorDetailsComponent","_settings","eventChange","checkin","checkGuestIn","visitor","emit","toggleRemote","remote_list","ext","remote","new_item","toJSON","statusText","message","checkout","checkGuestOut","printQRCode","show_qr_code","timeout","window","print","extension_data","qr","now","changes","loadGuest","tries","guest","code","VisitorEventComponent","matches","checkinGuests","checkAllGuestsIn","checkoutGuests","checkAllGuestsOut","reduce","c","u","updateMatches","VisitorListingsComponent","bookings","index","undefined","ROUTES","path","component","VisitorsComponent","startPolling","stopPolling","VisitorsModule"],"mappings":"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","file":"apps_concierge_src_app_visitors_visitors_module_ts.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, map, shareReplay, switchMap } from 'rxjs/operators';\nimport {\n    endOfDay,\n    endOfWeek,\n    startOfDay,\n    startOfWeek,\n    getUnixTime,\n} from 'date-fns';\n\nimport { BaseClass, notifyError, notifySuccess, unique } from '@placeos/common';\nimport { CalendarEvent, checkinEventGuest, queryEvents } from '@placeos/events';\nimport { User } from '@placeos/users';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    show_week?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends BaseClass {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly events = combineLatest([this._filters, this._poll]).pipe(\n        debounceTime(150),\n        switchMap(([filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = filters.show_week\n                ? startOfWeek(date)\n                : startOfDay(date);\n            const end = filters.show_week ? endOfWeek(date) : endOfDay(date);\n            return queryEvents({\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zone_ids: (filters.zones || []).join(','),\n            });\n        }),\n        map((list) => {\n            this._loading.next(false);\n            return this._filters.getValue().all_bookings\n                ? list\n                : list.filter(\n                      (event) =>\n                          event.guests?.length && event.attendees?.length > 1\n                  );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_events = combineLatest([\n        this._search,\n        this.events,\n    ]).pipe(\n        map((details) => {\n            const [search, events] = details;\n            const filter = search.toLowerCase();\n            return events.filter((event) =>\n                event.attendees.find(\n                    (user) =>\n                        user.name?.toLowerCase().includes(filter) ||\n                        user.email?.toLowerCase().includes(filter)\n                )\n            );\n        })\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    constructor() {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval(\n            'poll',\n            () => this._poll.next(new Date().valueOf()),\n            delay\n        );\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async checkGuestIn(event: CalendarEvent, user: User) {\n        const new_user = await checkinEventGuest(event.id, user.email, true, {\n            system_id: event.system?.id || event.resources[0]?.id,\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking in ${user.name} for ${event.organiser?.name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked in ${user.name} for ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkGuestOut(event: CalendarEvent, user: User) {\n        const new_user = await checkinEventGuest(event.id, user.email, false, {\n            system_id: event.system?.id || event.resources[0]?.id,\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking out ${user.name} from ${event.organiser?.name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked out ${user.name} from ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsIn(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && !user.checked_in\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkin');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                checkinEventGuest(event.id, user.email, true, {\n                    system_id: event.system?.id || event.resources[0]?.id,\n                }).toPromise()\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking in all guests for ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked in all guests for ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsOut(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && user.checked_in && !user.organizer\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkout');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                checkinEventGuest(event.id, user.email, false, {\n                    system_id: event.system?.id || event.resources[0]?.id,\n                }).toPromise()\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking out all guests from ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked out all guests from ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                multiple\n                [(ngModel)]=\"zones\"\n                (ngModelChange)=\"updateZones($event)\"\n                placeholder=\"All Levels\"\n            >\n                <mat-option\n                    *ngFor=\"let level of levels | async\"\n                    [value]=\"level.id\"\n                >\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-slide-toggle\n            class=\"m-2\"\n            [ngModel]=\"(filters | async)?.all_bookings\"\n            (ngModelChange)=\"setFilters({ all_bookings: $event })\"\n            ><div class=\"text-xs\">All Bookings</div></mat-slide-toggle\n        >\n        <mat-slide-toggle\n            class=\"m-2\"\n            [ngModel]=\"(filters | async)?.show_week\"\n            (ngModelChange)=\"setFilters({ show_week: $event })\"\n            ><div class=\"text-xs\">Show Week</div></mat-slide-toggle\n        >\n        <div class=\"flex-1 w-2\"></div>\n        <searchbar class=\"mr-2\" (modelChange)=\"setSearch($event)\"></searchbar>\n        <date-options (dateChange)=\"setDate($event)\"></date-options>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 1em;\n                border-bottom: 1px solid #ccc;\n            }\n\n            :host > * + * {\n                margin-left: 0.5rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends BaseClass implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BaseClass, notifyError, SettingsService } from '@placeos/common';\nimport { CalendarEvent, saveEvent } from '@placeos/events';\nimport { showGuest, User } from '@placeos/users';\n\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-details',\n    template: `\n        <div class=\"w-12 text-lg flex justify-center\">\n            <ng-container *ngIf=\"!visitor?.organizer; else host_state\">\n                <i\n                    *ngIf=\"!visitor?.checked_in; else checkin_state\"\n                    class=\"p-2 rounded-full material-icons border-2 border-dotted border-gray-600\"\n                    >face</i\n                >\n            </ng-container>\n            <ng-template #checkin_state>\n                <i\n                    class=\"p-2 rounded-full material-icons bg-green-600 border-2 border-green-600 text-white\"\n                    >done</i\n                >\n            </ng-template>\n            <ng-template #host_state>\n                <i\n                    class=\"p-2 rounded-full material-icons bg-blue-600 border-2 border-blue-600 text-white\"\n                    >assignment_ind</i\n                >\n            </ng-template>\n        </div>\n        <div flex class=\"p-2 flex-1\">{{ visitor?.name || visitor?.email }}</div>\n        <div class=\"w-48 py-2 flex items-center justify-end\">\n            <action-icon\n                [matTooltip]=\"\n                    remote\n                        ? 'Set as In-Person Visitor'\n                        : 'Set as Remote Visitior'\n                \"\n                [loading]=\"loading === 'remote'\"\n                [content]=\"remote ? 'tap_and_play' : 'business'\"\n                (click)=\"toggleRemote()\"\n                [class.invisible]=\"!visitor?.is_external || visitor?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                matTooltip=\"Checkin Guest\"\n                [loading]=\"loading === 'checkin'\"\n                [state]=\"visitor?.checked_in ? 'success' : ''\"\n                content=\"event_available\"\n                (click)=\"checkin()\"\n                [class.invisible]=\"!visitor?.is_external || visitor?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                matTooltip=\"Checkout Guest\"\n                [loading]=\"loading === 'checkout'\"\n                content=\"event_busy\"\n                (click)=\"checkout()\"\n                [class.invisible]=\"!visitor?.is_external || visitor?.organizer\"\n            >\n            </action-icon>\n            <a\n                [href]=\"'mailto:' + visitor?.email\"\n                mat-icon-button\n                [matTooltip]=\"visitor?.organizer ? 'Email Host' : 'Email Guest'\"\n            >\n                <app-icon>email</app-icon>\n            </a>\n            <action-icon\n                matTooltip=\"Print QR Code\"\n                [loading]=\"loading === 'printing'\"\n                content=\"event_busy\"\n                (click)=\"printQRCode()\"\n                [class.invisible]=\"!can_print\"\n            >\n            </action-icon>\n        </div>\n        <div class=\"w-14 p-2\"></div>\n        <div\n            qr-code\n            *ngIf=\"show_qr_code\"\n            class=\"print-only fixed inset-0 flex flex-col justify-center bg-white space-y-2\"\n        >\n            <h2>{{ visitor?.name || visitor?.email }}</h2>\n            <div>\n                <span>Host:</span>\n                {{\n                    event?.organiser?.name ||\n                        event?.organiser?.name ||\n                        event?.creator\n                }}\n            </div>\n            <div><span>Purpose:</span> {{ event?.title }}</div>\n            <div>\n                <span>Location:</span>\n                {{ event?.location || '&lt;Unspecified&gt;' }}\n            </div>\n            <div><span>Issue Date:</span> {{ today | date: 'mediumDate' }}</div>\n            <div class=\"flex justify-center\">\n                <img\n                    [src]=\"visitor?.extension_data?.qr?.code || ''\"\n                    alt=\"qr-code\"\n                />\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                width: 100%;\n                padding: 0 0.5rem;\n            }\n\n            :host > div {\n                display: flex;\n                align-items: center;\n                height: 100%;\n                border-bottom: 1px solid #ccc;\n                height: 3.5rem;\n            }\n\n            :host > div:first-child {\n                border: none;\n            }\n\n            .invisible {\n                opacity: 0;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class VisitorDetailsComponent extends BaseClass implements OnChanges {\n    @Input() public event: CalendarEvent;\n    @Input() public visitor: User;\n    @Output() public eventChange = new EventEmitter<CalendarEvent>();\n\n    public show_attendees: boolean;\n    public loading: string;\n    public show_qr_code: boolean;\n\n    public readonly checkin = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkGuestIn(this.event, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public readonly toggleRemote = async () => {\n        this.loading = 'remote';\n        const remote_list = this.event\n            .ext('remote')\n            ?.filter((e) => e !== this.visitor.email);\n        if (!this.remote) {\n            remote_list.push(this.visitor.email);\n        }\n        const new_item = new CalendarEvent({\n            ...this.event.toJSON(),\n            remote: remote_list,\n        }).toJSON();\n        this.event = await saveEvent(new_item)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error setting visitor status. Error: ${\n                        e.statusText || e.message || e\n                    }`\n                );\n                return this.event;\n            });\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n    public readonly checkout = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkGuestOut(this.event, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    /** Open print dialog for user's QR code */\n    public readonly printQRCode = () => {\n        this.show_qr_code = true;\n        this.timeout(\n            'print',\n            () => {\n                window.print();\n                this.show_qr_code = false;\n            },\n            50\n        );\n    };\n\n    public get can_print(): boolean {\n        return (\n            this._settings.get('app.can_print_qr') &&\n            this.visitor.checked_in &&\n            this.visitor?.extension_data.qr\n        );\n    }\n\n    public get today(): number {\n        return Date.now();\n    }\n\n    public get remote(): boolean {\n        return !!this.event\n            ?.ext('remote')\n            ?.find((e) => e === this.visitor?.email);\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.visitor) this.loadGuest();\n    }\n\n    public async loadGuest(tries: number = 0) {\n        if (!this.visitor) return;\n        this.loading = 'printing';\n        if (this.visitor.checked_in) {\n            const guest = await showGuest(this.visitor.email)\n                .toPromise()\n                .catch((_) => null);\n            if (!guest?.extension_data?.qr?.code && tries < 5) {\n                this.timeout('load_guest', () => this.loadGuest(++tries), 1000);\n            } else this.loading = '';\n        } else this.loading = '';\n    }\n}\n","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { HashMap } from '@placeos/ts-client/dist/esm/utilities/types';\nimport { BaseClass } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-event',\n    template: `\n        <div class=\"flex items-center px-2 bg-gray-100\" *ngIf=\"event\">\n            <div class=\"w-12 text-lg flex justify-center\">\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400\"\n                    *ngIf=\"\n                        event?.status !== 'declined' && event?.state !== 'done'\n                    \"\n                    >event</i\n                >\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400\"\n                    *ngIf=\"event?.status === 'declined'\"\n                    >close</i\n                >\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400\"\n                    *ngIf=\"\n                        event?.state === 'done' && event?.status !== 'declined'\n                    \"\n                    >done</i\n                >\n            </div>\n            <div class=\"w-24 p-2\">\n                {{\n                    event?.date\n                        | date\n                            : ((filters | async)?.show_week\n                                  ? 'MMM d, h:mm a'\n                                  : 'shortTime')\n                }}\n            </div>\n            <div class=\"w-48 p-2\">\n                {{ event?.organiser?.name || event?.organiser?.email }}\n            </div>\n            <div flex class=\"p-2 flex-1\">{{ event?.title }}</div>\n            <div class=\"w-64 p-2 truncate\">{{ event?.location }}</div>\n            <div class=\"w-32 py-2 flex items-center\">\n                <action-icon\n                    matTooltip=\"Checkin All Guests\"\n                    [loading]=\"loading === 'checkin'\"\n                    [disabled]=\"guestCount <= 0\"\n                    content=\"event_available\"\n                    (click)=\"checkinGuests()\"\n                >\n                </action-icon>\n                <action-icon\n                    matTooltip=\"Checkout All Guests\"\n                    [loading]=\"loading === 'checkout'\"\n                    [disabled]=\"guestCount <= 0\"\n                    content=\"event_busy\"\n                    (click)=\"checkoutGuests()\"\n                >\n                </action-icon>\n                <a\n                    mat-icon-button\n                    [href]=\"'mailto:' + event?.organiser?.email\"\n                    matTooltip=\"Email Host\"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n            </div>\n            <div class=\"w-16 p-2\">\n                <button\n                    mat-icon-button\n                    (click)=\"show_attendees = !show_attendees\"\n                    [disabled]=\"!event?.attendees?.length\"\n                    [matTooltip]=\"\n                        show_attendees || has_search\n                            ? 'Hide Attendees'\n                            : 'Show Attendees'\n                    \"\n                >\n                    <app-icon>{{\n                        show_attendees\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            attendees\n            class=\"w-full overflow-hidden relative border-b border-gray-300\"\n            [style.height]=\"\n                !show_attendees && !has_search\n                    ? '0rem'\n                    : event?.attendees.length * 3.5 + 'rem'\n            \"\n        >\n            <div\n                bar\n                class=\"absolute top-0 bg-gray-400 z-10\"\n                [style.height]=\"\n                    'calc(' +\n                    ((event?.attendees.length - 1) * 3.5 + 1.75) +\n                    'rem + 1px)'\n                \"\n            ></div>\n            <ng-container *ngIf=\"show_attendees || has_search\">\n                <div\n                    visitor\n                    class=\"relative w-full pl-12 bg-gray-200\"\n                    *ngFor=\"let user of event?.attendees || []\"\n                >\n                    <div l-bar class=\"absolute bg-gray-400\"></div>\n                    <visitor-details\n                        [attr.disabled]=\"!matches[user.email]\"\n                        [visitor]=\"user\"\n                        [(event)]=\"event\"\n                    ></visitor-details>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            visitor-details {\n                transition: opacity 200ms;\n            }\n\n            [attendees] {\n                transition: height 200ms;\n            }\n\n            [visitor] {\n                height: 3.5rem;\n            }\n\n            [bar] {\n                width: 2px;\n                left: calc(2rem - 1px);\n            }\n\n            [l-bar] {\n                height: 2px;\n                left: 2rem;\n                top: calc(50% - 1px);\n                width: 1rem;\n            }\n\n            [disabled='true'] {\n                opacity: 0.35;\n            }\n        `,\n    ],\n})\nexport class VisitorEventComponent extends BaseClass implements OnInit {\n    @Input() public event: CalendarEvent;\n\n    public show_attendees: boolean;\n    public loading: string;\n    public matches: HashMap<boolean> = {};\n    public readonly filters = this._state.filters;\n\n    public readonly checkinGuests = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkAllGuestsIn(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n    public readonly checkoutGuests = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkAllGuestsOut(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n\n    public get guestCount() {\n        return (\n            this.event?.attendees.reduce(\n                (c, u) => c + (u.is_external && !u.organizer ? 1 : 0),\n                0\n            ) || 0\n        );\n    }\n\n    public get has_search() {\n        return this._state.search;\n    }\n\n    constructor(private _state: VisitorsStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'events',\n            this._state.filtered_events.subscribe(() => this.updateMatches())\n        );\n    }\n\n    public updateMatches() {\n        if (!this.event) return;\n        this.matches = {};\n        const filter = (this._state.search || '').toLowerCase();\n        for (const user of this.event?.attendees || []) {\n            this.matches[user.email] =\n                !filter ||\n                user.email.toLowerCase().includes(filter) ||\n                user.name.toLowerCase().includes(filter);\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CalendarEvent } from '@placeos/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-listings',\n    template: `\n        <div class=\"w-full flex flex-col flex-1 text-sm h-full\">\n            <div\n                class=\"w-full flex items-center bg-white border-b border-gray-500 p-2 font-medium\"\n            >\n                <div class=\"w-12 p-2\"></div>\n                <div class=\"w-24 p-2\">Time</div>\n                <div class=\"w-48 p-2\">Host</div>\n                <div flex class=\"p-2 flex-1\">Title</div>\n                <div class=\"w-64 p-2\">Location</div>\n                <div class=\"w-32 p-2\">Actions</div>\n                <div class=\"w-16 p-2\"></div>\n            </div>\n            <div class=\"w-full flex-1 overflow-auto h-1/2\">\n                <ng-container\n                    *ngIf=\"(bookings | async)?.length; else empty_state\"\n                >\n                    <visitor-event\n                        *ngFor=\"\n                            let event of bookings | async;\n                            trackBy: trackByFn\n                        \"\n                        [event]=\"event\"\n                    ></visitor-event>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex items-center justify-center\">\n                <p class=\"p-8\">\n                    There are no visitors for the currently selected date.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class VisitorListingsComponent {\n    public readonly bookings = this._state.filtered_events;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, event: CalendarEvent) {\n        return event ? event.id : undefined;\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden flex-1 flex flex-col\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <visitor-listings class=\"w-full flex-1 h-0\"></visitor-listings>\n            <mat-progress-bar class=\"w-full\" *ngIf=\"loading | async\" mode=\"indeterminate\"></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n        `\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { VisitorListingsComponent } from './visitor-listings.component';\nimport { VisitorEventComponent } from './visitor-event.component';\nimport { VisitorDetailsComponent } from './visitor-details.component';\n\nconst ROUTES: Route[] = [{ path: '', component: VisitorsComponent }];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        VisitorListingsComponent,\n        VisitorEventComponent,\n        VisitorDetailsComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n"],"sourceRoot":"webpack:///"}