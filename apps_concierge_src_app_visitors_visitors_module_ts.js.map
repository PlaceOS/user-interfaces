{"version":3,"mappings":"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","names":["VisitorsStateService","BaseClass","constructor","_dialog","super","this","BehaviorSubject","_loading","asObservable","_filters","combineLatest","_poll","pipe","debounceTime","switchMap","filters","next","date","Date","start","startOfDay","end","addDays","period","queryGuests","period_start","getUnixTime","period_end","zone_ids","zones","join","tap","shareReplay","queryEvents","map","list","getValue","all_bookings","filter","event","s","guests","_a","length","a","attendees","_b","_search","events","search","toLowerCase","find","user","u","name","includes","d","email","filtered_events","guest_list","flatten","is_external","_","v","g","GuestUser","Object","extension_data","host","organiser","setFilters","setSearchString","startPolling","delay","interval","now","stopPolling","clearInterval","checkGuestIn","new_user","checkinEventGuest","id","system_id","o","system","resources","toPromise","catch","e","notifyError","notifySuccess","_c","new_attendees","unique","sort","b","organizer","localeCompare","CalendarEvent","setExt","guest","field","value","updateGuest","approveVisitor","details","openConfirmModal","title","content","icon","console","log","reason","close","loading","status","declineVisitor","checkGuestOut","checkAllGuestsIn","checked_in","Error","Promise","all","n","checkAllGuestsOut","downloadVisitorsList","filtered_guests","take","Name","Email","Host","r","Status","format","data","jsonToCsv","downloadFile","i0","factory","ctx_r3","VisitorsTopbarComponent","_state","_org","_route","_router","active_levels","str","navigate","relativeTo","queryParams","ngOnInit","initialised","first","subscription","queryParamMap","subscribe","params","has","get","split","level","levelWithID","building","buildings","bld","parent_id","levels","zone","lvl","push","updateZones","setSearch","selectors","ctx","VisitorDetailsComponent","_settings","EventEmitter","__awaiter","visitor","eventChange","emit","remote_list","ext","remote","new_item","toJSON","saveEvent","statusText","message","show_qr_code","timeout","window","print","can_print","qr","today","ngOnChanges","changes","loadGuest","tries","showGuest","code","ctx_r5","ctx_r7","VisitorEventComponent","guestCount","reduce","c","has_search","updateMatches","matches","VisitorListingsComponent","trackByFn","index","undefined","ctx_r25","oxw","ctx_r28","ctx_r36","ctx_r39","ctx_r44","ctx_r46","ctx_r52","ctx_r54","ctx_r55","ctx_r56","ctx_r57","GuestListingComponent","f","columns","display_columns","fields","state","vaccinated","id_data","actions","column_sizes","ROUTES","path","component","ngOnDestroy","VisitorsComponent","VisitorsModule","CommonModule","FormsModule","UIModule","RouterModule"],"sources":["./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/visitor-details.component.ts","./apps/concierge/src/app/visitors/visitor-event.component.ts","./apps/concierge/src/app/visitors/visitor-listings.component.ts","./apps/concierge/src/app/visitors/guest-listing.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport {\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport {\n    startOfDay,\n    getUnixTime,\n    addDays,\n    format,\n} from 'date-fns';\n\nimport {\n    BaseClass,\n    downloadFile,\n    flatten,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    unique,\n} from '@placeos/common';\nimport { CalendarEvent, checkinEventGuest, queryEvents } from '@placeos/events';\nimport { GuestUser, queryGuests, updateGuest, User } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    period?: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends BaseClass {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly guests = combineLatest([this._filters, this._poll]).pipe(\n        debounceTime(150),\n        switchMap(([filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return queryGuests({\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zone_ids: (filters.zones || []).join(','),\n            });\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n\n    public readonly events = combineLatest([this._filters, this._poll]).pipe(\n        debounceTime(150),\n        switchMap(([filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return queryEvents({\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zone_ids: (filters.zones || []).join(','),\n            });\n        }),\n        map((list) => {\n            this._loading.next(false);\n            return this._filters.getValue().all_bookings\n                ? list\n                : list.filter(\n                      (event) =>\n                          event.guests?.length && event.attendees?.length > 1\n                  );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_events = combineLatest([\n        this._search,\n        this.events,\n    ]).pipe(\n        map(([search, events]) => {\n            const filter = search.toLowerCase();\n            return events.filter((event) =>\n                event.attendees.find(\n                    (user) =>\n                        user.name?.toLowerCase().includes(filter) ||\n                        user.email?.toLowerCase().includes(filter)\n                )\n            );\n        })\n    );\n\n    public readonly filtered_guests = combineLatest([\n        this._search,\n        this.filtered_events,\n        this.guests,\n    ]).pipe(\n        map(([search, events, guest_list]) => {\n            const filter = search.toLowerCase();\n            return flatten(\n                events.map((event) => {\n                    const guests = event.attendees.filter(\n                        (user) =>\n                            user.is_external &&\n                            (user.name?.toLowerCase().includes(filter) ||\n                                user.email?.toLowerCase().includes(filter))\n                    );\n                    return guests.map((_) => {\n                        const g: any =\n                            guest_list.find((g) => g.email === _.email) || {};\n                        return new GuestUser({\n                            ..._,\n                            ...g,\n                            extension_data: {\n                                ..._.extension_data,\n                                ...g.extension_data,\n                                date: event.date,\n                                host:\n                                    event.organiser?.name ||\n                                    event.organiser?.email ||\n                                    event.host,\n                            },\n                        });\n                    });\n                })\n            );\n        })\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    constructor(private _dialog: MatDialog) {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async checkGuestIn(event: CalendarEvent, user: User) {\n        const new_user = await checkinEventGuest(event.id, user.email, true, {\n            system_id: event.system?.id || event.resources[0]?.id,\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking in ${user.name} for ${event.organiser?.name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked in ${user.name} for ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async setExt<T = any>(guest: GuestUser, field: string, value: T) {\n        const extension_data = { ...guest.extension_data };\n        extension_data[field] = value;\n        await updateGuest(guest.id, { ...guest, extension_data }).toPromise();\n    }\n\n    public async approveVisitor(guest: GuestUser) {\n        const details = await openConfirmModal(\n            {\n                title: 'Approve Visitor',\n                content: `Approve attendance of ${guest.name} to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        console.log('Details:', details);\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await updateGuest(guest.id, {\n            ...guest,\n            extension_data: { ...guest.extension_data, status: 'approved' },\n        }).toPromise();\n        details.close();\n    }\n\n    public async declineVisitor(guest: GuestUser) {\n        const details = await openConfirmModal(\n            {\n                title: 'Decline Visitor',\n                content: `Decline attendance of ${guest.name} to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        console.log('Details:', details);\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await updateGuest(guest.id, {\n            ...guest,\n            extension_data: { ...guest.extension_data, status: 'declined' },\n        }).toPromise();\n        details.close();\n    }\n\n    public async checkGuestOut(event: CalendarEvent, user: User) {\n        const new_user = await checkinEventGuest(event.id, user.email, false, {\n            system_id: event.system?.id || event.resources[0]?.id,\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking out ${user.name} from ${event.organiser?.name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked out ${user.name} from ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsIn(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && !user.checked_in\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkin');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                checkinEventGuest(event.id, user.email, true, {\n                    system_id: event.system?.id || event.resources[0]?.id,\n                }).toPromise()\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking in all guests for ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked in all guests for ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsOut(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && user.checked_in && !user.organizer\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkout');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                checkinEventGuest(event.id, user.email, false, {\n                    system_id: event.system?.id || event.resources[0]?.id,\n                }).toPromise()\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking out all guests from ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked out all guests from ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async downloadVisitorsList() {\n        const guests: GuestUser[] = await this.filtered_guests\n            .pipe(take(1))\n            .toPromise();\n        if (!guests.length) return;\n        const { date } = this._filters.getValue();\n        const list = guests.map((_) => ({\n            Name: _.name,\n            Email: _.email,\n            'Checked In': _.checked_in,\n            Host: _.extension_data?.host || '',\n            Status: _.status,\n            Date: format(_.extension_data?.date, 'dd MMM h:mm a'),\n        }));\n        const data = jsonToCsv(list);\n        downloadFile(\n            `visitor-list-${format(date || Date.now(), 'MMM-dd')}.csv`,\n            data\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                multiple\n                [(ngModel)]=\"zones\"\n                (ngModelChange)=\"updateZones($event)\"\n                placeholder=\"All Levels\"\n            >\n                <mat-option\n                    *ngFor=\"let level of levels | async\"\n                    [value]=\"level.id\"\n                >\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                [ngModel]=\"(filters | async)?.period || 1\"\n                (ngModelChange)=\"setFilters({ period: $event })\"\n                placeholder=\"Viewing Period\"\n            >\n                <mat-option [value]=\"1\">Show Day</mat-option>\n                <mat-option [value]=\"7\">Show Week</mat-option>\n                <mat-option [value]=\"30\">Show Month</mat-option>\n            </mat-select>\n        </mat-form-field>\n        <mat-slide-toggle\n            class=\"m-2\"\n            [ngModel]=\"(filters | async)?.show_guests\"\n            (ngModelChange)=\"setFilters({ show_guests: $event })\"\n            ><div class=\"text-xs\">Only Guests</div></mat-slide-toggle\n        >\n        <mat-slide-toggle\n            class=\"m-2\"\n            *ngIf=\"!(filters | async)?.show_guests\"\n            [ngModel]=\"(filters | async)?.all_bookings\"\n            (ngModelChange)=\"setFilters({ all_bookings: $event })\"\n            ><div class=\"text-xs\">All Bookings</div></mat-slide-toggle\n        >\n        <div class=\"flex-1 w-2\"></div>\n        <searchbar class=\"mr-2\" (modelChange)=\"setSearch($event)\"></searchbar>\n        <date-options (dateChange)=\"setDate($event)\"></date-options>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 1em;\n                border-bottom: 1px solid #ccc;\n            }\n\n            :host > * + * {\n                margin-left: 0.5rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends BaseClass implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BaseClass, notifyError, SettingsService } from '@placeos/common';\nimport { CalendarEvent, saveEvent } from '@placeos/events';\nimport { showGuest, User } from '@placeos/users';\n\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-details',\n    template: `\n        <div class=\"w-12 text-lg flex justify-center\">\n            <ng-container *ngIf=\"!visitor?.organizer; else host_state\">\n                <i\n                    *ngIf=\"!visitor?.checked_in; else checkin_state\"\n                    class=\"p-2 rounded-full material-icons border-2 border-dotted border-gray-600\"\n                    >face</i\n                >\n            </ng-container>\n            <ng-template #checkin_state>\n                <i\n                    class=\"p-2 rounded-full material-icons bg-green-600 border-2 border-green-600 text-white\"\n                    >done</i\n                >\n            </ng-template>\n            <ng-template #host_state>\n                <i\n                    class=\"p-2 rounded-full material-icons bg-blue-600 border-2 border-blue-600 text-white\"\n                    >assignment_ind</i\n                >\n            </ng-template>\n        </div>\n        <div flex class=\"p-2 flex-1\">{{ visitor?.name || visitor?.email }}</div>\n        <div class=\"w-48 py-2 flex items-center justify-end\">\n            <action-icon\n                remote\n                [matTooltip]=\"\n                    remote\n                        ? 'Set as In-Person Visitor'\n                        : 'Set as Remote Visitior'\n                \"\n                [loading]=\"loading === 'remote'\"\n                [content]=\"remote ? 'tap_and_play' : 'business'\"\n                (click)=\"toggleRemote()\"\n                [class.invisible]=\"!visitor?.is_external || visitor?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                checkin\n                matTooltip=\"Checkin Guest\"\n                [loading]=\"loading === 'checkin'\"\n                [state]=\"visitor?.checked_in ? 'success' : ''\"\n                content=\"event_available\"\n                (click)=\"checkin()\"\n                [class.invisible]=\"!visitor?.is_external || visitor?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                checkout\n                matTooltip=\"Checkout Guest\"\n                [loading]=\"loading === 'checkout'\"\n                content=\"event_busy\"\n                (click)=\"checkout()\"\n                [class.invisible]=\"!visitor?.is_external || visitor?.organizer\"\n            >\n            </action-icon>\n            <a\n                [href]=\"'mailto:' + visitor?.email\"\n                mat-icon-button\n                [matTooltip]=\"visitor?.organizer ? 'Email Host' : 'Email Guest'\"\n            >\n                <app-icon>email</app-icon>\n            </a>\n            <action-icon\n                matTooltip=\"Print QR Code\"\n                [loading]=\"loading === 'printing'\"\n                content=\"event_busy\"\n                (click)=\"printQRCode()\"\n                [class.invisible]=\"!can_print\"\n            >\n            </action-icon>\n        </div>\n        <div class=\"w-14 p-2\"></div>\n        <div\n            qr-code\n            *ngIf=\"show_qr_code\"\n            class=\"print-only fixed inset-0 flex flex-col justify-center bg-white space-y-2\"\n        >\n            <h2>{{ visitor?.name || visitor?.email }}</h2>\n            <div>\n                <span>Host:</span>\n                {{\n                    event?.organiser?.name ||\n                        event?.organiser?.name ||\n                        event?.creator\n                }}\n            </div>\n            <div><span>Purpose:</span> {{ event?.title }}</div>\n            <div>\n                <span>Location:</span>\n                {{ event?.location || '&lt;Unspecified&gt;' }}\n            </div>\n            <div><span>Issue Date:</span> {{ today | date: 'mediumDate' }}</div>\n            <div class=\"flex justify-center\">\n                <img\n                    [src]=\"visitor?.extension_data?.qr?.code || ''\"\n                    alt=\"qr-code\"\n                />\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                width: 100%;\n                padding: 0 0.5rem;\n            }\n\n            :host > div {\n                display: flex;\n                align-items: center;\n                height: 100%;\n                border-bottom: 1px solid #ccc;\n                height: 3.5rem;\n            }\n\n            :host > div:first-child {\n                border: none;\n            }\n\n            .invisible {\n                opacity: 0;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class VisitorDetailsComponent extends BaseClass implements OnChanges {\n    @Input() public event: CalendarEvent;\n    @Input() public visitor: User;\n    @Output() public eventChange = new EventEmitter<CalendarEvent>();\n\n    public show_attendees: boolean;\n    public loading: string;\n    public show_qr_code: boolean;\n\n    public readonly checkin = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkGuestIn(this.event, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public readonly toggleRemote = async () => {\n        this.loading = 'remote';\n        const remote_list =\n            this.event.ext('remote')?.filter((e) => e !== this.visitor.email) ||\n            [];\n        if (!this.remote) {\n            remote_list.push(this.visitor.email);\n        }\n        const new_item = new CalendarEvent({\n            ...this.event.toJSON(),\n            remote: remote_list,\n        }).toJSON();\n        this.event = await saveEvent(new_item)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error setting visitor status. Error: ${\n                        e.statusText || e.message || e\n                    }`\n                );\n                return this.event;\n            });\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public readonly checkout = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkGuestOut(this.event, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    /** Open print dialog for user's QR code */\n    public readonly printQRCode = () => {\n        this.show_qr_code = true;\n        this.timeout(\n            'print',\n            () => {\n                window.print();\n                this.show_qr_code = false;\n            },\n            50\n        );\n    };\n\n    public get can_print(): boolean {\n        return (\n            this._settings.get('app.can_print_qr') &&\n            this.visitor.checked_in &&\n            this.visitor?.extension_data.qr\n        );\n    }\n\n    public get today(): number {\n        return Date.now();\n    }\n\n    public get remote(): boolean {\n        return !!this.event?.extension_data?.remote?.find(\n            (e) => e === this.visitor?.email\n        );\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.visitor) this.loadGuest();\n    }\n\n    public async loadGuest(tries: number = 0) {\n        if (!this.visitor) return;\n        this.loading = 'printing';\n        if (this.visitor.checked_in) {\n            const guest = await showGuest(this.visitor.email)\n                .toPromise()\n                .catch((_) => null);\n            if (!guest?.extension_data?.qr?.code && tries < 5) {\n                this.timeout('load_guest', () => this.loadGuest(++tries), 1000);\n            } else this.loading = '';\n        } else this.loading = '';\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { HashMap } from '@placeos/ts-client/dist/esm/utilities/types';\nimport { BaseClass } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-event',\n    template: `\n        <div class=\"flex items-center px-2 bg-gray-100\" *ngIf=\"event\">\n            <div class=\"w-12 text-lg flex justify-center\">\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400\"\n                    *ngIf=\"\n                        event?.status !== 'declined' && event?.state !== 'done'\n                    \"\n                    >event</i\n                >\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400\"\n                    *ngIf=\"event?.status === 'declined'\"\n                    >close</i\n                >\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400 opacity-40\"\n                    *ngIf=\"\n                        event?.state === 'done' && event?.status !== 'declined'\n                    \"\n                    >done</i\n                >\n            </div>\n            <div class=\"w-24 p-2\">\n                {{\n                    event?.date\n                        | date: ((filters | async)?.period > 1\n                                  ? 'MMM d, h:mm a'\n                                  : 'shortTime')\n                }}\n            </div>\n            <div class=\"w-48 p-2\">\n                {{ event?.organiser?.name || event?.organiser?.email }}\n            </div>\n            <div flex class=\"p-2 flex-1\">{{ event?.title }}</div>\n            <div class=\"w-64 p-2 truncate\">{{ event?.location }}</div>\n            <div class=\"w-32 py-2 flex items-center\">\n                <action-icon\n                    checkin\n                    matTooltip=\"Checkin All Guests\"\n                    [loading]=\"loading === 'checkin'\"\n                    [disabled]=\"guestCount <= 0\"\n                    content=\"event_available\"\n                    (click)=\"checkinGuests()\"\n                >\n                </action-icon>\n                <action-icon\n                    checkout\n                    matTooltip=\"Checkout All Guests\"\n                    [loading]=\"loading === 'checkout'\"\n                    [disabled]=\"guestCount <= 0\"\n                    content=\"event_busy\"\n                    (click)=\"checkoutGuests()\"\n                >\n                </action-icon>\n                <a\n                    mat-icon-button\n                    [href]=\"'mailto:' + event?.organiser?.email\"\n                    matTooltip=\"Email Host\"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n            </div>\n            <div class=\"w-16 p-2\">\n                <button\n                    mat-icon-button\n                    (click)=\"show_attendees = !show_attendees\"\n                    [disabled]=\"!event?.attendees?.length\"\n                    [matTooltip]=\"\n                        show_attendees || has_search\n                            ? 'Hide Attendees'\n                            : 'Show Attendees'\n                    \"\n                >\n                    <app-icon>{{\n                        show_attendees\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            attendees\n            class=\"w-full overflow-hidden relative border-b border-gray-300\"\n            [style.height]=\"\n                !show_attendees && !has_search\n                    ? '0rem'\n                    : event?.attendees.length * 3.5 + 'rem'\n            \"\n        >\n            <div\n                bar\n                class=\"absolute top-0 bg-gray-400 z-10\"\n                [style.height]=\"\n                    'calc(' +\n                    ((event?.attendees.length - 1) * 3.5 + 1.75) +\n                    'rem + 1px)'\n                \"\n            ></div>\n            <ng-container *ngIf=\"show_attendees || has_search\">\n                <div\n                    visitor\n                    class=\"relative w-full pl-12 bg-gray-200\"\n                    *ngFor=\"let user of event?.attendees || []\"\n                >\n                    <div l-bar class=\"absolute bg-gray-400\"></div>\n                    <visitor-details\n                        [attr.disabled]=\"!matches[user.email]\"\n                        [visitor]=\"user\"\n                        [(event)]=\"event\"\n                    ></visitor-details>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            visitor-details {\n                transition: opacity 200ms;\n            }\n\n            [attendees] {\n                transition: height 200ms;\n            }\n\n            [visitor] {\n                height: 3.5rem;\n            }\n\n            [bar] {\n                width: 2px;\n                left: calc(2rem - 1px);\n            }\n\n            [l-bar] {\n                height: 2px;\n                left: 2rem;\n                top: calc(50% - 1px);\n                width: 1rem;\n            }\n\n            [disabled='true'] {\n                opacity: 0.35;\n            }\n        `,\n    ],\n})\nexport class VisitorEventComponent extends BaseClass implements OnInit {\n    @Input() public event: CalendarEvent;\n\n    public show_attendees: boolean;\n    public loading: string;\n    public matches: HashMap<boolean> = {};\n    public readonly filters = this._state.filters;\n\n    public readonly checkinGuests = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkAllGuestsIn(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n    public readonly checkoutGuests = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkAllGuestsOut(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n\n    public get guestCount() {\n        return (\n            this.event?.attendees.reduce(\n                (c, u) => c + (u.is_external && !u.organizer ? 1 : 0),\n                0\n            ) || 0\n        );\n    }\n\n    public get has_search() {\n        return this._state.search;\n    }\n\n    constructor(private _state: VisitorsStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'events',\n            this._state.filtered_events.subscribe(() => this.updateMatches())\n        );\n    }\n\n    public updateMatches() {\n        if (!this.event) return;\n        this.matches = {};\n        const filter = (this._state.search || '').toLowerCase();\n        for (const user of this.event?.attendees || []) {\n            this.matches[user.email] =\n                !filter ||\n                user.email.toLowerCase().includes(filter) ||\n                user.name.toLowerCase().includes(filter);\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CalendarEvent } from '@placeos/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-listings',\n    template: `\n        <div class=\"w-full flex flex-col flex-1 text-sm h-full\">\n            <div\n                class=\"w-full flex items-center bg-white border-b border-gray-500 p-2 font-medium\"\n            >\n                <div class=\"w-12 p-2\"></div>\n                <div class=\"w-24 p-2\">Time</div>\n                <div class=\"w-48 p-2\">Host</div>\n                <div flex class=\"p-2 flex-1\">Title</div>\n                <div class=\"w-64 p-2\">Location</div>\n                <div class=\"w-32 p-2\">Actions</div>\n                <div class=\"w-16 p-2\"></div>\n            </div>\n            <div class=\"w-full flex-1 overflow-auto h-1/2\">\n                <ng-container\n                    *ngIf=\"(bookings | async)?.length; else empty_state\"\n                >\n                    <visitor-event\n                        *ngFor=\"\n                            let event of bookings | async;\n                            trackBy: trackByFn\n                        \"\n                        [event]=\"event\"\n                    ></visitor-event>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex items-center justify-center\">\n                <p class=\"p-8\">\n                    There are no visitors for the currently selected date.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class VisitorListingsComponent {\n    public readonly bookings = this._state.filtered_events;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, event: CalendarEvent) {\n        return event ? event.id : undefined;\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'guest-listings',\n    template: `\n        <div\n            class=\"w-full flex flex-col flex-1 text-sm h-full overflow-auto pb-20\"\n        >\n            <custom-table\n                class=\"min-w-[88rem]\"\n                [dataSource]=\"guests\"\n                [filter]=\"search | async\"\n                [columns]=\"columns\"\n                [display_column]=\"display_columns\"\n                [column_size]=\"column_sizes\"\n                [template]=\"{\n                    state: state_template,\n                    status: status_template,\n                    date: date_template,\n                    host: host_template,\n                    vaccinated: vaccinated_template,\n                    id_data: id_template,\n                    actions: action_template\n                }\"\n                [empty]=\"\n                    (search | async)\n                        ? 'No matching visitors'\n                        : 'There are visitors for the currently selected date.'\n                \"\n            ></custom-table>\n        </div>\n        <ng-template #state_template let-row=\"row\">\n            <i\n                *ngIf=\"!row?.checked_in; else checkin_state\"\n                class=\"p-2 rounded-full material-icons border-2 border-dotted border-gray-600\"\n                >face</i\n            >\n            <ng-template #checkin_state>\n                <i\n                    class=\"p-2 rounded-full material-icons bg-green-600 border-2 border-green-600 text-white\"\n                    >done</i\n                >\n            </ng-template>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            {{ row.extension_data?.host }}\n        </ng-template>\n        <ng-template #vaccinated_template let-row=\"row\">\n            <div customTooltip [content]=\"vaccine_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.vaccination_proof?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.vaccination_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.vaccination_confirmed ===\n                              false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #vaccine_confirmation>\n                <div class=\"bg-white rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\">\n                    <img\n                        [src]=\"row.extension_data?.vaccination_proof?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] p-2 object-contain\"\n                    />\n                    <button\n                        mat-button\n                        (click)=\"setExt(row, 'vaccination_confirmed', true)\"\n                    >\n                        Confirm Vaccination Proof\n                    </button>\n                    <button\n                        mat-button\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'vaccination_confirmed', false)\"\n                    >\n                        Reject Vaccination Proof\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #id_template let-row=\"row\">\n            <div customTooltip [content]=\"id_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.id_data?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.id_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.id_confirmed === false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #id_confirmation>\n                <div class=\"bg-white rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\">\n                    <img\n                        [src]=\"row.extension_data?.id_data?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] object-contain\"\n                    />\n                    <button\n                        mat-button\n                        (click)=\"setExt(row, 'id_confirmed', true)\"\n                    >\n                        Confirm ID\n                    </button>\n                    <button\n                        mat-button\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'id_confirmed', false)\"\n                    >\n                        Reject ID\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <button\n                mat-button\n                class=\"rounded-3xl bg-pending border-none\"\n                [class.bg-success]=\"row?.status === 'approved'\"\n                [class.!bg-error]=\"row?.status === 'declined'\"\n                [matMenuTriggerFor]=\"menu\"\n            >\n                <div class=\"flex items-center\">\n                    <div class=\"mx-2\">\n                        {{\n                            row?.status === 'approved'\n                                ? 'Approved'\n                                : row?.status === 'declined'\n                                ? 'Declined'\n                                : 'Pending'\n                        }}\n                    </div>\n                    <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                </div>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approveVisitor(row)\">\n                    Approve Visitor\n                </button>\n                <button mat-menu-item (click)=\"declineVisitor(row)\">\n                    Decline Visitor\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            {{\n                row.extension_data?.date\n                    | date\n                        : ((filters | async)?.period > 1\n                              ? 'MMM d, h:mm a'\n                              : 'shortTime')\n            }}\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <button\n                mat-icon-button\n                [disabled]=\"!row.attachments?.length\"\n                title=\"\"\n                matTooltip=\"View Attachments\"\n                [matMenuTriggerFor]=\"menu\"\n            >\n                <app-icon>attachment</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <a\n                    *ngFor=\"let item of row.attachments\"\n                    [href]=\"item.url\"\n                    mat-menu-item\n                    >{{ item.name }}</a\n                >\n            </mat-menu>\n            <action-icon\n                remote\n                [matTooltip]=\"\n                    remote\n                        ? 'Set as In-Person Visitor'\n                        : 'Set as Remote Visitior'\n                \"\n                [loading]=\"loading === 'remote'\"\n                [content]=\"remote ? 'tap_and_play' : 'business'\"\n                (click)=\"toggleRemote()\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                checkin\n                matTooltip=\"Checkin Guest\"\n                [loading]=\"loading === 'checkin'\"\n                [state]=\"row?.checked_in ? 'success' : ''\"\n                content=\"event_available\"\n                (click)=\"checkin()\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                checkout\n                matTooltip=\"Checkout Guest\"\n                [loading]=\"loading === 'checkout'\"\n                content=\"event_busy\"\n                (click)=\"checkout()\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <a\n                [href]=\"'mailto:' + row?.email\"\n                mat-icon-button\n                [matTooltip]=\"row?.organizer ? 'Email Host' : 'Email Guest'\"\n            >\n                <app-icon>email</app-icon>\n            </a>\n            <action-icon\n                matTooltip=\"Print QR Code\"\n                [loading]=\"loading === 'printing'\"\n                content=\"event_busy\"\n                (click)=\"printQRCode()\"\n                [class.invisible]=\"!can_print\"\n            >\n            </action-icon>\n        </ng-template>\n        <button\n            class=\"bg-secondary hover:shadow-lg shadow absolute bottom-4 right-4 text-white h-12 w-12\"\n            matTooltip=\"Download Visitor List\"\n            matTooltipPosition=\"left\"\n            mat-icon-button\n            *ngIf=\"(guests | async)?.length\"\n            (click)=\"downloadVisitorList()\"\n        >\n            <app-icon>download</app-icon>\n        </button>\n    `,\n    styles: [``],\n})\nexport class GuestListingComponent {\n    public readonly guests = this._state.filtered_guests;\n    public readonly search = this._state.search;\n    public readonly filters = this._state.filters;\n\n    public readonly downloadVisitorList = () =>\n        this._state.downloadVisitorsList();\n\n    public readonly approveVisitor = (u) => this._state.approveVisitor(u);\n    public readonly declineVisitor = (u) => this._state.declineVisitor(u);\n    public readonly setExt = (u, f, v) => this._state.setExt(u, f, v);\n\n    public get columns() {\n        return this._settings.get('app.guests.vaccine_check')\n            ? [\n                  'state',\n                  'date',\n                  'name',\n                  'host',\n                  'email',\n                  'vaccinated',\n                  'id_data',\n                  'status',\n                  'actions',\n              ]\n            : ['state', 'date', 'name', 'host', 'email', 'status', 'actions'];\n    }\n\n    public get display_columns() {\n        const fields = {\n            state: ' ',\n            date: 'Date',\n            name: 'Person',\n            host: 'Host',\n            email: 'Email',\n            vaccinated: 'Vaccinated',\n            id_data: 'ID',\n            status: 'State',\n            actions: ' '\n        }\n        return this.columns.map(_ => fields[_] || _);\n    }\n\n    public get column_sizes() {\n        const fields = {\n            state: '3.5r',\n            date: '8r',\n            name: '12r',\n            host: '12r',\n            email: 'flex',\n            vaccinated: '8r',\n            id_data: '8r',\n            status: '10r',\n            actions: '12r'\n        }\n        return this.columns.map(_ => fields[_] || _);\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden flex-1 flex flex-col\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <visitor-listings *ngIf=\"!(filters | async)?.show_guests\" class=\"w-full flex-1 h-0\"></visitor-listings>\n            <guest-listings *ngIf=\"(filters | async)?.show_guests\" class=\"w-full flex-1 h-0\"></guest-listings>\n            <mat-progress-bar class=\"w-full\" *ngIf=\"loading | async\" mode=\"indeterminate\"></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n        `\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { VisitorListingsComponent } from './visitor-listings.component';\nimport { VisitorEventComponent } from './visitor-event.component';\nimport { VisitorDetailsComponent } from './visitor-details.component';\nimport { GuestListingComponent } from './guest-listing.component';\n\nconst ROUTES: Route[] = [{ path: '', component: VisitorsComponent }];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        VisitorListingsComponent,\n        VisitorEventComponent,\n        VisitorDetailsComponent,\n        GuestListingComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n"],"sourceRoot":"webpack:///","file":"apps_concierge_src_app_visitors_visitors_module_ts.js"}