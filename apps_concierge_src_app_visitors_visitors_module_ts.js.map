{"version":3,"file":"apps_concierge_src_app_visitors_visitors_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/visitors/guest-listing.component.ts","./apps/concierge/src/app/visitors/invite-visitor-modal.component.ts","./apps/concierge/src/app/visitors/new-visitors.component.ts","./apps/concierge/src/app/visitors/visitor-induction-modal.component.ts","./apps/concierge/src/app/visitors/visitor-notes-modal.component.ts","./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts","./libs/users/src/index.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService, notifyError } from '@placeos/common';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { Booking, saveBooking } from '@placeos/bookings';\nimport { showMetadata } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ParkingStateService } from '../parking/parking-state.service';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'guest-listings',\n    template: `\n        <simple-table\n            class=\"min-w-[72rem] block text-sm z-0\"\n            [data]=\"guests\"\n            [columns]=\"[\n                {\n                    key: 'state',\n                    name: 'Checked In',\n                    content: state_template,\n                    size: '6.5rem',\n                    sortable: false,\n                },\n                {\n                    key: 'date',\n                    name: 'Time',\n                    content: date_template,\n                    size: '6rem',\n                },\n                {\n                    key: 'asset_name',\n                    name: 'Visitor',\n                    content: person_template,\n                },\n                { key: 'user_name', name: 'Host', content: host_template },\n                {\n                    key: 'status',\n                    name: 'State',\n                    content: status_template,\n                    size: '9.5rem',\n                },\n                {\n                    key: 'induction',\n                    name: 'Inducted',\n                    content: induction_template,\n                    show: !!inductions_enabled,\n                    size: '5.5rem',\n                },\n                {\n                    key: 'parking_space',\n                    name: 'Parking',\n                    content: parking_template,\n                    show: !!has_parking,\n                    size: '5.5rem',\n                },\n                {\n                    key: 'notes',\n                    name: 'Notes',\n                    content: notes_template,\n                    sortable: false,\n                    size: '4.5rem',\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: action_template,\n                    size: '3.25rem',\n                    sortable: false,\n                },\n            ]\"\n            [filter]=\"search | async\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <ng-template #state_template let-row=\"row\">\n            <div\n                *ngIf=\"!row?.checked_in && row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-base-400 text-neutral-content mx-auto\"\n                [matTooltip]=\"\n                    'Checked out at:\n' + (row.checked_out_at * 1000 | date: time_format)\n                \"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n            <div\n                *ngIf=\"!row?.checked_in && !row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-warning text-warning-content mx-auto\"\n                matTooltip=\"Not checked in\"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>question_mark</app-icon>\n            </div>\n            <div\n                *ngIf=\"row?.checked_in\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n                [matTooltip]=\"\n                    'Checked in at:\n' + (row.checked_in_at * 1000 | date: time_format)\n                \"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #person_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <div>{{ row.asset_name || row.asset_id }}</div>\n                <div\n                    *ngIf=\"row.asset_name && row.asset_id\"\n                    class=\"opacity-30 text-xs\"\n                >\n                    {{ row.asset_id }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <div>{{ row.user_name || row.user_email }}</div>\n                <div\n                    *ngIf=\"row.user_name && row.user_email\"\n                    class=\"opacity-30 text-xs\"\n                >\n                    {{ row.user_email }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #id_template let-row=\"row\">\n            <div customTooltip [content]=\"id_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.id_data?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.id_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.id_confirmed === false\n                              ? 'Rejected'\n                              : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #id_confirmation>\n                <div\n                    class=\"bg-base-100 rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.id_data?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'id_confirmed', true)\"\n                    >\n                        Confirm ID\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'id_confirmed', false)\"\n                    >\n                        Reject ID\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #parking_template let-row=\"row\">\n            <div\n                *ngIf=\"row.extension_data.parking_booking_id\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #induction_template let-data=\"data\">\n            <div\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl mx-auto\"\n                [class.bg-success]=\"data === 'accepted'\"\n                [class.text-success-content]=\"data === 'accepted'\"\n                [class.bg-warning]=\"data !== 'accepted' && data !== 'declined'\"\n                [class.text-warning-content]=\"\n                    data !== 'accepted' && data !== 'declined'\n                \"\n                [class.bg-error]=\"data === 'declined'\"\n                [class.text-error-content]=\"data === 'declined'\"\n            >\n                <app-icon>\n                    {{\n                        data === 'accepted'\n                            ? 'done'\n                            : data === 'declined'\n                              ? 'close'\n                              : 'question_mark'\n                    }}\n                </app-icon>\n            </div>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <div class=\"px-4\">\n                <button\n                    matRipple\n                    class=\"rounded-3xl border-none w-[7.5rem] h-10\"\n                    [class.text-success-content]=\"row?.status === 'approved'\"\n                    [class.bg-success]=\"row?.status === 'approved'\"\n                    [class.text-error-content]=\"row?.status === 'declined'\"\n                    [class.bg-error]=\"row?.status === 'declined'\"\n                    [class.text-neutral-content]=\"row?.status === 'ended'\"\n                    [class.bg-neutral]=\"row?.status === 'ended'\"\n                    [class.text-warning-content]=\"\n                        row?.status !== 'ended' &&\n                        row?.status !== 'approved' &&\n                        row?.status !== 'declined'\n                    \"\n                    [class.bg-warning]=\"\n                        row?.status !== 'ended' &&\n                        row?.status !== 'approved' &&\n                        row?.status !== 'declined'\n                    \"\n                    [class.opacity-30]=\"row?.status === 'ended'\"\n                    [matMenuTriggerFor]=\"menu\"\n                    [disabled]=\"\n                        row?.status === 'ended' ||\n                        (row.checked_in && !row.checked_out_at)\n                    \"\n                >\n                    <div class=\"flex items-center pl-4 pr-2 space-x-2\">\n                        <div class=\"flex-1 text-left\">\n                            {{\n                                row?.status === 'ended'\n                                    ? 'Ended'\n                                    : row?.status === 'approved'\n                                      ? 'Approved'\n                                      : row?.status === 'declined'\n                                        ? 'Declined'\n                                        : 'Pending'\n                            }}\n                        </div>\n                        <app-icon\n                            class=\"text-2xl\"\n                            *ngIf=\"\n                                !(\n                                    row?.status === 'ended' ||\n                                    (row.checked_in && !row.checked_out_at)\n                                )\n                            \"\n                        >\n                            arrow_drop_down\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approveVisitor(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">event_available</app-icon>\n                        <div class=\"pr-2\">Approve Visitor</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"declineVisitor(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl text-error\">\n                            event_busy\n                        </app-icon>\n                        <div class=\"pr-2\">Decline Visitor</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            <div class=\"px-4\">\n                {{\n                    row.date\n                        | date\n                            : ((filters | async)?.period > 1\n                                  ? 'MMM d, ' + time_format\n                                  : time_format)\n                }}\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center justify-end px-2\">\n                <button icon matRipple [matMenuTriggerFor]=\"guest_menu\">\n                    <app-icon>more_horiz</app-icon>\n                </button>\n                <mat-menu #guest_menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        [disabled]=\"!row.attachment?.length\"\n                        [matMenuTriggerFor]=\"attachment_menu\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">attachment</app-icon>\n                            <div>View Attachments</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        *ngIf=\"\n                            has_parking &&\n                            !row.extension_data.parking_booking_id\n                        \"\n                        (click)=\"reserveParking(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">directions_car</app-icon>\n                            <div>Reserve Parking Space</div>\n                        </div>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <a\n                            *ngFor=\"let item of row.attachments\"\n                            [href]=\"item.url\"\n                            mat-menu-item\n                        >\n                            {{ item.name }}\n                        </a>\n                    </mat-menu>\n                    <button mat-menu-item (click)=\"setExt(row, 'remote', true)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">\n                                {{\n                                    row.extension_data.remote\n                                        ? 'business'\n                                        : 'laptop'\n                                }}\n                            </app-icon>\n                            <div>\n                                Set as\n                                {{\n                                    row.extension_data.remote\n                                        ? 'Onsite'\n                                        : 'Remote'\n                                }}\n                                Visitor\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        *ngIf=\"can_print\"\n                        (click)=\"printQRCode()\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">print</app-icon>\n                            <div>Print QR Code</div>\n                        </div>\n                    </button>\n                    <a mat-menu-item [href]=\"'mailto:' + row?.asset_id\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">email</app-icon>\n                            <div>\n                                Email\n                                {{\n                                    row?.user_email === row?.asset_id\n                                        ? 'Host'\n                                        : 'Guest'\n                                }}\n                            </div>\n                        </div>\n                    </a>\n                    <button\n                        mat-menu-item\n                        (click)=\"row.checked_in ? checkout(row) : checkin(row)\"\n                        *ngIf=\"!row.checked_out_at\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">\n                                {{\n                                    row.checked_in\n                                        ? 'event_busy'\n                                        : 'event_available'\n                                }}\n                            </app-icon>\n                            <div>\n                                {{ row.checked_in ? 'Checkout' : 'Checkin' }}\n                                Guest\n                            </div>\n                        </div>\n                    </button>\n                    <ng-container *ngIf=\"row.linked_event\">\n                        <button mat-menu-item (click)=\"checkinAllVisitors(row)\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    event_available\n                                </app-icon>\n                                <div>Checkin all for Meeting</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"checkoutAllVisitors(row)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    event_busy\n                                </app-icon>\n                                <div>Checkout all for Meeting</div>\n                            </div>\n                        </button>\n                    </ng-container>\n                </mat-menu>\n            </div>\n        </ng-template>\n        <ng-template #notes_template let-row=\"row\">\n            <div class=\"relative p-4 mx-auto\">\n                <button\n                    matTooltip=\"Edit Visitor Notes\"\n                    matTooltipPosition=\"left\"\n                    icon\n                    matRipple\n                    (click)=\"editVisitorNotes(row)\"\n                >\n                    <app-icon class=\"text-2xl\">edit_square</app-icon>\n                </button>\n                <div\n                    class=\"absolute top-1 right-1 bg-info text-info-content rounded-full h-4 w-4 flex items-center justify-center\"\n                    *ngIf=\"row.extension_data?.notes?.length\"\n                    matTooltip=\"Visitor Notes Available\"\n                >\n                    <app-icon\n                        className=\"material-symbols-rounded\"\n                        class=\"text-sm\"\n                    >\n                        info_i\n                    </app-icon>\n                </div>\n            </div>\n        </ng-template>\n        <button\n            class=\"bg-secondary hover:shadow-lg shadow absolute bottom-4 right-4 text-white h-12 w-12 z-20\"\n            matTooltip=\"Download Visitor List\"\n            matTooltipPosition=\"left\"\n            icon\n            matRipple\n            *ngIf=\"(guests | async)?.length\"\n            (click)=\"downloadVisitorList()\"\n        >\n            <app-icon>download</app-icon>\n        </button>\n        <div class=\"w-full h-8\"></div>\n    `,\n    styles: [``],\n})\nexport class GuestListingComponent extends AsyncHandler {\n    public readonly guests = this._state.filtered_bookings;\n    public readonly search = this._state.search;\n    public readonly filters = this._state.filters;\n    public inductions_enabled = false;\n\n    public readonly downloadVisitorList = () =>\n        this._state.downloadVisitorsList();\n\n    public readonly approveVisitor = (u) => this._state.approveVisitor(u);\n    public readonly declineVisitor = (u) => this._state.declineVisitor(u);\n    public readonly checkinAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, true);\n    public readonly checkoutAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, false);\n    public readonly setExt = (u, f, v) => this._state.setExt(u, f, v);\n    public readonly editVisitorNotes = (u) => this._state.editVisitorNotes(u);\n\n    public readonly checkin = async (item: Booking) => {\n        await this._state.setCheckinState(item, true).catch((e) => {\n            if (e !== 'User declined') notifyError(e);\n        });\n        this._state.poll();\n    };\n\n    public readonly checkout = async (item: Booking) => {\n        await this._state.setCheckinState(item, false).catch((_) => null);\n        this._state.poll();\n    };\n\n    public get has_parking() {\n        return (\n            this._settings.get('app.features')?.includes('parking') &&\n            this._settings.get('app.visitors.has_parking')\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public inducted(item: Booking) {\n        if (item.checked_in) return true;\n        return item.process_state.includes('declined')\n            ? false\n            : item.process_state.includes('inducted') || item.induction\n              ? true\n              : null;\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _parking: ParkingStateService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld) => {\n                if (!bld) return;\n                const visitor_kiosk_app =\n                    this._settings.get('app.visitor_kiosk_app') ||\n                    'visitor-kiosk_app';\n                const metadata: any = await showMetadata(\n                    bld.id,\n                    visitor_kiosk_app,\n                ).toPromise();\n                this.inductions_enabled =\n                    metadata.details?.induction_enabled &&\n                    metadata.details?.induction_details;\n            }),\n        );\n    }\n\n    public async reserveParking(item: Booking) {\n        const id = await this._parking.editReservation(undefined, {\n            user: new User({ email: item.asset_id, name: item.asset_name }),\n            link_id: item.id,\n            date: item.date,\n            external_user: true,\n        });\n        if (id) {\n            await saveBooking(\n                new Booking({ ...item, parking_booking_id: id } as any),\n            ).toPromise();\n            this._state.poll();\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'invite-visitor-modal',\n    template: `\n        <main class=\"relative min-w-[40rem] min-h-[40rem]\">\n            <invite-visitor-form (done)=\"onDone()\"></invite-visitor-form>\n        </main>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorModalComponent {\n    constructor(\n        private _dialog_ref: MatDialogRef<InviteVisitorModalComponent>\n    ) {}\n\n    public onDone() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-new-visitors]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center px-8 py-4 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">Visitors</h2>\n                    <div class=\"flex-1 w-2\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        (modelChange)=\"setSearch($event)\"\n                    ></searchbar>\n                    <button btn matRipple (click)=\"inviteVisitor()\">\n                        Invite Visitor\n                    </button>\n                </div>\n                <div class=\"flex items-center px-8 pb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript w-60\"\n                    >\n                        <mat-select\n                            [ngModel]=\"(filters | async)?.zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                            multiple\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"text-xs opacity-30\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (level.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ level.display_name || level.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"flex-1 w-2\"></div>\n                    <date-options (dateChange)=\"setDate($event)\"></date-options>\n                </div>\n                <div class=\"mx-8 flex-1 h-1/2 overflow-auto\">\n                    <guest-listings></guest-listings>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"loading | async\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewVisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n    ]).pipe(\n        map(([bld, region]) =>\n            this._settings.get('app.use_region')\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld)\n        )\n    );\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public inviteVisitor() {\n        this._dialog.open(InviteVisitorModalComponent);\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'visitor-induction-modal',\n    template: `\n        <div\n            class=\"relative bg-base-100 rounded shadow overflow-hidden flex flex-col items-center w-[32rem] p-4\"\n        >\n            <p class=\"my-4\">\n                Please read the induction information below before proceeding\n            </p>\n            <div\n                class=\"rounded border border-base-300 w-full p-4 opacity-60 text-sm overflow-y-auto overflow-x-hidden max-h-[50vh] whitespace-pre-wrap\"\n            >\n                {{ induction_details }}\n            </div>\n            <mat-checkbox [(ngModel)]=\"agree\" class=\"my-4\">\n                I agree\n            </mat-checkbox>\n            <div class=\"flex items-center justify-center space-x-2\">\n                <button\n                    btn\n                    matRipple\n                    class=\"w-32 clear underline\"\n                    [mat-dialog-close]=\"false\"\n                >\n                    Decline\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-32\"\n                    [disabled]=\"!agree\"\n                    [mat-dialog-close]=\"true\"\n                >\n                    Accept\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class VisitorInductionModalComponent {\n    public agree = false;\n\n    public get induction_details() {\n        return this._settings.get('app.induction_details');\n    }\n\n    public get is_enabled() {\n        return (\n            this._settings.get('app.induction_enabled') &&\n            this._settings.get('app.induction_details')\n        );\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Booking, BookingFormService, updateBooking } from '@placeos/bookings';\nimport { notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'visitor-notes-modal',\n    template: `\n        <header>\n            <h2>\n                Notes for Visitor\n                <span\n                    class=\"font-medium px-2 py-1 text-sm bg-base-200 rounded ml-2\"\n                >\n                    {{ item?.asset_name }}\n                </span>\n            </h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 w-[36rem] max-h-[65vh] overflow-auto\"\n            *ngIf=\"!loading; else loading_template\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"w-full no-subscript\">\n                <textarea\n                    matInput\n                    [(ngModel)]=\"notes\"\n                    class=\"resize-none h-[60vh] max-h-[64rem]\"\n                    placeholder=\"Notes for visitor\"\n                ></textarea>\n            </mat-form-field>\n        </main>\n        <footer\n            class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #loading_template>\n            <div\n                loading\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving visitor notes...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class VisitorNotesModalComponent {\n    public item: Booking = this._data.item;\n    public notes = this.item.extension_data?.notes || '';\n    public loading = '';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Booking },\n        private _dialog_ref: MatDialogRef<VisitorNotesModalComponent>,\n    ) {\n        this.item = _data.item;\n    }\n\n    public async save() {\n        this.loading = 'Saving...';\n        this._dialog_ref.disableClose = true;\n        await updateBooking(this.item.id, {\n            ...this.item.toJSON(),\n            extension_data: {\n                ...this.item.extension_data,\n                notes: this.notes,\n            },\n        })\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error saving visitor notes');\n                this._dialog_ref.disableClose = false;\n                this.loading = '';\n                throw _;\n            });\n        this.loading = '';\n        notifySuccess('Successfully saved visitor notes');\n        this._dialog_ref.close();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { startOfDay, getUnixTime, addDays, format } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    SettingsService,\n    downloadFile,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport { GuestUser, updateGuest } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    approveBooking,\n    checkinBooking,\n    queryBookings,\n    rejectBooking,\n    setBookingState,\n    updateBooking,\n    updateBookingInductionStatus,\n} from '@placeos/bookings';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from '@placeos/spaces';\nimport { VisitorInductionModalComponent } from './visitor-induction-modal.component';\nimport { VisitorNotesModalComponent } from './visitor-notes-modal.component';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    period?: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly bookings = combineLatest([\n        this._org.active_building,\n        this._filters,\n        this._poll,\n    ]).pipe(\n        filter(([building]) => !!building),\n        debounceTime(150),\n        switchMap(([bld, filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return queryBookings({\n                type: 'visitor',\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zones: (filters.zones || []).join(',') || bld.id,\n                include_checked_out: true,\n                limit: 1000,\n            }).pipe(catchError((_) => of([] as Booking[])));\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1),\n    );\n\n    public readonly filtered_bookings = combineLatest([\n        this._search,\n        this.bookings,\n    ]).pipe(\n        map(([search, guest_list]) => {\n            const filter = search.toLowerCase();\n            const out = guest_list\n                .filter(\n                    (_) =>\n                        _.asset_name?.toLowerCase().includes(filter) ||\n                        _.user_name?.toLowerCase().includes(filter) ||\n                        _.user_email?.toLowerCase().includes(filter) ||\n                        _.asset_id?.toLowerCase().includes(filter),\n                )\n                .sort((a, b) => a.date - b.date);\n            return out;\n        }),\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public poll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async setExt<T = any>(guest: GuestUser, field: string, value: T) {\n        const extension_data = { ...guest.extension_data };\n        extension_data[field] = value;\n        await updateGuest(guest.id, { ...guest, extension_data }).toPromise();\n        this._poll.next(Date.now());\n    }\n\n    public async approveVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Approve Visitor',\n                content: `Approve attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog,\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await (approveBooking(item.id) as any).toPromise().catch((e) => {\n            notifyError(\n                `Error approving visitor: ${e.message || e.error || e}`,\n            );\n            details.close();\n            throw e;\n        });\n        notifySuccess(`Successfully approved visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async declineVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Decline Visitor',\n                content: `Decline attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog,\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await rejectBooking(item.id)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error declining visitor: ${e.message || e.error || e}`,\n                );\n                details.close();\n                throw e;\n            });\n        notifySuccess(`Successfully declining visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async requestInduction(item: Booking) {\n        const ref = this._dialog.open(VisitorInductionModalComponent, {\n            data: { item },\n        });\n        const result = await ref.afterClosed().toPromise();\n        if (result === false) {\n            await updateBookingInductionStatus(item.id, 'declined').toPromise();\n        }\n        if (!result) throw 'User declined';\n        await updateBookingInductionStatus(item.id, 'accepted').toPromise();\n        return true;\n    }\n\n    public async setCheckinState(item: Booking, state = true) {\n        if (item.rejected) throw 'You cannot check-in a rejected meeting';\n        if (state === true) await this.requestInduction(item);\n        if (!item.approved && state === true) {\n            await approveBooking(item.id).toPromise();\n        }\n        const new_user = await checkinBooking(item.id, state)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking ${state ? 'in' : 'out'} ${\n                        item.asset_name || item.asset_id\n                    } for ${item.user_name}'s meeting`,\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} ${\n                item.asset_name || item.asset_id\n            } from ${item.user_name}'s meeting`,\n        );\n    }\n\n    public async setCheckinStateForEvent(event_id: string, state = true) {\n        if (!event_id) return;\n        const bookings = await this.bookings.pipe(take(1)).toPromise();\n        const event_bookings = bookings.filter(\n            (_) =>\n                _.parent_id === event_id ||\n                _.extension_data.parent_id === event_id ||\n                _.linked_event?.id === event_id ||\n                _.linked_event?.event_id === event_id,\n        );\n        if (!event_bookings.length) return;\n        await Promise.all(\n            event_bookings.map((_) =>\n                checkinBooking(_.id, state)\n                    .toPromise()\n                    .catch((e) => {\n                        notifyError(\n                            `Error checking ${state ? 'in' : 'out'} ${\n                                _.asset_name || _.asset_id\n                            } for ${_.user_name}'s meeting`,\n                        );\n                        throw e;\n                    }),\n            ),\n        );\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} all visitors from ${\n                event_bookings[0].user_name\n            }'s meeting`,\n        );\n        this._poll.next(Date.now());\n    }\n\n    public async downloadVisitorsList() {\n        const bookings = await this.filtered_bookings.pipe(take(1)).toPromise();\n        if (!bookings.length) return;\n        const { date } = this._filters.getValue();\n        const list = bookings.map((_) => ({\n            Name: _.asset_name,\n            Email: _.asset_id,\n            'Checked In': _.checked_in,\n            Host: _.user_email || '',\n            Status: _.status,\n            Date: format(_.date, 'dd MMM ' + this.time_format),\n        }));\n        const data = jsonToCsv(list);\n        downloadFile(\n            `visitor-list-${format(date || Date.now(), 'MMM-dd')}.csv`,\n            data,\n        );\n    }\n\n    public editVisitorNotes(item: Booking) {\n        const ref = this._dialog.open(VisitorNotesModalComponent, {\n            data: { item },\n        });\n        ref.afterClosed().subscribe(() => this.poll());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.period || 1\"\n                    (ngModelChange)=\"setFilters({ period: $event })\"\n                    placeholder=\"Viewing Period\"\n                >\n                    <mat-option [value]=\"1\">Show Day</mat-option>\n                    <mat-option [value]=\"7\">Show Week</mat-option>\n                    <mat-option [value]=\"30\">Show Month</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col bg-base-200\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <guest-listings class=\"w-full flex-1 h-0\"></guest-listings>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { GuestListingComponent } from './guest-listing.component';\nimport { NewVisitorsComponent } from './new-visitors.component';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { VisitorInductionModalComponent } from './visitor-induction-modal.component';\nimport { VisitorNotesModalComponent } from './visitor-notes-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: 'new', component: NewVisitorsComponent },\n];\n\n@NgModule({\n    declarations: [\n        NewVisitorsComponent,\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        GuestListingComponent,\n        InviteVisitorModalComponent,\n        VisitorInductionModalComponent,\n        VisitorNotesModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedBookingsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"names":["AsyncHandler","SettingsService","notifyError","VisitorsStateService","Booking","saveBooking","showMetadata","OrganisationService","ParkingStateService","User","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpipeBind2","row_r1","checked_out_at","ctx_r1","time_format","checked_in_at","ɵɵtemplate","GuestListingComponent_ng_template_2_div_0_Template","GuestListingComponent_ng_template_2_div_1_Template","GuestListingComponent_ng_template_2_div_2_Template","checked_in","ɵɵadvance","ɵɵtextInterpolate1","row_r3","asset_id","GuestListingComponent_ng_template_4_div_3_Template","ɵɵtextInterpolate","asset_name","row_r4","user_email","GuestListingComponent_ng_template_6_div_3_Template","user_name","row_r5","extension_data","id_confirmed","ɵɵelement","ɵɵlistener","GuestListingComponent_ng_template_8_ng_template_2_Template_button_click_2_listener","ɵɵrestoreView","_r6","ɵɵnextContext","row","ɵɵresetView","setExt","GuestListingComponent_ng_template_8_ng_template_2_Template_button_click_4_listener","id_data","url","ɵɵsanitizeUrl","GuestListingComponent_ng_template_8_button_1_Template","GuestListingComponent_ng_template_8_ng_template_2_Template","ɵɵtemplateRefExtractor","id_confirmation_r7","GuestListingComponent_ng_template_10_div_0_Template","row_r8","parking_booking_id","ɵɵclassProp","data_r9","GuestListingComponent_ng_template_14_app_icon_5_Template","GuestListingComponent_ng_template_14_Template_button_click_8_listener","row_r11","_r10","approveVisitor","GuestListingComponent_ng_template_14_Template_button_click_14_listener","declineVisitor","status","menu_r12","row_r13","date","tmp_12_0","ɵɵpipeBind1","filters","period","GuestListingComponent_ng_template_18_button_12_Template_button_click_0_listener","_r15","row_r16","reserveParking","item_r17","name","GuestListingComponent_ng_template_18_button_22_Template_button_click_0_listener","_r18","printQRCode","GuestListingComponent_ng_template_18_button_29_Template_button_click_0_listener","_r19","checkout","checkin","ɵɵelementContainerStart","GuestListingComponent_ng_template_18_ng_container_30_Template_button_click_1_listener","_r20","checkinAllVisitors","GuestListingComponent_ng_template_18_ng_container_30_Template_button_click_7_listener","checkoutAllVisitors","GuestListingComponent_ng_template_18_button_12_Template","GuestListingComponent_ng_template_18_a_15_Template","GuestListingComponent_ng_template_18_Template_button_click_16_listener","_r14","GuestListingComponent_ng_template_18_button_22_Template","GuestListingComponent_ng_template_18_button_29_Template","GuestListingComponent_ng_template_18_ng_container_30_Template","guest_menu_r21","attachment","length","attachment_menu","has_parking","attachments","remote","can_print","linked_event","GuestListingComponent_ng_template_20_Template_button_click_1_listener","row_r23","_r22","editVisitorNotes","GuestListingComponent_ng_template_20_div_4_Template","notes","GuestListingComponent_button_22_Template_button_click_0_listener","_r24","downloadVisitorList","GuestListingComponent","_settings","get","includes","inducted","item","process_state","induction","constructor","_state","_parking","_org","_this","this","guests","filtered_bookings","search","inductions_enabled","downloadVisitorsList","u","setCheckinStateForEvent","id","f","v","_ref","_asyncToGenerator","setCheckinState","catch","e","poll","_x","apply","arguments","_ref2","_","_x2","ngOnInit","_this2","subscription","active_building","subscribe","_ref3","bld","visitor_kiosk_app","metadata","toPromise","details","induction_enabled","induction_details","_x3","_this3","editReservation","undefined","user","email","link_id","external_user","ɵɵdirectiveInject","i1","i2","i3","i4","_2","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","GuestListingComponent_Template","rf","ctx","GuestListingComponent_ng_template_2_Template","GuestListingComponent_ng_template_4_Template","GuestListingComponent_ng_template_6_Template","GuestListingComponent_ng_template_8_Template","GuestListingComponent_ng_template_10_Template","GuestListingComponent_ng_template_12_Template","GuestListingComponent_ng_template_14_Template","GuestListingComponent_ng_template_16_Template","GuestListingComponent_ng_template_18_Template","GuestListingComponent_ng_template_20_Template","GuestListingComponent_button_22_Template","ɵɵpureFunctionV","_c9","ɵɵpureFunction1","_c0","state_template_r25","_c1","date_template_r31","_c2","person_template_r26","_c3","host_template_r27","_c4","status_template_r30","ɵɵpureFunction2","_c5","induction_template_r29","_c6","parking_template_r28","_c7","notes_template_r33","_c8","action_template_r32","tmp_14_0","MatDialogRef","InviteVisitorModalComponent","_dialog_ref","onDone","close","InviteVisitorModalComponent_Template","InviteVisitorModalComponent_Template_invite_visitor_form_done_1_listener","ActivatedRoute","Router","MatDialog","combineLatest","map","tmp_3_0","level_r1","parent_id","display_name","NewVisitorsComponent_mat_option_15_div_2_Template","use_region","NewVisitorsComponent","_router","_route","_dialog","loading","zones","levels","active_region","pipe","region","levelsForRegion","levelsForBuilding","setDate","setFilters","setSearch","str","setSearchString","updateZones","navigate","relativeTo","queryParams","zone_ids","join","inviteVisitor","open","startPolling","ngOnDestroy","stopPolling","i5","attrs","NewVisitorsComponent_Template","NewVisitorsComponent_Template_searchbar_modelChange_8_listener","$event","NewVisitorsComponent_Template_button_click_9_listener","NewVisitorsComponent_Template_mat_select_ngModelChange_13_listener","NewVisitorsComponent_mat_option_15_Template","NewVisitorsComponent_Template_date_options_dateChange_18_listener","NewVisitorsComponent_mat_progress_bar_21_Template","tmp_0_0","VisitorInductionModalComponent","is_enabled","agree","VisitorInductionModalComponent_Template","ɵɵtwoWayListener","VisitorInductionModalComponent_Template_mat_checkbox_ngModelChange_5_listener","ɵɵtwoWayBindingSet","ɵɵtwoWayProperty","MAT_DIALOG_DATA","updateBooking","notifySuccess","VisitorNotesModalComponent_main_6_Template_textarea_ngModelChange_2_listener","_r1","VisitorNotesModalComponent_footer_7_Template_button_click_1_listener","_r3","save","VisitorNotesModalComponent","_data","disableClose","toJSON","VisitorNotesModalComponent_Template","VisitorNotesModalComponent_button_5_Template","VisitorNotesModalComponent_main_6_Template","VisitorNotesModalComponent_footer_7_Template","VisitorNotesModalComponent_ng_template_8_Template","loading_template_r4","BehaviorSubject","of","catchError","debounceTime","filter","shareReplay","switchMap","take","tap","startOfDay","getUnixTime","addDays","format","downloadFile","jsonToCsv","openConfirmModal","updateGuest","approveBooking","checkinBooking","queryBookings","rejectBooking","updateBookingInductionStatus","_search","getValue","_poll","_filters","_loading","asObservable","bookings","building","next","Date","start","end","type","period_start","period_end","include_checked_out","limit","guest_list","toLowerCase","out","sort","a","b","now","delay","interval","clearInterval","guest","field","value","title","content","icon","reason","message","error","requestInduction","_this4","ref","data","result","afterClosed","state","_this5","rejected","approved","new_user","event_id","_this6","event_bookings","Promise","all","_this7","list","Name","Email","Host","Status","ɵɵinject","factory","ɵfac","providedIn","first","VisitorsTopbarComponent","active_levels","initialised","queryParamMap","params","has","split","level","levelWithID","buildings","find","zone","lvl","push","VisitorsTopbarComponent_Template","VisitorsTopbarComponent_Template_mat_select_ngModelChange_2_listener","VisitorsTopbarComponent_mat_option_3_Template","VisitorsTopbarComponent_Template_mat_select_ngModelChange_6_listener","VisitorsTopbarComponent_Template_searchbar_modelChange_15_listener","VisitorsTopbarComponent_Template_date_options_dateChange_16_listener","tmp_2_0","VisitorsComponent","VisitorsComponent_Template","VisitorsComponent_mat_progress_bar_4_Template","CommonModule","FormsModule","RouterModule","UIModule","SharedBookingsModule","ROUTES","path","component","VisitorsModule","_3","forChild","declarations","imports","MapLocation","location","position","map_id","x","map_width","y","map_height","variance","last_seen","at_location","coordinates_from"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}