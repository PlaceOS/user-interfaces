{"version":3,"file":"apps_concierge_src_app_visitors_visitors_module_ts.js","mappings":"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","names":["VisitorInductionModalComponent","induction_details","this","_settings","get","is_enabled","constructor","agree","static","t","i0","i1","core","VBU","selectors","decls","vars","consts","template","rf","ctx","$event","_r1","ctx_r1","notes","_r3","save","VisitorNotesModalComponent","_data","_dialog_ref","item","extension_data","loading","_this","_asyncToGenerator","disableClose","updateBooking","id","toJSON","toPromise","catch","_","notifyError","notifySuccess","close","MAT_DIALOG_DATA","VisitorNotesModalComponent_button_5_Template","VisitorNotesModalComponent_main_6_Template","VisitorNotesModalComponent_footer_7_Template","VisitorNotesModalComponent_ng_template_8_Template","asset_name","loading_template_r4","VisitorsStateService","AsyncHandler","search","_search","getValue","time_format","_dialog","_org","super","_poll","BehaviorSubject","_filters","_loading","asObservable","filters","bookings","combineLatest","active_building","pipe","filter","building","debounceTime","switchMap","bld","next","date","Date","start","startOfDay","end","addDays","period","queryBookings","type","period_start","getUnixTime","period_end","zones","join","include_checked_out","limit","catchError","of","tap","shareReplay","filtered_bookings","map","guest_list","toLowerCase","includes","user_name","user_email","asset_id","sort","a","b","setFilters","setSearchString","poll","now","startPolling","delay","interval","stopPolling","clearInterval","setExt","guest","field","value","updateGuest","approveVisitor","_this2","details","openConfirmModal","title","content","icon","reason","approveBooking","e","message","error","declineVisitor","_this3","rejectBooking","requestInduction","_this4","result","open","data","afterClosed","updateBookingInductionStatus","setCheckinState","state","_this5","rejected","approved","checkinBooking","setCheckinStateForEvent","event_id","_this6","event_bookings","take","parent_id","linked_event","length","Promise","all","downloadVisitorsList","_this7","list","Name","Email","checked_in","Host","Status","status","format","jsonToCsv","downloadFile","editVisitorNotes","subscribe","i2","i3","jDH","factory","ɵfac","providedIn","level_r1","display_name","name","VisitorsTopbarComponent","_state","_route","_router","levels","active_levels","setDate","setSearch","str","updateZones","navigate","relativeTo","queryParams","zone_ids","ngOnInit","initialised","first","subscription","queryParamMap","params","has","split","level","levelWithID","buildings","find","zone","lvl","push","features","VisitorsTopbarComponent_mat_option_3_Template","tmp_2_0","row_r1","checked_out_at","GuestListingComponent_ng_template_2_div_0_Template","GuestListingComponent_ng_template_2_div_1_Template","GuestListingComponent_ng_template_2_div_2_Template","row_r3","GuestListingComponent_ng_template_4_div_3_Template","row_r4","GuestListingComponent_ng_template_6_div_3_Template","row_r5","id_confirmed","_r6","row","id_data","url","GuestListingComponent_ng_template_8_button_1_Template","GuestListingComponent_ng_template_8_ng_template_2_Template","id_confirmation_r7","GuestListingComponent_ng_template_10_div_0_Template","parking_booking_id","data_r9","GuestListingComponent_ng_template_14_app_icon_5_Template","row_r11","_r10","menu_r12","row_r13","tmp_12_0","_r15","row_r16","reserveParking","item_r17","_r18","printQRCode","_r19","checkout","checkin","_r20","checkinAllVisitors","checkoutAllVisitors","GuestListingComponent_ng_template_18_button_12_Template","GuestListingComponent_ng_template_18_a_15_Template","_r14","GuestListingComponent_ng_template_18_button_22_Template","GuestListingComponent_ng_template_18_button_29_Template","GuestListingComponent_ng_template_18_ng_container_30_Template","guest_menu_r21","attachment","attachment_menu","has_parking","attachments","remote","can_print","row_r23","_r22","GuestListingComponent_ng_template_20_div_4_Template","_r24","downloadVisitorList","GuestListingComponent","inducted","process_state","induction","_parking","guests","inductions_enabled","u","f","v","_ref","_x","apply","arguments","_ref2","_x2","_ref3","visitor_kiosk_app","metadata","showMetadata","induction_enabled","_x3","editReservation","undefined","user","User","email","link_id","external_user","saveBooking","Booking","i4","GuestListingComponent_ng_template_2_Template","GuestListingComponent_ng_template_4_Template","GuestListingComponent_ng_template_6_Template","GuestListingComponent_ng_template_8_Template","GuestListingComponent_ng_template_10_Template","GuestListingComponent_ng_template_12_Template","GuestListingComponent_ng_template_14_Template","GuestListingComponent_ng_template_16_Template","GuestListingComponent_ng_template_18_Template","GuestListingComponent_ng_template_20_Template","GuestListingComponent_button_22_Template","_c9","_c0","state_template_r25","_c1","date_template_r31","_c2","person_template_r26","_c3","host_template_r27","_c4","status_template_r30","_c5","induction_template_r29","_c6","parking_template_r28","_c7","notes_template_r33","_c8","action_template_r32","tmp_14_0","VisitorsComponent","ngOnDestroy","attrs","VisitorsComponent_mat_progress_bar_4_Template","InviteVisitorModalComponent","onDone","tmp_3_0","NewVisitorsComponent_mat_option_15_div_2_Template","use_region","ROUTES","path","component","NewVisitorsComponent","active_region","region","levelsForRegion","levelsForBuilding","inviteVisitor","i5","NewVisitorsComponent_mat_option_15_Template","NewVisitorsComponent_mat_progress_bar_21_Template","tmp_0_0","VisitorsModule","$C","G2t","CommonModule","FormsModule","UIModule","SharedBookingsModule","RouterModule","forChild","MapLocation","location","position","map_id","x","map_width","y","map_height","variance","last_seen","at_location","coordinates_from"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/visitors/visitor-induction-modal.component.ts","./apps/concierge/src/app/visitors/visitor-notes-modal.component.ts","./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/guest-listing.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/invite-visitor-modal.component.ts","./apps/concierge/src/app/visitors/new-visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'visitor-induction-modal',\n    template: `\n        <div\n            class=\"relative bg-base-100 rounded shadow overflow-hidden flex flex-col items-center w-[32rem] p-4\"\n        >\n            <p class=\"my-4\">\n                Please read the induction information below before proceeding\n            </p>\n            <div\n                class=\"rounded border border-base-300 w-full p-4 opacity-60 text-sm overflow-y-auto overflow-x-hidden max-h-[50vh] whitespace-pre-wrap\"\n            >\n                {{ induction_details }}\n            </div>\n            <mat-checkbox [(ngModel)]=\"agree\" class=\"my-4\">\n                I agree\n            </mat-checkbox>\n            <div class=\"flex items-center justify-center space-x-2\">\n                <button\n                    btn\n                    matRipple\n                    class=\"w-32 clear underline\"\n                    [mat-dialog-close]=\"false\"\n                >\n                    Decline\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-32\"\n                    [disabled]=\"!agree\"\n                    [mat-dialog-close]=\"true\"\n                >\n                    Accept\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class VisitorInductionModalComponent {\n    public agree = false;\n\n    public get induction_details() {\n        return this._settings.get('app.induction_details');\n    }\n\n    public get is_enabled() {\n        return (\n            this._settings.get('app.induction_enabled') &&\n            this._settings.get('app.induction_details')\n        );\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Booking, BookingFormService, updateBooking } from '@placeos/bookings';\nimport { notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'visitor-notes-modal',\n    template: `\n        <header>\n            <h2>\n                Notes for Visitor\n                <span\n                    class=\"font-medium px-2 py-1 text-sm bg-base-200 rounded ml-2\"\n                >\n                    {{ item?.asset_name }}\n                </span>\n            </h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 w-[36rem] max-h-[65vh] overflow-auto\"\n            *ngIf=\"!loading; else loading_template\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"w-full no-subscript\">\n                <textarea\n                    matInput\n                    [(ngModel)]=\"notes\"\n                    class=\"resize-none h-[60vh] max-h-[64rem]\"\n                    placeholder=\"Notes for visitor\"\n                ></textarea>\n            </mat-form-field>\n        </main>\n        <footer\n            class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #loading_template>\n            <div\n                loading\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving visitor notes...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class VisitorNotesModalComponent {\n    public item: Booking = this._data.item;\n    public notes = this.item.extension_data?.notes || '';\n    public loading = '';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Booking },\n        private _dialog_ref: MatDialogRef<VisitorNotesModalComponent>,\n    ) {\n        this.item = _data.item;\n    }\n\n    public async save() {\n        this.loading = 'Saving...';\n        this._dialog_ref.disableClose = true;\n        await updateBooking(this.item.id, {\n            ...this.item.toJSON(),\n            extension_data: {\n                ...this.item.extension_data,\n                notes: this.notes,\n            },\n        })\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error saving visitor notes');\n                this._dialog_ref.disableClose = false;\n                this.loading = '';\n                throw _;\n            });\n        this.loading = '';\n        notifySuccess('Successfully saved visitor notes');\n        this._dialog_ref.close();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { startOfDay, getUnixTime, addDays, format } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    SettingsService,\n    downloadFile,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport { GuestUser, updateGuest } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    approveBooking,\n    checkinBooking,\n    queryBookings,\n    rejectBooking,\n    setBookingState,\n    updateBooking,\n    updateBookingInductionStatus,\n} from '@placeos/bookings';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from '@placeos/spaces';\nimport { VisitorInductionModalComponent } from './visitor-induction-modal.component';\nimport { VisitorNotesModalComponent } from './visitor-notes-modal.component';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    period?: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly bookings = combineLatest([\n        this._org.active_building,\n        this._filters,\n        this._poll,\n    ]).pipe(\n        filter(([building]) => !!building),\n        debounceTime(150),\n        switchMap(([bld, filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return queryBookings({\n                type: 'visitor',\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zones: (filters.zones || []).join(',') || bld.id,\n                include_checked_out: true,\n                limit: 1000,\n            }).pipe(catchError((_) => of([] as Booking[])));\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1),\n    );\n\n    public readonly filtered_bookings = combineLatest([\n        this._search,\n        this.bookings,\n    ]).pipe(\n        map(([search, guest_list]) => {\n            const filter = search.toLowerCase();\n            const out = guest_list\n                .filter(\n                    (_) =>\n                        _.asset_name?.toLowerCase().includes(filter) ||\n                        _.user_name?.toLowerCase().includes(filter) ||\n                        _.user_email?.toLowerCase().includes(filter) ||\n                        _.asset_id?.toLowerCase().includes(filter),\n                )\n                .sort((a, b) => a.date - b.date);\n            return out;\n        }),\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public poll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async setExt<T = any>(guest: GuestUser, field: string, value: T) {\n        const extension_data = { ...guest.extension_data };\n        extension_data[field] = value;\n        await updateGuest(guest.id, { ...guest, extension_data }).toPromise();\n        this._poll.next(Date.now());\n    }\n\n    public async approveVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Approve Visitor',\n                content: `Approve attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog,\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await (approveBooking(item.id) as any).toPromise().catch((e) => {\n            notifyError(\n                `Error approving visitor: ${e.message || e.error || e}`,\n            );\n            details.close();\n            throw e;\n        });\n        notifySuccess(`Successfully approved visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async declineVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Decline Visitor',\n                content: `Decline attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog,\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await rejectBooking(item.id)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error declining visitor: ${e.message || e.error || e}`,\n                );\n                details.close();\n                throw e;\n            });\n        notifySuccess(`Successfully declining visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async requestInduction(item: Booking) {\n        const ref = this._dialog.open(VisitorInductionModalComponent, {\n            data: { item },\n        });\n        const result = await ref.afterClosed().toPromise();\n        if (!result) {\n            if (result === false) {\n                await updateBookingInductionStatus(\n                    item.id,\n                    'declined',\n                ).toPromise();\n            }\n            throw 'User declined';\n        }\n        await updateBookingInductionStatus(item.id, 'accepted').toPromise();\n    }\n\n    public async setCheckinState(item: Booking, state = true) {\n        if (item.rejected) throw 'You cannot check in a rejected meeting';\n        if (state === true) {\n            await this.requestInduction(item);\n        }\n        if (!item.approved && state === true) {\n            await approveBooking(item.id).toPromise();\n        }\n        const new_user = await checkinBooking(item.id, state)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking ${state ? 'in' : 'out'} ${\n                        item.asset_name || item.asset_id\n                    } for ${item.user_name}'s meeting`,\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} ${\n                item.asset_name || item.asset_id\n            } from ${item.user_name}'s meeting`,\n        );\n    }\n\n    public async setCheckinStateForEvent(event_id: string, state = true) {\n        if (!event_id) return;\n        const bookings = await this.bookings.pipe(take(1)).toPromise();\n        const event_bookings = bookings.filter(\n            (_) =>\n                _.parent_id === event_id ||\n                _.extension_data.parent_id === event_id ||\n                _.linked_event?.id === event_id ||\n                _.linked_event?.event_id === event_id,\n        );\n        if (!event_bookings.length) return;\n        await Promise.all(\n            event_bookings.map((_) =>\n                checkinBooking(_.id, state)\n                    .toPromise()\n                    .catch((e) => {\n                        notifyError(\n                            `Error checking ${state ? 'in' : 'out'} ${\n                                _.asset_name || _.asset_id\n                            } for ${_.user_name}'s meeting`,\n                        );\n                        throw e;\n                    }),\n            ),\n        );\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} all visitors from ${\n                event_bookings[0].user_name\n            }'s meeting`,\n        );\n        this._poll.next(Date.now());\n    }\n\n    public async downloadVisitorsList() {\n        const bookings = await this.filtered_bookings.pipe(take(1)).toPromise();\n        if (!bookings.length) return;\n        const { date } = this._filters.getValue();\n        const list = bookings.map((_) => ({\n            Name: _.asset_name,\n            Email: _.asset_id,\n            'Checked In': _.checked_in,\n            Host: _.user_email || '',\n            Status: _.status,\n            Date: format(_.date, 'dd MMM ' + this.time_format),\n        }));\n        const data = jsonToCsv(list);\n        downloadFile(\n            `visitor-list-${format(date || Date.now(), 'MMM-dd')}.csv`,\n            data,\n        );\n    }\n\n    public editVisitorNotes(item: Booking) {\n        const ref = this._dialog.open(VisitorNotesModalComponent, {\n            data: { item },\n        });\n        ref.afterClosed().subscribe(() => this.poll());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.period || 1\"\n                    (ngModelChange)=\"setFilters({ period: $event })\"\n                    placeholder=\"Viewing Period\"\n                >\n                    <mat-option [value]=\"1\">Show Day</mat-option>\n                    <mat-option [value]=\"7\">Show Week</mat-option>\n                    <mat-option [value]=\"30\">Show Month</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component } from '@angular/core';\nimport { AsyncHandler, SettingsService, notifyError } from '@placeos/common';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { Booking, saveBooking } from '@placeos/bookings';\nimport { showMetadata } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ParkingStateService } from '../parking/parking-state.service';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'guest-listings',\n    template: `\n        <simple-table\n            class=\"min-w-[72rem] block text-sm z-0\"\n            [data]=\"guests\"\n            [columns]=\"[\n                {\n                    key: 'state',\n                    name: 'Checked In',\n                    content: state_template,\n                    size: '6.5rem',\n                    sortable: false,\n                },\n                {\n                    key: 'date',\n                    name: 'Time',\n                    content: date_template,\n                    size: '6rem',\n                },\n                {\n                    key: 'asset_name',\n                    name: 'Visitor',\n                    content: person_template,\n                },\n                { key: 'user_name', name: 'Host', content: host_template },\n                {\n                    key: 'status',\n                    name: 'State',\n                    content: status_template,\n                    size: '9.5rem',\n                },\n                {\n                    key: 'induction',\n                    name: 'Inducted',\n                    content: induction_template,\n                    show: !!inductions_enabled,\n                    size: '5.5rem',\n                },\n                {\n                    key: 'parking_space',\n                    name: 'Parking',\n                    content: parking_template,\n                    show: !!has_parking,\n                    size: '5.5rem',\n                },\n                {\n                    key: 'notes',\n                    name: 'Notes',\n                    content: notes_template,\n                    sortable: false,\n                    size: '4.5rem',\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: action_template,\n                    size: '3.25rem',\n                    sortable: false,\n                },\n            ]\"\n            [filter]=\"search | async\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <ng-template #state_template let-row=\"row\">\n            <div\n                *ngIf=\"!row?.checked_in && row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-base-400 text-neutral-content mx-auto\"\n                [matTooltip]=\"\n                    'Checked out at ' + (row.checked_out_at | date: time_format)\n                \"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n            <div\n                *ngIf=\"!row?.checked_in && !row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-warning text-warning-content mx-auto\"\n                matTooltip=\"Not checked in\"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>question_mark</app-icon>\n            </div>\n            <div\n                *ngIf=\"row?.checked_in\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n                matTooltip=\"Checked In\"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #person_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <div>{{ row.asset_name || row.asset_id }}</div>\n                <div\n                    *ngIf=\"row.asset_name && row.asset_id\"\n                    class=\"opacity-30 text-xs\"\n                >\n                    {{ row.asset_id }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <div>{{ row.user_name || row.user_email }}</div>\n                <div\n                    *ngIf=\"row.user_name && row.user_email\"\n                    class=\"opacity-30 text-xs\"\n                >\n                    {{ row.user_email }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #id_template let-row=\"row\">\n            <div customTooltip [content]=\"id_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.id_data?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.id_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.id_confirmed === false\n                              ? 'Rejected'\n                              : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #id_confirmation>\n                <div\n                    class=\"bg-base-100 rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.id_data?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'id_confirmed', true)\"\n                    >\n                        Confirm ID\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'id_confirmed', false)\"\n                    >\n                        Reject ID\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #parking_template let-row=\"row\">\n            <div\n                *ngIf=\"row.extension_data.parking_booking_id\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #induction_template let-data=\"data\">\n            <div\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl mx-auto\"\n                [class.bg-success]=\"data === 'accepted'\"\n                [class.text-success-content]=\"data === 'accepted'\"\n                [class.bg-warning]=\"data === 'tentative'\"\n                [class.text-warning-content]=\"data === 'tentative'\"\n                [class.bg-error]=\"data === 'declined'\"\n                [class.text-error-content]=\"data === 'declined'\"\n            >\n                <app-icon>\n                    {{\n                        data === 'accepted'\n                            ? 'done'\n                            : data === 'declined'\n                              ? 'close'\n                              : 'question_mark'\n                    }}\n                </app-icon>\n            </div>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <div class=\"px-4\">\n                <button\n                    matRipple\n                    class=\"rounded-3xl bg-warning text-warning-content border-none w-[7.5rem] h-10\"\n                    [class.!text-success-content]=\"row?.status === 'approved'\"\n                    [class.!bg-success]=\"row?.status === 'approved'\"\n                    [class.!text-error-content]=\"row?.status === 'declined'\"\n                    [class.!bg-error]=\"row?.status === 'declined'\"\n                    [class.!text-neutral-content]=\"row?.status === 'ended'\"\n                    [class.!bg-neutral]=\"row?.status === 'ended'\"\n                    [class.opacity-30]=\"row?.status === 'ended'\"\n                    [matMenuTriggerFor]=\"menu\"\n                    [disabled]=\"\n                        row?.status === 'ended' ||\n                        (row.checked_in && !row.checked_out_at)\n                    \"\n                >\n                    <div class=\"flex items-center pl-4 pr-2 space-x-2\">\n                        <div class=\"flex-1 text-left\">\n                            {{\n                                row?.status === 'ended'\n                                    ? 'Ended'\n                                    : row?.status === 'approved'\n                                      ? 'Approved'\n                                      : row?.status === 'declined'\n                                        ? 'Declined'\n                                        : 'Pending'\n                            }}\n                        </div>\n                        <app-icon\n                            class=\"text-2xl\"\n                            *ngIf=\"\n                                !(\n                                    row?.status === 'ended' ||\n                                    (row.checked_in && !row.checked_out_at)\n                                )\n                            \"\n                        >\n                            arrow_drop_down\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approveVisitor(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">event_available</app-icon>\n                        <div class=\"pr-2\">Approve Visitor</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"declineVisitor(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl text-error\">\n                            event_busy\n                        </app-icon>\n                        <div class=\"pr-2\">Decline Visitor</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            <div class=\"px-4\">\n                {{\n                    row.date\n                        | date\n                            : ((filters | async)?.period > 1\n                                  ? 'MMM d, ' + time_format\n                                  : time_format)\n                }}\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center justify-end px-2\">\n                <button icon matRipple [matMenuTriggerFor]=\"guest_menu\">\n                    <app-icon>more_horiz</app-icon>\n                </button>\n                <mat-menu #guest_menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        [disabled]=\"!row.attachment?.length\"\n                        [matMenuTriggerFor]=\"attachment_menu\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">attachment</app-icon>\n                            <div>View Attachments</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        *ngIf=\"\n                            has_parking &&\n                            !row.extension_data.parking_booking_id\n                        \"\n                        (click)=\"reserveParking(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">directions_car</app-icon>\n                            <div>Reserve Parking Space</div>\n                        </div>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <a\n                            *ngFor=\"let item of row.attachments\"\n                            [href]=\"item.url\"\n                            mat-menu-item\n                        >\n                            {{ item.name }}\n                        </a>\n                    </mat-menu>\n                    <button mat-menu-item (click)=\"setExt(row, 'remote', true)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">\n                                {{\n                                    row.extension_data.remote\n                                        ? 'business'\n                                        : 'laptop'\n                                }}\n                            </app-icon>\n                            <div>\n                                Set as\n                                {{\n                                    row.extension_data.remote\n                                        ? 'Onsite'\n                                        : 'Remote'\n                                }}\n                                Visitor\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        *ngIf=\"can_print\"\n                        (click)=\"printQRCode()\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">print</app-icon>\n                            <div>Print QR Code</div>\n                        </div>\n                    </button>\n                    <a mat-menu-item [href]=\"'mailto:' + row?.asset_id\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">email</app-icon>\n                            <div>\n                                Email\n                                {{\n                                    row?.user_email === row?.asset_id\n                                        ? 'Host'\n                                        : 'Guest'\n                                }}\n                            </div>\n                        </div>\n                    </a>\n                    <button\n                        mat-menu-item\n                        (click)=\"row.checked_in ? checkout(row) : checkin(row)\"\n                        *ngIf=\"!row.checked_out_at\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">\n                                {{\n                                    row.checked_in\n                                        ? 'event_busy'\n                                        : 'event_available'\n                                }}\n                            </app-icon>\n                            <div>\n                                {{ row.checked_in ? 'Checkout' : 'Checkin' }}\n                                Guest\n                            </div>\n                        </div>\n                    </button>\n                    <ng-container *ngIf=\"row.linked_event\">\n                        <button mat-menu-item (click)=\"checkinAllVisitors(row)\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    event_available\n                                </app-icon>\n                                <div>Checkin all for Meeting</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"checkoutAllVisitors(row)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    event_busy\n                                </app-icon>\n                                <div>Checkout all for Meeting</div>\n                            </div>\n                        </button>\n                    </ng-container>\n                </mat-menu>\n            </div>\n        </ng-template>\n        <ng-template #notes_template let-row=\"row\">\n            <div class=\"relative p-4 mx-auto\">\n                <button\n                    matTooltip=\"Edit Visitor Notes\"\n                    matTooltipPosition=\"left\"\n                    icon\n                    matRipple\n                    (click)=\"editVisitorNotes(row)\"\n                >\n                    <app-icon class=\"text-2xl\">edit_square</app-icon>\n                </button>\n                <div\n                    class=\"absolute top-1 right-1 bg-info text-info-content rounded-full h-4 w-4 flex items-center justify-center\"\n                    *ngIf=\"row.extension_data?.notes?.length\"\n                    matTooltip=\"Visitor Notes Available\"\n                >\n                    <app-icon\n                        className=\"material-symbols-rounded\"\n                        class=\"text-sm\"\n                    >\n                        info_i\n                    </app-icon>\n                </div>\n            </div>\n        </ng-template>\n        <button\n            class=\"bg-secondary hover:shadow-lg shadow absolute bottom-4 right-4 text-white h-12 w-12 z-20\"\n            matTooltip=\"Download Visitor List\"\n            matTooltipPosition=\"left\"\n            icon\n            matRipple\n            *ngIf=\"(guests | async)?.length\"\n            (click)=\"downloadVisitorList()\"\n        >\n            <app-icon>download</app-icon>\n        </button>\n        <div class=\"w-full h-8\"></div>\n    `,\n    styles: [``],\n})\nexport class GuestListingComponent extends AsyncHandler {\n    public readonly guests = this._state.filtered_bookings;\n    public readonly search = this._state.search;\n    public readonly filters = this._state.filters;\n    public inductions_enabled = false;\n\n    public readonly downloadVisitorList = () =>\n        this._state.downloadVisitorsList();\n\n    public readonly approveVisitor = (u) => this._state.approveVisitor(u);\n    public readonly declineVisitor = (u) => this._state.declineVisitor(u);\n    public readonly checkinAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, true);\n    public readonly checkoutAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, false);\n    public readonly setExt = (u, f, v) => this._state.setExt(u, f, v);\n    public readonly editVisitorNotes = (u) => this._state.editVisitorNotes(u);\n\n    public readonly checkin = async (item: Booking) => {\n        await this._state.setCheckinState(item, true).catch((e) => {\n            if (e !== 'User declined') notifyError(e);\n            throw e;\n        });\n        this._state.poll();\n    };\n\n    public readonly checkout = async (item: Booking) => {\n        await this._state.setCheckinState(item, false);\n        this._state.poll();\n    };\n\n    public get has_parking() {\n        return (\n            this._settings.get('app.features')?.includes('parking') &&\n            this._settings.get('app.visitors.has_parking')\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public inducted(item: Booking) {\n        if (item.checked_in) return true;\n        return item.process_state.includes('declined')\n            ? false\n            : item.process_state.includes('inducted') || item.induction\n              ? true\n              : null;\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _parking: ParkingStateService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld) => {\n                if (!bld) return;\n                const visitor_kiosk_app =\n                    this._settings.get('app.visitor_kiosk_app') ||\n                    'visitor-kiosk_app';\n                const metadata: any = await showMetadata(\n                    bld.id,\n                    visitor_kiosk_app,\n                ).toPromise();\n                this.inductions_enabled =\n                    metadata.details?.induction_enabled &&\n                    metadata.details?.induction_details;\n            }),\n        );\n    }\n\n    public async reserveParking(item: Booking) {\n        const id = await this._parking.editReservation(undefined, {\n            user: new User({ email: item.asset_id, name: item.asset_name }),\n            link_id: item.id,\n            date: item.date,\n            external_user: true,\n        });\n        if (id) {\n            await saveBooking(\n                new Booking({ ...item, parking_booking_id: id } as any),\n            ).toPromise();\n            this._state.poll();\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col bg-base-200\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <guest-listings class=\"w-full flex-1 h-0\"></guest-listings>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'invite-visitor-modal',\n    template: `\n        <main class=\"relative min-w-[40rem] min-h-[40rem]\">\n            <invite-visitor-form (done)=\"onDone()\"></invite-visitor-form>\n        </main>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorModalComponent {\n    constructor(\n        private _dialog_ref: MatDialogRef<InviteVisitorModalComponent>\n    ) {}\n\n    public onDone() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-new-visitors]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center px-8 py-4 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">Visitors</h2>\n                    <div class=\"flex-1 w-2\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        (modelChange)=\"setSearch($event)\"\n                    ></searchbar>\n                    <button btn matRipple (click)=\"inviteVisitor()\">\n                        Invite Visitor\n                    </button>\n                </div>\n                <div class=\"flex items-center px-8 pb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript w-60\"\n                    >\n                        <mat-select\n                            [ngModel]=\"(filters | async)?.zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                            multiple\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"text-xs opacity-30\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (level.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ level.display_name || level.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"flex-1 w-2\"></div>\n                    <date-options (dateChange)=\"setDate($event)\"></date-options>\n                </div>\n                <div class=\"mx-8 flex-1 h-1/2 overflow-auto\">\n                    <guest-listings></guest-listings>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"loading | async\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewVisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n    ]).pipe(\n        map(([bld, region]) =>\n            this._settings.get('app.use_region')\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld)\n        )\n    );\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public inviteVisitor() {\n        this._dialog.open(InviteVisitorModalComponent);\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { GuestListingComponent } from './guest-listing.component';\nimport { NewVisitorsComponent } from './new-visitors.component';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { VisitorInductionModalComponent } from './visitor-induction-modal.component';\nimport { VisitorNotesModalComponent } from './visitor-notes-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: 'new', component: NewVisitorsComponent },\n];\n\n@NgModule({\n    declarations: [\n        NewVisitorsComponent,\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        GuestListingComponent,\n        InviteVisitorModalComponent,\n        VisitorInductionModalComponent,\n        VisitorNotesModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedBookingsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"x_google_ignoreList":[]}