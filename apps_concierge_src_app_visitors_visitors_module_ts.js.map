{"version":3,"file":"apps_concierge_src_app_visitors_visitors_module_ts.js","mappings":"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","names":["VisitorsStateService","BaseClass","constructor","_dialog","_org","super","this","BehaviorSubject","_loading","asObservable","_filters","combineLatest","_poll","pipe","debounceTime","switchMap","filters","next","date","Date","start","startOfDay","end","addDays","period","queryGuests","period_start","getUnixTime","period_end","zone_ids","zones","join","tap","shareReplay","zip","queryEvents","catchError","_","of","queryBookings","type","building","id","map","i","newCalendarEventFromBooking","e_list","v_list","r_list","list","getValue","all_bookings","filter","event","guests","length","attendees","_search","events","search","toLowerCase","find","user","name","includes","email","filtered_events","guest_list","flatten","is_external","g","GuestUser","extension_data","host","organiser","setFilters","setSearchString","startPolling","delay","interval","now","stopPolling","clearInterval","checkGuestIn","new_user","checkinEventGuest","system_id","system","resources","toPromise","catch","e","notifyError","notifySuccess","new_attendees","unique","sort","a","b","organizer","localeCompare","CalendarEvent","setExt","guest","field","value","updateGuest","approveVisitor","details","openConfirmModal","title","content","icon","n","reason","close","loading","status","declineVisitor","checkGuestOut","checkAllGuestsIn","checked_in","Error","Promise","all","checkAllGuestsOut","downloadVisitorsList","filtered_guests","take","Name","Email","Host","Status","format","data","jsonToCsv","downloadFile","i0","factory","VisitorsTopbarComponent","_state","_route","_router","active_levels","str","navigate","relativeTo","queryParams","ngOnInit","initialised","first","subscription","queryParamMap","subscribe","params","has","get","split","level","levelWithID","buildings","bld","parent_id","levels","zone","lvl","push","updateZones","setSearch","selectors","ctx","VisitorDetailsComponent","_settings","EventEmitter","visitor","eventChange","emit","remote_list","ext","remote","new_item","toJSON","saveEvent","statusText","message","show_qr_code","timeout","window","print","can_print","qr","today","ngOnChanges","changes","loadGuest","tries","showGuest","code","VisitorEventComponent","guestCount","reduce","c","u","has_search","updateMatches","matches","VisitorListingsComponent","trackByFn","index","undefined","GuestListingComponent","f","v","columns","display_columns","fields","state","vaccinated","id_data","actions","column_sizes","ROUTES","path","component","VisitorsComponent","ngOnDestroy","VisitorsModule","CommonModule","FormsModule","UIModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/visitor-details.component.ts","./apps/concierge/src/app/visitors/visitor-event.component.ts","./apps/concierge/src/app/visitors/visitor-listings.component.ts","./apps/concierge/src/app/visitors/guest-listing.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of, zip } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { startOfDay, getUnixTime, addDays, format } from 'date-fns';\n\nimport {\n    BaseClass,\n    downloadFile,\n    flatten,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    unique,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    checkinEventGuest,\n    newCalendarEventFromBooking,\n    queryEvents,\n} from '@placeos/events';\nimport { GuestUser, queryGuests, updateGuest, User } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\nimport { queryBookings } from '@placeos/bookings';\nimport { OrganisationService } from '@placeos/organisation';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    period?: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends BaseClass {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly guests = combineLatest([this._filters, this._poll]).pipe(\n        debounceTime(150),\n        switchMap(([filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return queryGuests({\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zone_ids: (filters.zones || []).join(','),\n            });\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1)\n    );\n\n    public readonly events = combineLatest([this._filters, this._poll]).pipe(\n        debounceTime(150),\n        switchMap(([filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return zip(\n                queryEvents({\n                    period_start: getUnixTime(start),\n                    period_end: getUnixTime(end),\n                    zone_ids: (filters.zones || []).join(','),\n                }).pipe(catchError((_) => of([]))),\n                queryBookings({\n                    type: 'visitor',\n                    period_start: getUnixTime(start),\n                    period_end: getUnixTime(end),\n                    zones: this._org.building?.id,\n                }).pipe(\n                    map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                    catchError((_) => of([]))\n                ),\n                queryBookings({\n                    type: 'room',\n                    period_start: getUnixTime(start),\n                    period_end: getUnixTime(end),\n                    zones: (filters.zones || []).join(','),\n                }).pipe(\n                    map((_) => _.map((i) => newCalendarEventFromBooking(i))),\n                    catchError((_) => of([]))\n                )\n            );\n        }),\n        map(([e_list, v_list, r_list]) => {\n            const list = [...e_list, ...v_list, ...r_list];\n            this._loading.next(false);\n            return this._filters.getValue().all_bookings\n                ? list\n                : list.filter(\n                      (event) =>\n                          event?.guests?.length && event?.attendees?.length > 1\n                  );\n        }),\n        shareReplay(1)\n    );\n\n    public readonly filtered_events = combineLatest([\n        this._search,\n        this.events,\n    ]).pipe(\n        map(([search, events]) => {\n            const filter = search.toLowerCase();\n            return events.filter((event) =>\n                event.attendees.find(\n                    (user) =>\n                        user.name?.toLowerCase().includes(filter) ||\n                        user.email?.toLowerCase().includes(filter)\n                )\n            );\n        })\n    );\n\n    public readonly filtered_guests = combineLatest([\n        this._search,\n        this.filtered_events,\n        this.guests,\n    ]).pipe(\n        map(([search, events, guest_list]) => {\n            const filter = search.toLowerCase();\n            return flatten(\n                events.map((event) => {\n                    const guests = event.attendees.filter(\n                        (user) =>\n                            user.is_external &&\n                            (user.name?.toLowerCase().includes(filter) ||\n                                user.email?.toLowerCase().includes(filter))\n                    );\n                    return guests.map((_) => {\n                        const g: any =\n                            guest_list.find((g) => g.email === _.email) || {};\n                        return new GuestUser({\n                            ..._,\n                            ...g,\n                            extension_data: {\n                                ..._.extension_data,\n                                ...g.extension_data,\n                                date: event.date,\n                                host:\n                                    event.organiser?.name ||\n                                    event.organiser?.email ||\n                                    event.host,\n                            },\n                        });\n                    });\n                })\n            );\n        })\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    constructor(private _dialog: MatDialog, private _org: OrganisationService) {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async checkGuestIn(event: CalendarEvent, user: User) {\n        const new_user = await checkinEventGuest(event.id, user.email, true, {\n            system_id: event.system?.id || event.resources[0]?.id,\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking in ${user.name} for ${event.organiser?.name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked in ${user.name} for ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async setExt<T = any>(guest: GuestUser, field: string, value: T) {\n        const extension_data = { ...guest.extension_data };\n        extension_data[field] = value;\n        await updateGuest(guest.id, { ...guest, extension_data }).toPromise();\n    }\n\n    public async approveVisitor(guest: GuestUser) {\n        const details = await openConfirmModal(\n            {\n                title: 'Approve Visitor',\n                content: `Approve attendance of ${guest.name} to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await updateGuest(guest.id, {\n            ...guest,\n            extension_data: { ...guest.extension_data, status: 'approved' },\n        }).toPromise();\n        details.close();\n    }\n\n    public async declineVisitor(guest: GuestUser) {\n        const details = await openConfirmModal(\n            {\n                title: 'Decline Visitor',\n                content: `Decline attendance of ${guest.name} to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await updateGuest(guest.id, {\n            ...guest,\n            extension_data: { ...guest.extension_data, status: 'declined' },\n        }).toPromise();\n        details.close();\n    }\n\n    public async checkGuestOut(event: CalendarEvent, user: User) {\n        const new_user = await checkinEventGuest(event.id, user.email, false, {\n            system_id: event.system?.id || event.resources[0]?.id,\n        })\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking out ${user.name} from ${event.organiser?.name}'s meeting`\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked out ${user.name} from ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique([new_user, ...event.attendees], 'email');\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsIn(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && !user.checked_in\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkin');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                checkinEventGuest(event.id, user.email, true, {\n                    system_id: event.system?.id || event.resources[0]?.id,\n                }).toPromise()\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking in all guests for ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked in all guests for ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async checkAllGuestsOut(event: CalendarEvent) {\n        const guests = event.attendees.filter(\n            (user) => user.is_external && user.checked_in && !user.organizer\n        );\n        if (guests.length <= 0) throw new Error('No Guests to checkout');\n        const attendees = await Promise.all(\n            guests.map((user) =>\n                checkinEventGuest(event.id, user.email, false, {\n                    system_id: event.system?.id || event.resources[0]?.id,\n                }).toPromise()\n            )\n        ).catch((e) => {\n            notifyError(\n                `Error checking out all guests from ${event.organiser?.name}'s meeting`\n            );\n            throw e;\n        });\n        notifySuccess(\n            `Successfully checked out all guests from ${event.organiser?.name}'s meeting`\n        );\n        const new_attendees = unique(\n            [...attendees, ...event.attendees],\n            'email'\n        );\n        new_attendees.sort((a, b) =>\n            a.organizer ? -1 : a.email.localeCompare(b.email)\n        );\n        return new CalendarEvent({\n            ...event,\n            attendees: new_attendees,\n        });\n    }\n\n    public async downloadVisitorsList() {\n        const guests: GuestUser[] = await this.filtered_guests\n            .pipe(take(1))\n            .toPromise();\n        if (!guests.length) return;\n        const { date } = this._filters.getValue();\n        const list = guests.map((_) => ({\n            Name: _.name,\n            Email: _.email,\n            'Checked In': _.checked_in,\n            Host: _.extension_data?.host || '',\n            Status: _.status,\n            Date: format(_.extension_data?.date, 'dd MMM h:mm a'),\n        }));\n        const data = jsonToCsv(list);\n        downloadFile(\n            `visitor-list-${format(date || Date.now(), 'MMM-dd')}.csv`,\n            data\n        );\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-white dark:bg-neutral-700 h-20 px-4 border-b border-gray-300 dark:border-neutral-500 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.period || 1\"\n                    (ngModelChange)=\"setFilters({ period: $event })\"\n                    placeholder=\"Viewing Period\"\n                >\n                    <mat-option [value]=\"1\">Show Day</mat-option>\n                    <mat-option [value]=\"7\">Show Week</mat-option>\n                    <mat-option [value]=\"30\">Show Month</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-slide-toggle\n                class=\"m-2\"\n                [ngModel]=\"(filters | async)?.show_guests\"\n                (ngModelChange)=\"setFilters({ show_guests: $event })\"\n                ><div class=\"text-xs\">Only Guests</div></mat-slide-toggle\n            >\n            <mat-slide-toggle\n                class=\"m-2\"\n                *ngIf=\"!(filters | async)?.show_guests\"\n                [ngModel]=\"(filters | async)?.all_bookings\"\n                (ngModelChange)=\"setFilters({ all_bookings: $event })\"\n                ><div class=\"text-xs\">All Bookings</div></mat-slide-toggle\n            >\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends BaseClass implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BaseClass, notifyError, SettingsService } from '@placeos/common';\nimport { CalendarEvent, saveEvent } from '@placeos/events';\nimport { showGuest, User } from '@placeos/users';\n\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-details',\n    template: `\n        <ng-container *ngIf=\"visitor\">\n            <div details class=\"w-12 text-lg flex justify-center\">\n                <ng-container *ngIf=\"!visitor?.organizer; else host_state\">\n                    <i\n                        *ngIf=\"!visitor?.checked_in; else checkin_state\"\n                        class=\"p-2 rounded-full material-icons border-2 border-dotted border-gray-600 dark:border-neutral-800\"\n                        >face</i\n                    >\n                </ng-container>\n                <ng-template #checkin_state>\n                    <i\n                        class=\"p-2 rounded-full material-icons bg-green-600 border-2 border-green-600 text-white\"\n                        >done</i\n                    >\n                </ng-template>\n                <ng-template #host_state>\n                    <i\n                        class=\"p-2 rounded-full material-icons bg-blue-600 border-2 border-blue-600 text-white\"\n                        >assignment_ind</i\n                    >\n                </ng-template>\n            </div>\n            <div flex class=\"p-2 flex-1\">\n                {{ visitor?.name || visitor?.email }}\n            </div>\n            <div class=\"w-48 py-2 flex items-center justify-end\">\n                <action-icon\n                    remote\n                    [matTooltip]=\"\n                        remote\n                            ? 'Set as In-Person Visitor'\n                            : 'Set as Remote Visitior'\n                    \"\n                    [loading]=\"loading === 'remote'\"\n                    [content]=\"remote ? 'tap_and_play' : 'business'\"\n                    (click)=\"toggleRemote()\"\n                    [class.invisible]=\"\n                        !visitor?.is_external || visitor?.organizer\n                    \"\n                >\n                </action-icon>\n                <action-icon\n                    checkin\n                    matTooltip=\"Checkin Guest\"\n                    [loading]=\"loading === 'checkin'\"\n                    [state]=\"visitor?.checked_in ? 'success' : ''\"\n                    content=\"event_available\"\n                    (click)=\"checkin()\"\n                    [class.invisible]=\"\n                        !visitor?.is_external || visitor?.organizer\n                    \"\n                >\n                </action-icon>\n                <action-icon\n                    checkout\n                    matTooltip=\"Checkout Guest\"\n                    [loading]=\"loading === 'checkout'\"\n                    content=\"event_busy\"\n                    (click)=\"checkout()\"\n                    [class.invisible]=\"\n                        !visitor?.is_external || visitor?.organizer\n                    \"\n                >\n                </action-icon>\n                <a\n                    [href]=\"'mailto:' + visitor?.email\"\n                    mat-icon-button\n                    [matTooltip]=\"\n                        visitor?.organizer ? 'Email Host' : 'Email Guest'\n                    \"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n                <action-icon\n                    matTooltip=\"Print QR Code\"\n                    [loading]=\"loading === 'printing'\"\n                    content=\"event_busy\"\n                    (click)=\"printQRCode()\"\n                    [class.invisible]=\"!can_print\"\n                >\n                </action-icon>\n            </div>\n            <div class=\"w-14 p-2\"></div>\n            <div\n                qr-code\n                *ngIf=\"show_qr_code\"\n                class=\"print-only fixed inset-0 flex flex-col justify-center bg-white space-y-2\"\n            >\n                <h2>{{ visitor?.name || visitor?.email }}</h2>\n                <div>\n                    <span>Host:</span>\n                    {{\n                        event?.organiser?.name ||\n                            event?.organiser?.name ||\n                            event?.creator\n                    }}\n                </div>\n                <div><span>Purpose:</span> {{ event?.title }}</div>\n                <div>\n                    <span>Location:</span>\n                    {{ event?.location || '&lt;Unspecified&gt;' }}\n                </div>\n                <div>\n                    <span>Issue Date:</span> {{ today | date: 'mediumDate' }}\n                </div>\n                <div class=\"flex justify-center\">\n                    <img\n                        [src]=\"visitor?.extension_data?.qr?.code || ''\"\n                        alt=\"qr-code\"\n                    />\n                </div>\n            </div>\n        </ng-container>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                width: 100%;\n                padding: 0 0.5rem;\n            }\n\n            :host > div {\n                display: flex;\n                align-items: center;\n                height: 100%;\n                border-bottom: 1px solid #ccc;\n                height: 3.5rem;\n            }\n\n            :host > div:first-child {\n                border: none;\n            }\n\n            .invisible {\n                opacity: 0;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class VisitorDetailsComponent extends BaseClass implements OnChanges {\n    @Input() public event: CalendarEvent;\n    @Input() public visitor: User;\n    @Output() public eventChange = new EventEmitter<CalendarEvent>();\n\n    public show_attendees: boolean;\n    public loading: string;\n    public show_qr_code: boolean;\n\n    public readonly checkin = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkGuestIn(this.event, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public readonly toggleRemote = async () => {\n        this.loading = 'remote';\n        const remote_list =\n            this.event.ext('remote')?.filter((e) => e !== this.visitor.email) ||\n            [];\n        if (!this.remote) {\n            remote_list.push(this.visitor.email);\n        }\n        const new_item = new CalendarEvent({\n            ...this.event.toJSON(),\n            remote: remote_list,\n        }).toJSON();\n        this.event = await saveEvent(new_item)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error setting visitor status. Error: ${\n                        e.statusText || e.message || e\n                    }`\n                );\n                return this.event;\n            });\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    public readonly checkout = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkGuestOut(this.event, this.visitor)\n            .catch((e) => this.event);\n        this.eventChange.emit(this.event);\n        this.loading = '';\n    };\n\n    /** Open print dialog for user's QR code */\n    public readonly printQRCode = () => {\n        this.show_qr_code = true;\n        this.timeout(\n            'print',\n            () => {\n                window.print();\n                this.show_qr_code = false;\n            },\n            50\n        );\n    };\n\n    public get can_print(): boolean {\n        return (\n            this._settings.get('app.can_print_qr') &&\n            this.visitor.checked_in &&\n            this.visitor?.extension_data.qr\n        );\n    }\n\n    public get today(): number {\n        return Date.now();\n    }\n\n    public get remote(): boolean {\n        return !!this.event?.extension_data?.remote?.find(\n            (e) => e === this.visitor?.email\n        );\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.visitor) this.loadGuest();\n    }\n\n    public async loadGuest(tries: number = 0) {\n        if (!this.visitor) return;\n        this.loading = 'printing';\n        if (this.visitor.checked_in) {\n            const guest = await showGuest(this.visitor.email)\n                .toPromise()\n                .catch((_) => null);\n            if (!guest?.extension_data?.qr?.code && tries < 5) {\n                this.timeout('load_guest', () => this.loadGuest(++tries), 1000);\n            } else this.loading = '';\n        } else this.loading = '';\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { HashMap } from '@placeos/ts-client/dist/esm/utilities/types';\nimport { BaseClass } from '@placeos/common';\nimport { CalendarEvent } from '@placeos/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-event',\n    template: `\n        <div event class=\"flex items-center px-2 bg-gray-100 dark:bg-neutral-700\" *ngIf=\"event\">\n            <div class=\"w-12 text-lg flex justify-center\">\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400 dark:bg-neutral-800\"\n                    *ngIf=\"\n                        event?.status !== 'declined' && event?.state !== 'done'\n                    \"\n                    >event</i\n                >\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400 dark:bg-neutral-800\"\n                    *ngIf=\"event?.status === 'declined'\"\n                    >close</i\n                >\n                <i\n                    class=\"p-2 rounded-full material-icons bg-gray-400 dark:bg-neutral-800 opacity-40\"\n                    *ngIf=\"\n                        event?.state === 'done' && event?.status !== 'declined'\n                    \"\n                    >done</i\n                >\n            </div>\n            <div class=\"w-24 p-2\">\n                {{\n                    event?.date\n                        | date: ((filters | async)?.period > 1\n                                  ? 'MMM d, h:mm a'\n                                  : 'shortTime')\n                }}\n            </div>\n            <div class=\"w-48 p-2\">\n                {{ event?.organiser?.name || event?.organiser?.email }}\n            </div>\n            <div flex class=\"p-2 flex-1\">{{ event?.title }}</div>\n            <div class=\"w-64 p-2 truncate\">{{ event?.location }}</div>\n            <div class=\"w-32 py-2 flex items-center\">\n                <action-icon\n                    checkin\n                    matTooltip=\"Checkin All Guests\"\n                    [loading]=\"loading === 'checkin'\"\n                    [disabled]=\"guestCount <= 0\"\n                    content=\"event_available\"\n                    (click)=\"checkinGuests()\"\n                >\n                </action-icon>\n                <action-icon\n                    checkout\n                    matTooltip=\"Checkout All Guests\"\n                    [loading]=\"loading === 'checkout'\"\n                    [disabled]=\"guestCount <= 0\"\n                    content=\"event_busy\"\n                    (click)=\"checkoutGuests()\"\n                >\n                </action-icon>\n                <a\n                    mat-icon-button\n                    [href]=\"'mailto:' + event?.organiser?.email\"\n                    matTooltip=\"Email Host\"\n                >\n                    <app-icon>email</app-icon>\n                </a>\n            </div>\n            <div class=\"w-16 p-2\">\n                <button\n                    mat-icon-button\n                    (click)=\"show_attendees = !show_attendees\"\n                    [disabled]=\"!event?.attendees?.length\"\n                    [matTooltip]=\"\n                        show_attendees || has_search\n                            ? 'Hide Attendees'\n                            : 'Show Attendees'\n                    \"\n                >\n                    <app-icon>{{\n                        show_attendees\n                            ? 'keyboard_arrow_down'\n                            : 'keyboard_arrow_right'\n                    }}</app-icon>\n                </button>\n            </div>\n        </div>\n        <div\n            attendees\n            class=\"w-full overflow-hidden relative border-b border-gray-300 dark:border-neutral-600\"\n            [style.height]=\"\n                !show_attendees && !has_search\n                    ? '0rem'\n                    : event?.attendees?.length * 3.5 + 'rem'\n            \"\n        >\n            <ng-container *ngIf=\"show_attendees || has_search\">\n                <div\n                    visitor\n                    class=\"relative w-full pl-12 bg-gray-200 dark:bg-neutral-600\"\n                    *ngFor=\"let user of event?.attendees || []\"\n                >\n                    <div class=\"absolute left-8 top-1/2 -translate-y-full border-b-2 border-l-2 border-gray-400 dark:border-neutral-700 w-4 h-full\"></div>\n                    <visitor-details\n                        [attr.disabled]=\"!matches[user.email]\"\n                        [visitor]=\"user\"\n                        [(event)]=\"event\"\n                    ></visitor-details>\n                </div>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n            }\n\n            visitor-details {\n                transition: opacity 200ms;\n            }\n\n            [attendees] {\n                transition: height 200ms;\n            }\n\n            [visitor] {\n                height: 3.5rem;\n            }\n\n            [disabled='true'] {\n                opacity: 0.35;\n            }\n        `,\n    ],\n})\nexport class VisitorEventComponent extends BaseClass implements OnInit {\n    @Input() public event: CalendarEvent;\n\n    public show_attendees: boolean;\n    public loading: string;\n    public matches: HashMap<boolean> = {};\n    public readonly filters = this._state.filters;\n\n    public readonly checkinGuests = async () => {\n        this.loading = 'checkin';\n        this.event = await this._state\n            .checkAllGuestsIn(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n    public readonly checkoutGuests = async () => {\n        this.loading = 'checkout';\n        this.event = await this._state\n            .checkAllGuestsOut(this.event)\n            .catch((e) => this.event);\n        this.loading = '';\n    };\n\n    public get guestCount() {\n        return (\n            this.event?.attendees?.reduce(\n                (c, u) => c + (u.is_external && !u.organizer ? 1 : 0),\n                0\n            ) || 0\n        );\n    }\n\n    public get has_search() {\n        return this._state.search;\n    }\n\n    constructor(private _state: VisitorsStateService) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'events',\n            this._state.filtered_events.subscribe(() => this.updateMatches())\n        );\n    }\n\n    public updateMatches() {\n        if (!this.event) return;\n        this.matches = {};\n        const filter = (this._state.search || '').toLowerCase();\n        for (const user of this.event?.attendees || []) {\n            this.matches[user.email] =\n                !filter ||\n                user.email.toLowerCase().includes(filter) ||\n                user.name.toLowerCase().includes(filter);\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { CalendarEvent } from '@placeos/events';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitor-listings',\n    template: `\n        <div class=\"w-full flex flex-col flex-1 text-sm h-full\">\n            <div\n                class=\"w-full flex items-center bg-white dark:bg-neutral-700 border-b border-gray-500 p-2 font-medium\"\n            >\n                <div class=\"w-12 p-2\"></div>\n                <div class=\"w-24 p-2\">Time</div>\n                <div class=\"w-48 p-2\">Host</div>\n                <div flex class=\"p-2 flex-1\">Title</div>\n                <div class=\"w-64 p-2\">Location</div>\n                <div class=\"w-32 p-2\">Actions</div>\n                <div class=\"w-16 p-2\"></div>\n            </div>\n            <div class=\"w-full flex-1 overflow-auto h-1/2\">\n                <ng-container\n                    *ngIf=\"(bookings | async)?.length; else empty_state\"\n                >\n                    <visitor-event\n                        *ngFor=\"\n                            let event of bookings | async;\n                            trackBy: trackByFn\n                        \"\n                        [event]=\"event\"\n                    ></visitor-event>\n                </ng-container>\n            </div>\n        </div>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex items-center justify-center\">\n                <p class=\"p-8\">\n                    There are no visitors for the currently selected date.\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class VisitorListingsComponent {\n    public readonly bookings = this._state.filtered_events;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, event: CalendarEvent) {\n        return event ? event.id : undefined;\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'guest-listings',\n    template: `\n        <div\n            class=\"w-full flex flex-col flex-1 text-sm h-full overflow-auto pb-20\"\n        >\n            <custom-table\n                class=\"min-w-[88rem]\"\n                [dataSource]=\"guests\"\n                [filter]=\"search | async\"\n                [columns]=\"columns\"\n                [display_column]=\"display_columns\"\n                [column_size]=\"column_sizes\"\n                [template]=\"{\n                    state: state_template,\n                    status: status_template,\n                    date: date_template,\n                    host: host_template,\n                    vaccinated: vaccinated_template,\n                    id_data: id_template,\n                    actions: action_template\n                }\"\n                [empty]=\"\n                    (search | async)\n                        ? 'No matching visitors'\n                        : 'There are visitors for the currently selected date.'\n                \"\n            ></custom-table>\n        </div>\n        <ng-template #state_template let-row=\"row\">\n            <i\n                *ngIf=\"!row?.checked_in; else checkin_state\"\n                class=\"p-2 rounded-full material-icons border-2 border-dotted border-gray-600 dark:border-neutral-800\"\n                >face</i\n            >\n            <ng-template #checkin_state>\n                <i\n                    class=\"p-2 rounded-full material-icons bg-green-600 border-2 border-green-600 text-white\"\n                    >done</i\n                >\n            </ng-template>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            {{ row.extension_data?.host }}\n        </ng-template>\n        <ng-template #vaccinated_template let-row=\"row\">\n            <div customTooltip [content]=\"vaccine_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.vaccination_proof?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.vaccination_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.vaccination_confirmed ===\n                              false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #vaccine_confirmation>\n                <div class=\"bg-white rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\">\n                    <img\n                        [src]=\"row.extension_data?.vaccination_proof?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] p-2 object-contain\"\n                    />\n                    <button\n                        mat-button\n                        (click)=\"setExt(row, 'vaccination_confirmed', true)\"\n                    >\n                        Confirm Vaccination Proof\n                    </button>\n                    <button\n                        mat-button\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'vaccination_confirmed', false)\"\n                    >\n                        Reject Vaccination Proof\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #id_template let-row=\"row\">\n            <div customTooltip [content]=\"id_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.id_data?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.id_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.id_confirmed === false\n                            ? 'Rejected'\n                            : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #id_confirmation>\n                <div class=\"bg-white rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\">\n                    <img\n                        [src]=\"row.extension_data?.id_data?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] object-contain\"\n                    />\n                    <button\n                        mat-button\n                        (click)=\"setExt(row, 'id_confirmed', true)\"\n                    >\n                        Confirm ID\n                    </button>\n                    <button\n                        mat-button\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'id_confirmed', false)\"\n                    >\n                        Reject ID\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <button\n                mat-button\n                class=\"rounded-3xl bg-pending border-none\"\n                [class.bg-success]=\"row?.status === 'approved'\"\n                [class.!bg-error]=\"row?.status === 'declined'\"\n                [matMenuTriggerFor]=\"menu\"\n            >\n                <div class=\"flex items-center\">\n                    <div class=\"mx-2\">\n                        {{\n                            row?.status === 'approved'\n                                ? 'Approved'\n                                : row?.status === 'declined'\n                                ? 'Declined'\n                                : 'Pending'\n                        }}\n                    </div>\n                    <app-icon class=\"text-2xl\">arrow_drop_down</app-icon>\n                </div>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approveVisitor(row)\">\n                    Approve Visitor\n                </button>\n                <button mat-menu-item (click)=\"declineVisitor(row)\">\n                    Decline Visitor\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            {{\n                row.extension_data?.date\n                    | date\n                        : ((filters | async)?.period > 1\n                              ? 'MMM d, h:mm a'\n                              : 'shortTime')\n            }}\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <button\n                mat-icon-button\n                [disabled]=\"!row.attachments?.length\"\n                title=\"\"\n                matTooltip=\"View Attachments\"\n                [matMenuTriggerFor]=\"menu\"\n            >\n                <app-icon>attachment</app-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\">\n                <a\n                    *ngFor=\"let item of row.attachments\"\n                    [href]=\"item.url\"\n                    mat-menu-item\n                    >{{ item.name }}</a\n                >\n            </mat-menu>\n            <action-icon\n                remote\n                [matTooltip]=\"\n                    remote\n                        ? 'Set as In-Person Visitor'\n                        : 'Set as Remote Visitior'\n                \"\n                [loading]=\"loading === 'remote'\"\n                [content]=\"remote ? 'tap_and_play' : 'business'\"\n                (click)=\"toggleRemote()\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                checkin\n                matTooltip=\"Checkin Guest\"\n                [loading]=\"loading === 'checkin'\"\n                [state]=\"row?.checked_in ? 'success' : ''\"\n                content=\"event_available\"\n                (click)=\"checkin()\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <action-icon\n                checkout\n                matTooltip=\"Checkout Guest\"\n                [loading]=\"loading === 'checkout'\"\n                content=\"event_busy\"\n                (click)=\"checkout()\"\n                [class.invisible]=\"!row?.is_external || row?.organizer\"\n            >\n            </action-icon>\n            <a\n                [href]=\"'mailto:' + row?.email\"\n                mat-icon-button\n                [matTooltip]=\"row?.organizer ? 'Email Host' : 'Email Guest'\"\n            >\n                <app-icon>email</app-icon>\n            </a>\n            <action-icon\n                matTooltip=\"Print QR Code\"\n                [loading]=\"loading === 'printing'\"\n                content=\"event_busy\"\n                (click)=\"printQRCode()\"\n                [class.invisible]=\"!can_print\"\n            >\n            </action-icon>\n        </ng-template>\n        <button\n            class=\"bg-secondary hover:shadow-lg shadow absolute bottom-4 right-4 text-white h-12 w-12\"\n            matTooltip=\"Download Visitor List\"\n            matTooltipPosition=\"left\"\n            mat-icon-button\n            *ngIf=\"(guests | async)?.length\"\n            (click)=\"downloadVisitorList()\"\n        >\n            <app-icon>download</app-icon>\n        </button>\n    `,\n    styles: [``],\n})\nexport class GuestListingComponent {\n    public readonly guests = this._state.filtered_guests;\n    public readonly search = this._state.search;\n    public readonly filters = this._state.filters;\n\n    public readonly downloadVisitorList = () =>\n        this._state.downloadVisitorsList();\n\n    public readonly approveVisitor = (u) => this._state.approveVisitor(u);\n    public readonly declineVisitor = (u) => this._state.declineVisitor(u);\n    public readonly setExt = (u, f, v) => this._state.setExt(u, f, v);\n\n    public get columns() {\n        return this._settings.get('app.guests.vaccine_check')\n            ? [\n                  'state',\n                  'date',\n                  'name',\n                  'host',\n                  'email',\n                  'vaccinated',\n                  'id_data',\n                  'status',\n                  'actions',\n              ]\n            : ['state', 'date', 'name', 'host', 'email', 'status', 'actions'];\n    }\n\n    public get display_columns() {\n        const fields = {\n            state: ' ',\n            date: 'Date',\n            name: 'Person',\n            host: 'Host',\n            email: 'Email',\n            vaccinated: 'Vaccinated',\n            id_data: 'ID',\n            status: 'State',\n            actions: ' '\n        }\n        return this.columns.map(_ => fields[_] || _);\n    }\n\n    public get column_sizes() {\n        const fields = {\n            state: '3.5r',\n            date: '8r',\n            name: '12r',\n            host: '12r',\n            email: 'flex',\n            vaccinated: '8r',\n            id_data: '8r',\n            status: '10r',\n            actions: '12r'\n        }\n        return this.columns.map(_ => fields[_] || _);\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col bg-gray-200 dark:bg-neutral-600\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <visitor-listings *ngIf=\"!(filters | async)?.show_guests\" class=\"w-full flex-1 h-0\"></visitor-listings>\n            <guest-listings *ngIf=\"(filters | async)?.show_guests\" class=\"w-full flex-1 h-0\"></guest-listings>\n            <mat-progress-bar class=\"w-full\" *ngIf=\"loading | async\" mode=\"indeterminate\"></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { VisitorListingsComponent } from './visitor-listings.component';\nimport { VisitorEventComponent } from './visitor-event.component';\nimport { VisitorDetailsComponent } from './visitor-details.component';\nimport { GuestListingComponent } from './guest-listing.component';\n\nconst ROUTES: Route[] = [{ path: '', component: VisitorsComponent }];\n\n@NgModule({\n    declarations: [\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        VisitorListingsComponent,\n        VisitorEventComponent,\n        VisitorDetailsComponent,\n        GuestListingComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n"],"x_google_ignoreList":[]}