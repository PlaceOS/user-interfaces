{"version":3,"file":"apps_concierge_src_app_visitors_visitors_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/visitors/guest-listing.component.ts","./apps/concierge/src/app/visitors/invite-visitor-modal.component.ts","./apps/concierge/src/app/visitors/new-visitors.component.ts","./apps/concierge/src/app/visitors/visitor-induction-modal.component.ts","./apps/concierge/src/app/visitors/visitor-notes-modal.component.ts","./apps/concierge/src/app/visitors/visitors-state.service.ts","./apps/concierge/src/app/visitors/visitors-topbar.component.ts","./apps/concierge/src/app/visitors/visitors.component.ts","./apps/concierge/src/app/visitors/visitors.module.ts","./libs/users/src/index.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {\n    AsyncHandler,\n    SettingsService,\n    getTimezoneOffsetInMinutes,\n    getTimezoneOffsetString,\n    notifyError,\n    padLength,\n} from '@placeos/common';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { Booking, saveBooking } from '@placeos/bookings';\nimport { showMetadata } from '@placeos/ts-client';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ParkingStateService } from '../parking/parking-state.service';\nimport { User } from '@placeos/users';\n\n@Component({\n    selector: 'guest-listings',\n    template: `\n        <simple-table\n            class=\"min-w-[72rem] block text-sm z-0\"\n            [data]=\"guests\"\n            [columns]=\"[\n                {\n                    key: 'state',\n                    name: 'Checked In',\n                    content: state_template,\n                    size: '6.5rem',\n                    sortable: false,\n                },\n                {\n                    key: 'date',\n                    name: 'Time',\n                    content: date_template,\n                    size: '6rem',\n                },\n                {\n                    key: 'asset_name',\n                    name: 'Visitor',\n                    content: person_template,\n                },\n                { key: 'user_name', name: 'Host', content: host_template },\n                {\n                    key: 'status',\n                    name: 'State',\n                    content: status_template,\n                    size: '9.5rem',\n                },\n                {\n                    key: 'induction',\n                    name: 'Inducted',\n                    content: induction_template,\n                    show: !!inductions_enabled,\n                    size: '5.5rem',\n                },\n                {\n                    key: 'parking_space',\n                    name: 'Parking',\n                    content: parking_template,\n                    show: !!has_parking,\n                    size: '5.5rem',\n                },\n                {\n                    key: 'notes',\n                    name: 'Notes',\n                    content: notes_template,\n                    sortable: false,\n                    size: '4.5rem',\n                },\n                {\n                    key: 'actions',\n                    name: ' ',\n                    content: action_template,\n                    size: '3.25rem',\n                    sortable: false,\n                },\n            ]\"\n            [filter]=\"search | async\"\n            [sortable]=\"true\"\n        ></simple-table>\n        <ng-template #state_template let-row=\"row\">\n            <div\n                *ngIf=\"!row?.checked_in && row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-base-400 text-neutral-content mx-auto\"\n                [matTooltip]=\"\n                    'Checked out at:\n' + (row.checked_out_at * 1000 | date: time_format : tz)\n                \"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n            <div\n                *ngIf=\"!row?.checked_in && !row.checked_out_at\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-warning text-warning-content mx-auto\"\n                matTooltip=\"Not checked in\"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>question_mark</app-icon>\n            </div>\n            <div\n                *ngIf=\"row?.checked_in\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n                [matTooltip]=\"\n                    'Checked in at:\n' + (row.checked_in_at * 1000 | date: time_format : tz)\n                \"\n                matTooltipPosition=\"right\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #person_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <div>{{ row.asset_name || row.asset_id }}</div>\n                <div\n                    *ngIf=\"row.asset_name && row.asset_id\"\n                    class=\"opacity-30 text-xs\"\n                >\n                    {{ row.asset_id }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #host_template let-row=\"row\">\n            <div class=\"px-4 py-2\">\n                <div>{{ row.user_name || row.user_email }}</div>\n                <div\n                    *ngIf=\"row.user_name && row.user_email\"\n                    class=\"opacity-30 text-xs\"\n                >\n                    {{ row.user_email }}\n                </div>\n            </div>\n        </ng-template>\n        <ng-template #id_template let-row=\"row\">\n            <div customTooltip [content]=\"id_confirmation\">\n                <button\n                    matRipple\n                    *ngIf=\"row.extension_data?.id_data?.url\"\n                    class=\"bg-success rounded-3xl px-4 py-2 text-white\"\n                >\n                    {{\n                        row.extension_data?.id_confirmed\n                            ? 'Confirmed'\n                            : row.extension_data?.id_confirmed === false\n                              ? 'Rejected'\n                              : 'Submitted'\n                    }}\n                </button>\n            </div>\n            <ng-template #id_confirmation>\n                <div\n                    class=\"bg-base-100 rounded p-2 flex flex-col space-y-2 my-2 w-[20rem]\"\n                >\n                    <img\n                        [src]=\"row.extension_data?.id_data?.url\"\n                        class=\"max-w-[20rem] max-h-[20rem] object-contain\"\n                    />\n                    <button\n                        matRipple\n                        (click)=\"setExt(row, 'id_confirmed', true)\"\n                    >\n                        Confirm ID\n                    </button>\n                    <button\n                        matRipple\n                        class=\"inverse mt-2\"\n                        (click)=\"setExt(row, 'id_confirmed', false)\"\n                    >\n                        Reject ID\n                    </button>\n                </div>\n            </ng-template>\n        </ng-template>\n        <ng-template #parking_template let-row=\"row\">\n            <div\n                *ngIf=\"row.extension_data.parking_booking_id\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #induction_template let-data=\"data\">\n            <div\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl mx-auto\"\n                [class.bg-success]=\"data === 'accepted'\"\n                [class.text-success-content]=\"data === 'accepted'\"\n                [class.bg-warning]=\"data !== 'accepted' && data !== 'declined'\"\n                [class.text-warning-content]=\"\n                    data !== 'accepted' && data !== 'declined'\n                \"\n                [class.bg-error]=\"data === 'declined'\"\n                [class.text-error-content]=\"data === 'declined'\"\n            >\n                <app-icon>\n                    {{\n                        data === 'accepted'\n                            ? 'done'\n                            : data === 'declined'\n                              ? 'close'\n                              : 'question_mark'\n                    }}\n                </app-icon>\n            </div>\n        </ng-template>\n        <ng-template #status_template let-row=\"row\">\n            <div class=\"px-4\">\n                <button\n                    matRipple\n                    class=\"rounded-3xl border-none w-[7.5rem] h-10\"\n                    [class.text-success-content]=\"row?.status === 'approved'\"\n                    [class.bg-success]=\"row?.status === 'approved'\"\n                    [class.text-error-content]=\"row?.status === 'declined'\"\n                    [class.bg-error]=\"row?.status === 'declined'\"\n                    [class.text-neutral-content]=\"row?.status === 'ended'\"\n                    [class.bg-neutral]=\"row?.status === 'ended'\"\n                    [class.text-warning-content]=\"\n                        row?.status !== 'ended' &&\n                        row?.status !== 'approved' &&\n                        row?.status !== 'declined'\n                    \"\n                    [class.bg-warning]=\"\n                        row?.status !== 'ended' &&\n                        row?.status !== 'approved' &&\n                        row?.status !== 'declined'\n                    \"\n                    [class.opacity-30]=\"row?.status === 'ended'\"\n                    [matMenuTriggerFor]=\"menu\"\n                    [disabled]=\"\n                        row?.status === 'ended' ||\n                        (row.checked_in && !row.checked_out_at)\n                    \"\n                >\n                    <div class=\"flex items-center pl-4 pr-2 space-x-2\">\n                        <div class=\"flex-1 text-left\">\n                            {{\n                                row?.status === 'ended'\n                                    ? 'Ended'\n                                    : row?.status === 'approved'\n                                      ? 'Approved'\n                                      : row?.status === 'declined'\n                                        ? 'Declined'\n                                        : 'Pending'\n                            }}\n                        </div>\n                        <app-icon\n                            class=\"text-2xl\"\n                            *ngIf=\"\n                                !(\n                                    row?.status === 'ended' ||\n                                    (row.checked_in && !row.checked_out_at)\n                                )\n                            \"\n                        >\n                            arrow_drop_down\n                        </app-icon>\n                    </div>\n                </button>\n            </div>\n            <mat-menu #menu=\"matMenu\">\n                <button mat-menu-item (click)=\"approveVisitor(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl\">event_available</app-icon>\n                        <div class=\"pr-2\">Approve Visitor</div>\n                    </div>\n                </button>\n                <button mat-menu-item (click)=\"declineVisitor(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon class=\"text-2xl text-error\">\n                            event_busy\n                        </app-icon>\n                        <div class=\"pr-2\">Decline Visitor</div>\n                    </div>\n                </button>\n            </mat-menu>\n        </ng-template>\n        <ng-template #date_template let-row=\"row\">\n            <div class=\"px-4\">\n                {{\n                    row.date\n                        | date\n                            : ((filters | async)?.period > 1\n                                  ? 'MMM d, ' + time_format\n                                  : time_format)\n                            : tz\n                }}\n                <span class=\"text-xs opacity-30\" *ngIf=\"timezone\">\n                    {{ row.date | date: 'z' : tz }}\n                </span>\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"flex items-center justify-end px-2\">\n                <button icon matRipple [matMenuTriggerFor]=\"guest_menu\">\n                    <app-icon>more_horiz</app-icon>\n                </button>\n                <mat-menu #guest_menu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        [disabled]=\"!row.attachment?.length\"\n                        [matMenuTriggerFor]=\"attachment_menu\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">attachment</app-icon>\n                            <div>View Attachments</div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        *ngIf=\"\n                            has_parking &&\n                            !row.extension_data.parking_booking_id\n                        \"\n                        (click)=\"reserveParking(row)\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">directions_car</app-icon>\n                            <div>Reserve Parking Space</div>\n                        </div>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <a\n                            *ngFor=\"let item of row.attachments\"\n                            [href]=\"item.url\"\n                            mat-menu-item\n                        >\n                            {{ item.name }}\n                        </a>\n                    </mat-menu>\n                    <button mat-menu-item (click)=\"setExt(row, 'remote', true)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">\n                                {{\n                                    row.extension_data.remote\n                                        ? 'business'\n                                        : 'laptop'\n                                }}\n                            </app-icon>\n                            <div>\n                                Set as\n                                {{\n                                    row.extension_data.remote\n                                        ? 'Onsite'\n                                        : 'Remote'\n                                }}\n                                Visitor\n                            </div>\n                        </div>\n                    </button>\n                    <button\n                        mat-menu-item\n                        *ngIf=\"can_print\"\n                        (click)=\"printQRCode()\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">print</app-icon>\n                            <div>Print QR Code</div>\n                        </div>\n                    </button>\n                    <a mat-menu-item [href]=\"'mailto:' + row?.asset_id\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">email</app-icon>\n                            <div>\n                                Email\n                                {{\n                                    row?.user_email === row?.asset_id\n                                        ? 'Host'\n                                        : 'Guest'\n                                }}\n                            </div>\n                        </div>\n                    </a>\n                    <button\n                        mat-menu-item\n                        (click)=\"row.checked_in ? checkout(row) : checkin(row)\"\n                        *ngIf=\"!row.checked_out_at\"\n                    >\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">\n                                {{\n                                    row.checked_in\n                                        ? 'event_busy'\n                                        : 'event_available'\n                                }}\n                            </app-icon>\n                            <div>\n                                {{ row.checked_in ? 'Checkout' : 'Checkin' }}\n                                Guest\n                            </div>\n                        </div>\n                    </button>\n                    <ng-container *ngIf=\"row.linked_event\">\n                        <button mat-menu-item (click)=\"checkinAllVisitors(row)\">\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl\">\n                                    event_available\n                                </app-icon>\n                                <div>Checkin all for Meeting</div>\n                            </div>\n                        </button>\n                        <button\n                            mat-menu-item\n                            (click)=\"checkoutAllVisitors(row)\"\n                        >\n                            <div class=\"flex items-center space-x-2\">\n                                <app-icon class=\"text-2xl text-error\">\n                                    event_busy\n                                </app-icon>\n                                <div>Checkout all for Meeting</div>\n                            </div>\n                        </button>\n                    </ng-container>\n                </mat-menu>\n            </div>\n        </ng-template>\n        <ng-template #notes_template let-row=\"row\">\n            <div class=\"relative p-4 mx-auto\">\n                <button\n                    matTooltip=\"Edit Visitor Notes\"\n                    matTooltipPosition=\"left\"\n                    icon\n                    matRipple\n                    (click)=\"editVisitorNotes(row)\"\n                >\n                    <app-icon class=\"text-2xl\">edit_square</app-icon>\n                </button>\n                <div\n                    class=\"absolute top-1 right-1 bg-info text-info-content rounded-full h-4 w-4 flex items-center justify-center\"\n                    *ngIf=\"row.extension_data?.notes?.length\"\n                    matTooltip=\"Visitor Notes Available\"\n                >\n                    <app-icon\n                        className=\"material-symbols-rounded\"\n                        class=\"text-sm\"\n                    >\n                        info_i\n                    </app-icon>\n                </div>\n            </div>\n        </ng-template>\n        <button\n            class=\"bg-secondary hover:shadow-lg shadow absolute bottom-4 right-4 text-white h-12 w-12 z-20\"\n            matTooltip=\"Download Visitor List\"\n            matTooltipPosition=\"left\"\n            icon\n            matRipple\n            *ngIf=\"(guests | async)?.length\"\n            (click)=\"downloadVisitorList()\"\n        >\n            <app-icon>download</app-icon>\n        </button>\n        <div class=\"w-full h-8\"></div>\n    `,\n    styles: [``],\n})\nexport class GuestListingComponent extends AsyncHandler {\n    public readonly guests = this._state.filtered_bookings;\n    public readonly search = this._state.search;\n    public readonly filters = this._state.filters;\n    public inductions_enabled = false;\n\n    public get timezone() {\n        const use_tz = this._settings.get('app.bookings.use_building_timezone');\n        const bld_tz = this._org.building.timezone;\n        return use_tz &&\n            bld_tz !== Intl.DateTimeFormat().resolvedOptions().timeZone\n            ? bld_tz\n            : '';\n    }\n\n    public get tz() {\n        const tz = this.timezone;\n        if (!tz) return '';\n        return getTimezoneOffsetString(tz);\n    }\n\n    public readonly downloadVisitorList = () =>\n        this._state.downloadVisitorsList();\n\n    public readonly approveVisitor = (u) => this._state.approveVisitor(u);\n    public readonly declineVisitor = (u) => this._state.declineVisitor(u);\n    public readonly checkinAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, true);\n    public readonly checkoutAllVisitors = (u) =>\n        this._state.setCheckinStateForEvent(u.linked_event?.id, false);\n    public readonly setExt = (u, f, v) => this._state.setExt(u, f, v);\n    public readonly editVisitorNotes = (u) => this._state.editVisitorNotes(u);\n\n    public readonly checkin = async (item: Booking) => {\n        await this._state.setCheckinState(item, true).catch((e) => {\n            if (e !== 'User declined') notifyError(e);\n        });\n        this._state.poll();\n    };\n\n    public readonly checkout = async (item: Booking) => {\n        await this._state.setCheckinState(item, false).catch((_) => null);\n        this._state.poll();\n    };\n\n    public get has_parking() {\n        return (\n            this._settings.get('app.features')?.includes('parking') &&\n            this._settings.get('app.visitors.has_parking')\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public inducted(item: Booking) {\n        if (item.checked_in) return true;\n        return item.process_state.includes('declined')\n            ? false\n            : item.process_state.includes('inducted') || item.induction\n              ? true\n              : null;\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _parking: ParkingStateService,\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld) => {\n                if (!bld) return;\n                const visitor_kiosk_app =\n                    this._settings.get('app.visitor_kiosk_app') ||\n                    'visitor-kiosk_app';\n                const metadata: any = await showMetadata(\n                    bld.id,\n                    visitor_kiosk_app,\n                ).toPromise();\n                this.inductions_enabled =\n                    metadata.details?.induction_enabled &&\n                    metadata.details?.induction_details;\n            }),\n        );\n    }\n\n    public async reserveParking(item: Booking) {\n        const id = await this._parking.editReservation(undefined, {\n            user: new User({ email: item.asset_id, name: item.asset_name }),\n            link_id: item.id,\n            date: item.date,\n            external_user: true,\n        });\n        if (id) {\n            await saveBooking(\n                new Booking({ ...item, parking_booking_id: id } as any),\n            ).toPromise();\n            this._state.poll();\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'invite-visitor-modal',\n    template: `\n        <main class=\"relative min-w-[40rem] min-h-[40rem]\">\n            <invite-visitor-form (done)=\"onDone()\"></invite-visitor-form>\n        </main>\n    `,\n    styles: [``],\n})\nexport class InviteVisitorModalComponent {\n    constructor(\n        private _dialog_ref: MatDialogRef<InviteVisitorModalComponent>\n    ) {}\n\n    public onDone() {\n        this._dialog_ref.close();\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\nimport { OrganisationService } from '@placeos/organisation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: '[app-new-visitors]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center px-8 py-4 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">Visitors</h2>\n                    <div class=\"flex-1 w-2\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        (modelChange)=\"setSearch($event)\"\n                    ></searchbar>\n                    <button btn matRipple (click)=\"inviteVisitor()\">\n                        Invite Visitor\n                    </button>\n                </div>\n                <div class=\"flex items-center px-8 pb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript w-60\"\n                    >\n                        <mat-select\n                            [ngModel]=\"(filters | async)?.zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                            multiple\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"text-xs opacity-30\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (level.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ level.display_name || level.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"flex-1 w-2\"></div>\n                    <date-options (dateChange)=\"setDate($event)\"></date-options>\n                </div>\n                <div class=\"mx-8 flex-1 h-1/2 overflow-auto\">\n                    <guest-listings></guest-listings>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"loading | async\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewVisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n    ]).pipe(\n        map(([bld, region]) =>\n            this._settings.get('app.use_region')\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld)\n        )\n    );\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {}\n\n    public inviteVisitor() {\n        this._dialog.open(InviteVisitorModalComponent);\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'visitor-induction-modal',\n    template: `\n        <div\n            class=\"relative bg-base-100 rounded shadow overflow-hidden flex flex-col items-center w-[32rem] p-4\"\n        >\n            <p class=\"my-4\">\n                Please read the induction information below before proceeding\n            </p>\n            <div\n                class=\"rounded border border-base-300 w-full p-4 opacity-60 text-sm overflow-y-auto overflow-x-hidden max-h-[50vh] whitespace-pre-wrap\"\n            >\n                {{ induction_details }}\n            </div>\n            <mat-checkbox [(ngModel)]=\"agree\" class=\"my-4\">\n                I agree\n            </mat-checkbox>\n            <div class=\"flex items-center justify-center space-x-2\">\n                <button\n                    btn\n                    matRipple\n                    class=\"w-32 clear underline\"\n                    [mat-dialog-close]=\"false\"\n                >\n                    Decline\n                </button>\n                <button\n                    btn\n                    matRipple\n                    class=\"w-32\"\n                    [disabled]=\"!agree\"\n                    [mat-dialog-close]=\"true\"\n                >\n                    Accept\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class VisitorInductionModalComponent {\n    public agree = false;\n\n    public get induction_details() {\n        return this._settings.get('app.induction_details');\n    }\n\n    public get is_enabled() {\n        return (\n            this._settings.get('app.induction_enabled') &&\n            this._settings.get('app.induction_details')\n        );\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Booking, BookingFormService, updateBooking } from '@placeos/bookings';\nimport { notifyError, notifySuccess } from '@placeos/common';\n\n@Component({\n    selector: 'visitor-notes-modal',\n    template: `\n        <header>\n            <h2>\n                Notes for Visitor\n                <span\n                    class=\"font-medium px-2 py-1 text-sm bg-base-200 rounded ml-2\"\n                >\n                    {{ item?.asset_name }}\n                </span>\n            </h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"p-4 w-[36rem] max-h-[65vh] overflow-auto\"\n            *ngIf=\"!loading; else loading_template\"\n        >\n            <mat-form-field appearance=\"outline\" class=\"w-full no-subscript\">\n                <textarea\n                    matInput\n                    [(ngModel)]=\"notes\"\n                    class=\"resize-none h-[60vh] max-h-[64rem]\"\n                    placeholder=\"Notes for visitor\"\n                ></textarea>\n            </mat-form-field>\n        </main>\n        <footer\n            class=\"flex justify-end space-x-2 p-2 border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #loading_template>\n            <div\n                loading\n                class=\"absolute inset-0 bg-base-100 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving visitor notes...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class VisitorNotesModalComponent {\n    public item: Booking = this._data.item;\n    public notes = this.item.extension_data?.notes || '';\n    public loading = '';\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: { item: Booking },\n        private _dialog_ref: MatDialogRef<VisitorNotesModalComponent>,\n    ) {\n        this.item = _data.item;\n    }\n\n    public async save() {\n        this.loading = 'Saving...';\n        this._dialog_ref.disableClose = true;\n        await updateBooking(this.item.id, {\n            ...this.item.toJSON(),\n            extension_data: {\n                ...this.item.extension_data,\n                notes: this.notes,\n            },\n        })\n            .toPromise()\n            .catch((_) => {\n                notifyError('Error saving visitor notes');\n                this._dialog_ref.disableClose = false;\n                this.loading = '';\n                throw _;\n            });\n        this.loading = '';\n        notifySuccess('Successfully saved visitor notes');\n        this._dialog_ref.close();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\nimport { startOfDay, getUnixTime, addDays, format } from 'date-fns';\n\nimport {\n    AsyncHandler,\n    SettingsService,\n    downloadFile,\n    jsonToCsv,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n} from '@placeos/common';\nimport { GuestUser, updateGuest } from '@placeos/users';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    Booking,\n    approveBooking,\n    checkinBooking,\n    queryBookings,\n    rejectBooking,\n    updateBooking,\n    updateBookingInductionStatus,\n} from '@placeos/bookings';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorInductionModalComponent } from './visitor-induction-modal.component';\nimport { VisitorNotesModalComponent } from './visitor-notes-modal.component';\n\nexport interface VisitorFilters {\n    date?: number;\n    zones?: string[];\n    all_bookings?: boolean;\n    period?: number;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class VisitorsStateService extends AsyncHandler {\n    private _poll = new BehaviorSubject<number>(0);\n\n    private _filters = new BehaviorSubject<VisitorFilters>({});\n\n    private _search = new BehaviorSubject<string>('');\n\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly loading = this._loading.asObservable();\n\n    public readonly filters = this._filters.asObservable();\n\n    public readonly bookings = combineLatest([\n        this._org.active_building,\n        this._filters,\n        this._poll,\n    ]).pipe(\n        filter(([building]) => !!building),\n        debounceTime(150),\n        switchMap(([bld, filters]) => {\n            this._loading.next(true);\n            const date = filters.date ? new Date(filters.date) : new Date();\n            const start = startOfDay(date);\n            const end = addDays(start, filters.period || 1);\n            return queryBookings({\n                type: 'visitor',\n                period_start: getUnixTime(start),\n                period_end: getUnixTime(end),\n                zones: (filters.zones || []).join(',') || bld.id,\n                include_checked_out: true,\n                limit: 1000,\n            }).pipe(catchError((_) => of([] as Booking[])));\n        }),\n        tap(() => this._loading.next(false)),\n        shareReplay(1),\n    );\n\n    public readonly filtered_bookings = combineLatest([\n        this._search,\n        this.bookings,\n    ]).pipe(\n        map(([search, guest_list]) => {\n            const filter = search.toLowerCase();\n            const out = guest_list\n                .filter(\n                    (_) =>\n                        _.asset_name?.toLowerCase().includes(filter) ||\n                        _.user_name?.toLowerCase().includes(filter) ||\n                        _.user_email?.toLowerCase().includes(filter) ||\n                        _.asset_id?.toLowerCase().includes(filter),\n                )\n                .sort((a, b) => a.date - b.date);\n            return out;\n        }),\n    );\n\n    public get search() {\n        return this._search.getValue();\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get is_induction_enabled() {\n        return (\n            this._settings.get('app.induction_enabled') &&\n            this._settings.get('app.induction_details')\n        );\n    }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public setFilters(filters: VisitorFilters) {\n        this._filters.next({ ...this._filters.getValue(), ...filters });\n    }\n\n    public setSearchString(search: string) {\n        this._search.next(search);\n    }\n\n    public poll() {\n        this._poll.next(Date.now());\n    }\n\n    public startPolling(delay: number = 30 * 1000) {\n        this.interval('poll', () => this._poll.next(Date.now()), delay);\n    }\n\n    public stopPolling() {\n        this.clearInterval('poll');\n    }\n\n    public async setExt<T = any>(guest: Booking, field: string, value: T) {\n        const extension_data = { ...guest.extension_data };\n        extension_data[field] = value;\n        await updateBooking(guest.id, {\n            ...guest.toJSON(),\n            extension_data,\n        }).toPromise();\n        this._poll.next(Date.now());\n    }\n\n    public async approveVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Approve Visitor',\n                content: `Approve attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog,\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await (approveBooking(item.id) as any).toPromise().catch((e) => {\n            notifyError(\n                `Error approving visitor: ${e.message || e.error || e}`,\n            );\n            details.close();\n            throw e;\n        });\n        notifySuccess(`Successfully approved visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async declineVisitor(item: Booking) {\n        const details = await openConfirmModal(\n            {\n                title: 'Decline Visitor',\n                content: `Decline attendance of ${\n                    item.asset_name || item.asset_id\n                } to their meeting?`,\n                icon: { content: 'event_available' },\n            },\n            this._dialog,\n        );\n        if (details.reason !== 'done') return details.close();\n        details.loading('Updating guest details');\n        await rejectBooking(item.id)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error declining visitor: ${e.message || e.error || e}`,\n                );\n                details.close();\n                throw e;\n            });\n        notifySuccess(`Successfully declining visitor`);\n        this._poll.next(Date.now());\n        details.close();\n    }\n\n    public async requestInduction(item: Booking) {\n        if (!this.is_induction_enabled) return true;\n        const ref = this._dialog.open(VisitorInductionModalComponent, {\n            data: { item },\n        });\n        const result = await ref.afterClosed().toPromise();\n        if (result === false) {\n            await updateBookingInductionStatus(item.id, 'declined').toPromise();\n        }\n        if (!result) throw 'User declined';\n        await updateBookingInductionStatus(item.id, 'accepted').toPromise();\n        return true;\n    }\n\n    public async setCheckinState(item: Booking, state = true) {\n        if (item.rejected) throw 'You cannot check-in a rejected meeting';\n        if (state === true) await this.requestInduction(item);\n        if (!item.approved && state === true) {\n            await approveBooking(item.id).toPromise();\n        }\n        const new_user = await checkinBooking(item.id, state)\n            .toPromise()\n            .catch((e) => {\n                notifyError(\n                    `Error checking ${state ? 'in' : 'out'} ${\n                        item.asset_name || item.asset_id\n                    } for ${item.user_name}'s meeting`,\n                );\n                throw e;\n            });\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} ${\n                item.asset_name || item.asset_id\n            } from ${item.user_name}'s meeting`,\n        );\n    }\n\n    public async setCheckinStateForEvent(event_id: string, state = true) {\n        if (!event_id) return;\n        const bookings = await this.bookings.pipe(take(1)).toPromise();\n        const event_bookings = bookings.filter(\n            (_) =>\n                _.parent_id === event_id ||\n                _.extension_data.parent_id === event_id ||\n                _.linked_event?.id === event_id ||\n                _.linked_event?.event_id === event_id,\n        );\n        if (!event_bookings.length) return;\n        await Promise.all(\n            event_bookings.map((_) =>\n                checkinBooking(_.id, state)\n                    .toPromise()\n                    .catch((e) => {\n                        notifyError(\n                            `Error checking ${state ? 'in' : 'out'} ${\n                                _.asset_name || _.asset_id\n                            } for ${_.user_name}'s meeting`,\n                        );\n                        throw e;\n                    }),\n            ),\n        );\n        notifySuccess(\n            `Successfully checked ${state ? 'in' : 'out'} all visitors from ${\n                event_bookings[0].user_name\n            }'s meeting`,\n        );\n        this._poll.next(Date.now());\n    }\n\n    public async downloadVisitorsList() {\n        const bookings = await this.filtered_bookings.pipe(take(1)).toPromise();\n        if (!bookings.length) return;\n        const { date } = this._filters.getValue();\n        const list = bookings.map((_) => ({\n            Name: _.asset_name,\n            Email: _.asset_id,\n            'Checked In': _.checked_in,\n            Host: _.user_email || '',\n            Status: _.status,\n            Date: format(_.date, 'dd MMM ' + this.time_format),\n        }));\n        const data = jsonToCsv(list);\n        downloadFile(\n            `visitor-list-${format(date || Date.now(), 'MMM-dd')}.csv`,\n            data,\n        );\n    }\n\n    public editVisitorNotes(item: Booking) {\n        const ref = this._dialog.open(VisitorNotesModalComponent, {\n            data: { item },\n        });\n        ref.afterClosed().subscribe(() => this.poll());\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: 'visitors-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    multiple\n                    [(ngModel)]=\"zones\"\n                    (ngModelChange)=\"updateZones($event)\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"(filters | async)?.period || 1\"\n                    (ngModelChange)=\"setFilters({ period: $event })\"\n                    placeholder=\"Viewing Period\"\n                >\n                    <mat-option [value]=\"1\">Show Day</mat-option>\n                    <mat-option [value]=\"7\">Show Week</mat-option>\n                    <mat-option [value]=\"30\">Show Month</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                (modelChange)=\"setSearch($event)\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class VisitorsTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of selected levels */\n    public zones: string[] = [];\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n\n    public readonly filters = this._state.filters;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    /** Set filtered date */\n    public readonly setFilters = (filters) => this._state.setFilters(filters);\n    /** Set filter string */\n    public readonly setSearch = (str) => this._state.setSearchString(str);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: VisitorsStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        this.zones = zones;\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe((levels) => {\n                this.zones = this.zones.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone)\n                );\n                if (!this.zones.length && levels.length) {\n                    this.zones.push(levels[0].id);\n                }\n                this.updateZones(this.zones);\n            })\n        );\n        this.setSearch('');\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { VisitorsStateService } from './visitors-state.service';\n\n@Component({\n    selector: '[app-visitors]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative w-full flex flex-col bg-base-200\">\n            <visitors-topbar class=\"w-full\"></visitors-topbar>\n            <guest-listings class=\"w-full flex-1 h-0\"></guest-listings>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class VisitorsComponent implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public readonly filters = this._state.filters;\n\n    constructor(private _state: VisitorsStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { VisitorsComponent } from './visitors.component';\nimport { VisitorsTopbarComponent } from './visitors-topbar.component';\nimport { GuestListingComponent } from './guest-listing.component';\nimport { NewVisitorsComponent } from './new-visitors.component';\nimport { InviteVisitorModalComponent } from './invite-visitor-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { VisitorInductionModalComponent } from './visitor-induction-modal.component';\nimport { VisitorNotesModalComponent } from './visitor-notes-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: VisitorsComponent },\n    { path: 'new', component: NewVisitorsComponent },\n];\n\n@NgModule({\n    declarations: [\n        NewVisitorsComponent,\n        VisitorsComponent,\n        VisitorsTopbarComponent,\n        GuestListingComponent,\n        InviteVisitorModalComponent,\n        VisitorInductionModalComponent,\n        VisitorNotesModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedBookingsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class VisitorsModule {}\n\n/**\nzone_ids: zone-EmWVhHG3Bhz\nperiod_start: 1604926800\nperiod_end: 1605013199\n\nperiod_start: 1605013200\nperiod_end: 1605099599\nzones: zone-EmWVhHG3Bhz\n\n*/\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"names":["AsyncHandler","SettingsService","getTimezoneOffsetString","notifyError","VisitorsStateService","Booking","saveBooking","showMetadata","OrganisationService","ParkingStateService","User","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpipeBind3","row_r1","checked_out_at","ctx_r1","time_format","tz","checked_in_at","ɵɵtemplate","GuestListingComponent_ng_template_2_div_0_Template","GuestListingComponent_ng_template_2_div_1_Template","GuestListingComponent_ng_template_2_div_2_Template","checked_in","ɵɵadvance","ɵɵtextInterpolate1","row_r3","asset_id","GuestListingComponent_ng_template_4_div_3_Template","ɵɵtextInterpolate","asset_name","row_r4","user_email","GuestListingComponent_ng_template_6_div_3_Template","user_name","row_r5","extension_data","id_confirmed","ɵɵelement","ɵɵlistener","GuestListingComponent_ng_template_8_ng_template_2_Template_button_click_2_listener","ɵɵrestoreView","_r6","ɵɵnextContext","row","ɵɵresetView","setExt","GuestListingComponent_ng_template_8_ng_template_2_Template_button_click_4_listener","id_data","url","ɵɵsanitizeUrl","GuestListingComponent_ng_template_8_button_1_Template","GuestListingComponent_ng_template_8_ng_template_2_Template","ɵɵtemplateRefExtractor","id_confirmation_r7","GuestListingComponent_ng_template_10_div_0_Template","row_r8","parking_booking_id","ɵɵclassProp","data_r9","GuestListingComponent_ng_template_14_app_icon_5_Template","GuestListingComponent_ng_template_14_Template_button_click_8_listener","row_r11","_r10","approveVisitor","GuestListingComponent_ng_template_14_Template_button_click_14_listener","declineVisitor","status","menu_r12","row_r13","date","GuestListingComponent_ng_template_16_span_4_Template","tmp_12_0","ɵɵpipeBind1","filters","period","timezone","GuestListingComponent_ng_template_18_button_12_Template_button_click_0_listener","_r15","row_r16","reserveParking","item_r17","name","GuestListingComponent_ng_template_18_button_22_Template_button_click_0_listener","_r18","printQRCode","GuestListingComponent_ng_template_18_button_29_Template_button_click_0_listener","_r19","checkout","checkin","ɵɵelementContainerStart","GuestListingComponent_ng_template_18_ng_container_30_Template_button_click_1_listener","_r20","checkinAllVisitors","GuestListingComponent_ng_template_18_ng_container_30_Template_button_click_7_listener","checkoutAllVisitors","GuestListingComponent_ng_template_18_button_12_Template","GuestListingComponent_ng_template_18_a_15_Template","GuestListingComponent_ng_template_18_Template_button_click_16_listener","_r14","GuestListingComponent_ng_template_18_button_22_Template","GuestListingComponent_ng_template_18_button_29_Template","GuestListingComponent_ng_template_18_ng_container_30_Template","guest_menu_r21","attachment","length","attachment_menu","has_parking","attachments","remote","can_print","linked_event","GuestListingComponent_ng_template_20_Template_button_click_1_listener","row_r23","_r22","editVisitorNotes","GuestListingComponent_ng_template_20_div_4_Template","notes","GuestListingComponent_button_22_Template_button_click_0_listener","_r24","downloadVisitorList","GuestListingComponent","use_tz","_settings","get","bld_tz","_org","building","Intl","DateTimeFormat","resolvedOptions","timeZone","includes","inducted","item","process_state","induction","constructor","_state","_parking","_this","this","guests","filtered_bookings","search","inductions_enabled","downloadVisitorsList","u","setCheckinStateForEvent","id","f","v","_ref","_asyncToGenerator","setCheckinState","catch","e","poll","_x","apply","arguments","_ref2","_","_x2","ngOnInit","_this2","subscription","active_building","subscribe","_ref3","bld","visitor_kiosk_app","metadata","toPromise","details","induction_enabled","induction_details","_x3","_this3","editReservation","undefined","user","email","link_id","external_user","ɵɵdirectiveInject","i1","i2","i3","i4","_2","selectors","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","GuestListingComponent_Template","rf","ctx","GuestListingComponent_ng_template_2_Template","GuestListingComponent_ng_template_4_Template","GuestListingComponent_ng_template_6_Template","GuestListingComponent_ng_template_8_Template","GuestListingComponent_ng_template_10_Template","GuestListingComponent_ng_template_12_Template","GuestListingComponent_ng_template_14_Template","GuestListingComponent_ng_template_16_Template","GuestListingComponent_ng_template_18_Template","GuestListingComponent_ng_template_20_Template","GuestListingComponent_button_22_Template","ɵɵpureFunctionV","_c9","ɵɵpureFunction1","_c0","state_template_r25","_c1","date_template_r31","_c2","person_template_r26","_c3","host_template_r27","_c4","status_template_r30","ɵɵpureFunction2","_c5","induction_template_r29","_c6","parking_template_r28","_c7","notes_template_r33","_c8","action_template_r32","tmp_14_0","MatDialogRef","InviteVisitorModalComponent","_dialog_ref","onDone","close","InviteVisitorModalComponent_Template","InviteVisitorModalComponent_Template_invite_visitor_form_done_1_listener","ActivatedRoute","Router","MatDialog","combineLatest","map","tmp_3_0","level_r1","parent_id","display_name","NewVisitorsComponent_mat_option_15_div_2_Template","use_region","NewVisitorsComponent","_router","_route","_dialog","loading","zones","levels","active_region","pipe","region","levelsForRegion","levelsForBuilding","setDate","setFilters","setSearch","str","setSearchString","updateZones","navigate","relativeTo","queryParams","zone_ids","join","inviteVisitor","open","startPolling","ngOnDestroy","stopPolling","i5","attrs","NewVisitorsComponent_Template","NewVisitorsComponent_Template_searchbar_modelChange_8_listener","$event","NewVisitorsComponent_Template_button_click_9_listener","NewVisitorsComponent_Template_mat_select_ngModelChange_13_listener","NewVisitorsComponent_mat_option_15_Template","NewVisitorsComponent_Template_date_options_dateChange_18_listener","NewVisitorsComponent_mat_progress_bar_21_Template","tmp_0_0","VisitorInductionModalComponent","is_enabled","agree","VisitorInductionModalComponent_Template","ɵɵtwoWayListener","VisitorInductionModalComponent_Template_mat_checkbox_ngModelChange_5_listener","ɵɵtwoWayBindingSet","ɵɵtwoWayProperty","MAT_DIALOG_DATA","updateBooking","notifySuccess","VisitorNotesModalComponent_main_6_Template_textarea_ngModelChange_2_listener","_r1","VisitorNotesModalComponent_footer_7_Template_button_click_1_listener","_r3","save","VisitorNotesModalComponent","_data","disableClose","toJSON","VisitorNotesModalComponent_Template","VisitorNotesModalComponent_button_5_Template","VisitorNotesModalComponent_main_6_Template","VisitorNotesModalComponent_footer_7_Template","VisitorNotesModalComponent_ng_template_8_Template","loading_template_r4","BehaviorSubject","of","catchError","debounceTime","filter","shareReplay","switchMap","take","tap","startOfDay","getUnixTime","addDays","format","downloadFile","jsonToCsv","openConfirmModal","approveBooking","checkinBooking","queryBookings","rejectBooking","updateBookingInductionStatus","_search","getValue","is_induction_enabled","_poll","_filters","_loading","asObservable","bookings","next","Date","start","end","type","period_start","period_end","include_checked_out","limit","guest_list","toLowerCase","out","sort","a","b","now","delay","interval","clearInterval","guest","field","value","title","content","icon","reason","message","error","requestInduction","_this4","ref","data","result","afterClosed","state","_this5","rejected","approved","new_user","event_id","_this6","event_bookings","Promise","all","_this7","list","Name","Email","Host","Status","ɵɵinject","factory","ɵfac","providedIn","first","VisitorsTopbarComponent","active_levels","initialised","queryParamMap","params","has","split","level","levelWithID","buildings","find","zone","lvl","push","VisitorsTopbarComponent_Template","VisitorsTopbarComponent_Template_mat_select_ngModelChange_2_listener","VisitorsTopbarComponent_mat_option_3_Template","VisitorsTopbarComponent_Template_mat_select_ngModelChange_6_listener","VisitorsTopbarComponent_Template_searchbar_modelChange_15_listener","VisitorsTopbarComponent_Template_date_options_dateChange_16_listener","tmp_2_0","VisitorsComponent","VisitorsComponent_Template","VisitorsComponent_mat_progress_bar_4_Template","CommonModule","FormsModule","RouterModule","UIModule","SharedBookingsModule","ROUTES","path","component","VisitorsModule","_3","forChild","declarations","imports","MapLocation","location","position","map_id","x","map_width","y","map_height","variance","last_seen","at_location","coordinates_from"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}