{"version":3,"file":"apps_concierge_src_app_desks_desks_module_ts.js","mappings":"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","names":["i0","_r10","ctx_r9","setOptions","group","members","ctx_r11","tmp_0_0","ctx_r1","options","tmp_1_0","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","$event","_r13","ctx_r12","form","patchValue","date","ctx_r4","value","_c18","use_24hr","get","_r15","ctx_r14","secondary_resource","ctx_r5","_r17","ctx_r16","ctx_r6","_c23","NewDeskFormDetailsComponent_div_0_section_31_p_8_Template","ctx_r7","ctx_r8","duration","NewDeskFormDetailsComponent_div_0_section_1_Template","NewDeskFormDetailsComponent_div_0_div_8_Template","NewDeskFormDetailsComponent_div_0_mat_checkbox_26_Template","NewDeskFormDetailsComponent_div_0_div_27_Template","NewDeskFormDetailsComponent_div_0_div_28_Template","NewDeskFormDetailsComponent_div_0_section_29_Template","NewDeskFormDetailsComponent_div_0_section_31_Template","NewDeskFormDetailsComponent_div_0_section_32_Template","ctx_r0","allow_groups","can_book_for_others","end_date","allow_all_day","all_day","can_book_lockers","tmp_8_0","contains","has_assets","NewDeskFormDetailsComponent","AsyncHandler","building","this","_org","bld","_settings","can_recurr","needs_reason","allow_time_changes","endOfDay","addDays","Date","now","valueOf","constructor","_state","super","find","EventEmitter","buildings","building_list","levels","active_levels","features","force_time","set","hours","minutes","from_id","recurrence_options","o","setFeature","f","e","ngOnChanges","changes","selected_desk","id","resources","t","i1","i2","i3","core","Xpm","selectors","inputs","outputs","decls","vars","consts","i18n_0","$localize","NewDeskFormDetailsComponent_div_0_Template","ctx","_r5","save","DeskBookModalComponent","_booking_form","_dialog_ref","event","loading","BehaviorSubject","_this","_asyncToGenerator","next","booking_type","postForm","catch","_","notifyError","emit","reason","metadata","notifySuccess","close","template","rf","DeskBookModalComponent_main_7_Template","DeskBookModalComponent_footer_9_Template","DeskBookModalComponent_ng_template_11_Template","_r2","level_r7","display_name","name","_r9","newDeskBooking","_r11","ctx_r10","newDesk","loadCSVData","downloadTemplate","manageRestrictions","DesksTopbarComponent","_desks","_route","_router","_dialog","filters","manage","is_map","setDate","setFilters","updateZones","zones","navigate","relativeTo","queryParams","zone_ids","join","queryParamsHandling","ngOnInit","initialised","pipe","first","toPromise","subscription","queryParamMap","subscribe","params","has","split","length","level","levelWithID","parent_id","approve","reject","url","includes","events","_ref","take","filter","zone","lvl","push","_x","apply","arguments","addDesks","Desk","randomInt","open","BookingRulesModalComponent","data","type","_this2","loadTextFileFromInputEvent","m","list","csvToJson","map","console","error","desk","bookable","groups","toJSON","jsonToCsv","downloadFile","_this3","booking","showBooking","approveDesk","_this4","rejectDesk","i4","DesksTopbarComponent_mat_option_5_Template","DesksTopbarComponent_mat_option_6_Template","DesksTopbarComponent_button_8_Template","DesksTopbarComponent_button_9_Template","DesksTopbarComponent_button_10_Template","DesksTopbarComponent_button_11_Template","DesksTopbarComponent_button_12_Template","search","DesksComponent","refresh","NavigationEnd","url_parts","path","parts","ngOnDestroy","attrs","_c0","DesksComponent_mat_progress_bar_13_Template","_c1","_c2","_c3","date_r14","row_r15","time_format","end","DeskBookingsComponent_ng_template_7_ng_container_0_Template","DeskBookingsComponent_ng_template_7_ng_container_1_Template","row_r19","asset_name","asset_id","row_r20","user_email","DeskBookingsComponent_ng_template_11_div_3_Template","user_name","booked_by_name","booked_by_email","row_r23","_r26","row","ctx_r25","ctx_r27","approved","rejected","_r24","row_r29","_r32","ctx_r31","checkin","ctx_r33","data_r28","status","_r30","_r35","ctx_r34","loadMore","DeskBookingsComponent","has_more_pages","bookings","i","rejectAll","rejectAllDesks","nextPage","d","s","runMethod","checkinDesk","checked_in","fn","DeskBookingsComponent_ng_template_5_Template","DeskBookingsComponent_ng_template_7_Template","DeskBookingsComponent_ng_template_9_Template","DeskBookingsComponent_ng_template_11_Template","DeskBookingsComponent_ng_template_13_Template","DeskBookingsComponent_ng_template_15_Template","DeskBookingsComponent_button_17_Template","_r6","_r4","_r0","_r8","DeskMapViewComponent","_desk","_desks_state","map_url","styles","map_styles","positions","map_positions","actions","map_actions","map_features","setHost","u","host","use_api","opts","setLevel","ExploreDesksService","zoom","center","restoredCtx","row_r12","key_r13","key","setRowValue","data_r11","_r20","row_r17","key_r18","ctx_r19","ctx_r3","data_r16","row_r22","ctx_r23","undefined","data_r21","_r29","ctx_r28","print","row_r25","qr_link","qr_code","removeDesk","loadQrCode","DesksManageComponent_ng_template_11_ng_template_10_Template","changed","_r37","ctx_r36","DesksManageComponent","Object","keys","new_desk_count","resp","openConfirmModal","title","content","icon","updated_desks","desks","updateMetadata","description","details","message","unique","clearNewDesks","item","location","origin","encodeURIComponent","generateQRCode","dragging","combineLatest","new_desks","n","concat","window","handleDrag","DesksManageComponent_ng_template_5_Template","DesksManageComponent_ng_template_7_Template","DesksManageComponent_ng_template_9_Template","DesksManageComponent_ng_template_11_Template","DesksManageComponent_div_13_Template","DesksManageComponent_div_14_Template","DesksManageComponent_div_15_Template","level_r4","ROUTES","component","NewDesksComponent","log","afterClosed","NewDesksComponent_mat_option_19_Template","NewDesksComponent_ng_container_23_Template","NewDesksComponent_ng_container_24_Template","NewDesksComponent_mat_progress_bar_27_Template","children","redirectTo","DesksModule","oAB","cJS","CommonModule","FormsModule","MatTabsModule","ReactiveFormsModule","UIModule","SharedExploreModule","SharedBookingsModule","FormFieldsModule","MatRadioModule","MatFormFieldModule","MatCheckboxModule","MatInputModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component.ts","./apps/concierge/src/app/desks/desk-book-modal.component.ts","./apps/concierge/src/app/desks/desks-topbar.component.ts","./apps/concierge/src/app/desks/desks.component.ts","./apps/concierge/src/app/desks/desk-bookings.component.ts","./apps/concierge/src/app/desks/desk-map-view.component.ts","./apps/concierge/src/app/desks/desks-manage.component.ts","./apps/concierge/src/app/desks/new-desks.component.ts","./apps/concierge/src/app/desks/desks.module.ts"],"sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { addDays, endOfDay, set } from 'date-fns';\n\n@Component({\n    selector: 'new-desk-form-details',\n    styles: [],\n    template: `\n        <!-- <div class=\"m-2 bg-yellow-500 p-2 text-center rounded shadow text-sm\">\n            The selected desk hasn't been booked. Please book the desk to be\n            able to check-in.\n        </div> -->\n        <div\n            class=\"p-0 sm:py-4 sm:px-16 divide-y divide-gray-300 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"flex items-center\" *ngIf=\"allow_groups\">\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-primary]=\"!(options | async)?.group\"\n                    [class.opacity-60]=\"(options | async)?.group\"\n                    (click)=\"setOptions({ group: false, members: [] })\"\n                >\n                    <app-icon class=\"text-2xl\">person</app-icon>\n                    <div class=\"\" i18n>Single</div>\n                    <div\n                        class=\"absolute h-2 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-gray-200]=\"(options | async)?.group\"\n                        [class.bg-primary]=\"!(options | async)?.group\"\n                    ></div>\n                </button>\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-primary]=\"(options | async)?.group\"\n                    [class.opacity-60]=\"!(options | async)?.group\"\n                    (click)=\"setOptions({ group: true })\"\n                >\n                    <app-icon class=\"text-2xl\">group_add</app-icon>\n                    <div class=\"\" i18n>Group</div>\n                    <div\n                        class=\"absolute h-2 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-gray-200]=\"!(options | async)?.group\"\n                        [class.bg-primary]=\"(options | async)?.group\"\n                    ></div>\n                </button>\n            </section>\n            <section class=\"p-2\" [class.!border-none]=\"allow_groups\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\" i18n>Details</div>\n                </h3>\n                <div\n                    class=\"w-full\"\n                    *ngIf=\"can_book_for_others && !(options | async)?.group\"\n                >\n                    <label for=\"title\">Host<span>*</span></label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error i18n\n                                >Booking title is required.</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px] relative\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                            [to]=\"end_date\"\n                            i18n\n                        >\n                            Date and time must be in the future\n                        </a-date-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute -top-2 right-0\"\n                            i18n\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n>\n                            End Time<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"(options | async)?.group\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\" i18n>Group Members</div>\n                    <div class=\"flex-1 w-px\"></div>\n                </h3>\n                <div class=\"overflow-hidden\">\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        [ngModel]=\"(options | async)?.members || []\"\n                        (ngModelChange)=\"setOptions({ members: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"form.contains('resources')\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 3 : 2 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n                <p\n                    *ngIf=\"(options | async)?.group\"\n                    class=\"text-center rounded px-2 py-1 bg-yellow-400 shadow text-xs\"\n                >\n                    Desks nearby to the selected desk will booked for group\n                    members\n                </p>\n            </section>\n            <section class=\"p-2\" *ngIf=\"has_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 4 : 3 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n})\nexport class NewDeskFormDetailsComponent extends AsyncHandler {\n    @Input() public form: FormGroup;\n    @Output() public find = new EventEmitter<void>();\n    /** List of available buildings to select */\n    public readonly buildings = this._org.building_list;\n    /** List of available levels for the selected building */\n    public readonly levels = this._org.active_levels;\n    /** List of set options for desk booking */\n    public readonly options = this._state.options;\n    /** List of set options for desk booking */\n    public readonly features = this._state.features;\n\n    public readonly force_time = set(Date.now(), {\n        hours: 6,\n        minutes: 0,\n    }).valueOf();\n\n    /** Selected desk for booking */\n    public selected_desk: Desk;\n    public from_id = false;\n\n    public readonly recurrence_options = ['daily', 'weekly', 'monthly'];\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get can_book_for_others() {\n        return this._settings.get('app.desks.can_book_for_others');\n    }\n\n    public get can_book_lockers() {\n        return this._settings.get('app.desks.can_book_lockers');\n    }\n    public get can_recurr() {\n        return this._settings.get('app.desks.recurrence_allowed');\n    }\n\n    public get allow_groups() {\n        return this._settings.get('app.desks.allow_groups');\n    }\n\n    public get has_assets() {\n        return !!this._settings.get('app.desks.has_assets');\n    }\n\n    public get needs_reason() {\n        return this._settings.get('app.desks.needs_reason') === true;\n    }\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        ).valueOf();\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.form && this.form) {\n            if (this.selected_desk?.id) {\n                this.form.patchValue({ resources: [this.selected_desk] });\n            }\n        }\n    }\n}\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { BookingFormService } from '@placeos/bookings';\nimport { DialogEvent, notifyError, notifySuccess } from '@placeos/common';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'desk-book-modal',\n    template: `\n        <header>\n            <h2>New Desk Booking</h2>\n            <div class=\"flex-1 w-0\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!(loading | async); else load_state\"\n            class=\"overflow-auto p-4 max-h-[65vh]\"\n        >\n            <new-desk-form-details [form]=\"form\"></new-desk-form-details>\n        </main>\n        <footer\n            *ngIf=\"!(loading | async)\"\n            class=\"flex justify-center items-center p-2 border-t border-gray-200\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                loading\n                class=\"h-64 flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Making booking request...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DeskBookModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public readonly loading = new BehaviorSubject(false);\n\n    public get form() {\n        return this._booking_form.form;\n    }\n\n    constructor(\n        private _booking_form: BookingFormService,\n        private _dialog_ref: MatDialogRef<DeskBookModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading.next(true);\n        this.form.patchValue({ booking_type: 'desk' });\n        const event = await this._booking_form.postForm().catch((_) => {\n            notifyError(_);\n            this.loading.next(false);\n            throw _;\n        });\n        this.event.emit({ reason: 'done', metadata: event });\n        notifySuccess('Successfully created booking');\n        this._dialog_ref.close();\n        this.loading.next(false);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { DesksStateService } from './desks-state.service';\nimport { showBooking } from '@placeos/bookings';\nimport { randomInt } from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\n\n@Component({\n    selector: 'desks-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-white dark:bg-neutral-700 h-20 px-4 border-b border-gray-300 dark:border-neutral-500 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"\n                        (filters | async).zones\n                            ? (filters | async).zones[0]\n                            : 'All'\n                    \"\n                    (ngModelChange)=\"updateZones([$event])\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option value=\"All\" *ngIf=\"!is_map\"\n                        >All Levels</mat-option\n                    >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <button\n                btn\n                matRipple\n                *ngIf=\"!manage\"\n                class=\"mx-2 w-36\"\n                matTooltip=\"New Desk Booking\"\n                (click)=\"newDeskBooking()\"\n            >\n                New Booking\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"newDesk()\"\n                matTooltip=\"New Desk\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary relative text-white rounded\"\n                matTooltip=\"Upload Desks CSV\"\n            >\n                <app-icon>cloud_upload</app-icon>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"downloadTemplate()\"\n                matTooltip=\"Download Template Desk CSV\"\n            >\n                <app-icon>download</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"manageRestrictions()\"\n                matTooltip=\"Desk Restrictions\"\n            >\n                <app-icon>lock_open</app-icon>\n            </button>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                [model]=\"(filters | async)?.search\"\n                (modelChange)=\"setFilters({ search: $event })\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class DesksTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly filters = this._desks.filters;\n\n    public manage = false;\n    public is_map = false;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._desks.setFilters({ date });\n    public readonly setFilters = (o) => this._desks.setFilters(o);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n        this._desks.setFilters({ zones });\n    };\n\n    constructor(\n        private _desks: DesksStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        this.updateZones(zones);\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n                if (params.has('date')) {\n                    this.setDate(new Date(+params.get('date')));\n                }\n                if (params.has('approve')) {\n                    this.approve(params.get('approve'));\n                } else if (params.has('reject')) {\n                    this.reject(params.get('reject'));\n                }\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            })\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe(() => {\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                const filters = await this.filters.pipe(take(1)).toPromise();\n                const zones =\n                    filters?.zones?.filter(\n                        (zone) =>\n                            levels.find((lvl) => lvl.id === zone) ||\n                            zone === 'All'\n                    ) || [];\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            })\n        );\n        this.manage = this._router.url?.includes('manage');\n        this.is_map = this._router.url?.includes('map');\n    }\n\n    public newDesk() {\n        this._desks.addDesks([new Desk({ id: `desk-${randomInt(999_999)}` })]);\n        notifySuccess(\n            'New desk added to local data. Make sure to save the desk before using it.'\n        );\n    }\n\n    public newDeskBooking() {\n        this._dialog.open(DeskBookModalComponent, {});\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'desk' },\n        });\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._desks.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        })\n                )\n            );\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    public downloadTemplate() {\n        const desk: any = new Desk({\n            id: 'desk-123',\n            name: 'Test Desk',\n            bookable: true,\n            groups: ['test-desk-group', 'desk-bookers'],\n            features: ['Standing Desk', 'Dual Monitor'],\n        }).toJSON();\n        const data = jsonToCsv([desk]);\n        downloadFile('desk-template.csv', data);\n    }\n\n    /**\n     * Aprrove a desk booking\n     * @param id Booking ID to approve\n     */\n    private async approve(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.approveDesk(booking);\n        }\n    }\n\n    /**\n     * Reject a desk booking\n     * @param id Booking ID to reject\n     */\n    private async reject(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.rejectDesk(booking);\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { DesksStateService } from './desks-state.service';\n\n@Component({\n    selector: '[app-desks]',\n    template: `\n        <sidebar></sidebar>\n        <main\n            class=\"flex-1 relative w-1/2 flex flex-col bg-gray-200 dark:bg-neutral-600 overflow-hidden\"\n        >\n            <desks-topbar class=\"w-full\"></desks-topbar>\n            <div class=\"dark\">\n                <nav mat-tab-nav-bar>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'events']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'events'\"\n                    >\n                        Bookings\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'map']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'map'\"\n                    >\n                        Map View\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'manage']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'manage'\"\n                    >\n                        Manage Desks\n                    </a>\n                </nav>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full relative overflow-auto\">\n                <router-outlet></router-outlet>\n            </div>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DesksComponent extends AsyncHandler implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public path: string;\n\n    constructor(private _state: DesksStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.refresh();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { DesksStateService } from './desks-state.service';\nimport { map } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'desk-bookings',\n    template: `\n        <div class=\"w-full h-4\"></div>\n        <div class=\"overflow-auto h-full w-full px-4 pb-4\">\n            <custom-table\n                class=\"min-w-[76rem] block\"\n                [dataSource]=\"bookings\"\n                [filter]=\"(filters | async)?.search\"\n                [columns]=\"[\n                    'date',\n                    'period',\n                    'user_name',\n                    'group',\n                    'asset_name',\n                    'approver_name',\n                    'status',\n                    'checked_in'\n                ]\"\n                [display_column]=\"[\n                    'Date',\n                    'Period',\n                    'Person',\n                    'Group',\n                    'Desk',\n                    'Approver',\n                    'Status',\n                    'Checked In'\n                ]\"\n                [column_size]=\"[\n                    '4r',\n                    '10r',\n                    'flex',\n                    '10r',\n                    '10r',\n                    '10r',\n                    '8r',\n                    '7r'\n                ]\"\n                [template]=\"{\n                    user_name: user_template,\n                    asset_name: desk_template,\n                    date: date_template,\n                    period: period_template,\n                    status: status_template,\n                    checked_in: option_template,\n                    access: option_template\n                }\"\n                [empty]=\"\n                    (filters | async)?.search\n                        ? 'No matching desk bookings'\n                        : 'There are no desk booking for the currently selected date.'\n                \"\n            ></custom-table>\n            <ng-template #date_template let-date=\"data\">\n                <div class=\"flex flex-col items-center justify-center w-full\">\n                    <div class=\"opacity-60\">{{ date | date: 'MMM' }}</div>\n                    <div class=\"text-xl\">{{ date | date: 'dd' }}</div>\n                </div>\n            </ng-template>\n            <ng-template #period_template let-row=\"row\">\n                <ng-container *ngIf=\"!row.all_day\">\n                    {{ row.date | date: time_format }} &ndash;\n                    {{ row.end | date: time_format }}\n                </ng-container>\n                <ng-container *ngIf=\"row.all_day\">All Day</ng-container>\n            </ng-template>\n            <ng-template #desk_template let-row=\"row\">\n                {{ row.asset_name || row.asset_id }}\n            </ng-template>\n            <ng-template #user_template let-row=\"row\">\n                <div class=\"flex flex-col justify-center\">\n                    <div class=\"select-all\">\n                        {{\n                            row.user_name ||\n                                row.user_email ||\n                                row.booked_by_name ||\n                                row.booked_by_email\n                        }}\n                    </div>\n                    <div\n                        *ngIf=\"row.user_name\"\n                        class=\"text-xs opacity-30 select-all\"\n                    >\n                        {{ row.user_email }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-row=\"row\">\n                <button\n                    matRipple\n                    [matMenuTriggerFor]=\"statusMenu\"\n                    class=\"rounded-3xl px-2 py-1 flex items-center space-x-2 capitalize\"\n                    [class.bg-success]=\"row.approved\"\n                    [class.text-white]=\"row.approved || row.rejected\"\n                    [class.bg-pending]=\"!row.approved && !row.rejected\"\n                    [class.text-black]=\"!row.approved && !row.rejected\"\n                    [class.bg-error]=\"row.rejected\"\n                >\n                    <div class=\"ml-2\">\n                        {{\n                            row.approved\n                                ? 'Approved'\n                                : row.rejected\n                                ? 'Declined'\n                                : 'Tentative'\n                        }}\n                    </div>\n                    <app-icon class=\"text-xl\">arrow_drop_down</app-icon>\n                </button>\n                <mat-menu #statusMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"approve(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\"\n                                >event_available</app-icon\n                            >\n                            <div>Approve Desk</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"reject(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">event_busy</app-icon>\n                            <div>Decline Desk</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #option_template let-data=\"data\" let-row=\"row\">\n                <button\n                    matRipple\n                    class=\"rounded-3xl px-2 py-1 text-white flex items-center space-x-2\"\n                    [matMenuTriggerFor]=\"checkinMenu\"\n                    [class.bg-neutral-600]=\"!data\"\n                    [class.bg-success]=\"data\"\n                    [class.opacity-30]=\"row.status === 'ended'\"\n                    [disabled]=\"row.status === 'ended'\"\n                    [matTooltip]=\"\n                        row.status === 'ended'\n                            ? 'Desk booking has ended'\n                            : 'Check-in or check-out desk'\n                    \"\n                >\n                    <div class=\"ml-2\">{{ data ? 'Yes' : 'No' }}</div>\n                    <app-icon class=\"text-xl\">arrow_drop_down</app-icon>\n                </button>\n                <mat-menu #checkinMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"checkin(row, true)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">check</app-icon>\n                            <div>Check-in</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"checkin(row, false)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>Check-out</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n        </div>\n\n        <button\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 w-32 mx-auto my-4\"\n            *ngIf=\"!loading && (has_more_pages | async)\"\n            (click)=\"loadMore()\"\n        >\n            Load More\n        </button>\n        <button\n            icon\n            matRipple\n            class=\"absolute bottom-2 right-2 bg-white shadow\"\n            [matMenuTriggerFor]=\"menu\"\n        >\n            <app-icon>more_vert</app-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"rejectAll()\">Reject All</button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingsComponent {\n    public loading: string;\n    public readonly filters = this._state.filters;\n    public readonly has_more_pages = this._state.has_more_pages;\n    public readonly bookings = this._state.bookings.pipe(\n        map((i) =>\n            i.map((booking) => ({\n                ...booking,\n                end: booking.date + booking.duration * 60 * 1000,\n            }))\n        )\n    );\n\n    public readonly rejectAll = () => this._state.rejectAllDesks();\n    public readonly loadMore = () => this._state.nextPage();\n\n    public readonly checkin = (d, s?) =>\n        this.runMethod('checkin', async () => {\n            await this._state.checkinDesk(d, s);\n            d.checked_in = s ?? true;\n        });\n    public readonly approve = (d) =>\n        this.runMethod('approve', async () => this._state.approveDesk(d));\n    public readonly reject = (d) =>\n        this.runMethod('reject', async () => this._state.rejectDesk(d));\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: DesksStateService,\n        private _settings: SettingsService\n    ) {}\n\n    private async runMethod(name: string, fn: () => Promise<any>) {\n        this.loading = name;\n        await fn().catch((i) => null);\n        this.loading = '';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ExploreDesksService, ExploreStateService } from '@placeos/explore';\n\nimport { DesksStateService } from './desks-state.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map-view',\n    template: `\n        <div map class=\"h-full w-full relative\">\n            <i-map\n                [src]=\"url | async\"\n                [zoom]=\"(positions | async).zoom\"\n                [center]=\"(positions | async).center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n            <explore-zoom-controls\n                class=\"absolute bottom-2 right-2\"\n            ></explore-zoom-controls>\n            <div class=\"absolute top-0 left-0 p-2 text-black\">\n                <a-user-search-field\n                    [ngModel]=\"null\"\n                    (ngModelChange)=\"setHost($event)\"\n                    class=\"white\"\n                    placeholder=\"User for bookings...\"\n                ></a-user-search-field>\n            </div>\n            <div\n                info\n                class=\"absolute bottom-0 rounded p-2 m-2 bg-white dark:bg-neutral-700 shadow text-center\"\n            >\n                Click/Tap an available desk to book it.\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n\n            [info] {\n                left: 50%;\n                transform: translateX(-50%);\n            }\n        `,\n    ],\n    providers: [ExploreDesksService],\n})\nexport class DeskMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n\n    public readonly setHost = (u) => this._desks_state.setOptions({ host: u });\n\n    constructor(\n        private _state: ExploreStateService,\n        private _desk: DesksStateService,\n        private _desks_state: ExploreDesksService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._desks_state.setOptions({ use_api: true });\n        this.subscription(\n            'date',\n            this._desk.filters.subscribe((opts) => {\n                const level = this._org.levelWithID(opts.zones);\n                if (level) this._state.setLevel(level.id);\n                this._desks_state.setOptions({\n                    date: opts.date || Date.now(),\n                    all_day: true,\n                    zones: opts.zones,\n                });\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    csvToJson,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    randomInt,\n    unique,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { updateMetadata } from '@placeos/ts-client';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { DesksStateService } from './desks-state.service';\n\nconst QR_CODES = {};\n\n@Component({\n    selector: 'desks-manage',\n    template: `\n        <div class=\"w-full h-4\"></div>\n        <div\n            class=\"w-full h-full overflow-auto relative px-4 pb-4\"\n            (dragenter)=\"handleDrag('enter', $event)\"\n            (window:dragend)=\"handleDrag('end', $event)\"\n        >\n            <custom-table\n                class=\"min-w-[72rem] block\"\n                [dataSource]=\"desks\"\n                [filter]=\"(filters | async)?.search\"\n                [columns]=\"[\n                    'map_id',\n                    'bookable',\n                    'name',\n                    'groups',\n                    'features',\n                    'actions'\n                ]\"\n                [display_column]=\"[\n                    'ID',\n                    'Bookable',\n                    'Name',\n                    'Groups',\n                    'Features',\n                    ' '\n                ]\"\n                [column_size]=\"['8r', '6r', '12r', 'flex', '16r', '10r']\"\n                [template]=\"{\n                    map_id: text_edit_template,\n                    name: text_edit_template,\n                    bookable: bookable_edit_template,\n                    groups: list_edit_template,\n                    features: list_edit_template,\n                    actions: action_template\n                }\"\n                [empty]=\"\n                    (filters | async)?.search\n                        ? 'No matching desks'\n                        : 'No desks for selected level'\n                \"\n                [pagination]=\"true\"\n                [page_size]=\"20\"\n            ></custom-table>\n            <ng-template\n                #list_edit_template\n                let-data=\"data\"\n                let-row=\"row\"\n                let-key=\"key\"\n            >\n                <item-list-field\n                    class=\"w-full\"\n                    hide-outline\n                    [placeholder]=\"\n                        key === 'groups' ? 'User Groups' : 'Features'\n                    \"\n                    [name]=\"key\"\n                    [ngModel]=\"\n                        (changes[row.id] ? changes[row.id][key] : null) || data\n                    \"\n                    (ngModelChange)=\"setRowValue(row.id, key, $event)\"\n                >\n                </item-list-field>\n            </ng-template>\n            <ng-template\n                #text_edit_template\n                let-data=\"data\"\n                let-row=\"row\"\n                let-key=\"key\"\n            >\n                <div class=\"w-full h-12\" hide-outline>\n                    <mat-form-field class=\"h-12 w-full\" appearance=\"outline\">\n                        <input\n                            matInput\n                            [placeholder]=\"key\"\n                            [name]=\"key\"\n                            [ngModel]=\"\n                                (changes[row.id]\n                                    ? changes[row.id][key]\n                                    : null) || data\n                            \"\n                            (ngModelChange)=\"setRowValue(row.id, key, $event)\"\n                        />\n                    </mat-form-field>\n                </div>\n            </ng-template>\n            <ng-template #bookable_edit_template let-data=\"data\" let-row=\"row\">\n                <div class=\"flex items-center justify-center pl-4\">\n                    <mat-checkbox\n                        [ngModel]=\"changes[row.id]?.bookable ?? data\"\n                        (ngModelChange)=\"\n                            setRowValue(row.id, 'bookable', $event)\n                        \"\n                    ></mat-checkbox>\n                </div>\n            </ng-template>\n            <ng-template #action_template let-row=\"row\">\n                <div class=\"flex items-center justify-end space-x-2\">\n                    <div\n                        class=\"p-2 text-2xl text-pending\"\n                        [class.opacity-0]=\"!changes[row.id]\"\n                        matTooltip=\"Desk has unsaved changes\"\n                    >\n                        <app-icon>warning</app-icon>\n                    </div>\n                    <button icon (click)=\"removeDesk(row)\">\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [content]=\"qr_menu\"\n                        (click)=\"loadQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                    <ng-template #qr_menu>\n                        <div class=\"bg-white py-2 shadow rounded\">\n                            <a\n                                [href]=\"row.qr_link | safe: 'url'\"\n                                target=\"_blank\"\n                                ref=\"noopener noreferrer\"\n                                class=\"block p-2 mx-4 my-2 rounded-lg border border-gray-300 bg-white\"\n                                printable\n                            >\n                                <img class=\"w-48\" [src]=\"row.qr_code\" />\n                            </a>\n                            <button\n                                btn\n                                matRipple\n                                class=\"w-[calc(100%-2rem)] mx-4 my-2\"\n                                (click)=\"print()\"\n                            >\n                                Print QR Code\n                            </button>\n                        </div>\n                    </ng-template>\n                </div>\n            </ng-template>\n            <div\n                class=\"fixed bottom-2 left-1/2 transform -translate-x-1/2 p-4 rounded bg-white shadow\"\n                *ngIf=\"changed > 0\"\n            >\n                <p class=\"mb-2 text-xl\">\n                    {{ changed }} Desk(s) with unsaved changes\n                </p>\n                <div class=\"flex items-center justify-center\">\n                    <button save btn matRipple (click)=\"save()\">\n                        Save Changes\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2 bg-white bg-opacity-60\"\n                *ngIf=\"loading\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n            <div\n                *ngIf=\"dragging\"\n                class=\"absolute inset-0 bg-black/60 flex items-center justify-center\"\n            >\n                <div class=\"bg-white p-4 rounded shadow\">\n                    <div\n                        class=\"border-4 border-gray-300 border-dashed rounded flex flex-col items-center justify-center w-64 h-64\"\n                    >\n                        Drop CSV file to add desks\n                    </div>\n                </div>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DesksManageComponent extends AsyncHandler {\n    public changes = {};\n    public loading: string;\n    public dragging = false;\n    public readonly filters = this._state.filters;\n    public readonly desks = combineLatest([\n        this._state.desks,\n        this._state.new_desks,\n    ]).pipe(map(([d, n]) => d.concat(n)));\n\n    public get changed() {\n        return (\n            (Object.keys(this.changes).length || 0) +\n            (this._state.new_desk_count || 0)\n        );\n    }\n\n    public setRowValue(id: string, key: string, value: any) {\n        if (!this.changes[id]) this.changes[id] = {};\n        this.changes[id][key] = value;\n    }\n\n    public async removeDesk(desk: Desk) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Remove desk',\n                content: `Remove desk ${desk.name}?`,\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.close();\n        const desks = await this.desks.pipe(take(1)).toPromise();\n        const updated_desks = desks.filter((_) => _.id !== desk.id);\n        const filters = await this.filters.pipe(take(1)).toPromise();\n        const level = this._org.levelWithID(filters.zones);\n        this.loading = 'Removing desk...';\n        await updateMetadata(level.id, {\n            name: 'desks',\n            description: 'desks',\n            details: updated_desks,\n        })\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving desk data. Error: ${e.message || e}`);\n                throw e;\n            });\n        notifySuccess('Successfully updated desks');\n        this._state.setFilters({});\n        this.loading = '';\n        this.changes = {};\n    }\n\n    public async save() {\n        this.loading = 'Saving changes to desks...';\n        const desks = await this.desks.pipe(take(1)).toPromise();\n        const updated_desks = unique(\n            desks.map((_) =>\n                new Desk({ ..._, ...(this.changes[_.id] || {}) }).toJSON()\n            ),\n            'id'\n        );\n        const filters = await this.filters.pipe(take(1)).toPromise();\n        const level = this._org.levelWithID(filters.zones);\n        await updateMetadata(level.id, {\n            name: 'desks',\n            description: 'desks',\n            details: updated_desks,\n        })\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                const msg =\n                    e?.status === 403\n                        ? 'You do not have the required permissions to save desk changes.'\n                        : e.message || e;\n                notifyError(`Error saving desk data. Error: ${msg}`);\n                throw e;\n            });\n        notifySuccess('Successfully updated desks');\n        this._state.clearNewDesks();\n        this.loading = '';\n        this.changes = {};\n    }\n\n    public loadQrCode(item: any) {\n        item.qr_link = `${\n            location.origin\n        }/workplace/#/book/code?asset_id=${encodeURIComponent(item.id)}`;\n        item.qr_code = generateQRCode(\n            `${\n                location.origin\n            }/workplace/#/book/code?asset_id=${encodeURIComponent(item.id)}`\n        );\n    }\n\n    constructor(\n        private _state: DesksStateService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public print() {\n        window.print();\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        this.loading = 'Loading CSV file...';\n        this.dragging = false;\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._state.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        })\n                )\n            );\n        } catch (e) {\n            console.error(e);\n        }\n        this.loading = '';\n    }\n\n    public handleDrag(type: 'enter' | 'leave' | 'end', event: DragEvent) {\n        this.dragging = type === 'enter';\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport {\n    AsyncHandler,\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifySuccess,\n    randomInt,\n} from '@placeos/common';\nimport { DesksStateService } from './desks-state.service';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\n\n@Component({\n    selector: '[app-new-desks]',\n    template: `\n        <app-topbar class=\" print:hidden\"></app-topbar>\n        <div class=\"flex flex-1 h-px print:hidden\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center w-full py-4 px-8 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">Desk Bookings</h2>\n                    <div class=\"flex-1 w-px\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        [model]=\"(filters | async)?.search\"\n                        (modelChange)=\"setFilters({ search: $event })\"\n                    ></searchbar>\n                    <button\n                        btn\n                        matRipple\n                        class=\"space-x-2\"\n                        (click)=\"newDeskBooking()\"\n                    >\n                        <div>New Booking</div>\n                        <app-icon>add</app-icon>\n                    </button>\n                </div>\n                <div class=\"w-full flex items-center px-8 space-x-2\">\n                    <mat-form-field appearance=\"outline\" class=\"h-[3.5rem]\">\n                        <mat-select\n                            multiple\n                            [ngModel]=\"(filters | async)?.zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"border-l h-full !ml-8 !mr-4\"></div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <ng-container *ngIf=\"path === 'events'\">\n                        <date-options\n                            (dateChange)=\"setDate($event)\"\n                        ></date-options>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            matTooltip=\"Refresh List\"\n                            class=\"ml-2 rounded border border-gray-200\"\n                            (click)=\"refresh()\"\n                            [disabled]=\"loading | async\"\n                        >\n                            <app-icon>refresh</app-icon>\n                        </button>\n                    </ng-container>\n                    <ng-container *ngIf=\"path === 'manage'\">\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-primary text-white rounded\"\n                            (click)=\"newDesk()\"\n                            matTooltip=\"New Desk\"\n                        >\n                            <app-icon>add</app-icon>\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-primary relative text-white rounded\"\n                            matTooltip=\"Upload Desks CSV\"\n                        >\n                            <app-icon>cloud_upload</app-icon>\n                            <input\n                                type=\"file\"\n                                class=\"absolute inset-0 opacity-0\"\n                                (change)=\"loadCSVData($event)\"\n                            />\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-primary text-white rounded\"\n                            (click)=\"downloadTemplate()\"\n                            matTooltip=\"Download Template Desk CSV\"\n                        >\n                            <app-icon>download</app-icon>\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-primary text-white rounded\"\n                            (click)=\"manageRestrictions()\"\n                            matTooltip=\"Desk Restrictions\"\n                        >\n                            <app-icon>lock_open</app-icon>\n                        </button>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 h-1/2 w-full relative overflow-auto px-4\">\n                    <router-outlet></router-outlet>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"(loading | async) && path === 'events'\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: #fff;\n            }\n        `,\n    ],\n})\nexport class NewDesksComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public readonly loading = this._state.loading;\n    public path: string;\n    /** List of levels for the active building */\n    public readonly filters = this._state.filters;\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    public readonly setFilters = (o) => this._state.setFilters(o);\n    public readonly refresh = () => this._state.refresh();\n    /** Update active zones for desks */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: DesksStateService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.refresh();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                    console.log('Path:', this.path);\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                const filters = await this.filters.pipe(take(1)).toPromise();\n                const zones =\n                    filters?.zones?.filter(\n                        (zone) =>\n                            levels.find((lvl) => lvl.id === zone) ||\n                            zone === 'All'\n                    ) || [];\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n\n    public newDeskBooking() {\n        const ref = this._dialog.open(DeskBookModalComponent, {});\n        ref.afterClosed().subscribe((_) => {\n            this._state.refresh();\n        });\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'desk' },\n        });\n    }\n\n    public newDesk() {\n        this._state.addDesks([new Desk({ id: `desk-${randomInt(999_999)}` })]);\n        notifySuccess(\n            'New desk added to local data. Make sure to save the desk before using it.'\n        );\n    }\n\n    public downloadTemplate() {\n        const desk: any = new Desk({\n            id: 'desk-123',\n            name: 'Test Desk',\n            bookable: true,\n            groups: ['test-desk-group', 'desk-bookers'],\n            features: ['Standing Desk', 'Dual Monitor'],\n        }).toJSON();\n        const data = jsonToCsv([desk]);\n        downloadFile('desk-template.csv', data);\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._state.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        })\n                )\n            );\n        } catch (e) {\n            console.error(e);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { SharedExploreModule } from '@placeos/explore';\nimport { UIModule } from '../ui/ui.module';\n\nimport { DesksComponent } from './desks.component';\nimport { DeskBookingsComponent } from './desk-bookings.component';\nimport { DesksTopbarComponent } from './desks-topbar.component';\nimport { DeskMapViewComponent } from './desk-map-view.component';\nimport { DesksManageComponent } from './desks-manage.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { NewDeskFormDetailsComponent } from 'apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { NewDesksComponent } from './new-desks.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewDesksComponent,\n        children: [\n            { path: 'events', component: DeskBookingsComponent },\n            { path: 'map', component: DeskMapViewComponent },\n            { path: 'manage', component: DesksManageComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    {\n        path: '',\n        component: DesksComponent,\n        children: [\n            { path: 'events', component: DeskBookingsComponent },\n            { path: 'map', component: DeskMapViewComponent },\n            { path: 'manage', component: DesksManageComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        NewDesksComponent,\n        DesksComponent,\n        DeskBookingsComponent,\n        DesksTopbarComponent,\n        DeskMapViewComponent,\n        DesksManageComponent,\n        NewDeskFormDetailsComponent,\n        DeskBookModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatTabsModule,\n        ReactiveFormsModule,\n        UIModule,\n        SharedExploreModule,\n        SharedBookingsModule,\n        FormFieldsModule,\n        MatRadioModule,\n        MatFormFieldModule,\n        MatCheckboxModule,\n        MatInputModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class DesksModule {}\n"],"x_google_ignoreList":[]}