{"version":3,"file":"apps_concierge_src_app_desks_desks_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/desks/desk-book-modal.component.ts","./apps/concierge/src/app/desks/desk-bookings.component.ts","./apps/concierge/src/app/desks/desk-map-view.component.ts","./apps/concierge/src/app/desks/desk-qr-code-modal.component.ts","./apps/concierge/src/app/desks/desks-manage.component.ts","./apps/concierge/src/app/desks/desks-topbar.component.ts","./apps/concierge/src/app/desks/desks.component.ts","./apps/concierge/src/app/desks/desks.module.ts","./apps/concierge/src/app/desks/new-desks.component.ts","./apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component.ts"],"sourcesContent":["import { Component, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { BookingFormService } from '@placeos/bookings';\nimport { DialogEvent, notifyError, notifySuccess } from '@placeos/common';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'desk-book-modal',\n    template: `\n        <header>\n            <h2>New Desk Booking</h2>\n            <div class=\"flex-1 w-0\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!(loading | async); else load_state\"\n            class=\"overflow-auto p-4 max-h-[65vh]\"\n        >\n            <new-desk-form-details [form]=\"form\"></new-desk-form-details>\n        </main>\n        <footer\n            *ngIf=\"!(loading | async)\"\n            class=\"flex justify-center items-center p-2 border-t border-base-200\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                loading\n                class=\"h-64 flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Making booking request...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DeskBookModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public readonly loading = new BehaviorSubject(false);\n\n    public get form() {\n        return this._booking_form.form;\n    }\n\n    constructor(\n        private _booking_form: BookingFormService,\n        private _dialog_ref: MatDialogRef<DeskBookModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading.next(true);\n        this.form.patchValue({ booking_type: 'desk' });\n        const event = await this._booking_form.postForm().catch((_) => {\n            notifyError(_);\n            this.loading.next(false);\n            throw _;\n        });\n        this.event.emit({ reason: 'done', metadata: event });\n        notifySuccess('Successfully created booking');\n        this._dialog_ref.close();\n        this.loading.next(false);\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { DesksStateService } from './desks-state.service';\nimport { map } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'desk-bookings',\n    template: `\n        <div class=\"overflow-auto h-full w-full pb-4\">\n            <simple-table\n                class=\"min-w-[72rem] block text-sm\"\n                [data]=\"bookings\"\n                [filter]=\"(filters | async)?.search\"\n                [columns]=\"[\n                    {\n                        key: 'date',\n                        name: 'Date',\n                        content: date_template,\n                        size: '4rem',\n                        sortable: false\n                    },\n                    {\n                        key: 'period',\n                        name: 'Period',\n                        content: period_template,\n                        size: '9rem'\n                    },\n                    {\n                        key: 'user_name',\n                        name: 'Person',\n                        content: user_template\n                    },\n                    { key: 'group', name: 'Group', content: group_template },\n                    { key: 'asset_name', name: 'Desk' },\n                    { key: 'approver', name: 'Approver' },\n                    {\n                        key: 'status',\n                        name: 'Status',\n                        content: status_template,\n                        size: '8.5rem',\n                        sortable: false\n                    },\n                    {\n                        key: 'checked_in',\n                        name: 'Checked In',\n                        content: option_template,\n                        size: '7rem',\n                        sortable: false\n                    }\n                ]\"\n                [empty_message]=\"\n                    (filters | async)?.search\n                        ? 'No matching desk bookings'\n                        : 'There are no desk booking for the currently selected date.'\n                \"\n                [sortable]=\"true\"\n            ></simple-table>\n            <ng-template #date_template let-date=\"data\">\n                <div\n                    class=\"flex flex-col items-center justify-center w-full py-2\"\n                >\n                    <div class=\"opacity-60\">{{ date | date: 'MMM' }}</div>\n                    <div class=\"text-xl\">{{ date | date: 'dd' }}</div>\n                </div>\n            </ng-template>\n            <ng-template #group_template let-row=\"row\">\n                <div class=\"p-4 text-[0.625rem] font-mono\">\n                    {{ row.group || row.extension_data?.group }}\n                    <span\n                        class=\"opacity-30\"\n                        *ngIf=\"!(row.group || row.extension_data?.group)\"\n                    >\n                        No Group\n                    </span>\n                </div>\n            </ng-template>\n            <ng-template #period_template let-row=\"row\">\n                <div class=\"p-2\">\n                    <ng-container\n                        *ngIf=\"\n                            row.status !== 'declined' &&\n                            !row.deleted &&\n                            row.status !== 'ended'\n                        \"\n                    >\n                        <div class=\"p-2\">\n                            <ng-container *ngIf=\"!row.all_day\">\n                                {{ row.date | date: time_format }} &ndash;\n                                {{ row.date_end | date: time_format }}\n                            </ng-container>\n                            <ng-container *ngIf=\"row.all_day\"\n                                >All Day</ng-container\n                            >\n                        </div>\n                    </ng-container>\n                    <ng-container\n                        *ngIf=\"\n                            row.status === 'declined' ||\n                            row.deleted ||\n                            row.status === 'ended'\n                        \"\n                    >\n                        <div\n                            class=\"text-xs py-2 px-4 bg-error rounded-3xl text-white\"\n                        >\n                            {{\n                                row.status === 'ended'\n                                    ? 'Manually Ended'\n                                    : 'Expired'\n                            }}\n                        </div>\n                    </ng-container>\n                </div>\n            </ng-template>\n            <ng-template #user_template let-row=\"row\">\n                <div class=\"flex flex-col justify-center px-4 py-2\">\n                    <div class=\"select-all\">\n                        {{\n                            row.user_name ||\n                                row.user_email ||\n                                row.booked_by_name ||\n                                row.booked_by_email\n                        }}\n                    </div>\n                    <div\n                        *ngIf=\"row.user_name\"\n                        class=\"text-xs opacity-30 select-all\"\n                    >\n                        {{ row.user_email }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-row=\"row\">\n                <div class=\"px-2\">\n                    <button\n                        matRipple\n                        class=\"rounded-3xl bg-warning text-warning-content border-none w-[7.5rem] h-10\"\n                        [class.!text-success-content]=\"\n                            row?.status === 'approved'\n                        \"\n                        [class.!bg-success]=\"row?.status === 'approved'\"\n                        [class.!text-error-content]=\"row?.status === 'declined'\"\n                        [class.!bg-error]=\"row?.status === 'declined'\"\n                        [class.!text-neutral-content]=\"row?.status === 'ended'\"\n                        [class.!bg-neutral]=\"row?.status === 'ended'\"\n                        [class.opacity-30]=\"row?.status === 'ended'\"\n                        [matMenuTriggerFor]=\"menu\"\n                        [disabled]=\"row?.status === 'ended'\"\n                    >\n                        <div class=\"flex items-center pl-4 pr-2 space-x-2\">\n                            <div class=\"flex-1 text-left\">\n                                {{\n                                    row?.status === 'ended'\n                                        ? 'Ended'\n                                        : row?.status === 'approved'\n                                        ? 'Approved'\n                                        : row?.status === 'declined'\n                                        ? 'Declined'\n                                        : 'Pending'\n                                }}\n                            </div>\n                            <app-icon class=\"text-2xl\"\n                                >arrow_drop_down</app-icon\n                            >\n                        </div>\n                    </button>\n                </div>\n                <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"approve(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\"\n                                >event_available</app-icon\n                            >\n                            <div class=\"pr-2\">Approve Desk</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"reject(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">event_busy</app-icon>\n                            <div class=\"pr-2\">Decline Desk</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #option_template let-data=\"data\" let-row=\"row\">\n                <div class=\"px-2\">\n                    <button\n                        matRipple\n                        class=\"rounded-3xl bg-warning text-warning-content border-none w-[4.5rem] h-10\"\n                        [matMenuTriggerFor]=\"checkinMenu\"\n                        [class.!bg-neutral]=\"!data\"\n                        [class.!text-neutral-content]=\"!data\"\n                        [class.!bg-success]=\"data\"\n                        [class.!text-success-content]=\"data\"\n                        [class.opacity-30]=\"row.status === 'ended'\"\n                        [disabled]=\"row.status === 'ended'\"\n                        [matTooltip]=\"\n                            row.status === 'ended'\n                                ? 'Desk booking has ended'\n                                : 'Check-in or check-out desk'\n                        \"\n                    >\n                        <div class=\"flex items-center pl-4 pr-2 space-x-2\">\n                            <div class=\"flex-1 text-left\">\n                                {{ data ? 'Yes' : 'No' }}\n                            </div>\n                            <app-icon class=\"text-2xl\">\n                                arrow_drop_down\n                            </app-icon>\n                        </div>\n                    </button>\n                </div>\n                <mat-menu #checkinMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"checkin(row, true)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">check</app-icon>\n                            <div>Check-in</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"checkin(row, false)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>Check-out</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n        </div>\n\n        <button\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 w-32 mx-auto my-4\"\n            *ngIf=\"!loading && (has_more_pages | async)\"\n            (click)=\"loadMore()\"\n        >\n            Load More\n        </button>\n        <button\n            icon\n            matRipple\n            class=\"absolute bottom-2 right-2 bg-base-100 shadow\"\n            [matMenuTriggerFor]=\"menu\"\n        >\n            <app-icon>more_vert</app-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"rejectAll()\">Reject All</button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingsComponent {\n    public loading: string;\n    public readonly filters = this._state.filters;\n    public readonly has_more_pages = this._state.has_more_pages;\n    public readonly bookings = this._state.bookings;\n\n    public readonly rejectAll = () => this._state.rejectAllDesks();\n    public readonly loadMore = () => this._state.nextPage();\n\n    public get columns() {\n        return [\n            'date',\n            'period',\n            'user_name',\n            'group',\n            'asset_name',\n            'approver_name',\n            'status',\n            'checked_in',\n        ];\n    }\n\n    public readonly checkin = (d, s?) =>\n        this.runMethod('checkin', async () => {\n            await this._state.checkinDesk(d, s);\n            d.checked_in = s ?? true;\n        });\n    public readonly approve = (d) =>\n        this.runMethod('approve', async () => this._state.approveDesk(d));\n    public readonly reject = (d) =>\n        this.runMethod('reject', async () => this._state.rejectDesk(d));\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: DesksStateService,\n        private _settings: SettingsService\n    ) {}\n\n    private async runMethod(name: string, fn: () => Promise<any>) {\n        this.loading = name;\n        await fn().catch((i) => null);\n        this.loading = '';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ExploreDesksService, ExploreStateService } from '@placeos/explore';\n\nimport { DesksStateService } from './desks-state.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map-view',\n    template: `\n        <div map class=\"h-full w-full relative\">\n            <interactive-map\n                [src]=\"url | async\"\n                [zoom]=\"(positions | async).zoom\"\n                [center]=\"(positions | async).center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></interactive-map>\n            <explore-zoom-controls\n                class=\"absolute bottom-2 right-2\"\n            ></explore-zoom-controls>\n            <div class=\"absolute top-0 left-0 p-2 text-black\">\n                <a-user-search-field\n                    [ngModel]=\"null\"\n                    (ngModelChange)=\"setHost($event)\"\n                    class=\"white\"\n                    placeholder=\"User for bookings...\"\n                ></a-user-search-field>\n            </div>\n            <div\n                info\n                class=\"absolute bottom-0 rounded p-2 m-2 bg-base-100 shadow text-center\"\n            >\n                Click/Tap an available desk to book it.\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n\n            [info] {\n                left: 50%;\n                transform: translateX(-50%);\n            }\n        `,\n    ],\n    providers: [ExploreDesksService],\n})\nexport class DeskMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n\n    public readonly setHost = (u) => this._desks_state.setOptions({ host: u });\n\n    constructor(\n        private _state: ExploreStateService,\n        private _desk: DesksStateService,\n        private _desks_state: ExploreDesksService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._desks_state.setOptions({ use_api: true });\n        this.subscription(\n            'date',\n            this._desk.filters.subscribe((opts) => {\n                const level = this._org.levelWithID(opts.zones);\n                if (level) this._state.setLevel(level.id);\n                this._desks_state.setOptions({\n                    date: opts.date || Date.now(),\n                    all_day: true,\n                    zones: opts.zones,\n                });\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { DesksStateService } from './desks-state.service';\nimport { SettingsService } from '@placeos/common';\n\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'desk-qr-code-modal',\n    template: `\n        <div class=\"relative w-screen min-h-screen bg-base-100 rounded-none\">\n            <div\n                class=\"sticky top-0 flex items-center justify-between print:hidden p-4 w-full\"\n            >\n                <button btn matRipple (click)=\"print()\">Print QR Codes</button>\n                <button icon matRipple mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-wrap overflow-auto print:h-auto h-[calc(100vh-5rem)]\"\n            >\n                <a\n                    [href]=\"desk.qr_link | safe: 'url'\"\n                    target=\"_blank\"\n                    ref=\"noopener noreferrer\"\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"flex flex-col items-center justify-center w-[28%] landscape:w-[21%] print:landscape:h-[33.33vh] print:h-[25vh] mx-auto\"\n                >\n                    <div\n                        class=\"block p-2 mx-4 my-2 rounded-lg border border-base-200 bg-base-100\"\n                    >\n                        <img class=\"w-48\" [src]=\"desk.qr_code\" />\n                    </div>\n                    <div\n                        class=\"w-[calc(100%-2rem)] text-center my-1 font-mono text-sm bg-base-200 rounded p-1 mx-4\"\n                    >\n                        {{ desk.name || desk.id }}\n                    </div>\n                </a>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskQrCodeModalComponent {\n    public readonly desks = this._state.desks.pipe(\n        map((list) =>\n            list.map((_) => {\n                this.loadQrCode(_);\n                return _;\n            }),\n        ),\n    );\n\n    public get kiosk_url() {\n        const path =\n            this._settings.get('app.workplace_url_path') || '/workplace';\n        return `${window.location.origin}${path}`;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: DesksStateService,\n    ) {}\n\n    public loadQrCode(item: any) {\n        const link = `${\n            this.kiosk_url\n        }/#/book/code?asset_id=${encodeURIComponent(item.id)}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n        return item.qr_code;\n    }\n\n    public print() {\n        window.print();\n    }\n}\n","import { Component, ElementRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    csvToJson,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    randomInt,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { updateMetadata } from '@placeos/ts-client';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\nimport { take } from 'rxjs/operators';\nimport { DesksStateService } from './desks-state.service';\nimport { Clipboard } from '@angular/cdk/clipboard';\n\nconst QR_CODES = {};\n\n@Component({\n    selector: 'desks-manage',\n    template: `\n        <div\n            class=\"overflow-auto h-full w-full pb-4\"\n            (dragenter)=\"handleDrag('enter', $event)\"\n            (window:dragend)=\"handleDrag('end', $event)\"\n        >\n            <simple-table\n                class=\"min-w-[72rem] w-full block text-sm\"\n                [filter]=\"(filters | async)?.search\"\n                [data]=\"desks\"\n                [columns]=\"[\n                    {\n                        key: 'id',\n                        name: 'Desk ID',\n                        content: name_template,\n                        size: '10rem',\n                    },\n                    { key: 'name', name: 'Desk Name' },\n                    {\n                        key: 'groups',\n                        name: 'Groups',\n                        content: item_list_template,\n                    },\n                    {\n                        key: 'features',\n                        name: 'Features',\n                        content: item_list_template,\n                    },\n                    {\n                        key: 'bookable',\n                        name: 'Bookable',\n                        content: bool_template,\n                        size: '5.5rem',\n                    },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        content: action_template,\n                        size: '8.5rem',\n                        sortable: false,\n                    },\n                ]\"\n                [sortable]=\"true\"\n                [empty_message]=\"\n                    (filters | async)?.search\n                        ? 'No matching desks'\n                        : 'No desks for selected level'\n                \"\n            ></simple-table>\n            <ng-template #name_template let-row=\"row\">\n                <button\n                    class=\"flex flex-col px-4 py-2 text-left leading-tight\"\n                    (click)=\"copyToClipboard(row.map_id || row.id)\"\n                >\n                    <div>{{ row.id || row.map_id }}</div>\n                    <div\n                        *ngIf=\"row.id && row.map_id !== row.id\"\n                        class=\"text-[0.625rem] opacity-30 font-mono\"\n                    >\n                        {{ row.map_id }}\n                    </div>\n                </button>\n            </ng-template>\n            <ng-template #item_list_template let-data=\"data\">\n                <div class=\"flex flex-wrap p-2\">\n                    <span\n                        class=\"m-1 py-1 px-2 rounded-2xl text-xs font-mono bg-info text-info-content\"\n                        *ngFor=\"let item of data\"\n                    >\n                        {{ item }}\n                    </span>\n                </div>\n            </ng-template>\n            <ng-template #bool_template let-data=\"data\">\n                <div\n                    [class.bg-error]=\"!data\"\n                    [class.bg-success]=\"data\"\n                    class=\"rounded h-8 w-8 flex items-center justify-center text-2xl text-white mx-auto\"\n                >\n                    <app-icon>{{ data ? 'done' : 'close' }}</app-icon>\n                </div>\n            </ng-template>\n            <ng-template #action_template let-row=\"row\">\n                <div class=\"flex items-center justify-end space-x-2 p-2\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [content]=\"qr_menu\"\n                        matTooltip=\"Print QR Code\"\n                        (click)=\"loadQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Desk\"\n                        (click)=\"editDesk(row)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Desk\"\n                        (click)=\"removeDesk(row)\"\n                    >\n                        <app-icon class=\"text-error\">delete</app-icon>\n                    </button>\n                    <ng-template #qr_menu>\n                        <div class=\"bg-base-100 py-2 shadow rounded\">\n                            <div class=\"\" printable>\n                                <a\n                                    [href]=\"row.qr_link | safe: 'url'\"\n                                    target=\"_blank\"\n                                    ref=\"noopener noreferrer\"\n                                    class=\"block p-2 mx-4 my-2 rounded-lg border border-base-200 bg-base-100\"\n                                >\n                                    <img class=\"w-48\" [src]=\"row.qr_code\" />\n                                </a>\n                                <div\n                                    class=\"w-[calc(100%-2rem)] text-center mt-2 font-mono text-sm bg-base-200 rounded p-2 mx-4\"\n                                >\n                                    {{ row.name || row.id }}\n                                </div>\n                            </div>\n                            <button\n                                btn\n                                matRipple\n                                class=\"w-[calc(100%-2rem)] mx-4 my-2\"\n                                (click)=\"print()\"\n                            >\n                                Print QR Code\n                            </button>\n                        </div>\n                    </ng-template>\n                </div>\n            </ng-template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2 bg-base-100 bg-opacity-60\"\n                *ngIf=\"loading\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n            <div\n                *ngIf=\"dragging\"\n                class=\"absolute inset-0 bg-neutral flex items-center justify-center\"\n            >\n                <div class=\"bg-base-100 p-4 rounded shadow\">\n                    <div\n                        class=\"border-4 border-base-200 border-dashed rounded flex flex-col items-center justify-center w-64 h-64\"\n                    >\n                        Drop CSV file to add desks\n                    </div>\n                </div>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DesksManageComponent extends AsyncHandler {\n    public loading: string;\n    public dragging = false;\n    public readonly filters = this._state.filters;\n    public readonly desks = this._state.desks;\n\n    public readonly editDesk = (desk?: Desk) => this._state.editDesk(desk);\n\n    constructor(\n        private _state: DesksStateService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService,\n        private _element: ElementRef,\n        private _clipboard: Clipboard,\n    ) {\n        super();\n    }\n\n    public readonly copyToClipboard = (id: string) => {\n        const success = this._clipboard.copy(id);\n        if (success) notifySuccess('Desk ID copied to clipboard.');\n    };\n\n    public async removeDesk(desk: Desk) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Remove desk',\n                content: `Remove desk ${desk.name}?`,\n                icon: { content: 'delete' },\n            },\n            this._dialog,\n        );\n        if (resp.reason !== 'done') return;\n        resp.close();\n        const desks = await this.desks.pipe(take(1)).toPromise();\n        const updated_desks = desks.filter((_) => _.id !== desk.id);\n        const filters = await this.filters.pipe(take(1)).toPromise();\n        const level = this._org.levelWithID(filters.zones);\n        this.loading = 'Removing desk...';\n        await updateMetadata(level.id, {\n            name: 'desks',\n            description: 'desks',\n            details: updated_desks,\n        })\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving desk data. Error: ${e.message || e}`);\n                throw e;\n            });\n        notifySuccess('Successfully updated desks');\n        this._state.setFilters({});\n        this.loading = '';\n    }\n\n    public get kiosk_url() {\n        const path =\n            this._settings.get('app.workplace_url_path') || '/workplace';\n        return `${window.location.origin}${path}`;\n    }\n\n    public loadQrCode(item: any) {\n        const link = `${\n            this.kiosk_url\n        }/#/book/code?asset_id=${encodeURIComponent(item.id)}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n    }\n\n    public print() {\n        window.print();\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        this.loading = 'Loading CSV file...';\n        this.dragging = false;\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._state.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        }),\n                ),\n            );\n        } catch (e) {\n            console.error(e);\n        }\n        this.loading = '';\n    }\n\n    public handleDrag(type: 'enter' | 'leave' | 'end', event: DragEvent) {\n        this.dragging = type === 'enter';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifyInfo,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { DesksStateService } from './desks-state.service';\nimport { showBooking } from '@placeos/bookings';\nimport { randomInt } from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\n\n@Component({\n    selector: 'desks-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"\n                        (filters | async).zones\n                            ? (filters | async).zones[0]\n                            : 'All'\n                    \"\n                    (ngModelChange)=\"updateZones([$event])\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option value=\"All\" *ngIf=\"!is_map\">\n                        All Levels\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <button\n                btn\n                matRipple\n                *ngIf=\"!manage\"\n                class=\"mx-2 w-40\"\n                matTooltip=\"New Desk Booking\"\n                (click)=\"newDeskBooking()\"\n            >\n                New Booking\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"newDesk()\"\n                matTooltip=\"New Desk\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary relative text-white rounded\"\n                matTooltip=\"Upload Desks CSV\"\n            >\n                <app-icon>cloud_upload</app-icon>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"downloadTemplate()\"\n                matTooltip=\"Download Template Desk CSV\"\n            >\n                <app-icon>download</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"manageRestrictions()\"\n                matTooltip=\"Desk Restrictions\"\n            >\n                <app-icon>lock_open</app-icon>\n            </button>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                [model]=\"(filters | async)?.search\"\n                (modelChange)=\"setFilters({ search: $event })\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class DesksTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly filters = this._desks.filters;\n\n    public manage = false;\n    public is_map = false;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._desks.setFilters({ date });\n    public readonly setFilters = (o) => this._desks.setFilters(o);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n        this._desks.setFilters({ zones });\n    };\n\n    constructor(\n        private _desks: DesksStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        this.updateZones(zones);\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id,\n                        );\n                    }\n                }\n                if (params.has('date')) {\n                    this.setDate(new Date(+params.get('date')));\n                }\n                if (params.has('approve')) {\n                    this.approve(params.get('approve'));\n                } else if (params.has('reject')) {\n                    this.reject(params.get('reject'));\n                }\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            }),\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe(() => {\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            }),\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                const filters = await this.filters.pipe(take(1)).toPromise();\n                const zones =\n                    filters?.zones?.filter(\n                        (zone) =>\n                            levels.find((lvl) => lvl.id === zone) ||\n                            zone === 'All',\n                    ) || [];\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            }),\n        );\n        this.manage = this._router.url?.includes('manage');\n        this.is_map = this._router.url?.includes('map');\n    }\n\n    public newDesk() {\n        const desk = new Desk({ id: `desk-${randomInt(999_999)}` });\n        desk.staff_name = `[NEW_DESK]`;\n        this._desks.addDesks([desk]);\n        notifyInfo('New desk added to local data.', undefined, () =>\n            notifyInfo('Make sure to save the new desk before using it.'),\n        );\n    }\n\n    public newDeskBooking() {\n        this._dialog.open(DeskBookModalComponent, {});\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'desk' },\n        });\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._desks.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        }),\n                ),\n            );\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    public downloadTemplate() {\n        const desk: any = new Desk({\n            id: 'desk-123',\n            name: 'Test Desk',\n            bookable: true,\n            groups: ['test-desk-group', 'desk-bookers'],\n            features: ['Standing Desk', 'Dual Monitor'],\n        }).toJSON();\n        delete desk.images;\n        const data = jsonToCsv([desk]);\n        downloadFile('desk-template.csv', data);\n    }\n\n    /**\n     * Aprrove a desk booking\n     * @param id Booking ID to approve\n     */\n    private async approve(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.approveDesk(booking);\n        }\n    }\n\n    /**\n     * Reject a desk booking\n     * @param id Booking ID to reject\n     */\n    private async reject(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.rejectDesk(booking);\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { DesksStateService } from './desks-state.service';\n\n@Component({\n    selector: '[app-desks]',\n    template: `\n        <sidebar></sidebar>\n        <main\n            class=\"flex-1 relative w-1/2 flex flex-col bg-base-100 overflow-hidden\"\n        >\n            <desks-topbar class=\"w-full\"></desks-topbar>\n            <div class=\"dark\">\n                <nav mat-tab-nav-bar>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'events']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'events'\"\n                    >\n                        Bookings\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'map']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'map'\"\n                    >\n                        Map View\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'manage']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'manage'\"\n                    >\n                        Manage Desks\n                    </a>\n                </nav>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full relative overflow-auto\">\n                <router-outlet></router-outlet>\n            </div>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DesksComponent extends AsyncHandler implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public path: string;\n\n    constructor(private _state: DesksStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.refresh();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { SharedExploreModule } from '@placeos/explore';\nimport { UIModule } from '../ui/ui.module';\n\nimport { DesksComponent } from './desks.component';\nimport { DeskBookingsComponent } from './desk-bookings.component';\nimport { DesksTopbarComponent } from './desks-topbar.component';\nimport { DeskMapViewComponent } from './desk-map-view.component';\nimport { DesksManageComponent } from './desks-manage.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { NewDeskFormDetailsComponent } from 'apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { NewDesksComponent } from './new-desks.component';\nimport { DeskModalComponent } from './desk-modal.component';\nimport { DeskQrCodeModalComponent } from './desk-qr-code-modal.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewDesksComponent,\n        children: [\n            { path: 'events', component: DeskBookingsComponent },\n            { path: 'map', component: DeskMapViewComponent },\n            { path: 'manage', component: DesksManageComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    {\n        path: '',\n        component: DesksComponent,\n        children: [\n            { path: 'events', component: DeskBookingsComponent },\n            { path: 'map', component: DeskMapViewComponent },\n            { path: 'manage', component: DesksManageComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        NewDesksComponent,\n        DesksComponent,\n        DeskBookingsComponent,\n        DesksTopbarComponent,\n        DeskMapViewComponent,\n        DesksManageComponent,\n        NewDeskFormDetailsComponent,\n        DeskBookModalComponent,\n        DeskModalComponent,\n        DeskQrCodeModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatTabsModule,\n        ReactiveFormsModule,\n        UIModule,\n        SharedExploreModule,\n        SharedBookingsModule,\n        FormFieldsModule,\n        MatRadioModule,\n        MatFormFieldModule,\n        MatCheckboxModule,\n        MatInputModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class DesksModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport {\n    AsyncHandler,\n    SettingsService,\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifyInfo,\n    randomInt,\n} from '@placeos/common';\n\nimport { DesksStateService } from './desks-state.service';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { DeskQrCodeModalComponent } from './desk-qr-code-modal.component';\n\n@Component({\n    selector: '[app-new-desks]',\n    template: `\n        <app-topbar class=\" print:hidden\"></app-topbar>\n        <div class=\"flex flex-1 h-px print:hidden\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center w-full py-4 px-8 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">\n                        {{ manage ? 'Desk Management' : 'Desk Bookings' }}\n                    </h2>\n                    <div class=\"flex-1 w-px\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        [model]=\"(filters | async)?.search\"\n                        (modelChange)=\"setFilters({ search: $event })\"\n                    ></searchbar>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"path !== 'manage'\"\n                        class=\"space-x-2 w-44\"\n                        (click)=\"newDeskBooking()\"\n                    >\n                        <div class=\"pl-2\">New Booking</div>\n                        <app-icon class=\"text-2xl\">add</app-icon>\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"path === 'manage'\"\n                        class=\"space-x-2 w-44\"\n                        (click)=\"editDesk()\"\n                    >\n                        <div class=\"pl-2\">New Desk</div>\n                        <app-icon class=\"text-2xl\">add</app-icon>\n                    </button>\n                </div>\n                <div class=\"w-full flex items-center px-8 space-x-2 mb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript w-60\"\n                        *ngIf=\"!manage\"\n                    >\n                        <mat-select\n                            [ngModel]=\"(filters | async)?.zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                            multiple\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"text-xs opacity-30\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (level.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ level.display_name || level.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript w-60\"\n                        *ngIf=\"manage\"\n                    >\n                        <mat-select\n                            [ngModel]=\"\n                                (filters | async)?.zones?.length\n                                    ? (filters | async)?.zones[0]\n                                    : ''\n                            \"\n                            (ngModelChange)=\"updateZones([$event])\"\n                            placeholder=\"All Levels\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"text-xs opacity-30\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (level.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ level.display_name || level.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"flex-1 w-px\"></div>\n                    <ng-container *ngIf=\"path === 'events'\">\n                        <date-options\n                            (dateChange)=\"setDate($event)\"\n                        ></date-options>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            matTooltip=\"Refresh List\"\n                            class=\"ml-2 rounded border border-base-200\"\n                            (click)=\"refresh()\"\n                            [disabled]=\"loading | async\"\n                        >\n                            <app-icon>refresh</app-icon>\n                        </button>\n                    </ng-container>\n                    <ng-container *ngIf=\"path === 'manage'\">\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                            matTooltip=\"View Desk QR Codes\"\n                            (click)=\"viewQRCodes()\"\n                        >\n                            <app-icon>qr_code</app-icon>\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                            matTooltip=\"Upload Desks CSV\"\n                        >\n                            <app-icon>cloud_upload</app-icon>\n                            <input\n                                type=\"file\"\n                                class=\"absolute inset-0 opacity-0\"\n                                (change)=\"loadCSVData($event)\"\n                            />\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                            (click)=\"downloadTemplate()\"\n                            matTooltip=\"Download Template Desk CSV\"\n                        >\n                            <app-icon>download</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                            (click)=\"manageRestrictions()\"\n                            matTooltip=\"Desk Restrictions\"\n                        >\n                            <app-icon>lock_open</app-icon>\n                        </button>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 h-1/2 px-8 w-full relative overflow-auto\">\n                    <router-outlet></router-outlet>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"(loading | async) && path === 'events'\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewDesksComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public readonly loading = this._state.loading;\n    public path: string;\n    public manage = false;\n    /** List of levels for the active building */\n    public readonly filters = this._state.filters;\n    /** List of levels for the active building */\n    public readonly levels = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n    ]).pipe(\n        map(([bld, region]) =>\n            this._settings.get('app.use_region')\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld),\n        ),\n    );\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    public readonly setFilters = (o) => this._state.setFilters(o);\n    public readonly refresh = () => this._state.refresh();\n    public readonly editDesk = () => this._state.editDesk();\n    /** Update active zones for desks */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: DesksStateService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.refresh();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                    this._checkManage();\n                }\n            }),\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (!zones.length) return;\n                    const level = this._org.levelWithID(zones);\n                    this._state.setFilters({ zones });\n                    if (!level) return;\n                    this._org.building = this._org.buildings.find(\n                        (bld) => bld.id === level.parent_id,\n                    );\n                }\n            }),\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n        this._checkManage();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n\n    public viewQRCodes() {\n        this._dialog.open(DeskQrCodeModalComponent);\n    }\n\n    public newDeskBooking() {\n        const ref = this._dialog.open(DeskBookModalComponent, {});\n        ref.afterClosed().subscribe((_) => {\n            this._state.refresh();\n        });\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'desk' },\n        });\n    }\n\n    public downloadTemplate() {\n        const desk: any = new Desk({\n            id: 'desk-123',\n            name: 'Test Desk',\n            bookable: true,\n            groups: ['test-desk-group', 'desk-bookers'],\n            features: ['Standing Desk', 'Dual Monitor'],\n        }).toJSON();\n        delete desk.images;\n        const data = jsonToCsv([desk]);\n        downloadFile('desk-template.csv', data);\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._state.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        }),\n                ),\n            );\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    private _checkManage() {\n        this.manage = this.path.includes('manage');\n        if (this.manage) {\n            this.subscription(\n                'zone-changes',\n                this._org.active_levels.subscribe(async (lvls) => {\n                    if (!lvls.length) return;\n                    const { zones } = await this._state.filters\n                        .pipe(take(1))\n                        .toPromise();\n                    const levels_in_zones =\n                        zones?.length &&\n                        zones.some((z) => lvls.find((lvl) => lvl.id === z));\n                    if (!levels_in_zones) this.updateZones([lvls[0].id]);\n                }),\n            );\n        } else this.unsub('zone-changes');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n    BookingFormService,\n    DAYS_OF_WEEK_INDEX,\n    RecurrenceDays,\n} from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { RecurrenceDetails } from '@placeos/events';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { addDays, endOfDay, getUnixTime, set } from 'date-fns';\n\n@Component({\n    selector: 'new-desk-form-details',\n    styles: [],\n    template: `\n        <!-- <div class=\"m-2 bg-warning p-2 text-center rounded shadow text-sm\">\n            The selected desk hasn't been booked. Please book the desk to be\n            able to check-in.\n        </div> -->\n        <div\n            class=\"p-0 sm:py-4 sm:px-16 divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"flex items-center\" *ngIf=\"allow_groups\">\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-secondary]=\"!(options | async)?.group\"\n                    (click)=\"setOptions({ group: false, members: [] })\"\n                >\n                    <app-icon class=\"text-2xl\">person</app-icon>\n                    <div class=\"\" i18n>Single</div>\n                    <div\n                        class=\"absolute h-1 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-base-200]=\"(options | async)?.group\"\n                        [class.bg-secondary]=\"!(options | async)?.group\"\n                    ></div>\n                </button>\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-secondary]=\"(options | async)?.group\"\n                    (click)=\"setOptions({ group: true })\"\n                >\n                    <app-icon class=\"text-2xl\">group_add</app-icon>\n                    <div class=\"\" i18n>Group</div>\n                    <div\n                        class=\"absolute h-1 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-base-200]=\"!(options | async)?.group\"\n                        [class.bg-secondary]=\"(options | async)?.group\"\n                    ></div>\n                </button>\n            </section>\n            <section class=\"p-2\" [class.!border-none]=\"allow_groups\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\" i18n>Details</div>\n                </h3>\n                <div\n                    class=\"w-full\"\n                    *ngIf=\"can_book_for_others && !(options | async)?.group\"\n                >\n                    <label for=\"title\">Host<span>*</span></label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error i18n\n                                >Booking title is required.</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px] relative\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                            [to]=\"end_date\"\n                            [timezone]=\"timezone\"\n                            i18n\n                        >\n                            Date and time must be in the future\n                        </a-date-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute -top-2 right-0\"\n                            i18n\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                            [timezone]=\"timezone\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n>\n                            End Time<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                            [timezone]=\"timezone\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <div *ngIf=\"can_recurr\" class=\"flex flex-col\">\n                    <label for=\"recurrence\">\n                        {{ 'FORM.RECURRENCE' | translate }}<span>*</span>\n                    </label>\n                    <recurrence-field\n                        name=\"recurrence\"\n                        [date]=\"form.getRawValue().date\"\n                        [(ngModel)]=\"recurrence\"\n                        (ngModelChange)=\"onRecurrenceChange($event)\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></recurrence-field>\n                    <mat-checkbox\n                        *ngIf=\"form.value.id\"\n                        formControlName=\"update_master\"\n                    >\n                        Update all future events\n                    </mat-checkbox>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : '',\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"(options | async)?.group\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\" i18n>Group Members</div>\n                    <div class=\"flex-1 w-px\"></div>\n                </h3>\n                <div class=\"overflow-hidden\">\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        [ngModel]=\"(options | async)?.members || []\"\n                        (ngModelChange)=\"setOptions({ members: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"form.contains('resources')\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 3 : 2 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n                <p\n                    *ngIf=\"(options | async)?.group\"\n                    class=\"text-center rounded px-2 py-1 bg-warning shadow text-xs\"\n                >\n                    Desks nearby to the selected desk will booked for group\n                    members\n                </p>\n            </section>\n            <section class=\"p-2\" *ngIf=\"has_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 4 : 3 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [options]=\"{\n                        date: form.getRawValue().date,\n                        duration: form.value.duration,\n                        all_day: form.value.all_day,\n                    }\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n})\nexport class NewDeskFormDetailsComponent extends AsyncHandler {\n    @Input() public form: FormGroup;\n    @Output() public find = new EventEmitter<void>();\n    /** List of available buildings to select */\n    public readonly buildings = this._org.building_list;\n    /** List of available levels for the selected building */\n    public readonly levels = this._org.active_levels;\n    /** List of set options for desk booking */\n    public readonly options = this._state.options;\n    /** List of set options for desk booking */\n    public readonly features = this._state.features;\n\n    public readonly force_time = set(Date.now(), {\n        hours: 6,\n        minutes: 0,\n    }).valueOf();\n\n    /** Selected desk for booking */\n    public selected_desk: Desk;\n    public from_id = false;\n    public recurrence: RecurrenceDetails;\n\n    public readonly recurrence_options = ['daily', 'weekly', 'monthly'];\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get can_book_for_others() {\n        return this._settings.get('app.desks.can_book_for_others');\n    }\n\n    public get can_book_lockers() {\n        return this._settings.get('app.desks.can_book_lockers');\n    }\n    public get can_recurr() {\n        return this._settings.get('app.desks.recurrence_allowed');\n    }\n\n    public get allow_groups() {\n        return this._settings.get('app.desks.allow_groups');\n    }\n\n    public get has_assets() {\n        return !!this._settings.get('app.desks.has_assets');\n    }\n\n    public get needs_reason() {\n        return this._settings.get('app.desks.needs_reason') === true;\n    }\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get timezone() {\n        return this._settings.get('app.desks.use_building_timezone')\n            ? this._org.building.timezone\n            : '';\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90,\n            ),\n        ).valueOf();\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.form && this.form) {\n            if (this.selected_desk?.id) {\n                this.form.patchValue({ resources: [this.selected_desk] });\n            }\n            this.initialiseRecurrence();\n        }\n    }\n\n    public initialiseRecurrence() {\n        const {\n            recurrence_type,\n            recurrence_days,\n            recurrence_interval,\n            recurrence_end,\n            date,\n        } = this.form.value;\n        if (!this.can_recurr) return;\n        this.recurrence = {\n            pattern: recurrence_type,\n            days_of_week: new Array(7)\n                .fill(0)\n                .filter((_, i) => recurrence_days & DAYS_OF_WEEK_INDEX[i]),\n            interval: recurrence_interval,\n            start: date,\n            end: recurrence_end,\n        };\n    }\n\n    public onRecurrenceChange(recurrence: RecurrenceDetails) {\n        if (!recurrence.pattern) {\n            this.form.patchValue({ recurrence_type: 'none' });\n        } else if (recurrence.pattern === 'daily') {\n            this.form.patchValue({\n                recurrence_type: 'daily',\n                recurrence_days:\n                    RecurrenceDays.MONDAY |\n                    RecurrenceDays.TUESDAY |\n                    RecurrenceDays.WEDNESDAY |\n                    RecurrenceDays.THURSDAY |\n                    RecurrenceDays.FRIDAY,\n                recurrence_interval: recurrence.interval,\n                recurrence_end: getUnixTime(recurrence.end),\n            });\n        } else if (recurrence.pattern === 'weekly') {\n            this.form.patchValue({\n                recurrence_type: 'weekly',\n                recurrence_days: recurrence.days_of_week.reduce(\n                    (d, i) => d | DAYS_OF_WEEK_INDEX[i],\n                    0,\n                ),\n                recurrence_interval: recurrence.interval,\n                recurrence_end: getUnixTime(recurrence.end),\n            });\n        } else if (recurrence.pattern === 'monthly') {\n            const date = new Date(this.form.value.date).getDate();\n            let instance = Math.floor(date / 7) + (date % 7 ? 1 : 0);\n            if ((instance === 4 && date >= 25) || instance === 5) instance = -1;\n            this.form.patchValue({\n                recurrence_type: 'monthly',\n                recurrence_interval: recurrence.interval,\n                recurrence_nth_of_month: instance,\n                recurrence_end: getUnixTime(recurrence.end),\n            });\n        } else {\n            this.form.patchValue({ recurrence_type: 'none' });\n        }\n    }\n}\n"],"names":["EventEmitter","MatDialogRef","BookingFormService","notifyError","notifySuccess","BehaviorSubject","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","form","ɵɵlistener","DeskBookModalComponent_footer_9_Template_button_click_1_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","save","ɵɵtext","DeskBookModalComponent","_booking_form","constructor","_dialog_ref","event","loading","_this","_asyncToGenerator","next","patchValue","booking_type","postForm","catch","_","emit","reason","metadata","close","ɵɵdirectiveInject","i1","i2","_2","selectors","outputs","decls","vars","consts","template","DeskBookModalComponent_Template","rf","ctx","ɵɵtemplate","DeskBookModalComponent_main_7_Template","DeskBookModalComponent_footer_9_Template","DeskBookModalComponent_ng_template_11_Template","ɵɵtemplateRefExtractor","ɵɵpipeBind1","load_state_r3","DesksStateService","SettingsService","ɵɵtextInterpolate","ɵɵpipeBind2","date_r2","DeskBookingsComponent_ng_template_6_span_2_Template","ɵɵtextInterpolate1","row_r3","group","extension_data","ɵɵelementContainerStart","ɵɵtextInterpolate2","row_r4","date","ctx_r4","time_format","date_end","DeskBookingsComponent_ng_template_8_ng_container_1_ng_container_2_Template","DeskBookingsComponent_ng_template_8_ng_container_1_ng_container_3_Template","all_day","status","DeskBookingsComponent_ng_template_8_ng_container_1_Template","DeskBookingsComponent_ng_template_8_ng_container_2_Template","deleted","row_r6","user_email","DeskBookingsComponent_ng_template_10_div_3_Template","user_name","booked_by_name","booked_by_email","DeskBookingsComponent_ng_template_12_Template_button_click_9_listener","row_r8","_r7","row","approve","DeskBookingsComponent_ng_template_12_Template_button_click_15_listener","reject","ɵɵclassProp","menu_r9","DeskBookingsComponent_ng_template_14_Template_button_click_9_listener","row_r11","_r10","checkin","DeskBookingsComponent_ng_template_14_Template_button_click_15_listener","data_r12","checkinMenu_r13","DeskBookingsComponent_button_16_Template_button_click_0_listener","_r14","loadMore","DeskBookingsComponent","columns","_settings","_state","filters","has_more_pages","bookings","rejectAll","rejectAllDesks","nextPage","d","s","runMethod","checkinDesk","checked_in","approveDesk","rejectDesk","name","fn","_this2","i","DeskBookingsComponent_Template","DeskBookingsComponent_ng_template_4_Template","DeskBookingsComponent_ng_template_6_Template","DeskBookingsComponent_ng_template_8_Template","DeskBookingsComponent_ng_template_10_Template","DeskBookingsComponent_ng_template_12_Template","DeskBookingsComponent_ng_template_14_Template","DeskBookingsComponent_button_16_Template","DeskBookingsComponent_Template_button_click_23_listener","_r1","tmp_8_0","search","ɵɵpureFunction8","_c8","ɵɵpureFunction1","_c0","date_template_r15","_c1","period_template_r17","_c2","user_template_r18","_c3","group_template_r16","ɵɵpureFunction0","_c4","_c5","_c6","status_template_r19","_c7","option_template_r20","tmp_10_0","menu_r21","ExploreDesksService","ExploreStateService","AsyncHandler","OrganisationService","DeskMapViewComponent","_desk","_desks_state","_org","url","map_url","styles","map_styles","positions","map_positions","actions","map_actions","features","map_features","setHost","u","setOptions","host","ngOnInit","use_api","subscription","subscribe","opts","level","levelWithID","zones","setLevel","id","Date","now","i3","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","DeskMapViewComponent_Template","DeskMapViewComponent_Template_a_user_search_field_ngModelChange_10_listener","$event","zoom","center","generateQRCode","map","desk_r1","qr_link","ɵɵsanitizeUrl","qr_code","DeskQrCodeModalComponent","kiosk_url","path","get","window","location","origin","desks","pipe","list","loadQrCode","item","link","encodeURIComponent","print","DeskQrCodeModalComponent_Template","DeskQrCodeModalComponent_Template_button_click_2_listener","DeskQrCodeModalComponent_a_8_Template","ElementRef","MatDialog","csvToJson","loadTextFileFromInputEvent","openConfirmModal","randomInt","Desk","updateMetadata","take","Clipboard","map_id","DesksManageComponent_ng_template_4_Template_button_click_0_listener","ctx_r3","copyToClipboard","DesksManageComponent_ng_template_4_div_3_Template","item_r5","DesksManageComponent_ng_template_6_span_1_Template","data_r6","data_r7","DesksManageComponent_ng_template_10_ng_template_10_Template_button_click_7_listener","row_r9","DesksManageComponent_ng_template_10_Template_button_click_1_listener","_r8","DesksManageComponent_ng_template_10_Template_button_click_4_listener","editDesk","DesksManageComponent_ng_template_10_Template_button_click_7_listener","removeDesk","DesksManageComponent_ng_template_10_ng_template_10_Template","qr_menu_r11","DesksManageComponent_div_13_Template_input_change_4_listener","_r12","loadCSVData","QR_CODES","DesksManageComponent","_dialog","_element","_clipboard","dragging","desk","success","copy","resp","title","content","icon","toPromise","updated_desks","filter","description","details","e","message","setFilters","data","m","addDesks","console","error","handleDrag","type","i4","i5","DesksManageComponent_Template","DesksManageComponent_Template_div_dragenter_0_listener","DesksManageComponent_Template_div_dragend_0_listener","ɵɵresolveWindow","DesksManageComponent_ng_template_4_Template","DesksManageComponent_ng_template_6_Template","DesksManageComponent_ng_template_8_Template","DesksManageComponent_ng_template_10_Template","DesksManageComponent_div_12_Template","DesksManageComponent_div_13_Template","tmp_4_0","ɵɵpureFunction6","name_template_r13","item_list_template_r14","bool_template_r15","action_template_r16","ActivatedRoute","Router","first","downloadFile","jsonToCsv","notifyInfo","showBooking","BookingRulesModalComponent","level_r1","display_name","DesksTopbarComponent_button_8_Template_button_click_0_listener","ctx_r2","newDeskBooking","DesksTopbarComponent_button_9_Template_button_click_0_listener","_r4","newDesk","DesksTopbarComponent_button_10_Template_input_change_3_listener","_r5","DesksTopbarComponent_button_11_Template_button_click_0_listener","_r6","downloadTemplate","DesksTopbarComponent_button_12_Template_button_click_0_listener","manageRestrictions","DesksTopbarComponent","_desks","_route","_router","levels","active_levels","manage","is_map","setDate","o","updateZones","navigate","relativeTo","queryParams","zone_ids","join","queryParamsHandling","initialised","queryParamMap","params","has","split","length","building","buildings","find","bld","parent_id","includes","events","_ref","zone","lvl","push","_x","apply","arguments","staff_name","undefined","open","bookable","groups","toJSON","images","_this3","booking","_this4","DesksTopbarComponent_Template","DesksTopbarComponent_Template_mat_select_ngModelChange_2_listener","DesksTopbarComponent_mat_option_5_Template","DesksTopbarComponent_mat_option_6_Template","DesksTopbarComponent_button_8_Template","DesksTopbarComponent_button_9_Template","DesksTopbarComponent_button_10_Template","DesksTopbarComponent_button_11_Template","DesksTopbarComponent_button_12_Template","DesksTopbarComponent_Template_searchbar_modelChange_14_listener","DesksTopbarComponent_Template_date_options_dateChange_16_listener","NavigationEnd","DesksComponent","refresh","url_parts","parts","ngOnDestroy","attrs","DesksComponent_Template","DesksComponent_mat_progress_bar_13_Template","CommonModule","FormsModule","ReactiveFormsModule","RouterModule","MatRadioModule","MatTabsModule","SharedExploreModule","UIModule","MatFormFieldModule","MatCheckboxModule","MatInputModule","NewDeskFormDetailsComponent","SharedBookingsModule","FormFieldsModule","NewDesksComponent","DeskModalComponent","ROUTES","component","children","redirectTo","DesksModule","_3","forChild","declarations","imports","combineLatest","NewDesksComponent_button_10_Template_button_click_0_listener","ctx_r1","NewDesksComponent_button_11_Template_button_click_0_listener","_r3","level_r5","NewDesksComponent_mat_form_field_13_mat_option_3_div_2_Template","use_region","NewDesksComponent_mat_form_field_13_Template_mat_select_ngModelChange_1_listener","NewDesksComponent_mat_form_field_13_mat_option_3_Template","tmp_1_0","level_r7","NewDesksComponent_mat_form_field_14_mat_option_4_div_2_Template","NewDesksComponent_mat_form_field_14_Template_mat_select_ngModelChange_1_listener","NewDesksComponent_mat_form_field_14_mat_option_4_Template","NewDesksComponent_ng_container_16_Template_date_options_dateChange_1_listener","NewDesksComponent_ng_container_16_Template_button_click_2_listener","NewDesksComponent_ng_container_17_Template_button_click_1_listener","_r9","viewQRCodes","NewDesksComponent_ng_container_17_Template_input_change_7_listener","NewDesksComponent_ng_container_17_Template_button_click_8_listener","NewDesksComponent_ng_container_17_Template_button_click_11_listener","active_building","active_region","region","levelsForRegion","levelsForBuilding","_checkManage","ref","afterClosed","lvls","levels_in_zones","some","z","unsub","NewDesksComponent_Template","NewDesksComponent_Template_searchbar_modelChange_8_listener","NewDesksComponent_button_10_Template","NewDesksComponent_button_11_Template","NewDesksComponent_mat_form_field_13_Template","NewDesksComponent_mat_form_field_14_Template","NewDesksComponent_ng_container_16_Template","NewDesksComponent_ng_container_17_Template","NewDesksComponent_mat_progress_bar_20_Template","SimpleChanges","FormGroup","DAYS_OF_WEEK_INDEX","RecurrenceDays","addDays","endOfDay","getUnixTime","set","NewDeskFormDetailsComponent_div_0_section_1_Template_button_click_1_listener","members","ɵɵi18n","NewDeskFormDetailsComponent_div_0_section_1_Template_button_click_10_listener","tmp_2_0","options","tmp_3_0","tmp_5_0","tmp_6_0","tmp_7_0","ɵɵi18nStart","ɵɵi18nEnd","NewDeskFormDetailsComponent_div_0_div_27_Template_a_time_field_ngModelChange_5_listener","value","use_24hr","timezone","ɵɵtwoWayListener","NewDeskFormDetailsComponent_div_0_div_28_Template_recurrence_field_ngModelChange_6_listener","ɵɵtwoWayBindingSet","recurrence","onRecurrenceChange","NewDeskFormDetailsComponent_div_0_div_28_mat_checkbox_7_Template","getRawValue","ɵɵtwoWayProperty","NewDeskFormDetailsComponent_div_0_div_29_Template_mat_checkbox_ngModelChange_2_listener","secondary_resource","NewDeskFormDetailsComponent_div_0_section_30_Template_a_user_list_field_ngModelChange_8_listener","NewDeskFormDetailsComponent_div_0_section_32_p_8_Template","ɵɵpureFunction3","duration","NewDeskFormDetailsComponent_div_0_section_1_Template","NewDeskFormDetailsComponent_div_0_div_8_Template","NewDeskFormDetailsComponent_div_0_mat_checkbox_26_Template","NewDeskFormDetailsComponent_div_0_div_27_Template","NewDeskFormDetailsComponent_div_0_div_28_Template","NewDeskFormDetailsComponent_div_0_div_29_Template","NewDeskFormDetailsComponent_div_0_section_30_Template","NewDeskFormDetailsComponent_div_0_section_32_Template","NewDeskFormDetailsComponent_div_0_section_33_Template","allow_groups","can_book_for_others","end_date","allow_all_day","can_recurr","can_book_lockers","tmp_11_0","contains","has_assets","needs_reason","allow_time_changes","valueOf","building_list","force_time","hours","minutes","from_id","recurrence_options","setFeature","f","ngOnChanges","changes","selected_desk","resources","initialiseRecurrence","recurrence_type","recurrence_days","recurrence_interval","recurrence_end","pattern","days_of_week","Array","fill","interval","start","end","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","reduce","getDate","instance","Math","floor","recurrence_nth_of_month","inputs","ɵɵNgOnChangesFeature","i18n_0","ngI18nClosureMode","$localize","NewDeskFormDetailsComponent_div_0_Template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}