{"version":3,"file":"apps_concierge_src_app_desks_desks_module_ts.js","mappings":"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","names":["i0","_r1","ctx_r1","setOptions","group","members","tmp_2_0","options","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","$event","_r3","form","patchValue","date","value","_c0","use_24hr","timezone","get","_r4","secondary_resource","_r5","_c1","NewDeskFormDetailsComponent_div_0_section_31_p_8_Template","_c2","getRawValue","duration","all_day","NewDeskFormDetailsComponent_div_0_section_1_Template","NewDeskFormDetailsComponent_div_0_div_8_Template","NewDeskFormDetailsComponent_div_0_mat_checkbox_26_Template","NewDeskFormDetailsComponent_div_0_div_27_Template","NewDeskFormDetailsComponent_div_0_div_28_Template","NewDeskFormDetailsComponent_div_0_section_29_Template","NewDeskFormDetailsComponent_div_0_section_31_Template","NewDeskFormDetailsComponent_div_0_section_32_Template","allow_groups","can_book_for_others","end_date","allow_all_day","can_book_lockers","tmp_10_0","contains","has_assets","NewDeskFormDetailsComponent","AsyncHandler","building","this","_org","bld","_settings","can_recurr","needs_reason","allow_time_changes","endOfDay","addDays","Date","now","valueOf","constructor","_state","super","find","EventEmitter","buildings","building_list","levels","active_levels","features","force_time","set","hours","minutes","from_id","recurrence_options","o","setFeature","f","e","ngOnChanges","changes","selected_desk","id","resources","static","__ngFactoryType__","i1","i2","i3","core","VBU","selectors","inputs","outputs","decls","vars","consts","i18n_0","$localize","NewDeskFormDetailsComponent_div_0_Template","ctx","ctx_r0","_r2","save","DeskBookModalComponent","_booking_form","_dialog_ref","event","loading","BehaviorSubject","_this","_asyncToGenerator","next","booking_type","postForm","catch","_","notifyError","emit","reason","metadata","notifySuccess","close","template","rf","DeskBookModalComponent_main_7_Template","DeskBookModalComponent_footer_9_Template","DeskBookModalComponent_ng_template_11_Template","load_state_r3","level_r1","display_name","name","ctx_r2","newDeskBooking","newDesk","loadCSVData","_r6","downloadTemplate","_r7","manageRestrictions","DesksTopbarComponent","_desks","_route","_router","_dialog","filters","manage","is_map","setDate","setFilters","updateZones","zones","navigate","relativeTo","queryParams","zone_ids","join","queryParamsHandling","ngOnInit","initialised","pipe","first","toPromise","subscription","queryParamMap","subscribe","params","has","split","length","level","levelWithID","parent_id","approve","reject","url","includes","events","_ref","take","filter","zone","lvl","push","_x","apply","arguments","desk","Desk","randomInt","staff_name","addDesks","notifyInfo","undefined","open","BookingRulesModalComponent","data","type","_this2","loadTextFileFromInputEvent","m","list","csvToJson","map","console","error","bookable","groups","toJSON","images","jsonToCsv","downloadFile","_this3","booking","showBooking","approveDesk","_this4","rejectDesk","i4","DesksTopbarComponent_mat_option_5_Template","DesksTopbarComponent_mat_option_6_Template","DesksTopbarComponent_button_8_Template","DesksTopbarComponent_button_9_Template","DesksTopbarComponent_button_10_Template","DesksTopbarComponent_button_11_Template","DesksTopbarComponent_button_12_Template","search","tmp_8_0","DesksComponent","refresh","NavigationEnd","url_parts","path","parts","ngOnDestroy","attrs","DesksComponent_mat_progress_bar_13_Template","_c3","date_r2","DeskBookingsComponent_ng_template_6_span_2_Template","row_r3","extension_data","row_r4","ctx_r4","time_format","date_end","DeskBookingsComponent_ng_template_8_ng_container_1_ng_container_2_Template","DeskBookingsComponent_ng_template_8_ng_container_1_ng_container_3_Template","status","DeskBookingsComponent_ng_template_8_ng_container_1_Template","DeskBookingsComponent_ng_template_8_ng_container_2_Template","deleted","row_r6","user_email","DeskBookingsComponent_ng_template_10_div_3_Template","user_name","booked_by_name","booked_by_email","row_r8","row","menu_r9","row_r11","_r10","checkin","data_r12","checkinMenu_r13","_r14","loadMore","DeskBookingsComponent","columns","has_more_pages","bookings","rejectAll","rejectAllDesks","nextPage","d","s","runMethod","checkinDesk","checked_in","fn","i","DeskBookingsComponent_ng_template_4_Template","DeskBookingsComponent_ng_template_6_Template","DeskBookingsComponent_ng_template_8_Template","DeskBookingsComponent_ng_template_10_Template","DeskBookingsComponent_ng_template_12_Template","DeskBookingsComponent_ng_template_14_Template","DeskBookingsComponent_button_16_Template","_c8","date_template_r15","period_template_r17","user_template_r18","group_template_r16","_c4","_c5","_c6","status_template_r19","_c7","option_template_r20","menu_r21","DeskMapViewComponent","_desk","_desks_state","map_url","styles","map_styles","positions","map_positions","actions","map_actions","map_features","setHost","u","host","use_api","opts","setLevel","ExploreDesksService","zoom","center","map_id","ctx_r3","copyToClipboard","DesksManageComponent_ng_template_4_div_3_Template","item_r5","DesksManageComponent_ng_template_6_span_1_Template","data_r6","data_r7","print","row_r9","qr_link","qr_code","_r8","loadQrCode","editDesk","removeDesk","DesksManageComponent_ng_template_10_ng_template_10_Template","qr_menu_r11","_r12","DesksManageComponent","_element","_clipboard","dragging","desks","copy","resp","openConfirmModal","title","content","icon","updated_desks","updateMetadata","description","details","message","kiosk_url","window","location","origin","item","link","encodeURIComponent","generateQRCode","handleDrag","i5","DesksManageComponent_ng_template_4_Template","DesksManageComponent_ng_template_6_Template","DesksManageComponent_ng_template_8_Template","DesksManageComponent_ng_template_10_Template","DesksManageComponent_div_12_Template","DesksManageComponent_div_13_Template","name_template_r13","item_list_template_r14","bool_template_r15","action_template_r16","desk_r1","DeskQrCodeModalComponent","DeskQrCodeModalComponent_div_8_Template","level_r5","NewDesksComponent_mat_form_field_13_mat_option_3_div_2_Template","use_region","NewDesksComponent_mat_form_field_13_mat_option_3_Template","tmp_1_0","level_r7","NewDesksComponent_mat_form_field_14_mat_option_4_div_2_Template","NewDesksComponent_mat_form_field_14_mat_option_4_Template","_r9","viewQRCodes","ROUTES","component","NewDesksComponent","combineLatest","active_building","active_region","region","levelsForRegion","levelsForBuilding","_checkManage","afterClosed","lvls","some","z","unsub","NewDesksComponent_button_10_Template","NewDesksComponent_button_11_Template","NewDesksComponent_mat_form_field_13_Template","NewDesksComponent_mat_form_field_14_Template","NewDesksComponent_ng_container_16_Template","NewDesksComponent_ng_container_17_Template","NewDesksComponent_mat_progress_bar_20_Template","children","redirectTo","DesksModule","$C","G2t","CommonModule","FormsModule","MatTabsModule","ReactiveFormsModule","UIModule","SharedExploreModule","SharedBookingsModule","FormFieldsModule","MatRadioModule","MatFormFieldModule","MatCheckboxModule","MatInputModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component.ts","./apps/concierge/src/app/desks/desk-book-modal.component.ts","./apps/concierge/src/app/desks/desks-topbar.component.ts","./apps/concierge/src/app/desks/desks.component.ts","./apps/concierge/src/app/desks/desk-bookings.component.ts","./apps/concierge/src/app/desks/desk-map-view.component.ts","./apps/concierge/src/app/desks/desks-manage.component.ts","./apps/concierge/src/app/desks/desk-qr-code-modal.component.ts","./apps/concierge/src/app/desks/new-desks.component.ts","./apps/concierge/src/app/desks/desks.module.ts"],"sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { addDays, endOfDay, set } from 'date-fns';\n\n@Component({\n    selector: 'new-desk-form-details',\n    styles: [],\n    template: `\n        <!-- <div class=\"m-2 bg-warning p-2 text-center rounded shadow text-sm\">\n            The selected desk hasn't been booked. Please book the desk to be\n            able to check-in.\n        </div> -->\n        <div\n            class=\"p-0 sm:py-4 sm:px-16 divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"flex items-center\" *ngIf=\"allow_groups\">\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-secondary]=\"!(options | async)?.group\"\n                    (click)=\"setOptions({ group: false, members: [] })\"\n                >\n                    <app-icon class=\"text-2xl\">person</app-icon>\n                    <div class=\"\" i18n>Single</div>\n                    <div\n                        class=\"absolute h-1 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-base-200]=\"(options | async)?.group\"\n                        [class.bg-secondary]=\"!(options | async)?.group\"\n                    ></div>\n                </button>\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-secondary]=\"(options | async)?.group\"\n                    (click)=\"setOptions({ group: true })\"\n                >\n                    <app-icon class=\"text-2xl\">group_add</app-icon>\n                    <div class=\"\" i18n>Group</div>\n                    <div\n                        class=\"absolute h-1 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-base-200]=\"!(options | async)?.group\"\n                        [class.bg-secondary]=\"(options | async)?.group\"\n                    ></div>\n                </button>\n            </section>\n            <section class=\"p-2\" [class.!border-none]=\"allow_groups\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\" i18n>Details</div>\n                </h3>\n                <div\n                    class=\"w-full\"\n                    *ngIf=\"can_book_for_others && !(options | async)?.group\"\n                >\n                    <label for=\"title\">Host<span>*</span></label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                        class=\"mb-4\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error i18n\n                                >Booking title is required.</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px] relative\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                            [to]=\"end_date\"\n                            [timezone]=\"timezone\"\n                            i18n\n                        >\n                            Date and time must be in the future\n                        </a-date-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute -top-2 right-0\"\n                            i18n\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                            [timezone]=\"timezone\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n>\n                            End Time<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                            [timezone]=\"timezone\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : '',\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"(options | async)?.group\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\" i18n>Group Members</div>\n                    <div class=\"flex-1 w-px\"></div>\n                </h3>\n                <div class=\"overflow-hidden\">\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        [ngModel]=\"(options | async)?.members || []\"\n                        (ngModelChange)=\"setOptions({ members: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"form.contains('resources')\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 3 : 2 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n                <p\n                    *ngIf=\"(options | async)?.group\"\n                    class=\"text-center rounded px-2 py-1 bg-warning shadow text-xs\"\n                >\n                    Desks nearby to the selected desk will booked for group\n                    members\n                </p>\n            </section>\n            <section class=\"p-2\" *ngIf=\"has_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 4 : 3 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [options]=\"{\n                        date: form.getRawValue().date,\n                        duration: form.value.duration,\n                        all_day: form.value.all_day,\n                    }\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n})\nexport class NewDeskFormDetailsComponent extends AsyncHandler {\n    @Input() public form: FormGroup;\n    @Output() public find = new EventEmitter<void>();\n    /** List of available buildings to select */\n    public readonly buildings = this._org.building_list;\n    /** List of available levels for the selected building */\n    public readonly levels = this._org.active_levels;\n    /** List of set options for desk booking */\n    public readonly options = this._state.options;\n    /** List of set options for desk booking */\n    public readonly features = this._state.features;\n\n    public readonly force_time = set(Date.now(), {\n        hours: 6,\n        minutes: 0,\n    }).valueOf();\n\n    /** Selected desk for booking */\n    public selected_desk: Desk;\n    public from_id = false;\n\n    public readonly recurrence_options = ['daily', 'weekly', 'monthly'];\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get can_book_for_others() {\n        return this._settings.get('app.desks.can_book_for_others');\n    }\n\n    public get can_book_lockers() {\n        return this._settings.get('app.desks.can_book_lockers');\n    }\n    public get can_recurr() {\n        return this._settings.get('app.desks.recurrence_allowed');\n    }\n\n    public get allow_groups() {\n        return this._settings.get('app.desks.allow_groups');\n    }\n\n    public get has_assets() {\n        return !!this._settings.get('app.desks.has_assets');\n    }\n\n    public get needs_reason() {\n        return this._settings.get('app.desks.needs_reason') === true;\n    }\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get timezone() {\n        return this._settings.get('app.desks.use_building_timezone')\n            ? this._org.building.timezone\n            : '';\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90,\n            ),\n        ).valueOf();\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.form && this.form) {\n            if (this.selected_desk?.id) {\n                this.form.patchValue({ resources: [this.selected_desk] });\n            }\n        }\n    }\n}\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { BookingFormService } from '@placeos/bookings';\nimport { DialogEvent, notifyError, notifySuccess } from '@placeos/common';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'desk-book-modal',\n    template: `\n        <header>\n            <h2>New Desk Booking</h2>\n            <div class=\"flex-1 w-0\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!(loading | async); else load_state\"\n            class=\"overflow-auto p-4 max-h-[65vh]\"\n        >\n            <new-desk-form-details [form]=\"form\"></new-desk-form-details>\n        </main>\n        <footer\n            *ngIf=\"!(loading | async)\"\n            class=\"flex justify-center items-center p-2 border-t border-base-200\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                loading\n                class=\"h-64 flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>Making booking request...</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DeskBookModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public readonly loading = new BehaviorSubject(false);\n\n    public get form() {\n        return this._booking_form.form;\n    }\n\n    constructor(\n        private _booking_form: BookingFormService,\n        private _dialog_ref: MatDialogRef<DeskBookModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading.next(true);\n        this.form.patchValue({ booking_type: 'desk' });\n        const event = await this._booking_form.postForm().catch((_) => {\n            notifyError(_);\n            this.loading.next(false);\n            throw _;\n        });\n        this.event.emit({ reason: 'done', metadata: event });\n        notifySuccess('Successfully created booking');\n        this._dialog_ref.close();\n        this.loading.next(false);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifyInfo,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { DesksStateService } from './desks-state.service';\nimport { showBooking } from '@placeos/bookings';\nimport { randomInt } from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\n\n@Component({\n    selector: 'desks-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 h-20 px-4 border-b border-base-200 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"\n                        (filters | async).zones\n                            ? (filters | async).zones[0]\n                            : 'All'\n                    \"\n                    (ngModelChange)=\"updateZones([$event])\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option value=\"All\" *ngIf=\"!is_map\">\n                        All Levels\n                    </mat-option>\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <button\n                btn\n                matRipple\n                *ngIf=\"!manage\"\n                class=\"mx-2 w-40\"\n                matTooltip=\"New Desk Booking\"\n                (click)=\"newDeskBooking()\"\n            >\n                New Booking\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"newDesk()\"\n                matTooltip=\"New Desk\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary relative text-white rounded\"\n                matTooltip=\"Upload Desks CSV\"\n            >\n                <app-icon>cloud_upload</app-icon>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"downloadTemplate()\"\n                matTooltip=\"Download Template Desk CSV\"\n            >\n                <app-icon>download</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"manageRestrictions()\"\n                matTooltip=\"Desk Restrictions\"\n            >\n                <app-icon>lock_open</app-icon>\n            </button>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                [model]=\"(filters | async)?.search\"\n                (modelChange)=\"setFilters({ search: $event })\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class DesksTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly filters = this._desks.filters;\n\n    public manage = false;\n    public is_map = false;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._desks.setFilters({ date });\n    public readonly setFilters = (o) => this._desks.setFilters(o);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n        this._desks.setFilters({ zones });\n    };\n\n    constructor(\n        private _desks: DesksStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog,\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        this.updateZones(zones);\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id,\n                        );\n                    }\n                }\n                if (params.has('date')) {\n                    this.setDate(new Date(+params.get('date')));\n                }\n                if (params.has('approve')) {\n                    this.approve(params.get('approve'));\n                } else if (params.has('reject')) {\n                    this.reject(params.get('reject'));\n                }\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            }),\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe(() => {\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            }),\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                const filters = await this.filters.pipe(take(1)).toPromise();\n                const zones =\n                    filters?.zones?.filter(\n                        (zone) =>\n                            levels.find((lvl) => lvl.id === zone) ||\n                            zone === 'All',\n                    ) || [];\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            }),\n        );\n        this.manage = this._router.url?.includes('manage');\n        this.is_map = this._router.url?.includes('map');\n    }\n\n    public newDesk() {\n        const desk = new Desk({ id: `desk-${randomInt(999_999)}` });\n        desk.staff_name = `[NEW_DESK]`;\n        this._desks.addDesks([desk]);\n        notifyInfo('New desk added to local data.', undefined, () =>\n            notifyInfo('Make sure to save the new desk before using it.'),\n        );\n    }\n\n    public newDeskBooking() {\n        this._dialog.open(DeskBookModalComponent, {});\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'desk' },\n        });\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._desks.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        }),\n                ),\n            );\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    public downloadTemplate() {\n        const desk: any = new Desk({\n            id: 'desk-123',\n            name: 'Test Desk',\n            bookable: true,\n            groups: ['test-desk-group', 'desk-bookers'],\n            features: ['Standing Desk', 'Dual Monitor'],\n        }).toJSON();\n        delete desk.images;\n        const data = jsonToCsv([desk]);\n        downloadFile('desk-template.csv', data);\n    }\n\n    /**\n     * Aprrove a desk booking\n     * @param id Booking ID to approve\n     */\n    private async approve(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.approveDesk(booking);\n        }\n    }\n\n    /**\n     * Reject a desk booking\n     * @param id Booking ID to reject\n     */\n    private async reject(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.rejectDesk(booking);\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { DesksStateService } from './desks-state.service';\n\n@Component({\n    selector: '[app-desks]',\n    template: `\n        <sidebar></sidebar>\n        <main\n            class=\"flex-1 relative w-1/2 flex flex-col bg-base-100 overflow-hidden\"\n        >\n            <desks-topbar class=\"w-full\"></desks-topbar>\n            <div class=\"dark\">\n                <nav mat-tab-nav-bar>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'events']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'events'\"\n                    >\n                        Bookings\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'map']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'map'\"\n                    >\n                        Map View\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'manage']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'manage'\"\n                    >\n                        Manage Desks\n                    </a>\n                </nav>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full relative overflow-auto\">\n                <router-outlet></router-outlet>\n            </div>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DesksComponent extends AsyncHandler implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public path: string;\n\n    constructor(private _state: DesksStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.refresh();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { DesksStateService } from './desks-state.service';\nimport { map } from 'rxjs/operators';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'desk-bookings',\n    template: `\n        <div class=\"overflow-auto h-full w-full pb-4\">\n            <simple-table\n                class=\"min-w-[72rem] block text-sm\"\n                [data]=\"bookings\"\n                [filter]=\"(filters | async)?.search\"\n                [columns]=\"[\n                    {\n                        key: 'date',\n                        name: 'Date',\n                        content: date_template,\n                        size: '4rem',\n                        sortable: false\n                    },\n                    {\n                        key: 'period',\n                        name: 'Period',\n                        content: period_template,\n                        size: '9rem'\n                    },\n                    {\n                        key: 'user_name',\n                        name: 'Person',\n                        content: user_template\n                    },\n                    { key: 'group', name: 'Group', content: group_template },\n                    { key: 'asset_name', name: 'Desk' },\n                    { key: 'approver', name: 'Approver' },\n                    {\n                        key: 'status',\n                        name: 'Status',\n                        content: status_template,\n                        size: '8.5rem',\n                        sortable: false\n                    },\n                    {\n                        key: 'checked_in',\n                        name: 'Checked In',\n                        content: option_template,\n                        size: '7rem',\n                        sortable: false\n                    }\n                ]\"\n                [empty_message]=\"\n                    (filters | async)?.search\n                        ? 'No matching desk bookings'\n                        : 'There are no desk booking for the currently selected date.'\n                \"\n                [sortable]=\"true\"\n            ></simple-table>\n            <ng-template #date_template let-date=\"data\">\n                <div\n                    class=\"flex flex-col items-center justify-center w-full py-2\"\n                >\n                    <div class=\"opacity-60\">{{ date | date: 'MMM' }}</div>\n                    <div class=\"text-xl\">{{ date | date: 'dd' }}</div>\n                </div>\n            </ng-template>\n            <ng-template #group_template let-row=\"row\">\n                <div class=\"p-4 text-[0.625rem] font-mono\">\n                    {{ row.group || row.extension_data?.group }}\n                    <span\n                        class=\"opacity-30\"\n                        *ngIf=\"!(row.group || row.extension_data?.group)\"\n                    >\n                        No Group\n                    </span>\n                </div>\n            </ng-template>\n            <ng-template #period_template let-row=\"row\">\n                <div class=\"p-2\">\n                    <ng-container\n                        *ngIf=\"\n                            row.status !== 'declined' &&\n                            !row.deleted &&\n                            row.status !== 'ended'\n                        \"\n                    >\n                        <div class=\"p-2\">\n                            <ng-container *ngIf=\"!row.all_day\">\n                                {{ row.date | date: time_format }} &ndash;\n                                {{ row.date_end | date: time_format }}\n                            </ng-container>\n                            <ng-container *ngIf=\"row.all_day\"\n                                >All Day</ng-container\n                            >\n                        </div>\n                    </ng-container>\n                    <ng-container\n                        *ngIf=\"\n                            row.status === 'declined' ||\n                            row.deleted ||\n                            row.status === 'ended'\n                        \"\n                    >\n                        <div\n                            class=\"text-xs py-2 px-4 bg-error rounded-3xl text-white\"\n                        >\n                            {{\n                                row.status === 'ended'\n                                    ? 'Manually Ended'\n                                    : 'Expired'\n                            }}\n                        </div>\n                    </ng-container>\n                </div>\n            </ng-template>\n            <ng-template #user_template let-row=\"row\">\n                <div class=\"flex flex-col justify-center px-4 py-2\">\n                    <div class=\"select-all\">\n                        {{\n                            row.user_name ||\n                                row.user_email ||\n                                row.booked_by_name ||\n                                row.booked_by_email\n                        }}\n                    </div>\n                    <div\n                        *ngIf=\"row.user_name\"\n                        class=\"text-xs opacity-30 select-all\"\n                    >\n                        {{ row.user_email }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-row=\"row\">\n                <div class=\"px-2\">\n                    <button\n                        matRipple\n                        class=\"rounded-3xl bg-warning text-warning-content border-none w-[7.5rem] h-10\"\n                        [class.!text-success-content]=\"\n                            row?.status === 'approved'\n                        \"\n                        [class.!bg-success]=\"row?.status === 'approved'\"\n                        [class.!text-error-content]=\"row?.status === 'declined'\"\n                        [class.!bg-error]=\"row?.status === 'declined'\"\n                        [class.!text-neutral-content]=\"row?.status === 'ended'\"\n                        [class.!bg-neutral]=\"row?.status === 'ended'\"\n                        [class.opacity-30]=\"row?.status === 'ended'\"\n                        [matMenuTriggerFor]=\"menu\"\n                        [disabled]=\"row?.status === 'ended'\"\n                    >\n                        <div class=\"flex items-center pl-4 pr-2 space-x-2\">\n                            <div class=\"flex-1 text-left\">\n                                {{\n                                    row?.status === 'ended'\n                                        ? 'Ended'\n                                        : row?.status === 'approved'\n                                        ? 'Approved'\n                                        : row?.status === 'declined'\n                                        ? 'Declined'\n                                        : 'Pending'\n                                }}\n                            </div>\n                            <app-icon class=\"text-2xl\"\n                                >arrow_drop_down</app-icon\n                            >\n                        </div>\n                    </button>\n                </div>\n                <mat-menu #menu=\"matMenu\">\n                    <button mat-menu-item (click)=\"approve(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\"\n                                >event_available</app-icon\n                            >\n                            <div class=\"pr-2\">Approve Desk</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"reject(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">event_busy</app-icon>\n                            <div class=\"pr-2\">Decline Desk</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #option_template let-data=\"data\" let-row=\"row\">\n                <div class=\"px-2\">\n                    <button\n                        matRipple\n                        class=\"rounded-3xl bg-warning text-warning-content border-none w-[4.5rem] h-10\"\n                        [matMenuTriggerFor]=\"checkinMenu\"\n                        [class.!bg-neutral]=\"!data\"\n                        [class.!text-neutral-content]=\"!data\"\n                        [class.!bg-success]=\"data\"\n                        [class.!text-success-content]=\"data\"\n                        [class.opacity-30]=\"row.status === 'ended'\"\n                        [disabled]=\"row.status === 'ended'\"\n                        [matTooltip]=\"\n                            row.status === 'ended'\n                                ? 'Desk booking has ended'\n                                : 'Check-in or check-out desk'\n                        \"\n                    >\n                        <div class=\"flex items-center pl-4 pr-2 space-x-2\">\n                            <div class=\"flex-1 text-left\">\n                                {{ data ? 'Yes' : 'No' }}\n                            </div>\n                            <app-icon class=\"text-2xl\">\n                                arrow_drop_down\n                            </app-icon>\n                        </div>\n                    </button>\n                </div>\n                <mat-menu #checkinMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"checkin(row, true)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">check</app-icon>\n                            <div>Check-in</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"checkin(row, false)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>Check-out</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n        </div>\n\n        <button\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 w-32 mx-auto my-4\"\n            *ngIf=\"!loading && (has_more_pages | async)\"\n            (click)=\"loadMore()\"\n        >\n            Load More\n        </button>\n        <button\n            icon\n            matRipple\n            class=\"absolute bottom-2 right-2 bg-base-100 shadow\"\n            [matMenuTriggerFor]=\"menu\"\n        >\n            <app-icon>more_vert</app-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"rejectAll()\">Reject All</button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingsComponent {\n    public loading: string;\n    public readonly filters = this._state.filters;\n    public readonly has_more_pages = this._state.has_more_pages;\n    public readonly bookings = this._state.bookings;\n\n    public readonly rejectAll = () => this._state.rejectAllDesks();\n    public readonly loadMore = () => this._state.nextPage();\n\n    public get columns() {\n        return [\n            'date',\n            'period',\n            'user_name',\n            'group',\n            'asset_name',\n            'approver_name',\n            'status',\n            'checked_in',\n        ];\n    }\n\n    public readonly checkin = (d, s?) =>\n        this.runMethod('checkin', async () => {\n            await this._state.checkinDesk(d, s);\n            d.checked_in = s ?? true;\n        });\n    public readonly approve = (d) =>\n        this.runMethod('approve', async () => this._state.approveDesk(d));\n    public readonly reject = (d) =>\n        this.runMethod('reject', async () => this._state.rejectDesk(d));\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: DesksStateService,\n        private _settings: SettingsService\n    ) {}\n\n    private async runMethod(name: string, fn: () => Promise<any>) {\n        this.loading = name;\n        await fn().catch((i) => null);\n        this.loading = '';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ExploreDesksService, ExploreStateService } from '@placeos/explore';\n\nimport { DesksStateService } from './desks-state.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map-view',\n    template: `\n        <div map class=\"h-full w-full relative\">\n            <interactive-map\n                [src]=\"url | async\"\n                [zoom]=\"(positions | async).zoom\"\n                [center]=\"(positions | async).center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></interactive-map>\n            <explore-zoom-controls\n                class=\"absolute bottom-2 right-2\"\n            ></explore-zoom-controls>\n            <div class=\"absolute top-0 left-0 p-2 text-black\">\n                <a-user-search-field\n                    [ngModel]=\"null\"\n                    (ngModelChange)=\"setHost($event)\"\n                    class=\"white\"\n                    placeholder=\"User for bookings...\"\n                ></a-user-search-field>\n            </div>\n            <div\n                info\n                class=\"absolute bottom-0 rounded p-2 m-2 bg-base-100 shadow text-center\"\n            >\n                Click/Tap an available desk to book it.\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n\n            [info] {\n                left: 50%;\n                transform: translateX(-50%);\n            }\n        `,\n    ],\n    providers: [ExploreDesksService],\n})\nexport class DeskMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n\n    public readonly setHost = (u) => this._desks_state.setOptions({ host: u });\n\n    constructor(\n        private _state: ExploreStateService,\n        private _desk: DesksStateService,\n        private _desks_state: ExploreDesksService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._desks_state.setOptions({ use_api: true });\n        this.subscription(\n            'date',\n            this._desk.filters.subscribe((opts) => {\n                const level = this._org.levelWithID(opts.zones);\n                if (level) this._state.setLevel(level.id);\n                this._desks_state.setOptions({\n                    date: opts.date || Date.now(),\n                    all_day: true,\n                    zones: opts.zones,\n                });\n            })\n        );\n    }\n}\n","import { Component, ElementRef } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    SettingsService,\n    csvToJson,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    randomInt,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { updateMetadata } from '@placeos/ts-client';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\nimport { take } from 'rxjs/operators';\nimport { DesksStateService } from './desks-state.service';\nimport { Clipboard } from '@angular/cdk/clipboard';\n\nconst QR_CODES = {};\n\n@Component({\n    selector: 'desks-manage',\n    template: `\n        <div\n            class=\"overflow-auto h-full w-full pb-4\"\n            (dragenter)=\"handleDrag('enter', $event)\"\n            (window:dragend)=\"handleDrag('end', $event)\"\n        >\n            <simple-table\n                class=\"min-w-[72rem] w-full block text-sm\"\n                [filter]=\"(filters | async)?.search\"\n                [data]=\"desks\"\n                [columns]=\"[\n                    {\n                        key: 'id',\n                        name: 'Desk ID',\n                        content: name_template,\n                        size: '10rem',\n                    },\n                    { key: 'name', name: 'Desk Name' },\n                    {\n                        key: 'groups',\n                        name: 'Groups',\n                        content: item_list_template,\n                    },\n                    {\n                        key: 'features',\n                        name: 'Features',\n                        content: item_list_template,\n                    },\n                    {\n                        key: 'bookable',\n                        name: 'Bookable',\n                        content: bool_template,\n                        size: '5.5rem',\n                    },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        content: action_template,\n                        size: '8.5rem',\n                        sortable: false,\n                    },\n                ]\"\n                [sortable]=\"true\"\n                [empty_message]=\"\n                    (filters | async)?.search\n                        ? 'No matching desks'\n                        : 'No desks for selected level'\n                \"\n            ></simple-table>\n            <ng-template #name_template let-row=\"row\">\n                <button\n                    class=\"flex flex-col px-4 py-2 text-left leading-tight\"\n                    (click)=\"copyToClipboard(row.map_id || row.id)\"\n                >\n                    <div>{{ row.id || row.map_id }}</div>\n                    <div\n                        *ngIf=\"row.id && row.map_id !== row.id\"\n                        class=\"text-[0.625rem] opacity-30 font-mono\"\n                    >\n                        {{ row.map_id }}\n                    </div>\n                </button>\n            </ng-template>\n            <ng-template #item_list_template let-data=\"data\">\n                <div class=\"flex flex-wrap p-2\">\n                    <span\n                        class=\"m-1 py-1 px-2 rounded-2xl text-xs font-mono bg-info text-info-content\"\n                        *ngFor=\"let item of data\"\n                    >\n                        {{ item }}\n                    </span>\n                </div>\n            </ng-template>\n            <ng-template #bool_template let-data=\"data\">\n                <div\n                    [class.bg-error]=\"!data\"\n                    [class.bg-success]=\"data\"\n                    class=\"rounded h-8 w-8 flex items-center justify-center text-2xl text-white mx-auto\"\n                >\n                    <app-icon>{{ data ? 'done' : 'close' }}</app-icon>\n                </div>\n            </ng-template>\n            <ng-template #action_template let-row=\"row\">\n                <div class=\"flex items-center justify-end space-x-2 p-2\">\n                    <button\n                        icon\n                        matRipple\n                        customTooltip\n                        [content]=\"qr_menu\"\n                        matTooltip=\"Print QR Code\"\n                        (click)=\"loadQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Desk\"\n                        (click)=\"editDesk(row)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Desk\"\n                        (click)=\"removeDesk(row)\"\n                    >\n                        <app-icon class=\"text-error\">delete</app-icon>\n                    </button>\n                    <ng-template #qr_menu>\n                        <div class=\"bg-base-100 py-2 shadow rounded\">\n                            <div class=\"\" printable>\n                                <a\n                                    [href]=\"row.qr_link | safe: 'url'\"\n                                    target=\"_blank\"\n                                    ref=\"noopener noreferrer\"\n                                    class=\"block p-2 mx-4 my-2 rounded-lg border border-base-200 bg-base-100\"\n                                >\n                                    <img class=\"w-48\" [src]=\"row.qr_code\" />\n                                </a>\n                                <div\n                                    class=\"w-[calc(100%-2rem)] text-center mt-2 font-mono text-sm bg-base-200 rounded p-2 mx-4\"\n                                >\n                                    {{ row.name || row.id }}\n                                </div>\n                            </div>\n                            <button\n                                btn\n                                matRipple\n                                class=\"w-[calc(100%-2rem)] mx-4 my-2\"\n                                (click)=\"print()\"\n                            >\n                                Print QR Code\n                            </button>\n                        </div>\n                    </ng-template>\n                </div>\n            </ng-template>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2 bg-base-100 bg-opacity-60\"\n                *ngIf=\"loading\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n            <div\n                *ngIf=\"dragging\"\n                class=\"absolute inset-0 bg-neutral flex items-center justify-center\"\n            >\n                <div class=\"bg-base-100 p-4 rounded shadow\">\n                    <div\n                        class=\"border-4 border-base-200 border-dashed rounded flex flex-col items-center justify-center w-64 h-64\"\n                    >\n                        Drop CSV file to add desks\n                    </div>\n                </div>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DesksManageComponent extends AsyncHandler {\n    public loading: string;\n    public dragging = false;\n    public readonly filters = this._state.filters;\n    public readonly desks = this._state.desks;\n\n    public readonly editDesk = (desk?: Desk) => this._state.editDesk(desk);\n\n    constructor(\n        private _state: DesksStateService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService,\n        private _element: ElementRef,\n        private _clipboard: Clipboard,\n    ) {\n        super();\n    }\n\n    public readonly copyToClipboard = (id: string) => {\n        const success = this._clipboard.copy(id);\n        if (success) notifySuccess('Desk ID copied to clipboard.');\n    };\n\n    public async removeDesk(desk: Desk) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Remove desk',\n                content: `Remove desk ${desk.name}?`,\n                icon: { content: 'delete' },\n            },\n            this._dialog,\n        );\n        if (resp.reason !== 'done') return;\n        resp.close();\n        const desks = await this.desks.pipe(take(1)).toPromise();\n        const updated_desks = desks.filter((_) => _.id !== desk.id);\n        const filters = await this.filters.pipe(take(1)).toPromise();\n        const level = this._org.levelWithID(filters.zones);\n        this.loading = 'Removing desk...';\n        await updateMetadata(level.id, {\n            name: 'desks',\n            description: 'desks',\n            details: updated_desks,\n        })\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving desk data. Error: ${e.message || e}`);\n                throw e;\n            });\n        notifySuccess('Successfully updated desks');\n        this._state.setFilters({});\n        this.loading = '';\n    }\n\n    public get kiosk_url() {\n        const path =\n            this._settings.get('app.workplace_url_path') || '/workplace';\n        return `${window.location.origin}${path}`;\n    }\n\n    public loadQrCode(item: any) {\n        const link = `${\n            this.kiosk_url\n        }/#/book/code?asset_id=${encodeURIComponent(item.id)}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n    }\n\n    public print() {\n        window.print();\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        this.loading = 'Loading CSV file...';\n        this.dragging = false;\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._state.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        }),\n                ),\n            );\n        } catch (e) {\n            console.error(e);\n        }\n        this.loading = '';\n    }\n\n    public handleDrag(type: 'enter' | 'leave' | 'end', event: DragEvent) {\n        this.dragging = type === 'enter';\n    }\n}\n","import { Component } from '@angular/core';\nimport { DesksStateService } from './desks-state.service';\nimport { SettingsService } from '@placeos/common';\n\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'desk-qr-code-modal',\n    template: `\n        <div class=\"relative w-screen min-h-screen bg-base-100 rounded-none\">\n            <div\n                class=\"sticky top-0 flex items-center justify-between print:hidden p-4 w-full\"\n            >\n                <button btn matRipple (click)=\"print()\">Print QR Codes</button>\n                <button icon matRipple mat-dialog-close>\n                    <app-icon>close</app-icon>\n                </button>\n            </div>\n            <div\n                class=\"flex flex-wrap overflow-auto print:h-auto h-[calc(100vh-5rem)]\"\n            >\n                <div\n                    *ngFor=\"let desk of desks | async\"\n                    class=\"flex flex-col items-center justify-center w-[28%] print:h-[25vh] mx-auto\"\n                >\n                    <div\n                        class=\"block p-2 mx-4 my-2 rounded-lg border border-base-200 bg-base-100\"\n                    >\n                        <img class=\"w-48\" [src]=\"desk[1]\" />\n                    </div>\n                    <div\n                        class=\"w-[calc(100%-2rem)] text-center my-1 font-mono text-sm bg-base-200 rounded p-1 mx-4\"\n                    >\n                        {{ desk[0] }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DeskQrCodeModalComponent {\n    public readonly desks = this._state.desks.pipe(\n        map((list) => list.map((_) => [_.name || _.id, this.loadQrCode(_)])),\n    );\n\n    public get kiosk_url() {\n        const path =\n            this._settings.get('app.workplace_url_path') || '/workplace';\n        return `${window.location.origin}${path}`;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _state: DesksStateService,\n    ) {}\n\n    public loadQrCode(item: any) {\n        const link = `${\n            this.kiosk_url\n        }/#/book/code?asset_id=${encodeURIComponent(item.id)}`;\n        item.qr_link = link;\n        item.qr_code = generateQRCode(link);\n        return item.qr_code;\n    }\n\n    public print() {\n        window.print();\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport {\n    AsyncHandler,\n    SettingsService,\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifyInfo,\n    randomInt,\n} from '@placeos/common';\n\nimport { DesksStateService } from './desks-state.service';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { BookingRulesModalComponent } from '../ui/booking-rules-modal.component';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { DeskQrCodeModalComponent } from './desk-qr-code-modal.component';\n\n@Component({\n    selector: '[app-new-desks]',\n    template: `\n        <app-topbar class=\" print:hidden\"></app-topbar>\n        <div class=\"flex flex-1 h-px print:hidden\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center w-full py-4 px-8 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">\n                        {{ manage ? 'Desk Management' : 'Desk Bookings' }}\n                    </h2>\n                    <div class=\"flex-1 w-px\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        [model]=\"(filters | async)?.search\"\n                        (modelChange)=\"setFilters({ search: $event })\"\n                    ></searchbar>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"path !== 'manage'\"\n                        class=\"space-x-2 w-44\"\n                        (click)=\"newDeskBooking()\"\n                    >\n                        <div class=\"pl-2\">New Booking</div>\n                        <app-icon class=\"text-2xl\">add</app-icon>\n                    </button>\n                    <button\n                        btn\n                        matRipple\n                        *ngIf=\"path === 'manage'\"\n                        class=\"space-x-2 w-44\"\n                        (click)=\"editDesk()\"\n                    >\n                        <div class=\"pl-2\">New Desk</div>\n                        <app-icon class=\"text-2xl\">add</app-icon>\n                    </button>\n                </div>\n                <div class=\"w-full flex items-center px-8 space-x-2 mb-4\">\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript w-60\"\n                        *ngIf=\"!manage\"\n                    >\n                        <mat-select\n                            [ngModel]=\"(filters | async)?.zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                            multiple\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"text-xs opacity-30\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (level.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ level.display_name || level.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        appearance=\"outline\"\n                        class=\"no-subscript w-60\"\n                        *ngIf=\"manage\"\n                    >\n                        <mat-select\n                            [ngModel]=\"\n                                (filters | async)?.zones?.length\n                                    ? (filters | async)?.zones[0]\n                                    : ''\n                            \"\n                            (ngModelChange)=\"updateZones([$event])\"\n                            placeholder=\"All Levels\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                <div class=\"flex flex-col-reverse\">\n                                    <div\n                                        class=\"text-xs opacity-30\"\n                                        *ngIf=\"use_region\"\n                                    >\n                                        {{\n                                            (level.parent_id | building)\n                                                ?.display_name\n                                        }}\n                                        <span class=\"opacity-0\"> - </span>\n                                    </div>\n                                    <div>\n                                        {{ level.display_name || level.name }}\n                                    </div>\n                                </div>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"flex-1 w-px\"></div>\n                    <ng-container *ngIf=\"path === 'events'\">\n                        <date-options\n                            (dateChange)=\"setDate($event)\"\n                        ></date-options>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            matTooltip=\"Refresh List\"\n                            class=\"ml-2 rounded border border-base-200\"\n                            (click)=\"refresh()\"\n                            [disabled]=\"loading | async\"\n                        >\n                            <app-icon>refresh</app-icon>\n                        </button>\n                    </ng-container>\n                    <ng-container *ngIf=\"path === 'manage'\">\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                            matTooltip=\"View Desk QR Codes\"\n                            (click)=\"viewQRCodes()\"\n                        >\n                            <app-icon>qr_code</app-icon>\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                            matTooltip=\"Upload Desks CSV\"\n                        >\n                            <app-icon>cloud_upload</app-icon>\n                            <input\n                                type=\"file\"\n                                class=\"absolute inset-0 opacity-0\"\n                                (change)=\"loadCSVData($event)\"\n                            />\n                        </button>\n                        <button\n                            btn\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                            (click)=\"downloadTemplate()\"\n                            matTooltip=\"Download Template Desk CSV\"\n                        >\n                            <app-icon>download</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            class=\"bg-secondary text-secondary-content rounded h-12 w-12\"\n                            (click)=\"manageRestrictions()\"\n                            matTooltip=\"Desk Restrictions\"\n                        >\n                            <app-icon>lock_open</app-icon>\n                        </button>\n                    </ng-container>\n                </div>\n                <div class=\"flex-1 h-1/2 px-8 w-full relative overflow-auto\">\n                    <router-outlet></router-outlet>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"(loading | async) && path === 'events'\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n        `,\n    ],\n})\nexport class NewDesksComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public readonly loading = this._state.loading;\n    public path: string;\n    public manage = false;\n    /** List of levels for the active building */\n    public readonly filters = this._state.filters;\n    /** List of levels for the active building */\n    public readonly levels = combineLatest([\n        this._org.active_building,\n        this._org.active_region,\n    ]).pipe(\n        map(([bld, region]) =>\n            this._settings.get('app.use_region')\n                ? this._org.levelsForRegion(region)\n                : this._org.levelsForBuilding(bld),\n        ),\n    );\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    public readonly setFilters = (o) => this._state.setFilters(o);\n    public readonly refresh = () => this._state.refresh();\n    public readonly editDesk = () => this._state.editDesk();\n    /** Update active zones for desks */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n    };\n\n    public get use_region() {\n        return !!this._settings.get('app.use_region');\n    }\n\n    constructor(\n        private _state: DesksStateService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.refresh();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                    this._checkManage();\n                }\n            }),\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (!zones.length) return;\n                    const level = this._org.levelWithID(zones);\n                    this._state.setFilters({ zones });\n                    if (!level) return;\n                    this._org.building = this._org.buildings.find(\n                        (bld) => bld.id === level.parent_id,\n                    );\n                }\n            }),\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n        this._checkManage();\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n\n    public viewQRCodes() {\n        this._dialog.open(DeskQrCodeModalComponent);\n    }\n\n    public newDeskBooking() {\n        const ref = this._dialog.open(DeskBookModalComponent, {});\n        ref.afterClosed().subscribe((_) => {\n            this._state.refresh();\n        });\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(BookingRulesModalComponent, {\n            data: { type: 'desk' },\n        });\n    }\n\n    public downloadTemplate() {\n        const desk: any = new Desk({\n            id: 'desk-123',\n            name: 'Test Desk',\n            bookable: true,\n            groups: ['test-desk-group', 'desk-bookers'],\n            features: ['Standing Desk', 'Dual Monitor'],\n        }).toJSON();\n        delete desk.images;\n        const data = jsonToCsv([desk]);\n        downloadFile('desk-template.csv', data);\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._state.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        }),\n                ),\n            );\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    private _checkManage() {\n        this.manage = this.path.includes('manage');\n        if (this.manage) {\n            this.subscription(\n                'zone-changes',\n                this._org.active_levels.subscribe(async (lvls) => {\n                    if (!lvls.length) return;\n                    const { zones } = await this._state.filters\n                        .pipe(take(1))\n                        .toPromise();\n                    const levels_in_zones =\n                        zones?.length &&\n                        zones.some((z) => lvls.find((lvl) => lvl.id === z));\n                    if (!levels_in_zones) this.updateZones([lvls[0].id]);\n                }),\n            );\n        } else this.unsub('zone-changes');\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { SharedExploreModule } from '@placeos/explore';\nimport { UIModule } from '../ui/ui.module';\n\nimport { DesksComponent } from './desks.component';\nimport { DeskBookingsComponent } from './desk-bookings.component';\nimport { DesksTopbarComponent } from './desks-topbar.component';\nimport { DeskMapViewComponent } from './desk-map-view.component';\nimport { DesksManageComponent } from './desks-manage.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { NewDeskFormDetailsComponent } from 'apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { NewDesksComponent } from './new-desks.component';\nimport { DeskModalComponent } from './desk-modal.component';\nimport { DeskQrCodeModalComponent } from './desk-qr-code-modal.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewDesksComponent,\n        children: [\n            { path: 'events', component: DeskBookingsComponent },\n            { path: 'map', component: DeskMapViewComponent },\n            { path: 'manage', component: DesksManageComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    {\n        path: '',\n        component: DesksComponent,\n        children: [\n            { path: 'events', component: DeskBookingsComponent },\n            { path: 'map', component: DeskMapViewComponent },\n            { path: 'manage', component: DesksManageComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        NewDesksComponent,\n        DesksComponent,\n        DeskBookingsComponent,\n        DesksTopbarComponent,\n        DeskMapViewComponent,\n        DesksManageComponent,\n        NewDeskFormDetailsComponent,\n        DeskBookModalComponent,\n        DeskModalComponent,\n        DeskQrCodeModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatTabsModule,\n        ReactiveFormsModule,\n        UIModule,\n        SharedExploreModule,\n        SharedBookingsModule,\n        FormFieldsModule,\n        MatRadioModule,\n        MatFormFieldModule,\n        MatCheckboxModule,\n        MatInputModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class DesksModule {}\n"],"x_google_ignoreList":[]}