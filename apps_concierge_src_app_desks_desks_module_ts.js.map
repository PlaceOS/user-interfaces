{"version":3,"sources":["./apps/concierge/src/app/desks/desks-topbar.component.ts","./apps/concierge/src/app/desks/desk-details.component.ts","./apps/concierge/src/app/desks/desk-map-view.component.ts","./apps/concierge/src/app/desks/desk-listings.component.ts","./apps/concierge/src/app/desks/desks.component.ts","./apps/concierge/src/app/desks/desks.module.ts"],"names":["DesksTopbarComponent","_desks","_org","_route","_router","super","levels","this","active_levels","filters","toggleMapShow","setFilters","show_map","setDate","date","updateZones","zones","navigate","relativeTo","queryParams","zone_ids","join","queryParamsHandling","initialised","pipe","first","_","toPromise","subscription","queryParamMap","subscribe","params","has","get","split","length","level","levelWithID","building","buildings","find","bld","id","parent_id","Date","approve","reject","take","filter","zone","lvl","push","booking","approveDesk","rejectDesk","DeskDetailsComponent","_state","checkin","runMethod","checkinDesk","desk","name","fn","loading","catch","i","DeskMapViewComponent","_desk","_desks_state","url","map_url","styles","map_styles","positions","map_positions","actions","map_actions","features","map_features","setHost","u","setOptions","host","opts","DeskListingsComponent","desks","map","list","bookable","bookings","rejectAll","rejectAllDesks","updateDesks","ROUTES","path","component","DesksComponent","startPolling","stopPolling","DesksModule"],"mappings":"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","file":"apps_concierge_src_app_desks_desks_module_ts.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first, take } from 'rxjs/operators';\n\nimport { BaseClass } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { DesksStateService } from './desks-state.service';\nimport { showBooking } from '@placeos/bookings';\n\n@Component({\n    selector: 'desks-topbar',\n    template: `\n        <mat-form-field appearance=\"outline\">\n            <mat-select\n                multiple\n                [ngModel]=\"(filters | async).zones || []\"\n                (ngModelChange)=\"updateZones($event)\"\n                placeholder=\"All Levels\"\n            >\n                <mat-option value=\"All\">All Levels</mat-option>\n                <mat-option\n                    *ngFor=\"let level of levels | async\"\n                    [value]=\"level.id\"\n                >\n                    {{ level.display_name || level.name }}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <a\n            button\n            mat-button\n            *ngIf=\"(filters | async).zones?.length === 1\"\n            [routerLink]=\"['/desks']\"\n            [queryParams]=\"{ show_map: !(filters | async)?.show_map }\"\n            queryParamsHandling=\"merge\"\n            (click)=\"toggleMapShow()\"\n        >\n            {{\n                (filters | async)?.show_map ? 'Show List View' : 'Show Map View'\n            }}\n        </a>\n        <div class=\"flex-1 w-2\"></div>\n        <!-- <searchbar class=\"mr-2\"></searchbar> -->\n        <date-options (dateChange)=\"setDate($event)\"></date-options>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                align-items: center;\n                background-color: #fff;\n                height: 5em;\n                padding: 0 1em;\n                border-bottom: 1px solid #ccc;\n            }\n\n            :host > * + * {\n                margin-left: 0.5rem;\n            }\n\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class DesksTopbarComponent extends BaseClass implements OnInit {\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly filters = this._desks.filters;\n    /** Set filtered date */\n    public readonly toggleMapShow = () => {\n        this._desks.setFilters({ show_map: !this.show_map });\n        this.show_map = !this.show_map;\n    };\n    /** Set filtered date */\n    public readonly setDate = (date) => this._desks.setFilters({ date });\n    /** Update active zones for desks */\n    public readonly updateZones = (zones) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n        this._desks.setFilters({ zones });\n    };\n\n    public show_map: boolean;\n\n    constructor(\n        private _desks: DesksStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        const level = this._org.levelWithID(zones);\n                        if (!level) {\n                            return;\n                        }\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                        this.updateZones(zones);\n                    }\n                }\n                if (params.has('date')) {\n                    this.setDate(new Date(+params.get('date')));\n                }\n                if (params.has('approve')) {\n                    this.approve(params.get('approve'));\n                } else if (params.has('reject')) {\n                    this.reject(params.get('reject'));\n                }\n                this.show_map =\n                    params.has('show_map') && params.get('show_map') === 'true';\n                this._desks.setFilters({ show_map: this.show_map });\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                const filters = await this.filters.pipe(take(1)).toPromise();\n                const zones = filters.zones?.filter((zone) =>\n                    levels.find((lvl) => lvl.id === zone) || zone === 'All'\n                ) || [];\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            })\n        );\n    }\n\n    /**\n     * Aprrove a desk booking\n     * @param id Booking ID to approve\n     */\n    private async approve(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.approveDesk(booking);\n        }\n    }\n\n    /**\n     * Reject a desk booking\n     * @param id Booking ID to reject\n     */\n    private async reject(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.rejectDesk(booking);\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { Booking } from '@placeos/bookings';\nimport { DesksStateService } from './desks-state.service';\n@Component({\n    selector: 'desk-details',\n    template: `\n        <div class=\"w-32 p-2 bg\">{{ desk?.user_name }}</div>\n        <div class=\"w-32 p-2\">{{ desk?.extension_data?.group }}</div>\n        <div class=\"w-24 p-2\">{{ desk.date | date: 'shortTime' }}</div>\n        <div flex class=\"p-2 flex-1 truncate\">{{ desk?.description }}</div>\n        <div [class]=\"'w-24 p-2 capitalize text-red-600 ' + desk?.status\">\n            {{ desk?.status }}\n        </div>\n        <div class=\"w-32 p-2\">{{ desk?.approver_name }}</div>\n        <div class=\"w-32 p-2\">{{ desk?.checked_in ? 'Yes' : 'No' }}</div>\n        <div class=\"w-24 p-2\">{{ desk?.access ? 'Yes' : 'No' }}</div>\n        <div class=\"w-32 p-2 flex items-center\">\n            <action-icon\n                mat-icon-button\n                (click)=\"checkin()\"\n                [loading]=\"loading === 'checkin'\"\n                [state]=\"desk?.checked_in ? 'success' : ''\"\n                content=\"how_to_reg\"\n            ></action-icon>\n            <action-icon\n                mat-icon-button\n                (click)=\"approve()\"\n                [loading]=\"loading === 'approve'\"\n                [state]=\"desk?.approved ? 'success' : ''\"\n                content=\"event_available\"\n            ></action-icon>\n            <action-icon\n                mat-icon-button\n                (click)=\"reject()\"\n                [loading]=\"loading === 'reject'\"\n                [state]=\"desk?.status === 'declined' ? 'success' : ''\"\n                content=\"event_busy\"\n            ></action-icon>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                width: 100%;\n                display: flex;\n                align-items: center;\n                padding: 0 0.5rem;\n                background-color: #f8f8f8;\n                border-bottom: 1px solid #ccc;\n            }\n\n            :host:hover {\n                background-color: #f0f0f0;\n            }\n\n            .tentative {\n                color: #ffa000 !important;\n            }\n\n            .approved {\n                color: #388e3c !important;\n            }\n        `,\n    ],\n})\nexport class DeskDetailsComponent {\n    @Input() public desk: Booking;\n\n    public loading: string;\n\n    public readonly checkin = () =>\n        this.runMethod('checkin', async () =>\n            this._state.checkinDesk(this.desk)\n        );\n    public readonly approve = () =>\n        this.runMethod('approve', async () =>\n            this._state.approveDesk(this.desk)\n        );\n    public readonly reject = () =>\n        this.runMethod('reject', async () => this._state.rejectDesk(this.desk));\n\n    constructor(private _state: DesksStateService) {}\n\n    private async runMethod(name: string, fn: () => Promise<any>) {\n        this.loading = name;\n        await fn().catch((i) => null);\n        this.loading = '';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ExploreDesksService, ExploreStateService } from '@placeos/explore';\n\nimport { DesksStateService } from './desks-state.service';\nimport { BaseClass } from '@placeos/common';\n\n@Component({\n    selector: 'desk-map-view',\n    template: `\n        <div map class=\"h-full w-full relative\">\n            <i-map\n                [src]=\"url | async\"\n                [zoom]=\"(positions | async).zoom\"\n                [center]=\"(positions | async).center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n            <explore-zoom-controls\n                class=\"absolute bottom-0 right-0\"\n            ></explore-zoom-controls>\n            <div class=\"absolute top-0 left-0 p-2 text-black\">\n                <a-user-search-field\n                    [ngModel]=\"null\"\n                    (ngModelChange)=\"setHost($event)\"\n                    placeholder=\"User for bookings...\"\n                ></a-user-search-field>\n            </div>\n            <div\n                info\n                class=\"absolute bottom-0 rounded p-2 m-2 bg-white shadow text-center\"\n            >\n                Click/Tap an available desk to book it.\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n\n            [info] {\n                left: 50%;\n                transform: translateX(-50%);\n            }\n        `,\n    ],\n    providers: [ExploreDesksService],\n})\nexport class DeskMapViewComponent extends BaseClass implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n\n    public readonly setHost = (u) => this._desks_state.setOptions({ host: u });\n\n    constructor(\n        private _state: ExploreStateService,\n        private _desk: DesksStateService,\n        private _desks_state: ExploreDesksService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'date',\n            this._desk.filters.subscribe((opts) => {\n                this._desks_state.setOptions({\n                    date: opts.date ? new Date(opts.date) : new Date(),\n                    zones: opts.zones,\n                });\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\nimport { DesksStateService } from './desks-state.service';\n\n@Component({\n    selector: 'desk-listings',\n    template: `\n        <ng-container *ngIf=\"!(filters | async)?.show_map; else map_state\">\n            <div\n                details\n                class=\"w-full bg-gray-900 text-white flex items-center px-2\"\n            >\n                <div class=\"flex-1 w-0\"></div>\n                <div class=\"p-2\">\n                    Requests: {{ (bookings | async)?.length || '0' }}\n                </div>\n                <div class=\"px-8\">\n                    Free Desks:\n                    {{\n                        ((desks | async)?.length || 0) -\n                            ((bookings | async)?.length || 0)\n                    }}\n                </div>\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" *ngIf=\"(filters | async).zones?.length\">\n                    <app-icon>more_vert</app-icon>\n                </button>\n            </div>\n            <div class=\"w-full flex flex-col flex-1 text-sm h-1/2\">\n                <div\n                    class=\"w-full flex items-center bg-white border-b border-gray-500 p-2 font-medium\"\n                >\n                    <div class=\"w-32 p-2\">Person</div>\n                    <div class=\"w-32 p-2\">Group</div>\n                    <div class=\"w-24 p-2\">Date</div>\n                    <div flex class=\"p-2 flex-1\">Desk</div>\n                    <div class=\"w-24 p-2\">Status</div>\n                    <div class=\"w-32 p-2\">Approver</div>\n                    <div class=\"w-32 p-2\">Checked In</div>\n                    <div class=\"w-24 p-2\">Access</div>\n                    <div class=\"w-32 p-2\"></div>\n                </div>\n                <div class=\"w-full flex-1 overflow-auto h-1/2\">\n                    <ng-container\n                        *ngIf=\"(bookings | async)?.length; else empty_state\"\n                    >\n                        <desk-details\n                            *ngFor=\"let desk of bookings | async\"\n                            [desk]=\"desk\"\n                        ></desk-details>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div class=\"h-full w-full flex items-center justify-center\">\n                <p class=\"p-8\">\n                    There are no desks for the currently selected date.\n                </p>\n            </div>\n        </ng-template>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"updateDesks()\">\n                <div class=\"flex items-center\">\n                    <app-icon>edit</app-icon>\n                    <span class=\"pl-2\">Edit Desks</span>\n                </div>\n            </button>\n            <button mat-menu-item (click)=\"rejectAll()\">\n                <div class=\"flex items-center\">\n                    <app-icon>event_busy</app-icon>\n                    <span class=\"pl-2\">Reject All</span>\n                </div>\n            </button>\n        </mat-menu>\n        <ng-template #map_state>\n            <div  class=\"absolute inset-0\"><desk-map-view></desk-map-view></div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                overflow: hidden;\n            }\n\n            [details] {\n                height: 3.5rem;\n            }\n\n            [flex] {\n                min-width: 8rem;\n            }\n        `,\n    ],\n})\nexport class DeskListingsComponent {\n    public readonly filters = this._state.filters;\n\n    public readonly desks = this._state.desks.pipe(map(list => list.filter(i => i.bookable)));\n\n    public readonly bookings = this._state.bookings;\n\n    public readonly rejectAll = () => this._state.rejectAllDesks();\n    public readonly updateDesks = () => this._state.updateDesks();\n\n    constructor(private _state: DesksStateService) {}\n}\n","import { Component } from '@angular/core';\nimport { DesksStateService } from './desks-state.service';\n\n@Component({\n    selector: '[app-desks]',\n    template: `\n        <sidebar></sidebar>\n        <main class=\"relative overflow-hidden flex-1 flex flex-col\">\n            <desks-topbar class=\"w-full\"></desks-topbar>\n            <desk-listings class=\"w-full flex-1 h-0\"></desk-listings>\n            <mat-progress-bar class=\"w-full\" *ngIf=\"loading | async\" mode=\"indeterminate\"></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n                background: var(--bg);\n            }\n        `,\n    ],\n})\nexport class DesksComponent {\n    public readonly loading = this._state.loading;\n\n    constructor(private _state: DesksStateService) {}\n\n    public ngOnInit() {\n        this._state.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._state.stopPolling();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { DesksComponent } from './desks.component';\nimport { DeskListingsComponent } from './desk-listings.component';\nimport { DeskDetailsComponent } from './desk-details.component';\nimport { DesksTopbarComponent } from './desks-topbar.component';\nimport { DeskListModalComponent } from './desk-list-modal.component';\nimport { DeskMapViewComponent } from './desk-map-view.component';\nimport { SharedExploreModule } from '@placeos/explore';\n\nconst ROUTES: Route[] = [{ path: '', component: DesksComponent }];\n\n@NgModule({\n    declarations: [\n        DesksComponent,\n        DeskListingsComponent,\n        DeskDetailsComponent,\n        DesksTopbarComponent,\n        DeskListModalComponent,\n        DeskMapViewComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        UIModule,\n        SharedExploreModule,\n        MatRadioModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class DesksModule {}\n"],"sourceRoot":"webpack:///"}