{"version":3,"file":"apps_concierge_src_app_desks_desks_module_ts.js","mappings":"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","names":["i0","_r9","ctx_r8","setOptions","group","members","ctx_r10","tmp_0_0","ctx_r1","options","tmp_1_0","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","$event","_r12","ctx_r11","form","patchValue","secondary_resource","ctx_r4","value","_c20","_r14","ctx_r13","ctx_r5","_c23","NewDeskFormDetailsComponent_div_0_section_41_p_8_Template","ctx_r6","ctx_r7","date","duration","NewDeskFormDetailsComponent_div_0_section_1_Template","NewDeskFormDetailsComponent_div_0_div_8_Template","_r17","ctx_r16","NewDeskFormDetailsComponent_div_0_mat_checkbox_37_Template","NewDeskFormDetailsComponent_div_0_div_38_Template","NewDeskFormDetailsComponent_div_0_section_39_Template","NewDeskFormDetailsComponent_div_0_section_41_Template","NewDeskFormDetailsComponent_div_0_section_42_Template","ctx_r0","allow_groups","can_book_for_others","end_date","all_day","get","disabled","tmp_8_0","allow_all_day","can_book_lockers","tmp_15_0","contains","has_assets","NewDeskFormDetailsComponent","AsyncHandler","building","this","_org","bld","_settings","can_recurr","needs_reason","allow_time_changes","endOfDay","addDays","Date","now","constructor","_state","super","find","EventEmitter","buildings","building_list","levels","active_levels","features","from_id","recurrence_options","o","setFeature","f","e","ngOnChanges","changes","selected_desk","id","resources","t","i1","i2","i3","core","Xpm","selectors","inputs","outputs","decls","vars","consts","i18n_0","$localize","NewDeskFormDetailsComponent_div_0_Template","ctx","_r5","save","ctx_r3","loading","DeskBookModalComponent","_booking_form","_dialog_ref","event","BehaviorSubject","_this","_asyncToGenerator","next","postForm","catch","_","notifyError","emit","reason","metadata","notifySuccess","close","template","rf","DeskBookModalComponent_main_7_Template","DeskBookModalComponent_footer_9_Template","DeskBookModalComponent_ng_template_11_Template","_r2","data_r18","length","row_r19","_r21","row","ctx_r20","remove","DeskRestrictionModalComponent_ng_container_7_main_1_ng_template_2_Template","DeskRestrictionModalComponent_ng_container_7_main_1_ng_template_4_Template","DeskRestrictionModalComponent_ng_container_7_main_1_ng_template_6_Template","DeskRestrictionModalComponent_ng_container_7_main_1_ng_template_8_Template","restrictions","_c0","_c1","_c2","_r8","_r10","_r23","ctx_r22","add","ctx_r24","DeskRestrictionModalComponent_ng_container_7_main_1_Template","DeskRestrictionModalComponent_ng_container_7_footer_2_Template","adding","_r4","row_r28","_r30","ctx_r29","selected","map_id","ctx_r27","_r32","ctx_r31","start_date","ctx_r33","ctx_r34","search","DeskRestrictionModalComponent_ng_template_10_ng_template_14_Template","ctx_r35","ctx_r36","addRestriction","_r25","desk_list","_c3","_c4","_c5","_r26","DeskRestrictionModalComponent","_desks","startOfDay","desks","ngOnInit","initialised","pipe","first","toPromise","showMetadata","subscribe","details","Array","restriction","filter","_this2","take","push","start","valueOf","end","assets","map","_this3","disableClose","updateMetadata","name","description","isBefore","DeskRestrictionModalComponent_ng_container_2_Template","DeskRestrictionModalComponent_ng_container_7_Template","DeskRestrictionModalComponent_ng_template_8_Template","DeskRestrictionModalComponent_ng_template_10_Template","level_r7","display_name","newDeskBooking","_r11","newDesk","_r13","ctx_r12","loadCSVData","_r15","ctx_r14","downloadTemplate","manageRestrictions","DesksTopbarComponent","_route","_router","_dialog","filters","manage","is_map","setDate","setFilters","updateZones","zones","navigate","relativeTo","queryParams","zone_ids","join","queryParamsHandling","subscription","queryParamMap","params","has","split","level","levelWithID","parent_id","approve","reject","url","includes","events","_ref","zone","lvl","_x","apply","arguments","addDesks","Desk","randomInt","open","data","loadTextFileFromInputEvent","m","list","csvToJson","console","error","desk","bookable","groups","toJSON","jsonToCsv","downloadFile","booking","showBooking","approveDesk","_this4","rejectDesk","i4","DesksTopbarComponent_mat_option_5_Template","DesksTopbarComponent_mat_option_6_Template","DesksTopbarComponent_button_8_Template","DesksTopbarComponent_button_9_Template","DesksTopbarComponent_button_10_Template","DesksTopbarComponent_button_11_Template","DesksTopbarComponent_button_12_Template","DesksComponent","startPolling","NavigationEnd","url_parts","path","parts","ngOnDestroy","stopPolling","attrs","DesksComponent_mat_progress_bar_13_Template","date_r16","row_r17","row_r18","asset_name","asset_id","user_email","DeskBookingsComponent_ng_template_11_div_3_Template","user_name","booked_by_name","booked_by_email","ctx_r26","data_r22","_r31","ctx_r30","checkin","ctx_r32","data_r27","_r29","row_r33","extension_data","checkin_qr_code","_r34","_r36","loadMore","DeskBookingsComponent","has_more_pages","bookings","i","rejectAll","rejectAllDesks","nextPage","d","s","runMethod","checkinDesk","checked_in","fn","DeskBookingsComponent_ng_template_5_Template","DeskBookingsComponent_ng_template_7_Template","DeskBookingsComponent_ng_template_9_Template","DeskBookingsComponent_ng_template_11_Template","DeskBookingsComponent_ng_template_13_Template","DeskBookingsComponent_ng_template_15_Template","DeskBookingsComponent_ng_template_17_Template","DeskBookingsComponent_button_19_Template","_r6","_r0","DeskMapViewComponent","_desk","_desks_state","map_url","styles","map_styles","positions","map_positions","actions","map_actions","map_features","setHost","u","host","use_api","opts","setLevel","ExploreDesksService","zoom","center","restoredCtx","row_r12","key_r13","key","setRowValue","data_r11","_r20","key_r18","ctx_r19","data_r16","row_r22","_r24","ctx_r23","undefined","data_r21","row_r25","_r28","removeDesk","loadQrCode","qr_code","changed","ctx_r9","_r33","DesksManageComponent","Object","keys","new_desk_count","resp","openConfirmModal","title","content","icon","updated_desks","message","unique","status","clearNewDesks","item","generateQRCode","location","origin","encodeURIComponent","dragging","combineLatest","new_desks","n","concat","handleDrag","type","DesksManageComponent_ng_template_4_Template","DesksManageComponent_ng_template_6_Template","DesksManageComponent_ng_template_8_Template","DesksManageComponent_ng_template_10_Template","DesksManageComponent_div_12_Template","DesksManageComponent_div_13_Template","DesksManageComponent_div_14_Template","level_r2","ROUTES","component","NewDesksComponent","NewDesksComponent_mat_option_19_Template","NewDesksComponent_mat_progress_bar_26_Template","children","redirectTo","DesksModule","oAB","cJS","CommonModule","FormsModule","MatTabsModule","ReactiveFormsModule","UIModule","SharedExploreModule","SharedBookingsModule","FormFieldsModule","MatRadioModule","MatFormFieldModule","MatCheckboxModule","MatInputModule","RouterModule"],"sourceRoot":"webpack:///","sources":["./apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component.ts","./apps/concierge/src/app/desks/desk-book-modal.component.ts","./apps/concierge/src/app/desks/desk-restriction-modal.component.ts","./apps/concierge/src/app/desks/desks-topbar.component.ts","./apps/concierge/src/app/desks/desks.component.ts","./apps/concierge/src/app/desks/desk-bookings.component.ts","./apps/concierge/src/app/desks/desk-map-view.component.ts","./apps/concierge/src/app/desks/desks-manage.component.ts","./apps/concierge/src/app/desks/new-desks.component.ts","./apps/concierge/src/app/desks/desks.module.ts"],"sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { addDays, endOfDay } from 'date-fns';\n\n@Component({\n    selector: 'new-desk-form-details',\n    styles: [],\n    template: `\n        <!-- <div class=\"m-2 bg-yellow-500 p-2 text-center rounded shadow text-sm\">\n            The selected desk hasn't been booked. Please book the desk to be\n            able to check-in.\n        </div> -->\n        <div\n            class=\"p-0 sm:py-4 sm:px-16 divide-y divide-gray-300 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"flex items-center\" *ngIf=\"allow_groups\">\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-primary]=\"!(options | async)?.group\"\n                    [class.opacity-60]=\"(options | async)?.group\"\n                    (click)=\"setOptions({ group: false, members: [] })\"\n                >\n                    <app-icon class=\"text-2xl\">person</app-icon>\n                    <div class=\"\" i18n>Single</div>\n                    <div\n                        class=\"absolute h-2 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-gray-200]=\"(options | async)?.group\"\n                        [class.bg-primary]=\"!(options | async)?.group\"\n                    ></div>\n                </button>\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-primary]=\"(options | async)?.group\"\n                    [class.opacity-60]=\"!(options | async)?.group\"\n                    (click)=\"setOptions({ group: true })\"\n                >\n                    <app-icon class=\"text-2xl\">group_add</app-icon>\n                    <div class=\"\" i18n>Group</div>\n                    <div\n                        class=\"absolute h-2 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-gray-200]=\"!(options | async)?.group\"\n                        [class.bg-primary]=\"(options | async)?.group\"\n                    ></div>\n                </button>\n            </section>\n            <section class=\"p-2\" [class.!border-none]=\"allow_groups\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\" i18n>Details</div>\n                </h3>\n                <div\n                    class=\"w-full\"\n                    *ngIf=\"can_book_for_others && !(options | async)?.group\"\n                >\n                    <label for=\"title\">Host<span>*</span></label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error i18n\n                                >Booking title is required.</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                            [to]=\"end_date\"\n                            i18n\n                        >\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [disabled]=\"\n                                form.value.all_day || form.get('date')?.disabled\n                            \"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\" i18n>\n                            End Time<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"12 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [force]=\"form.value.all_day ? 'All Day' : ''\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute -top-2 right-0\"\n                            i18n\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"(options | async)?.group\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\" i18n>Group Members</div>\n                    <div class=\"flex-1 w-px\"></div>\n                </h3>\n                <div class=\"overflow-hidden\">\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        [ngModel]=\"(options | async)?.members || []\"\n                        (ngModelChange)=\"setOptions({ members: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"form.contains('resources')\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 3 : 2 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n                <p\n                    *ngIf=\"(options | async)?.group\"\n                    class=\"text-center rounded px-2 py-1 bg-yellow-400 shadow text-xs\"\n                >\n                    Desks nearby to the selected desk will booked for group\n                    members\n                </p>\n            </section>\n            <section class=\"p-2\" *ngIf=\"has_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-black/20 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 4 : 3 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n})\nexport class NewDeskFormDetailsComponent extends AsyncHandler {\n    @Input() public form: FormGroup;\n    @Output() public find = new EventEmitter<void>();\n    /** List of available buildings to select */\n    public readonly buildings = this._org.building_list;\n    /** List of available levels for the selected building */\n    public readonly levels = this._org.active_levels;\n    /** List of set options for desk booking */\n    public readonly options = this._state.options;\n    /** List of set options for desk booking */\n    public readonly features = this._state.features;\n\n    /** Selected desk for booking */\n    public selected_desk: Desk;\n    public from_id = false;\n\n    public readonly recurrence_options = ['daily', 'weekly', 'monthly'];\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get can_book_for_others() {\n        return this._settings.get('app.desks.can_book_for_others');\n    }\n\n    public get can_book_lockers() {\n        return this._settings.get('app.desks.can_book_lockers');\n    }\n    public get can_recurr() {\n        return this._settings.get('app.desks.recurrence_allowed');\n    }\n\n    public get allow_groups() {\n        return this._settings.get('app.desks.allow_groups');\n    }\n\n    public get has_assets() {\n        return !!this._settings.get('app.desks.has_assets');\n    }\n\n    public get needs_reason() {\n        return this._settings.get('app.desks.needs_reason') === true;\n    }\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.form && this.form) {\n            if (this.selected_desk?.id) {\n                this.form.patchValue({ resources: [this.selected_desk] });\n            }\n        }\n    }\n}\n","import { Component, Output, EventEmitter } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { BookingFormService } from '@placeos/bookings';\nimport { DialogEvent, notifyError, notifySuccess } from '@placeos/common';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n    selector: 'desk-book-modal',\n    template: `\n        <header>\n            <h2>New Desk Booking</h2>\n            <div class=\"flex-1 w-0\"></div>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            *ngIf=\"!(loading | async); else load_state\"\n            class=\"overflow-auto p-4\"\n        >\n            <new-desk-form-details [form]=\"form\"></new-desk-form-details>\n        </main>\n        <footer\n            *ngIf=\"!(loading | async)\"\n            class=\"flex justify-center items-center p-2 border-t border-gray-200\"\n        >\n            <button btn matRipple class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <main\n                loading\n                class=\"h-64 flex flex-col items-center justify-center\"\n            >\n                <mat-spinner [diameter]=\"48\" class=\"mb-4\"></mat-spinner>\n                <p>{{ loading | async }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DeskBookModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public readonly loading = new BehaviorSubject(false);\n\n    public get form() {\n        return this._booking_form.form;\n    }\n\n    constructor(\n        private _booking_form: BookingFormService,\n        private _dialog_ref: MatDialogRef<DeskBookModalComponent>\n    ) {}\n\n    public async save() {\n        this.loading.next(true);\n        const event = await this._booking_form.postForm().catch((_) => {\n            notifyError(_);\n            this.loading.next(false);\n            throw _;\n        });\n        this.event.emit({ reason: 'done', metadata: event });\n        notifySuccess('Successfully created booking');\n        this._dialog_ref.close();\n        this.loading.next(false);\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { notifyError, notifySuccess } from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { showMetadata, updateMetadata } from '@placeos/ts-client';\nimport { endOfDay, isBefore, startOfDay } from 'date-fns';\nimport { first, take } from 'rxjs/operators';\nimport { DesksStateService } from './desks-state.service';\nimport { AssetRestriction } from '@placeos/bookings';\n\n@Component({\n    selector: 'desk-restriction-modal',\n    template: `\n        <header class=\"flex items-center justify-between\">\n            <h2>\n                <ng-container *ngIf=\"adding\">Add</ng-container> Desk\n                Restrictions\n            </h2>\n            <button btn icon matRipple mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main\n                class=\"h-[65vh] overflow-auto\"\n                *ngIf=\"!adding; else add_state\"\n            >\n                <custom-table\n                    class=\"block w-[calc(80vw)]\"\n                    [dataSource]=\"restrictions\"\n                    [columns]=\"['start', 'duration', 'assets', 'actions']\"\n                    [display_column]=\"['Date', 'Period', 'No. of Desks', ' ']\"\n                    [template]=\"{\n                        start: date_template,\n                        duration: duration_template,\n                        assets: count_template,\n                        actions: actions_template\n                    }\"\n                    empty=\"No desk restrictions set\"\n                ></custom-table>\n                <ng-template #date_template let-data=\"data\">\n                    {{ data | date: 'mediumDate' }}\n                </ng-template>\n                <ng-template #duration_template let-data=\"data\">\n                    {{ data }}\n                </ng-template>\n                <ng-template #count_template let-data=\"data\">\n                    {{ data?.length || '0' }} desk(s)\n                </ng-template>\n                <ng-template #actions_template let-row=\"row\">\n                    <button btn icon matRipple (click)=\"remove(row)\">\n                        <app-icon>delete</app-icon>\n                    </button>\n                </ng-template>\n            </main>\n            <footer\n                class=\"flex items-center justify-end space-x-2 p-2 border-t border-gray-200\"\n                *ngIf=\"!adding\"\n            >\n                <button btn matRipple class=\"inverse\" (click)=\"add()\">\n                    Add Restriction\n                </button>\n                <button btn matRipple (click)=\"save()\">\n                    Save Restrictions\n                </button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div\n                class=\"flex flex-col items-center justify-center w-[20rem] h-[16rem] space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Saving desk restriction changes...</p>\n            </div>\n        </ng-template>\n        <ng-template #add_state>\n            <main class=\"flex flex-col h-[65vh] overflow-auto\">\n                <div class=\"flex items-center space-x-2 px-2 pt-2\">\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <mat-date-range-input [rangePicker]=\"picker\">\n                            <input\n                                matStartDate\n                                placeholder=\"Start date\"\n                                [(ngModel)]=\"start_date\"\n                            />\n                            <input\n                                matEndDate\n                                placeholder=\"End date\"\n                                [(ngModel)]=\"end_date\"\n                            />\n                        </mat-date-range-input>\n                        <mat-datepicker-toggle\n                            matIconSuffix\n                            [for]=\"picker\"\n                        ></mat-datepicker-toggle>\n                        <mat-date-range-picker #picker></mat-date-range-picker>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"flex-1\">\n                        <app-icon matPrefix>search</app-icon>\n                        <input\n                            matInput\n                            [(ngModel)]=\"search\"\n                            placeholder=\"Filter desks\"\n                        />\n                    </mat-form-field>\n                </div>\n                <custom-table\n                    class=\"block w-[calc(65vw)]\"\n                    [dataSource]=\"desk_list\"\n                    [filter]=\"search\"\n                    [columns]=\"['toggle', 'name', 'map_id']\"\n                    [display_column]=\"[' ', 'name', 'MapID']\"\n                    [template]=\"{\n                        toggle: toggle_template\n                    }\"\n                    empty=\"No desk restrictions set\"\n                ></custom-table>\n                <ng-template #toggle_template let-row=\"row\">\n                    <mat-checkbox\n                        [(ngModel)]=\"selected[row.id || row.map_id]\"\n                    ></mat-checkbox>\n                </ng-template>\n            </main>\n            <footer\n                class=\"flex items-center justify-end space-x-2 p-2 border-t border-gray-200\"\n            >\n                <button\n                    btn\n                    matRipple\n                    class=\"inverse w-32\"\n                    (click)=\"adding = false\"\n                >\n                    Back\n                </button>\n                <button btn matRipple (click)=\"addRestriction()\" class=\"w-32\">\n                    Add to Restrictions\n                </button>\n            </footer>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class DeskRestrictionModalComponent {\n    public loading = false;\n    public adding = false;\n    public search = '';\n    public selected: Record<string, boolean> = {};\n    public start_date = startOfDay(Date.now());\n    public end_date = endOfDay(Date.now());\n    public restrictions: AssetRestriction[] = [];\n    public readonly desk_list = this._desks.desks;\n\n    constructor(\n        private _desks: DesksStateService,\n        private _org: OrganisationService,\n        private _dialog_ref: MatDialogRef<DeskRestrictionModalComponent>\n    ) {}\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        showMetadata(this._org.building.id, 'desk_restrictions').subscribe(\n            ({ details }) => {\n                this.restrictions = details instanceof Array ? details : [];\n            }\n        );\n    }\n\n    public add() {\n        this.search = '';\n        this.start_date = startOfDay(Date.now());\n        this.end_date = endOfDay(Date.now());\n        this.selected = {};\n        this.adding = true;\n    }\n\n    public remove(restriction: AssetRestriction) {\n        this.restrictions = this.restrictions.filter((_) => _ !== restriction);\n    }\n\n    public async addRestriction() {\n        const desks = await this.desk_list.pipe(take(1)).toPromise();\n        this.restrictions.push({\n            start: this.start_date.valueOf(),\n            end: this.end_date.valueOf(),\n            assets: desks.filter((_) => this.selected[_.id]).map((_) => _.id),\n        });\n        this.adding = false;\n    }\n\n    public async save() {\n        this.loading = true;\n        this._dialog_ref.disableClose = true;\n        await updateMetadata(this._org.building.id, {\n            name: 'desk_restrictions',\n            description: 'Desk restrictions',\n            details: this.restrictions.filter((_) =>\n                isBefore(Date.now(), _.end)\n            ),\n        })\n            .toPromise()\n            .catch((_) => {\n                this.loading = false;\n                this._dialog_ref.disableClose = false;\n                notifyError('Failed to update desk restrictions');\n                throw _;\n            });\n        this.loading = false;\n        this._dialog_ref.disableClose = false;\n        this._dialog_ref.close();\n        notifySuccess('Successfully updated desk restrictions');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first, take } from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    csvToJson,\n    downloadFile,\n    jsonToCsv,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifySuccess,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { DesksStateService } from './desks-state.service';\nimport { showBooking } from '@placeos/bookings';\nimport { randomInt } from '@placeos/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { DeskRestrictionModalComponent } from './desk-restriction-modal.component';\n\n@Component({\n    selector: 'desks-topbar',\n    template: `\n        <div\n            class=\"flex items-center bg-white dark:bg-neutral-700 h-20 px-4 border-b border-gray-300 dark:border-neutral-500 space-x-2\"\n        >\n            <mat-form-field appearance=\"outline\">\n                <mat-select\n                    [ngModel]=\"\n                        (filters | async).zones\n                            ? (filters | async).zones[0]\n                            : 'All'\n                    \"\n                    (ngModelChange)=\"updateZones([$event])\"\n                    placeholder=\"All Levels\"\n                >\n                    <mat-option value=\"All\" *ngIf=\"!is_map\"\n                        >All Levels</mat-option\n                    >\n                    <mat-option\n                        *ngFor=\"let level of levels | async\"\n                        [value]=\"level.id\"\n                    >\n                        {{ level.display_name || level.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <button\n                btn\n                matRipple\n                *ngIf=\"!manage\"\n                class=\"mx-2 w-36\"\n                matTooltip=\"New Desk Booking\"\n                (click)=\"newDeskBooking()\"\n            >\n                New Booking\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"newDesk()\"\n                matTooltip=\"New Desk\"\n            >\n                <app-icon>add</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary relative text-white rounded\"\n                matTooltip=\"Upload Desks CSV\"\n            >\n                <app-icon>cloud_upload</app-icon>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"downloadTemplate()\"\n                matTooltip=\"Download Template Desk CSV\"\n            >\n                <app-icon>download</app-icon>\n            </button>\n            <button\n                btn\n                icon\n                matRipple\n                *ngIf=\"manage\"\n                class=\"bg-primary mx-2 text-white rounded\"\n                (click)=\"manageRestrictions()\"\n                matTooltip=\"Desk Restrictions\"\n            >\n                <app-icon>lock_open</app-icon>\n            </button>\n            <div class=\"flex-1 w-2\"></div>\n            <searchbar\n                class=\"mr-2\"\n                [model]=\"(filters | async)?.search\"\n                (modelChange)=\"setFilters({ search: $event })\"\n            ></searchbar>\n            <date-options (dateChange)=\"setDate($event)\"></date-options>\n        </div>\n    `,\n    styles: [\n        `\n            mat-form-field {\n                height: 3.25em;\n                width: 8em;\n            }\n        `,\n    ],\n})\nexport class DesksTopbarComponent extends AsyncHandler implements OnInit {\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    /** List of levels for the active building */\n    public readonly filters = this._desks.filters;\n\n    public manage = false;\n    public is_map = false;\n    /** Set filtered date */\n    public readonly setDate = (date) => this._desks.setFilters({ date });\n    public readonly setFilters = (o) => this._desks.setFilters(o);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n        this._desks.setFilters({ zones });\n    };\n\n    constructor(\n        private _desks: DesksStateService,\n        private _org: OrganisationService,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('zone_ids')) {\n                    const zones = params.get('zone_ids').split(',');\n                    if (zones.length) {\n                        this.updateZones(zones);\n                        const level = this._org.levelWithID(zones);\n                        if (!level) return;\n                        this._org.building = this._org.buildings.find(\n                            (bld) => bld.id === level.parent_id\n                        );\n                    }\n                }\n                if (params.has('date')) {\n                    this.setDate(new Date(+params.get('date')));\n                }\n                if (params.has('approve')) {\n                    this.approve(params.get('approve'));\n                } else if (params.has('reject')) {\n                    this.reject(params.get('reject'));\n                }\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            })\n        );\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe(() => {\n                this.manage = this._router.url?.includes('manage');\n                this.is_map = this._router.url?.includes('map');\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                const filters = await this.filters.pipe(take(1)).toPromise();\n                const zones =\n                    filters?.zones?.filter(\n                        (zone) =>\n                            levels.find((lvl) => lvl.id === zone) ||\n                            zone === 'All'\n                    ) || [];\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            })\n        );\n        this.manage = this._router.url?.includes('manage');\n        this.is_map = this._router.url?.includes('map');\n    }\n\n    public newDesk() {\n        this._desks.addDesks([new Desk({ id: `desk-${randomInt(999_999)}` })]);\n        notifySuccess(\n            'New desk added to local data. Make sure to save the desk before using it.'\n        );\n    }\n\n    public newDeskBooking() {\n        this._dialog.open(DeskBookModalComponent, {});\n    }\n\n    public manageRestrictions() {\n        this._dialog.open(DeskRestrictionModalComponent, {});\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._desks.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        })\n                )\n            );\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    public downloadTemplate() {\n        const desk: any = new Desk({\n            id: 'desk-123',\n            name: 'Test Desk',\n            bookable: true,\n            groups: ['test-desk-group', 'desk-bookers'],\n            features: ['Standing Desk', 'Dual Monitor'],\n        }).toJSON();\n        const data = jsonToCsv([desk]);\n        downloadFile('desk-template.csv', data);\n    }\n\n    /**\n     * Aprrove a desk booking\n     * @param id Booking ID to approve\n     */\n    private async approve(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.approveDesk(booking);\n        }\n    }\n\n    /**\n     * Reject a desk booking\n     * @param id Booking ID to reject\n     */\n    private async reject(id: string) {\n        const booking = await showBooking(id).toPromise();\n        if (booking) {\n            this._desks.rejectDesk(booking);\n        }\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { DesksStateService } from './desks-state.service';\n\n@Component({\n    selector: '[app-desks]',\n    template: `\n        <sidebar></sidebar>\n        <main\n            class=\"flex-1 relative w-1/2 flex flex-col bg-gray-200 dark:bg-neutral-600 overflow-hidden\"\n        >\n            <desks-topbar class=\"w-full\"></desks-topbar>\n            <div class=\"dark\">\n                <nav mat-tab-nav-bar>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'events']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'events'\"\n                    >\n                        Bookings\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'map']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'map'\"\n                    >\n                        Map View\n                    </a>\n                    <a\n                        mat-tab-link\n                        [routerLink]=\"['/book', 'desks', 'manage']\"\n                        queryParamsHandling=\"merge\"\n                        [active]=\"path === 'manage'\"\n                    >\n                        Manage Desks\n                    </a>\n                </nav>\n            </div>\n            <div class=\"flex-1 h-1/2 w-full relative overflow-auto\">\n                <router-outlet></router-outlet>\n            </div>\n            <mat-progress-bar\n                class=\"w-full\"\n                *ngIf=\"loading | async\"\n                mode=\"indeterminate\"\n            ></mat-progress-bar>\n        </main>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DesksComponent extends AsyncHandler implements OnInit, OnDestroy {\n    public readonly loading = this._state.loading;\n    public path: string;\n\n    constructor(private _state: DesksStateService, private _router: Router) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this._state.stopPolling();\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { DesksStateService } from './desks-state.service';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'desk-bookings',\n    template: `\n        <div class=\"w-full h-4\"></div>\n        <div class=\"overflow-auto h-full w-full px-4 pb-4\">\n            <custom-table\n                class=\"min-w-[76rem] block\"\n                [dataSource]=\"bookings\"\n                [filter]=\"(filters | async)?.search\"\n                [columns]=\"[\n                    'date',\n                    'period',\n                    'user_name',\n                    'group',\n                    'asset_name',\n                    'approver_name',\n                    'status',\n                    'checked_in',\n                    'actions'\n                ]\"\n                [display_column]=\"[\n                    'Date',\n                    'Period',\n                    'Person',\n                    'Group',\n                    'Desk',\n                    'Approver',\n                    'Status',\n                    'Checked In',\n                    ' '\n                ]\"\n                [column_size]=\"[\n                    '4r',\n                    '10r',\n                    'flex',\n                    '10r',\n                    '10r',\n                    '10r',\n                    '8r',\n                    '7r',\n                    '3.5r'\n                ]\"\n                [template]=\"{\n                    user_name: user_template,\n                    asset_name: desk_template,\n                    date: date_template,\n                    period: period_template,\n                    status: status_template,\n                    checked_in: option_template,\n                    access: option_template,\n                    actions: action_template\n                }\"\n                [empty]=\"\n                    (filters | async)?.search\n                        ? 'No matching desk bookings'\n                        : 'There are no desk booking for the currently selected date.'\n                \"\n            ></custom-table>\n            <ng-template #date_template let-date=\"data\">\n                <div class=\"flex flex-col items-center justify-center w-full\">\n                    <div class=\"opacity-60\">{{ date | date: 'MMM' }}</div>\n                    <div class=\"text-xl\">{{ date | date: 'dd' }}</div>\n                </div>\n            </ng-template>\n            <ng-template #period_template let-row=\"row\">\n                {{ row.date | date: 'shortTime' }} &ndash;\n                {{ row.end | date: 'shortTime' }}\n            </ng-template>\n            <ng-template #desk_template let-row=\"row\">\n                {{ row.asset_name || row.asset_id }}\n            </ng-template>\n            <ng-template #user_template let-row=\"row\">\n                <div class=\"flex flex-col justify-center\">\n                    <div class=\"select-all\">\n                        {{\n                            row.user_name ||\n                                row.user_email ||\n                                row.booked_by_name ||\n                                row.booked_by_email\n                        }}\n                    </div>\n                    <div\n                        *ngIf=\"row.user_name\"\n                        class=\"text-xs opacity-30 select-all\"\n                    >\n                        {{ row.user_email }}\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template #status_template let-data=\"data\">\n                <button\n                    matRipple\n                    [matMenuTriggerFor]=\"statusMenu\"\n                    class=\"rounded-3xl px-2 py-1 flex items-center space-x-2 capitalize\"\n                    [class.bg-success]=\"data === 'approved'\"\n                    [class.text-white]=\"data !== 'tentative'\"\n                    [class.bg-pending]=\"data === 'tentative'\"\n                    [class.text-black]=\"data === 'tentative'\"\n                    [class.bg-error]=\"\n                        data === 'cancelled' ||\n                        data === 'declined' ||\n                        data === 'ended'\n                    \"\n                >\n                    <div class=\"ml-2\">{{ data }}</div>\n                    <app-icon class=\"text-xl\">arrow_drop_down</app-icon>\n                </button>\n                <mat-menu #statusMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"approve(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\"\n                                >event_available</app-icon\n                            >\n                            <div>Approve Desk</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"reject(row)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">event_busy</app-icon>\n                            <div>Decline Desk</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #option_template let-data=\"data\" let-row=\"row\">\n                <button\n                    matRipple\n                    class=\"rounded-3xl px-2 py-1 text-white flex items-center space-x-2\"\n                    [matMenuTriggerFor]=\"checkinMenu\"\n                    [class.bg-neutral-600]=\"!data\"\n                    [class.bg-success]=\"data\"\n                >\n                    <div class=\"ml-2\">{{ data ? 'Yes' : 'No' }}</div>\n                    <app-icon class=\"text-xl\">arrow_drop_down</app-icon>\n                </button>\n                <mat-menu #checkinMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"checkin(row, true)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">check</app-icon>\n                            <div>Check-in</div>\n                        </div>\n                    </button>\n                    <button mat-menu-item (click)=\"checkin(row, false)\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon class=\"text-2xl\">cancel</app-icon>\n                            <div>Check-out</div>\n                        </div>\n                    </button>\n                </mat-menu>\n            </ng-template>\n            <ng-template #action_template let-row=\"row\">\n                <div class=\"flex items-center justify-end space-x-2 w-full\">\n                    <button\n                        icon\n                        matRipple\n                        [disabled]=\"!row.extension_data?.checkin_qr_code\"\n                        [matMenuTriggerFor]=\"menu\"\n                        matTooltip=\"View Desk QR code\"\n                        title=\"\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <div\n                            class=\"p-2 mx-4 my-2 rounded-lg border border-black\"\n                        >\n                            <img\n                                class=\"w-48\"\n                                [src]=\"row.extension_data?.checkin_qr_code\"\n                            />\n                        </div>\n                        <div mat-menu-item class=\"underline\">\n                            <button btn matRipple class=\"w-full\">\n                                Print QR Code\n                            </button>\n                        </div>\n                    </mat-menu>\n                </div>\n            </ng-template>\n        </div>\n\n        <button\n            btn\n            matRipple\n            class=\"absolute bottom-2 left-2 w-32 mx-auto my-4\"\n            *ngIf=\"!loading && (has_more_pages | async)\"\n            (click)=\"loadMore()\"\n        >\n            Load More\n        </button>\n        <button\n            icon\n            matRipple\n            class=\"absolute bottom-2 right-2 bg-white shadow\"\n            [matMenuTriggerFor]=\"menu\"\n        >\n            <app-icon>more_vert</app-icon>\n        </button>\n        <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"rejectAll()\">Reject All</button>\n        </mat-menu>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class DeskBookingsComponent {\n    public loading: string;\n    public readonly filters = this._state.filters;\n    public readonly has_more_pages = this._state.has_more_pages;\n    public readonly bookings = this._state.bookings.pipe(\n        map((i) =>\n            i.map((booking) => ({\n                ...booking,\n                end: booking.date + booking.duration * 60 * 1000,\n            }))\n        )\n    );\n\n    public readonly rejectAll = () => this._state.rejectAllDesks();\n    public readonly loadMore = () => this._state.nextPage();\n\n    public readonly checkin = (d, s?) =>\n        this.runMethod('checkin', async () => {\n            await this._state.checkinDesk(d, s);\n            d.checked_in = s ?? true;\n        });\n    public readonly approve = (d) =>\n        this.runMethod('approve', async () => this._state.approveDesk(d));\n    public readonly reject = (d) =>\n        this.runMethod('reject', async () => this._state.rejectDesk(d));\n\n    constructor(private _state: DesksStateService) {}\n\n    private async runMethod(name: string, fn: () => Promise<any>) {\n        this.loading = name;\n        await fn().catch((i) => null);\n        this.loading = '';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ExploreDesksService, ExploreStateService } from '@placeos/explore';\n\nimport { DesksStateService } from './desks-state.service';\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'desk-map-view',\n    template: `\n        <div map class=\"h-full w-full relative\">\n            <i-map\n                [src]=\"url | async\"\n                [zoom]=\"(positions | async).zoom\"\n                [center]=\"(positions | async).center\"\n                [styles]=\"styles | async\"\n                [features]=\"features | async\"\n                [actions]=\"actions | async\"\n            ></i-map>\n            <explore-zoom-controls\n                class=\"absolute bottom-2 right-2\"\n            ></explore-zoom-controls>\n            <div class=\"absolute top-0 left-0 p-2 text-black\">\n                <a-user-search-field\n                    [ngModel]=\"null\"\n                    (ngModelChange)=\"setHost($event)\"\n                    class=\"white\"\n                    placeholder=\"User for bookings...\"\n                ></a-user-search-field>\n            </div>\n            <div\n                info\n                class=\"absolute bottom-0 rounded p-2 m-2 bg-white dark:bg-neutral-700 shadow text-center\"\n            >\n                Click/Tap an available desk to book it.\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n\n            [info] {\n                left: 50%;\n                transform: translateX(-50%);\n            }\n        `,\n    ],\n    providers: [ExploreDesksService],\n})\nexport class DeskMapViewComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n\n    public readonly setHost = (u) => this._desks_state.setOptions({ host: u });\n\n    constructor(\n        private _state: ExploreStateService,\n        private _desk: DesksStateService,\n        private _desks_state: ExploreDesksService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit(): void {\n        this._desks_state.setOptions({ use_api: true });\n        this.subscription(\n            'date',\n            this._desk.filters.subscribe((opts) => {\n                const level = this._org.levelWithID(opts.zones);\n                if (level) this._state.setLevel(level.id);\n                this._desks_state.setOptions({\n                    date: opts.date || Date.now(),\n                    all_day: true,\n                    zones: opts.zones,\n                });\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    AsyncHandler,\n    csvToJson,\n    loadTextFileFromInputEvent,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    randomInt,\n    unique,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { updateMetadata } from '@placeos/ts-client';\nimport { generateQRCode } from 'libs/common/src/lib/qr-code';\nimport { combineLatest } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { DesksStateService } from './desks-state.service';\n\nconst QR_CODES = {};\n\n@Component({\n    selector: 'desks-manage',\n    template: `\n        <div\n            class=\"w-full h-full overflow-auto relative p-4\"\n            (dragenter)=\"handleDrag('enter', $event)\"\n            (window:dragend)=\"handleDrag('end', $event)\"\n        >\n            <custom-table\n                class=\"min-w-[72rem] block\"\n                [dataSource]=\"desks\"\n                [filter]=\"(filters | async)?.search\"\n                [columns]=\"[\n                    'map_id',\n                    'bookable',\n                    'name',\n                    'groups',\n                    'features',\n                    'actions'\n                ]\"\n                [display_column]=\"[\n                    'ID',\n                    'Bookable',\n                    'Name',\n                    'Groups',\n                    'Features',\n                    ' '\n                ]\"\n                [column_size]=\"['8r', '6r', '12r', 'flex', '16r', '10r']\"\n                [template]=\"{\n                    map_id: text_edit_template,\n                    name: text_edit_template,\n                    bookable: bookable_edit_template,\n                    groups: list_edit_template,\n                    features: list_edit_template,\n                    actions: action_template\n                }\"\n                [empty]=\"\n                    (filters | async)?.search\n                        ? 'No matching desks'\n                        : 'No desks for selected level'\n                \"\n                [pagination]=\"true\"\n                [page_size]=\"20\"\n            ></custom-table>\n            <ng-template\n                #list_edit_template\n                let-data=\"data\"\n                let-row=\"row\"\n                let-key=\"key\"\n            >\n                <item-list-field\n                    class=\"w-full\"\n                    hide-outline\n                    [placeholder]=\"\n                        key === 'groups' ? 'User Groups' : 'Features'\n                    \"\n                    [name]=\"key\"\n                    [ngModel]=\"\n                        (changes[row.id] ? changes[row.id][key] : null) || data\n                    \"\n                    (ngModelChange)=\"setRowValue(row.id, key, $event)\"\n                >\n                </item-list-field>\n            </ng-template>\n            <ng-template\n                #text_edit_template\n                let-data=\"data\"\n                let-row=\"row\"\n                let-key=\"key\"\n            >\n                <div class=\"w-full h-12\" hide-outline>\n                    <mat-form-field class=\"h-12 w-full\" appearance=\"outline\">\n                        <input\n                            matInput\n                            [placeholder]=\"key\"\n                            [name]=\"key\"\n                            [ngModel]=\"\n                                (changes[row.id]\n                                    ? changes[row.id][key]\n                                    : null) || data\n                            \"\n                            (ngModelChange)=\"setRowValue(row.id, key, $event)\"\n                        />\n                    </mat-form-field>\n                </div>\n            </ng-template>\n            <ng-template #bookable_edit_template let-data=\"data\" let-row=\"row\">\n                <div class=\"flex items-center justify-center pl-4\">\n                    <mat-checkbox\n                        [ngModel]=\"changes[row.id]?.bookable ?? data\"\n                        (ngModelChange)=\"\n                            setRowValue(row.id, 'bookable', $event)\n                        \"\n                    ></mat-checkbox>\n                </div>\n            </ng-template>\n            <ng-template #action_template let-row=\"row\">\n                <div class=\"flex items-center justify-end space-x-2\">\n                    <div\n                        class=\"p-2 text-2xl text-pending\"\n                        [class.opacity-0]=\"!changes[row.id]\"\n                        matTooltip=\"Desk has unsaved changes\"\n                    >\n                        <app-icon>warning</app-icon>\n                    </div>\n                    <button icon (click)=\"removeDesk(row)\">\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matMenuTriggerFor]=\"menu\"\n                        (click)=\"loadQrCode(row)\"\n                    >\n                        <app-icon>qr_code</app-icon>\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <div\n                            class=\"p-2 mx-4 my-2 rounded-lg border border-black\"\n                        >\n                            <img class=\"w-48\" [src]=\"row.qr_code\" />\n                        </div>\n                        <div mat-menu-item class=\"underline\">\n                            <button btn matRipple class=\"w-full\">\n                                Print QR Code\n                            </button>\n                        </div>\n                    </mat-menu>\n                </div>\n            </ng-template>\n            <div\n                class=\"fixed bottom-2 left-1/2 transform -translate-x-1/2 p-4 rounded bg-white shadow\"\n                *ngIf=\"changed > 0\"\n            >\n                <p class=\"mb-2 text-xl\">\n                    {{ changed }} Desk(s) with unsaved changes\n                </p>\n                <div class=\"flex items-center justify-center\">\n                    <button save btn matRipple (click)=\"save()\">\n                        Save Changes\n                    </button>\n                </div>\n            </div>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2 bg-white bg-opacity-60\"\n                *ngIf=\"loading\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n            <div\n                *ngIf=\"dragging\"\n                class=\"absolute inset-0 bg-black/60 flex items-center justify-center\"\n            >\n                <div class=\"bg-white p-4 rounded shadow\">\n                    <div\n                        class=\"border-4 border-gray-300 border-dashed rounded flex flex-col items-center justify-center w-64 h-64\"\n                    >\n                        Drop CSV file to add desks\n                    </div>\n                </div>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"loadCSVData($event)\"\n                />\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class DesksManageComponent extends AsyncHandler {\n    public changes = {};\n    public loading: string;\n    public dragging = false;\n    public readonly filters = this._state.filters;\n    public readonly desks = combineLatest([\n        this._state.desks,\n        this._state.new_desks,\n    ]).pipe(map(([d, n]) => d.concat(n)));\n\n    public get changed() {\n        return (\n            (Object.keys(this.changes).length || 0) +\n            (this._state.new_desk_count || 0)\n        );\n    }\n\n    public setRowValue(id: string, key: string, value: any) {\n        if (!this.changes[id]) this.changes[id] = {};\n        this.changes[id][key] = value;\n    }\n\n    public async removeDesk(desk: Desk) {\n        const resp = await openConfirmModal(\n            {\n                title: 'Remove desk',\n                content: `Remove desk ${desk.name}?`,\n                icon: { content: 'delete' },\n            },\n            this._dialog\n        );\n        if (resp.reason !== 'done') return;\n        resp.close();\n        const desks = await this.desks.pipe(take(1)).toPromise();\n        const updated_desks = desks.filter((_) => _.id !== desk.id);\n        const filters = await this.filters.pipe(take(1)).toPromise();\n        const level = this._org.levelWithID(filters.zones);\n        this.loading = 'Removing desk...';\n        await updateMetadata(level.id, {\n            name: 'desks',\n            description: 'desks',\n            details: updated_desks,\n        })\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                notifyError(`Error saving desk data. Error: ${e.message || e}`);\n                throw e;\n            });\n        notifySuccess('Successfully updated desks');\n        this._state.setFilters({});\n        this.loading = '';\n        this.changes = {};\n    }\n\n    public async save() {\n        this.loading = 'Saving changes to desks...';\n        const desks = await this.desks.pipe(take(1)).toPromise();\n        const updated_desks = unique(\n            desks.map((_) =>\n                new Desk({ ..._, ...(this.changes[_.id] || {}) }).toJSON()\n            ),\n            'id'\n        );\n        const filters = await this.filters.pipe(take(1)).toPromise();\n        const level = this._org.levelWithID(filters.zones);\n        await updateMetadata(level.id, {\n            name: 'desks',\n            description: 'desks',\n            details: updated_desks,\n        })\n            .toPromise()\n            .catch((e) => {\n                this.loading = '';\n                const msg =\n                    e?.status === 403\n                        ? 'You do not have the required permissions to save desk changes.'\n                        : e.message || e;\n                notifyError(`Error saving desk data. Error: ${msg}`);\n                throw e;\n            });\n        notifySuccess('Successfully updated desks');\n        this._state.clearNewDesks();\n        this.loading = '';\n        this.changes = {};\n    }\n\n    public loadQrCode(item: any) {\n        item.qr_code = generateQRCode(\n            `${\n                location.origin\n            }/workplace/#/book/code?asset_id=${encodeURIComponent(item.id)}`\n        );\n    }\n\n    constructor(\n        private _state: DesksStateService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {\n        super();\n    }\n\n    public async loadCSVData(event: InputEvent) {\n        this.loading = 'Loading CSV file...';\n        this.dragging = false;\n        const data = await loadTextFileFromInputEvent(event).catch(([m, e]) => {\n            notifyError(m);\n            throw e;\n        });\n        try {\n            const list = csvToJson(data) || [];\n            this._state.addDesks(\n                list.map(\n                    (_) =>\n                        new Desk({\n                            ..._,\n                            id: _.id || `desk-${randomInt(999_999)}`,\n                        })\n                )\n            );\n        } catch (e) {\n            console.error(e);\n        }\n        this.loading = '';\n    }\n\n    public handleDrag(type: 'enter' | 'leave' | 'end', event: DragEvent) {\n        this.dragging = type === 'enter';\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { DesksStateService } from './desks-state.service';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\n\n@Component({\n    selector: '[app-new-desks]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <div class=\"flex items-center w-full py-4 px-8 space-x-2\">\n                    <h2 class=\"text-2xl font-medium\">Desk Bookings</h2>\n                    <div class=\"flex-1 w-px\"></div>\n                    <searchbar\n                        class=\"mr-2\"\n                        [model]=\"(filters | async)?.search\"\n                        (modelChange)=\"setFilters({ search: $event })\"\n                    ></searchbar>\n                    <button\n                        btn\n                        matRipple\n                        class=\"space-x-2\"\n                        (click)=\"newDeskBooking()\"\n                    >\n                        <div>New Booking</div>\n                        <app-icon>add</app-icon>\n                    </button>\n                </div>\n                <div class=\"w-full flex items-center px-8\">\n                    <mat-form-field appearance=\"outline\" class=\"h-[3.5rem]\">\n                        <mat-select\n                            multiple\n                            [ngModel]=\"(filters | async)?.zones\"\n                            (ngModelChange)=\"updateZones($event)\"\n                            placeholder=\"All Levels\"\n                        >\n                            <mat-option\n                                *ngFor=\"let level of levels | async\"\n                                [value]=\"level.id\"\n                            >\n                                {{ level.display_name || level.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <div class=\"border-l h-full ml-8 mr-4\"></div>\n                    <div class=\"flex-1 w-px\"></div>\n                    <date-options (dateChange)=\"setDate($event)\"></date-options>\n                </div>\n                <div class=\"flex-1 h-1/2 w-full relative overflow-auto px-4\">\n                    <router-outlet></router-outlet>\n                </div>\n                <mat-progress-bar\n                    class=\"w-full\"\n                    *ngIf=\"loading | async\"\n                    mode=\"indeterminate\"\n                ></mat-progress-bar>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: #fff;\n            }\n        `,\n    ],\n})\nexport class NewDesksComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    public readonly loading = this._state.loading;\n    public path: string;\n    /** List of levels for the active building */\n    public readonly filters = this._state.filters;\n    /** List of levels for the active building */\n    public readonly levels = this._org.active_levels;\n    public readonly setDate = (date) => this._state.setFilters({ date });\n    public readonly setFilters = (o) => this._state.setFilters(o);\n    /** Update active zones for desks */\n    public readonly updateZones = (zones: string[]) => {\n        this._router.navigate([], {\n            relativeTo: this._route,\n            queryParams: { zone_ids: zones.join(',') },\n            queryParamsHandling: 'merge',\n        });\n        this._state.setFilters({ zones });\n    };\n\n    constructor(\n        private _state: DesksStateService,\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _dialog: MatDialog,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.startPolling();\n        this.subscription(\n            'router.events',\n            this._router.events.subscribe((e) => {\n                if (e instanceof NavigationEnd) {\n                    const url_parts = this._router.url?.split('/') || [''];\n                    this.path = url_parts[parts.length - 1].split('?')[0];\n                }\n            })\n        );\n        this.subscription(\n            'levels',\n            this._org.active_levels.subscribe(async (levels) => {\n                const filters = await this.filters.pipe(take(1)).toPromise();\n                const zones =\n                    filters?.zones?.filter(\n                        (zone) =>\n                            levels.find((lvl) => lvl.id === zone) ||\n                            zone === 'All'\n                    ) || [];\n                if (!zones.length && levels.length) {\n                    zones.push(levels[0].id);\n                }\n                this.updateZones(zones);\n            })\n        );\n        const parts = this._router.url?.split('/') || [''];\n        this.path = parts[parts.length - 1].split('?')[0];\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this._state.stopPolling();\n    }\n\n    public newDeskBooking() {\n        this._dialog.open(DeskBookModalComponent, {});\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { SharedExploreModule } from '@placeos/explore';\nimport { UIModule } from '../ui/ui.module';\n\nimport { DesksComponent } from './desks.component';\nimport { DeskBookingsComponent } from './desk-bookings.component';\nimport { DesksTopbarComponent } from './desks-topbar.component';\nimport { DeskMapViewComponent } from './desk-map-view.component';\nimport { DesksManageComponent } from './desks-manage.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { NewDeskFormDetailsComponent } from 'apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component';\nimport { DeskBookModalComponent } from './desk-book-modal.component';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { DeskRestrictionModalComponent } from './desk-restriction-modal.component';\nimport { FormFieldsModule } from '@placeos/form-fields';\nimport { NewDesksComponent } from './new-desks.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: 'new',\n        component: NewDesksComponent,\n        children: [\n            { path: 'events', component: DeskBookingsComponent },\n            { path: 'map', component: DeskMapViewComponent },\n            { path: 'manage', component: DesksManageComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n    {\n        path: '',\n        component: DesksComponent,\n        children: [\n            { path: 'events', component: DeskBookingsComponent },\n            { path: 'map', component: DeskMapViewComponent },\n            { path: 'manage', component: DesksManageComponent },\n            { path: '**', redirectTo: 'events' },\n        ],\n    },\n];\n\n@NgModule({\n    declarations: [\n        NewDesksComponent,\n        DesksComponent,\n        DeskBookingsComponent,\n        DesksTopbarComponent,\n        DeskMapViewComponent,\n        DesksManageComponent,\n        NewDeskFormDetailsComponent,\n        DeskBookModalComponent,\n        DeskRestrictionModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatTabsModule,\n        ReactiveFormsModule,\n        UIModule,\n        SharedExploreModule,\n        SharedBookingsModule,\n        FormFieldsModule,\n        MatRadioModule,\n        MatFormFieldModule,\n        MatCheckboxModule,\n        MatInputModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class DesksModule {}\n"],"x_google_ignoreList":[]}