{"version":3,"file":"apps_concierge_src_app_level-manager_level-manager_module_ts.js","mappings":"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","sources":["./apps/concierge/src/app/level-manager/level-list.component.ts","./apps/concierge/src/app/level-manager/level-management.service.ts","./apps/concierge/src/app/level-manager/level-manager.component.ts","./apps/concierge/src/app/level-manager/level-manager.module.ts","./apps/concierge/src/app/level-manager/level-modal.component.ts","./libs/users/src/index.ts","./libs/users/src/lib/location.class.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { LevelManagementService } from './level-management.service';\nimport { notifySuccess } from '@placeos/common';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BookingPanelSettingsModalComponent } from '../ui/booking-panel-settings-modal.component';\n\n@Component({\n    selector: 'level-list',\n    template: `\n        <div class=\"absolute inset-0 overflow-auto px-8\">\n            <simple-table\n                class=\"min-w-[48rem] block text-sm\"\n                [data]=\"levels\"\n                empty_message=\"No levels\"\n                [columns]=\"[\n                    {\n                        key: 'display_name',\n                        name: 'Level Name',\n                        content: name_template,\n                    },\n                    { key: 'building', name: 'Building', size: '16rem' },\n                    {\n                        key: 'parking',\n                        name: 'Parking',\n                        content: parking_template,\n                        size: '5rem',\n                        sortable: false,\n                    },\n                    {\n                        key: 'actions',\n                        name: ' ',\n                        content: action_template,\n                        size: '6rem',\n                        sortable: false,\n                    },\n                ]\"\n                [sortable]=\"true\"\n            ></simple-table>\n            <div class=\"w-full h-20\"></div>\n        </div>\n        <ng-template #name_template let-row=\"row\" let-data=\"data\">\n            <button\n                class=\"px-4 py-2 text-left leading-tight\"\n                (click)=\"copyToClipboard(row.id)\"\n            >\n                <div class=\"\">{{ data }}</div>\n                <div class=\"text-[0.625rem] opacity-30 font-mono\">\n                    {{ row.id }}\n                </div>\n            </button>\n        </ng-template>\n        <ng-template #parking_template let-row=\"row\">\n            <div\n                *ngIf=\"row.tags?.includes('parking')\"\n                class=\"rounded h-8 w-8 flex items-center justify-center text-2xl bg-success text-success-content mx-auto\"\n            >\n                <app-icon>done</app-icon>\n            </div>\n        </ng-template>\n        <ng-template #action_template let-row=\"row\">\n            <div class=\"w-full flex justify-end space-x-2 p-2\">\n                <button\n                    icon\n                    matRipple\n                    matTooltip=\"Edit Level\"\n                    (click)=\"editLevel(row)\"\n                >\n                    <app-icon>edit</app-icon>\n                </button>\n                <button mat-menu-item (click)=\"editBookingPanelSettings(row)\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon\n                            className=\"material-symbols-rounded\"\n                            class=\"text-xl\"\n                        >\n                            top_panel_open\n                        </app-icon>\n                        <span>Edit Booking Panel Settings</span>\n                    </div>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    class=\"text-error\"\n                    (click)=\"removeLevel(row)\"\n                    matTooltip=\"Remove Level\"\n                >\n                    <app-icon>delete</app-icon>\n                </button>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class LevelListComponent {\n    public readonly levels = this._manager.filtered_levels;\n\n    public readonly editLevel = (level) => this._manager.editLevel(level);\n    public readonly removeLevel = (level) => this._manager.removeLevel(level);\n\n    public readonly copyToClipboard = (id: string) => {\n        const success = this._clipboard.copy(id);\n        if (success) notifySuccess('Level ID copied to clipboard.');\n    };\n\n    constructor(\n        private _manager: LevelManagementService,\n        private _clipboard: Clipboard,\n        private _dialog: MatDialog,\n    ) {}\n\n    public editBookingPanelSettings(level) {\n        this._dialog.open(BookingPanelSettingsModalComponent, {\n            data: { zone: level },\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { PlaceZone, removeZone } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { LevelModalComponent } from './level-modal.component';\nimport { notifySuccess, openConfirmModal } from '@placeos/common';\n\nexport interface LevelListOptions {\n    zone?: string;\n    search?: string;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class LevelManagementService {\n    private _options = new BehaviorSubject<LevelListOptions>({});\n    private _change = new BehaviorSubject(0);\n\n    public options = this._options.asObservable();\n\n    public readonly level_list = this._org.level_list;\n\n    public readonly filtered_levels = combineLatest([\n        this.level_list,\n        this._options,\n    ]).pipe(\n        map(([list, options]) => {\n            if (options.zone) {\n                list = list.filter((_) => _.parent_id === options.zone);\n            }\n            if (options.search) {\n                list = list.filter((_) =>\n                    _.name.toLowerCase().includes(options.search.toLowerCase())\n                );\n            }\n            for (const level of list) {\n                const parent = this._org.buildings.find(\n                    (bld) => bld.id === level.parent_id\n                );\n                if (parent) {\n                    (level as any).building =\n                        parent.display_name || parent.name;\n                }\n            }\n            return list;\n        })\n    );\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    public setFilters(options: Partial<LevelListOptions>) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setSearchString(search: string) {\n        this._options.next({ ...this._options.getValue(), search });\n    }\n\n    public editLevel(level: PlaceZone = new PlaceZone()) {\n        const ref = this._dialog.open(LevelModalComponent, {\n            data: level,\n        });\n        ref.afterClosed().subscribe((data) => {\n            if (data) this._org.addZone(data);\n        });\n    }\n\n    public async removeLevel(level: BuildingLevel) {\n        const ref = await openConfirmModal(\n            {\n                title: 'Remove Building',\n                content: `Are you sure you want to remove the building \"${level.name}\"?`,\n                icon: { content: 'delete_forever' },\n                confirm_text: 'Remove',\n            },\n            this._dialog\n        );\n        if (ref.reason !== 'done') return ref.close();\n        ref.loading('Removing building...');\n        await removeZone(level.id).toPromise();\n        this._org.removeZone({ id: level.id, tags: ['level'] } as any);\n        notifySuccess('Successfully removed building.');\n        ref.close();\n    }\n}\n","import { Component } from '@angular/core';\nimport { LevelManagementService } from './level-management.service';\n\n@Component({\n    selector: '[app-level-manager]',\n    template: `\n        <app-topbar></app-topbar>\n        <div class=\"flex flex-1 h-px\">\n            <app-sidebar></app-sidebar>\n            <main class=\"flex flex-col flex-1 w-1/2 h-full\">\n                <header\n                    class=\"flex items-center justify-between mb-2 px-8 pt-4 pb-8\"\n                >\n                    <h2 class=\"text-2xl font-medium\">Level Management</h2>\n                    <button btn matRipple (click)=\"newLevel()\" class=\"w-40\">\n                        Add Level\n                    </button>\n                </header>\n                <level-list\n                    class=\"block w-full relative flex-1 h-1/2\"\n                ></level-list>\n            </main>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n                background-color: var(--b1);\n            }\n\n            sidebar {\n                height: 100%;\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                flex: 1;\n                min-width: 50%;\n                height: 100%;\n            }\n        `,\n    ],\n})\nexport class LevelManagerComponent {\n    public readonly newLevel = () => this._manager.editLevel();\n\n    constructor(private _manager: LevelManagementService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Route } from '@angular/router';\n\nimport { UIModule } from '../ui/ui.module';\n\nimport { SharedSpacesModule } from '@placeos/spaces';\nimport { SharedUsersModule } from '@placeos/users';\n\nimport { LevelManagerComponent } from './level-manager.component';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { LevelListComponent } from './level-list.component';\nimport { LevelModalComponent } from './level-modal.component';\n\nconst ROUTES: Route[] = [\n    { path: '', component: LevelManagerComponent },\n    { path: 'new', component: LevelManagerComponent },\n];\n\n@NgModule({\n    declarations: [\n        LevelManagerComponent,\n        LevelListComponent,\n        LevelModalComponent,\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        UIModule,\n        SharedSpacesModule,\n        SharedUsersModule,\n        MatChipsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class LevelManagerModule {}\n","import { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { getInvalidFields, notifyError } from '@placeos/common';\nimport { BuildingLevel, OrganisationService } from '@placeos/organisation';\nimport { addZone, authority, updateZone } from '@placeos/ts-client';\n\n@Component({\n    selector: 'level-modal',\n    template: `\n        <header>\n            <h2>{{ form.value.id ? 'Edit' : 'Add' }} Level</h2>\n            <button btn icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main\n            class=\"max-h-[65vh] overflow-y-auto overflow-x-hidden p-4\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <form\n                system\n                class=\"flex flex-col w-[36rem] max-w-[calc(100vw-4rem)]\"\n                *ngIf=\"form\"\n                [formGroup]=\"form\"\n            >\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.parent_id\">\n                    <label\n                        for=\"zone\"\n                        [class.error]=\"\n                            form.controls.parent_id.invalid &&\n                            form.controls.parent_id.touched\n                        \"\n                        i18n=\"@@zoneLabel\"\n                    >\n                        Building<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            formControlName=\"parent_id\"\n                            placeholder=\"Select Building\"\n                        >\n                            <mat-option\n                                *ngFor=\"let building of building_list | async\"\n                                [value]=\"building.id\"\n                            >\n                                {{ building.display_name || building.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error>Building is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.display_name\">\n                    <label for=\"display-name\" i18n=\"@@displayNameLabel\">\n                        Display Name:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"display-name\"\n                            placeholder=\"Display Name\"\n                            i18n-placeholder=\"@@displayNamePlaceholder\"\n                            formControlName=\"display_name\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.map_id\">\n                    <label for=\"map-id\" i18n=\"@@mapIdLabel\"> Map URL: </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"map-id\"\n                            placeholder=\"URL of the Map SVG file\"\n                            i18n-placeholder=\"@@mapIdPlaceholder\"\n                            formControlName=\"map_id\"\n                        />\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col py-2\" *ngIf=\"form.controls.parking\">\n                    <mat-checkbox name=\"parking\" formControlName=\"parking\">\n                        Has Parking Spaces\n                    </mat-checkbox>\n                </div>\n            </form>\n        </main>\n        <footer\n            class=\"p-2 flex justify-end border-t border-base-200\"\n            *ngIf=\"!loading\"\n        >\n            <button btn class=\"w-32\" (click)=\"save()\">Save</button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center justify-center w-64 h-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p class=\"mt-4\">Saving level...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class LevelModalComponent {\n    public loading = false;\n    public readonly building_list = this._org.building_list;\n\n    public readonly form = new FormGroup({\n        id: new FormControl(this._data?.id || ''),\n        display_name: new FormControl(this._data?.display_name || '', [\n            Validators.required,\n        ]),\n        parent_id: new FormControl(this._data?.parent_id || '', [\n            Validators.required,\n        ]),\n        map_id: new FormControl(this._data?.map_id || '', [\n            Validators.required,\n        ]),\n        parking: new FormControl(\n            this._data?.tags?.includes('parking') || false\n        ),\n    });\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: BuildingLevel | undefined,\n        private _dialog_ref: MatDialogRef<LevelModalComponent>\n    ) {}\n\n    public async save() {\n        if (!this.form.valid) {\n            return notifyError(\n                `Some form fields are invalid. [${getInvalidFields(\n                    this.form\n                ).join(', ')}]`\n            );\n        }\n        this.loading = true;\n        const data: any = this.form.getRawValue();\n        data.tags = data.parking ? ['level', 'parking'] : ['level'];\n        const resp = await (data.id\n            ? updateZone(data.id, {\n                  ...data,\n                  name: `LEVEL ${authority().description} ${data.display_name}`,\n              })\n            : addZone({\n                  ...data,\n                  name: `LEVEL ${authority().description} ${data.display_name}`,\n              })\n        )\n            .toPromise()\n            .catch();\n        if (resp.id) this._dialog_ref.close(resp);\n        this.loading = false;\n    }\n}\n","export * from './lib/users.module';\nexport * from './lib/new-user-modal.component';\nexport * from './lib/find-availability-modal/find-availability-modal.component';\nexport * from './lib/user-form.component';\nexport * from './lib/location.class';\nexport * from './lib/user.class';\nexport * from './lib/user.utilities';\nexport * from './lib/users.module';\nexport * from './lib/guests.fn';\nexport * from './lib/staff.fn';\n","import { HashMap } from '@placeos/common';\nimport { getUnixTime } from 'date-fns';\n\nexport class MapLocation {\n    /** Source that the location was generated */\n    public type: 'desk' | 'wireless' | 'meeting' | 'other';\n    /** Details of the location */\n    public position: string | { x: number, y: number };\n    /** Accuracy of the location data */\n    public variance: number;\n    /** Unix epoch in seconds that the data was last updated */\n    public last_seen: number;\n    /** ID of the level associated with the location */\n    public level: string;\n    /** ID of the building associated with the location */\n    public building: string;\n    /** Whether user is currently at the location if fixed */\n    public at_location: boolean;\n    /**  */\n    public coordinates_from:\n        | 'top-left'\n        | 'top-right'\n        | 'bottom-left'\n        | 'bottom-right';\n\n    constructor(_data: HashMap = {}) {\n        this.type = _data.type || _data.location || 'other';\n        this.position = _data.position ||\n            _data.map_id || _data.asset_id || {\n                x: _data.x / _data.map_width || 0,\n                y: _data.y / _data.map_height || 0,\n            };\n        this.variance = _data.variance || 0;\n        this.last_seen = _data.last_seen || getUnixTime(new Date());\n        this.level = _data.level;\n        this.building = _data.building;\n        this.at_location = !!_data.at_location;\n        this.coordinates_from = _data.coordinates_from || 'top-left';\n    }\n}\n"],"names":["LevelManagementService","notifySuccess","Clipboard","MatDialog","BookingPanelSettingsModalComponent","i0","ɵɵelementStart","ɵɵlistener","LevelListComponent_ng_template_3_Template_button_click_0_listener","row_r2","ɵɵrestoreView","_r1","row","ctx_r2","ɵɵnextContext","ɵɵresetView","copyToClipboard","id","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","data_r4","ɵɵtextInterpolate1","ɵɵtemplate","LevelListComponent_ng_template_5_div_0_Template","ɵɵproperty","row_r5","tags","includes","LevelListComponent_ng_template_7_Template_button_click_1_listener","row_r7","_r6","editLevel","LevelListComponent_ng_template_7_Template_button_click_4_listener","editBookingPanelSettings","LevelListComponent_ng_template_7_Template_button_click_10_listener","removeLevel","LevelListComponent","constructor","_manager","_clipboard","_dialog","levels","filtered_levels","level","success","copy","open","data","zone","_","ɵɵdirectiveInject","i1","i2","i3","_2","selectors","decls","vars","consts","template","LevelListComponent_Template","rf","ctx","ɵɵelement","LevelListComponent_ng_template_3_Template","ɵɵtemplateRefExtractor","LevelListComponent_ng_template_5_Template","LevelListComponent_ng_template_7_Template","ɵɵpureFunction4","_c4","ɵɵpureFunction1","_c0","name_template_r8","ɵɵpureFunction0","_c1","_c2","parking_template_r9","_c3","action_template_r10","OrganisationService","PlaceZone","removeZone","BehaviorSubject","combineLatest","map","LevelModalComponent","openConfirmModal","_org","_options","_change","options","asObservable","level_list","pipe","list","filter","parent_id","search","name","toLowerCase","parent","buildings","find","bld","building","display_name","setFilters","next","getValue","setSearchString","ref","afterClosed","subscribe","addZone","_this","_asyncToGenerator","title","content","icon","confirm_text","reason","close","loading","toPromise","ɵɵinject","factory","ɵfac","providedIn","LevelManagerComponent","newLevel","attrs","LevelManagerComponent_Template","LevelManagerComponent_Template_button_click_7_listener","CommonModule","FormsModule","RouterModule","UIModule","SharedSpacesModule","SharedUsersModule","MatChipsModule","ROUTES","path","component","LevelManagerModule","_3","forChild","declarations","imports","FormControl","FormGroup","Validators","MAT_DIALOG_DATA","MatDialogRef","getInvalidFields","notifyError","BuildingLevel","authority","updateZone","building_r1","ɵɵi18nStart","ɵɵi18nEnd","LevelModalComponent_main_4_form_1_div_1_mat_option_6_Template","ɵɵclassProp","ctx_r1","form","controls","invalid","touched","ɵɵpipeBind1","building_list","ɵɵi18n","LevelModalComponent_main_4_form_1_div_1_Template","LevelModalComponent_main_4_form_1_div_2_Template","LevelModalComponent_main_4_form_1_div_3_Template","LevelModalComponent_main_4_form_1_div_4_Template","map_id","parking","LevelModalComponent_main_4_form_1_Template","LevelModalComponent_footer_5_Template_button_click_1_listener","_r3","save","_data","_dialog_ref","required","valid","join","getRawValue","resp","description","catch","i18n_0","ngI18nClosureMode","$localize","LevelModalComponent_button_3_Template","LevelModalComponent_main_4_Template","LevelModalComponent_footer_5_Template","LevelModalComponent_ng_template_6_Template","value","load_state_r4","getUnixTime","MapLocation","type","location","position","asset_id","x","map_width","y","map_height","variance","last_seen","Date","at_location","coordinates_from"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}