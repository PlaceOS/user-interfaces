{"version":3,"sources":["/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-state.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-spaces.service.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/compareAsc/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInCalendarMonths/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInMonths/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInSeconds/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/_lib/cloneObject/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/_lib/assign/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/formatDistance/index.js","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-device-info.component.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/formatDistanceToNow/index.js","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-desk-info.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-desks.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore.module.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-zoom-control.component.ts"],"names":["ExploreStateService","_org","_spaces","_settings","super","_level","_positions","zoom","center","x","y","_styles","_features","_actions","_labels","_options","level","this","asObservable","spaces","list","pipe","details","filter","space","zones","includes","id","map_url","lvl","map_id","map_positions","map_features","features","options","key","show_zones","get","concat","map_actions","i","Object","values","reduce","a","map_labels","labels","map_styles","styles","style_mappings","keys","h","display","initialised","_","subscribe","subscription","active_building","bld","getValue","level_list","levelsForBuilding","find","length","setLevel","next","zone_id","levelWithID","name","style_map","feature_map","actions","actions_map","labels_map","DEFAULT_COLOURS","free","pending","reserved","busy","unknown","compareAsc","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","diff","getTime","differenceInCalendarMonths","yearDiff","getFullYear","monthDiff","getMonth","differenceInMonths","sign","difference","Math","abs","setMonth","isLastMonthNotFull","result","differenceInSeconds","differenceInMilliseconds","floor","ceil","cloneObject","dirtyObject","target","TypeError","property","hasOwnProperty","MINUTES_IN_DAY","MINUTES_IN_MONTH","formatDistance","dirtyDate","dirtyBaseDate","dirtyOptions","locale","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","months","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","round","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","ExploreDeviceInfoComponent","_details","_element","username","mac","manufacturer","os","ssid","variance","toFixed","diameter","bg_color","onEnter","loadUser","onClick","onTouch","Date","now","formatDistanceToNow","last_seen","tries","setTimeout","parent","nativeElement","parentElement","ngOnInit","position","parseInt","style","top","left","y_pos","x_pos","mod","system","execute","catch","assigned_to","ExploreDeskInfoComponent","user","start","end","ExploreDesksService","_state","_desks_service","_in_use","BehaviorSubject","_desks","_reserved","_statuses","_bindings","_stats","occupied","total","desk_list","switchMap","map","j","zone","catchError","first","toPromise","setOptions","enable_booking","clearBindings","bindToDesks","combineLatest","desks","in_use","bookable","is_used","some","is_reserved","processDesks","timeout","updateStatus","ngOnDestroy","bindings","unsub","forEach","b","unbind","buildings","parent_id","system_id","building","area_management","organisation","binding","listen","d","devices","value","v","location","at_location","processDevices","bind","push","colours","desk_id","fill","opacity","setStyles","device","map_width","map_height","coordinates_from","content","data","sort","sqrt","pow","setFeatures","desk","hover","status","action","callback","bookDesk","host","date","setActions","SharedExploreModule","ExploreZoomControlComponent","zoomIn","setPositions","min","positions","zoomOut","max","reset"],"mappings":"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","file":"default~desks-desks-module~facilities-facilities-module.31e957250c43d3e28849.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n    Point,\n    ViewAction,\n    ViewerFeature,\n    ViewerLabel,\n    ViewerStyles,\n} from '@yuion/svg-viewer';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, filter, first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService } from '@user-interfaces/common';\nimport {\n    BuildingLevel,\n    OrganisationService,\n} from '@user-interfaces/organisation';\nimport { SpacesService } from '@user-interfaces/spaces';\n\nexport interface MapOptions {\n    show_zones?: boolean;\n    show_devices?: boolean;\n    show_levels?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends BaseClass {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({});\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([\n        this._level,\n        this._spaces.list,\n    ]).pipe(\n        map((details) =>\n            details[1].filter((space) => space.zones.includes(details[0].id))\n        )\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(\n        map((lvl) => (lvl ? lvl.map_id : '') || '')\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([\n        this._features,\n        this._options,\n    ]).pipe(\n        debounceTime(500),\n        map((details) => {\n            const [features, options] = details;\n            let list = [];\n            for (const key in features) {\n                if (\n                    key !== 'devices' ||\n                    (options.show_zones &&\n                        this._settings.get('app.explore.display_devices') !==\n                            false)\n                ) {\n                    list = list.concat(features[key]);\n                }\n            }\n            return list;\n        })\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = this._actions.pipe(\n        debounceTime(500),\n        map((i) => Object.values(i).reduce((list, a) => list.concat(a), []))\n    );\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([\n        this._labels,\n        this._options,\n    ]).pipe(\n        debounceTime(500),\n        map((details) => {\n            const [labels, options] = details;\n            let list = [];\n            for (const key in labels) {\n                if (key !== 'zones' || options.show_zones) {\n                    list = list.concat(labels[key]);\n                }\n            }\n            return list;\n        })\n    );\n    /** Current map styles */\n    public readonly map_styles = combineLatest([\n        this._styles,\n        this._options,\n    ]).pipe(\n        debounceTime(500),\n        map((details) => {\n            const [styles, options] = details;\n            const style_mappings = Object.keys(styles).reduce(\n                (a, h) => ({ ...a, ...styles[h] }),\n                {}\n            );\n            if (!options.show_zones) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            style_mappings['text'] = { display: 'none' };\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    public get active_level() {\n        return this._level.getValue();\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _spaces: SpacesService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'building',\n                this._org.active_building\n                    .pipe(filter((_) => !!_))\n                    .subscribe((bld) => {\n                        const level = this._level.getValue();\n                        const level_list = this._org.levelsForBuilding(bld);\n                        const has_level = level_list.find(\n                            (lvl) => level?.id === lvl.id\n                        );\n                        if (!has_level && level_list.length) {\n                            this.setLevel(level_list[0].id);\n                        }\n                    })\n            );\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) {\n            this._level.next(lvl);\n        }\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@yuion/svg-viewer';\n\nimport { BaseClass, HashMap, notifyError, SettingsService } from '@user-interfaces/common';\nimport { Space } from '@user-interfaces/spaces';\nimport { CalendarEvent } from '@user-interfaces/events';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#e65100',\n    busy: '#e53935',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends BaseClass implements OnDestroy {\n    private _spaces: Space[] = [];\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _bindings: any[] = [];\n    private _statuses: HashMap<string> = {};\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            this._state.spaces.subscribe((list) => {\n                this.clearBindings();\n                this._spaces = list;\n                this.bindToSpaces();\n            })\n        );\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.clearBindings();\n    }\n\n    public clearBindings() {\n        if (!this._spaces) return;\n        for (const space of this._spaces) {\n            this.unsub(`bookings-${space.id}`);\n            this.unsub(`status-${space.id}`);\n        }\n        this._bindings.forEach((b) => b.unbind());\n        this._bindings = [];\n        this._statuses = {};\n    }\n\n    public bindToSpaces() {\n        if (!this._spaces) return;\n        for (const space of this._spaces) {\n            let binding = getModule(space.id, 'Bookings').binding('bookings');\n            this.subscription(\n                `bookings-${space.id}`,\n                binding\n                    .listen()\n                    .subscribe((d) => this.handleBookingsChange(space, d))\n            );\n            binding.bind();\n            this._bindings.push(binding);\n            binding = getModule(space.id, 'Bookings').binding('status');\n            this.subscription(\n                `status-${space.id}`,\n                binding\n                    .listen()\n                    .subscribe((d) => this.handleStatusChange(space, d))\n            );\n            binding.bind();\n            this._bindings.push(binding);\n        }\n        this.updateActions();\n        this.updateHoverElements();\n    }\n\n    public bookSpace(space: Space) {\n        if (this._statuses[space.id] === 'busy') {\n            return notifyError(`${space.display_name || space.name} is unavailable at the current time`);\n        }\n        this._dialog.open(ExploreBookingModalComponent, {\n            data: { space }\n        });\n    }\n\n    private handleBookingsChange(space: Space, bookings: HashMap[]) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout('update_hover_els', () => this.updateHoverElements(), 100);\n    }\n\n    private handleStatusChange(space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus();\n                this.updateHoverElements();\n            },\n            100\n        );\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours =\n            this._settings.get('app.explore.colors') || {};\n        for (const space of this._spaces) {\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${this._statuses[space.id]}`] ||\n                    colours[`${this._statuses[space.id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[space.id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements() {\n        const features: ViewerFeature[] = [];\n        for (const space of this._spaces) {\n            features.push({\n                location: space.map_id,\n                hover: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space,\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions() {\n        const actions: ViewAction[] = [];\n        for (const space of this._spaces) {\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this._state.setActions('spaces', actions);\n    }\n}\n","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import assign from '../assign/index.js';\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport toDate from '../toDate/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import { Component, ElementRef, HostListener, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { MAP_FEATURE_DATA } from '@user-interfaces/components';\nimport { formatDistanceToNow } from 'date-fns';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n}\n\n@Component({\n    selector: 'explore-device-info',\n    template: `\n        <div\n            name=\"radius\"\n            (mouseenter)=\"loadUser()\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-4 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            name=\"dot\"\n            class=\"h-2 w-2 absolute center rounded-full pointer-events-auto\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            name=\"device-info\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow pointer-events-none ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <p><label>MAC:</label> {{ mac }}</p>\n                <p><label>Accuracy:</label> {{ variance }}m</p>\n                <p><label>Last Seen:</label> {{ last_seen }}</p>\n                <p *ngIf=\"manufacturer\"><label>Manufacturer:</label> {{ manufacturer }}</p>\n                <p *ngIf=\"os\"><label>OS:</label> {{ os }}</p>\n                <p *ngIf=\"ssid\"><label>SSID:</label> {{ ssid }}</p>\n                <p *ngIf=\"username\"><label>Username:</label> {{ username }}</p>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.35);\n                background-color: #616161;\n            }\n\n            :host:hover > [name='device-info'],\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n\n            [name='device-info'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                width: 16rem;\n                z-index: 999;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance.toFixed(2);\n    /** Diameter of the radius circle */\n    public readonly diameter = this._details.variance * 100;\n    /** Background color for the dot */\n    public readonly bg_color = this.ssid === 'Blue' ? '#1976d2' : this.ssid === 'Green' ? '#689f38' : '#616161'\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow(new Date(this._details.last_seen * 1000), {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    @HostListener('mouseenter') public onEnter = () => this.loadUser();\n    @HostListener('click') public onClick = () => this.loadUser();\n    @HostListener('touchend') public onTouch = () => this.loadUser();\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public async loadUser() {\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (mod) {\n            this.username = 'Loading...'\n            const details = await mod.execute('check_ownership_of', [this.mac]).catch(_ => null);\n            this.username = details && details.assigned_to ? details.assigned_to : '';\n        }\n    }\n\n}\n","import distanceInWords from '../formatDistance/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *   ```\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), dirtyOptions);\n}","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\n\nimport { MAP_FEATURE_DATA } from '@user-interfaces/components';\n\nexport interface SpaceInfoData {\n    map_id: string;\n    user: string;\n    start?: number;\n    end?: number;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            name=\"space-info\"\n            [id]=\"map_id\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <h4 class=\"m-0 font-medium\">{{ map_id }}</h4>\n                <p class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                <p class=\"mt-1 text-sm\" *ngIf=\"start\">\n                    {{ start | date: 'shortTime' }} &ndash;\n                    {{ end | date: 'shortTime' }}\n                </p>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly map_id = this._details.map_id;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\n\nimport { BaseClass, HashMap, SettingsService } from '@user-interfaces/common';\n\nimport { DesksService } from '@user-interfaces/bookings';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport {\n    BuildingLevel,\n    Desk,\n    OrganisationService,\n} from '@user-interfaces/organisation';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\nimport { catchError, first, map, switchMap } from 'rxjs/operators';\nimport { StaffUser } from '@user-interfaces/users';\n\nexport interface DeskOptions {\n    enable_booking?: boolean;\n    date?: number | Date;\n    zones?: string[];\n    host?: StaffUser;\n}\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends BaseClass implements OnDestroy {\n    private _level: BuildingLevel = null;\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _options = new BehaviorSubject<DeskOptions>({});\n    private _desks = new BehaviorSubject<string[]>([]);\n    private _reserved = new BehaviorSubject<string[]>([]);\n    private _statuses: HashMap<string> = {};\n    private _bindings: any[] = [];\n    private _stats = new BehaviorSubject<DesksStats>({\n        free: 0,\n        occupied: 0,\n        total: 0,\n    });\n\n    public readonly desk_list = this._state.level.pipe(\n        switchMap((lvl) =>\n            showMetadata(lvl.id, { name: 'desks' }).pipe(\n                map((i) => i.details.map((j) => new Desk({ ...j, zone: lvl })))\n            )\n        ),\n        catchError((_) => [])\n    );\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService,\n        private _desks_service: DesksService\n    ) {\n        super();\n        this.ngOnInit();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.setOptions({\n            enable_booking: this._settings.get('app.desks.enabled') !== false,\n        });\n        this.subscription(\n            'spaces',\n            this._state.level.subscribe((level) => {\n                this.clearBindings();\n                this._level = level;\n                this.bindToDesks();\n            })\n        );\n        this.subscription(\n            'changes',\n            combineLatest([\n                this.desk_list,\n                this._in_use,\n                this._reserved,\n                this._options,\n            ]).subscribe(([desks, in_use, reserved]) => {\n                this._statuses = {};\n                for (const { id, bookable } of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const is_reserved = reserved.some((i) => id === i);\n                    this._statuses[id] = bookable\n                        ? !is_used\n                            ? 'free'\n                            : is_reserved\n                            ? 'reserved'\n                            : 'busy'\n                        : 'not-bookable';\n                }\n                this.processDesks(desks);\n                this.timeout('update', () => this.updateStatus(), 100);\n            })\n        );\n        this.subscription(\n            'desks',\n            this.desk_list.subscribe((desks) => this.processDesks(desks))\n        );\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.clearBindings();\n    }\n\n    public setOptions(options: DeskOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public clearBindings() {\n        const bindings = ['desks_in_use', 'desk_list'];\n        for (const id of bindings) {\n            this.unsub(id);\n        }\n        this._bindings.forEach((b) => b.unbind());\n        this._bindings = [];\n        this._statuses = {};\n    }\n\n    public bindToDesks() {\n        if (!this._level) return;\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this._level.parent_id\n        );\n        if (!building) return;\n        const system_id =\n            this._org.building.bindings.area_management ||\n            this._org.organisation.bindings.area_management;\n        if (!system_id) return;\n        let binding = getModule(system_id, 'AreaManagement').binding(\n            this._level.id\n        );\n        this.subscription(\n            `desks_in_use`,\n            binding.listen().subscribe((d) => {\n                const devices = (d?.value || []).filter(\n                    (v) => v.location !== 'desk'\n                );\n                const desks = (d?.value || []).filter(\n                    (v) => v.location === 'desk'\n                );\n                this._in_use.next(desks.map((v) => v.map_id));\n                this._reserved.next(\n                    desks.filter((v) => !v.at_location).map((v) => v.map_id)\n                );\n                this.processDevices(devices, system_id);\n            })\n        );\n        binding.bind();\n        this._bindings.push(binding);\n        binding = getModule(system_id, 'AreaManagement').binding(\n            `${this._level.id}:desk_ids`\n        );\n        this.subscription(\n            `desks_list`,\n            binding.listen().subscribe((d) => this._desks.next(d || []))\n        );\n        binding.bind();\n        this._bindings.push(binding);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours = this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses.hasOwnProperty(desk_id)) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: HashMap[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                data: { ...device, system: system_id },\n            });\n        }\n        list.sort((a, b) => {\n            const dist_a =\n                1 - Math.sqrt(Math.pow(a.x - 0.5, 2) + Math.pow(a.x - 0.5, 2));\n            const dist_b =\n                1 - Math.sqrt(Math.pow(b.x - 0.5, 2) + Math.pow(b.x - 0.5, 2));\n            return dist_a - dist_b;\n        });\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: HashMap[]) {\n        const list = [];\n        const actions = [];\n        const options = this._options.getValue();\n        for (const desk of desks) {\n            list.push({\n                location: desk.id,\n                content: ExploreDeskInfoComponent,\n                hover: true,\n                data: {\n                    map_id: desk.name,\n                    status: this._statuses[desk.map_id],\n                },\n            });\n            actions.push({\n                id: desk.id,\n                action: 'click',\n                callback: () =>\n                    this._desks_service.bookDesk({\n                        desk: desk as any,\n                        host: options.host,\n                        date: options.date as any,\n                    }),\n            });\n            actions.push({\n                id: desk.id,\n                action: 'touchend',\n                callback: () =>\n                    this._desks_service.bookDesk({\n                        desk: desk as any,\n                        host: options.host,\n                        date: options.date as any,\n                    }),\n            });\n        }\n        this._state.setActions(\n            'desks',\n            this._options.getValue().enable_booking ? actions : []\n        );\n        this._state.setFeatures('desks', list);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@user-interfaces/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button mat-icon-button class=\"bg-white\" (click)=\"zoomIn()\">\n            <app-icon className=\"material-icons\">add</app-icon>\n        </button>\n        <button mat-icon-button class=\"bg-white\" (click)=\"zoomOut()\">\n            <app-icon className=\"material-icons\">remove</app-icon>\n        </button>\n        <button mat-icon-button class=\"bg-white\" (click)=\"reset()\">\n            <app-icon className=\"material-icons\">autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                padding: .5rem;\n            }\n\n            button {\n                border: 1px solid #ccc;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () => this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n"],"sourceRoot":"webpack:///"}