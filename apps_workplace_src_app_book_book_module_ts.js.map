{"version":3,"file":"apps_workplace_src_app_book_book_module_ts.js","mappings":"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","names":["i0","ctx_r7","form","controls","name","invalid","touched","ctx_r8","category","_r5","item_r15","_r17","$implicit","ctx_r16","removeTag","CateringItemModalComponent_form_4_div_4_mat_chip_row_6_Template","$event","_r19","ctx_r18","addTag","ctx_r9","tags","tag_list","_r13","separators","ctx_r11","unit_price","CateringItemModalComponent_form_4_div_2_Template","CateringItemModalComponent_form_4_div_3_Template","CateringItemModalComponent_form_4_div_4_Template","CateringItemModalComponent_form_4_div_5_Template","CateringItemModalComponent_form_4_div_6_Template","_r21","ctx_r20","value","ctx_r22","ctx_r23","ctx_r24","ctx_r25","CateringItemModalComponent_form_4_div_27_Template","ctx_r1","description","tmp_6_0","get","hasTag","_c6","renderPercent","images","_r27","ctx_r26","saveChanges","ctx_r2","dirty","option_r28","CateringItemModalComponent","item","this","_data","CateringItem","categories","tag","includes","constructor","event","EventEmitter","FormGroup","FormControl","Validators","required","accept_points","discount_cap","loading","ENTER","COMMA","SPACE","markAsDirty","input","trim","push","setValue","existing_tag","index","indexOf","splice","emit","reason","metadata","id","randomInt","static","t","MAT_DIALOG_DATA","core","Xpm","selectors","outputs","decls","vars","consts","i18n_0","$localize","CateringItemModalComponent_button_3_Template","CateringItemModalComponent_form_4_Template","CateringItemModalComponent_footer_5_Template","CateringItemModalComponent_ng_template_6_Template","CateringItemModalComponent_mat_option_10_Template","ctx","_r4","group","CateringItemOptionModalComponent_form_4_div_1_Template","CateringItemOptionModalComponent_form_4_div_2_Template","CateringItemOptionModalComponent_form_4_div_3_Template","CateringItemOptionModalComponent_form_4_div_4_Template","multiple","_r12","option_r13","CateringItemOptionModalComponent","option","types","new_option","parent","options","filter","i","concat","template","rf","CateringItemOptionModalComponent_button_3_Template","CateringItemOptionModalComponent_form_4_Template","CateringItemOptionModalComponent_footer_5_Template","CateringItemOptionModalComponent_ng_template_6_Template","CateringItemOptionModalComponent_mat_option_10_Template","RULE_REQUESTS","cateringItemAvailable","rules","is_available","rule","resources","find","_","zones","space","matches","condition","date","Date","isBefore","now","subHours","isAfter","setHours","duration","stringToMinutes","ext","length","item_r11","ctx_r15","updateItemQuantity","quantity","ctx_r19","addItem","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_4_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_a_counter_8_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_div_9_Template","ctx_r10","code","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_div_2_Template","cat_r8","menu_items","_c0","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_mat_tab_1_Template","CateringOrderModalComponent_div_0_ng_container_1_ng_container_2_Template","ctx_r6","CateringOrderModalComponent_div_0_ng_container_1_Template","ctx_r0","show_order_details","_r28","ctx_r27","order","item_count","_r30","ctx_r29","ctx_r31","saveOrder","CateringOrderModalComponent_footer_1_ng_container_1_Template","CateringOrderModalComponent_footer_1_ng_template_2_Template","_r26","ctx_r34","optionsFor","item_r33","CateringOrderModalComponent_ng_template_4_div_4_div_4_Template","_r37","ctx_r36","total_cost","ctx_r32","CateringOrderModalComponent_ng_template_4_div_4_Template","ctx_r4","items","CateringOrderModalComponent","AsyncHandler","_org","currency_code","super","ngOnInit","_this","_asyncToGenerator","CateringOrder","getCateringConfig","level","parent_id","menu","subscribe","list","unique","map","cat","updateMenuQuantities","timeout","choose_options","old_item","itm","reduce","c","o","opt","selectOptions","then","new_item","options_string","removeItem","amount","sort","a","b","localeCompare","join","confirmOrder","i1","features","CateringOrderModalComponent_div_0_Template","CateringOrderModalComponent_footer_1_Template","CateringOrderModalComponent_ng_template_2_Template","CateringOrderModalComponent_ng_template_4_Template","_r3","opt_r6","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_div_4_Template","_r11","group_r1","updateGroupOption","CateringOrderOptionsModalComponent_div_7_ng_container_4_mat_radio_button_5_Template","opt_r14","_r18","ctx_r17","option_state","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_div_4_Template","ctx_r13","CateringOrderOptionsModalComponent_div_7_ng_template_5_mat_checkbox_0_Template","CateringOrderOptionsModalComponent_div_7_ng_container_4_Template","CateringOrderOptionsModalComponent_div_7_ng_template_5_Template","CateringOrderOptionsModalComponent","groups","group_list","saveOptions","CateringOrderOptionsModalComponent_div_7_Template","handleFileEvent","downloadTemplate","CateringImportMenuModalComponent","element","target","files","file","fileReader","FileReader","addEventListener","e","data","csvToJson","result","type","toLowerCase","readAsText","downloadFile","CateringImportMenuModalComponent_button_3_Template","CateringImportMenuModalComponent_main_4_Template","CateringImportMenuModalComponent_ng_template_5_Template","CateringStateService","is_editable","zone","building","_menu","getValue","_dialog","_settings","_updated","BehaviorSubject","_loading","_currency","_change","asObservable","currency","settings","combineLatest","active_building","pipe","switchMap","showMetadata","catchError","of","details","tap","post","require_notes","shareReplay","charge_codes","availability","disabled_rooms","subscription","_ref","bld","getCateringForZone","next","_x","apply","arguments","manageCateringOrder","_this2","ref","open","Promise","race","componentInstance","first","toPromise","afterClosed","close","_this3","findIndex","updateMenu","updateItem","addOption","_this4","_this5","deleteItem","_this6","openConfirmModal","title","content","icon","class","deleteOption","_this7","editConfig","_this8","config","take","flatten","AttachedResourceConfigModalComponent","saveNotes","saveSettings","updateConfig","importMenu","_this9","updated_menu","catch","notifyError","notifySuccess","zone_id","updateMetadata","_this10","old_settings","Array","addItemToOrder","match","i2","i3","Yz7","factory","ɵfac","providedIn","CateringOrderStateService","_options","_filters","search","filters","available_menu","d","filtered_menu","l","getCateringRulesForZone","fresh","every","setOptions","opts","setFilters","getFilters","ctx_r5","CateringItemListItemComponent","active","selected","favourite","toggleFav","select","option_list","inputs","CateringItemListItemComponent_div_3_Template","CateringItemListItemComponent_img_4_Template","CateringItemListItemComponent_ng_template_5_Template","CateringItemListItemComponent_p_14_Template","CateringItemListItemComponent_div_15_Template","CateringItemListItemComponent_div_16_Template","CateringItemListItemComponent_div_17_Template","CateringItemListItemComponent_div_18_Template","CateringItemListItemComponent_div_19_Template","CateringItemListItemComponent_div_20_Template","item_r7","_r9","selectItem","custom_id","isFavourite","CateringItemListComponent_ng_container_1_catering_item_list_item_7_Template","tmp_0_0","item_r13","_r15","ctx_r14","ctx_r12","CateringItemListComponent_ng_container_8_ul_1_catering_item_list_item_1_Template","item_list","CateringItemListComponent_ng_container_8_ul_1_Template","CateringItemListComponent","_state","selected_items","favorites","onSelect","ngOnChanges","changes","item_id","clear_state","forEach","CateringItemListComponent_ng_container_1_Template","CateringItemListComponent_ng_container_8_Template","CateringItemListComponent_ng_template_10_Template","CateringItemListComponent_ng_template_12_Template","tmp_1_0","ctx_r3","tag_r6","opt_r12","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_div_4_Template","_r16","group_r7","group_state","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_mat_radio_button_5_Template","in_order","opt_r22","updateCheckedState","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_div_4_Template","ctx_r21","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_mat_checkbox_0_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_container_4_Template","CateringItemDetailsComponent_ng_container_0_div_21_ng_template_5_Template","_r10","CateringItemDetailsComponent_ng_container_0_p_14_Template","ctx_r33","activeChange","CateringItemDetailsComponent_ng_container_0_div_17_Template","CateringItemDetailsComponent_ng_container_0_div_21_Template","fav","count","CateringItemDetailsComponent","_update","state","g","CateringItemDetailsComponent_ng_container_0_Template","CateringItemDetailsComponent_ng_template_1_Template","_r2","at_time","at_timeChange","offset","offsetChange","exact_tooltip","tmp_3_0","min_offset","max_offset","item_r9","toggleCategory","ICONS","coffee","drinks","snacks","meals","CateringItemFiltersComponent","Math","max","icons","f","toggleTag","CateringItemFiltersComponent_h3_6_Template","CateringItemFiltersComponent_div_7_Template","CateringItemFiltersComponent_h3_8_Template","CateringItemFiltersComponent_mat_checkbox_10_Template","displayed","EMPTY_FAVS","NewCateringOrderModalComponent","selected_ids","_order","exact_time","min","isSelected","setSelected","toggleFavourite","fav_list","saveUserSetting","NewCateringOrderModalComponent_button_14_Template","err_tooltip","optionList","item_r4","CateringListFieldComponent_div_1_div_25_span_3_Template","order_r1","removeOrderItem","unit_price_with_options","CateringListFieldComponent_div_1_div_8_Template","duplicateOrder","editOrder","removeOrder","show_order","CateringListFieldComponent_div_1_div_25_Template","end_time","deliver_at","time_format","CateringListFieldComponent","orders","disabled","registerOnChange","fn","_onChange","registerOnTouched","_onTouch","setDisabledState","s","new_value","writeValue","updated_list","new_order","randomString","all_day","startOfDay","valueOf","deliver_time","deliver_offset","time","getHours","getMinutes","cateringitem","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","CateringListFieldComponent_div_1_Template","ANIMATION_SHOW_CONTRACT_EXPAND","SharedCateringModule","oAB","cJS","CommonModule","MatMenuModule","MatTabsModule","MatAutocompleteModule","MatDialogModule","MatCheckboxModule","MatRadioModule","MatTooltipModule","FormsModule","ReactiveFormsModule","ComponentsModule","MatFormFieldModule","FormFieldsModule","BookComponent","hide_nav","localStorage","getItem","BookComponent_topbar_0_Template","BookComponent_footer_menu_4_Template","qr_scanner_min","_legacyCanvasSize","DEFAULT_CANVAS_SIZE","_preferredCamera","_maxScansPerSecond","_lastScanTimestamp","_destroyed","_flashOn","_paused","_active","$video","$canvas","document","createElement","_onDecode","console","warn","_legacyOnDecode","_onDecodeError","onDecodeError","_calculateScanRegion","calculateScanRegion","preferredCamera","maxScansPerSecond","_onPlay","bind","_onLoadedMetaData","_onVisibilityChange","_updateOverlay","disablePictureInPicture","playsInline","muted","h","hidden","body","contains","appendChild","parentElement","highlightScanRegion","highlightCodeOutline","overlay","$overlay","style","position","display","pointerEvents","classList","add","innerHTML","firstElementChild","animate","transform","iterations","Infinity","direction","easing","insertBefore","nextSibling","insertAdjacentHTML","$codeOutlineHighlight","lastElementChild","_scanRegion","requestAnimationFrame","m","window","getComputedStyle","setProperty","visibility","opacity","width","height","removeChild","_qrEnginePromise","createQrEngine","WORKER_PATH","hasCamera","listCameras","navigator","mediaDevices","enumerateDevices","kind","label","getUserMedia","audio","video","deviceId","_stopVideoStream","hasFlash","srcObject","MediaStream","_getCameraStream","stream","getVideoTracks","getSettings","isFlashOn","toggleFlash","turnFlashOff","turnFlashOn","applyConstraints","advanced","torch","_restartVideoStream","destroy","removeEventListener","stop","_postWorkerMessage","start","Error","location","protocol","play","facingMode","_setVideoMirror","pause","setTimeout","setCamera","scanImage","n","scanRegion","qrEngine","canvas","disallowCanvasResizing","alsoTryWithoutScanRegion","p","k","q","all","_loadImage","_drawToCanvas","Worker","_postWorkerMessageSync","v","w","u","r","y","clearTimeout","cornerPoints","_convertPoints","NO_QR_CODE_FOUND","message","x","getImageData","buffer","detect","rawValue","test","_disableBarcodeDetector","setGrayscaleWeights","red","green","blue","useIntegerApproximation","setInversionMode","__webpack_require__","createWorker","BarcodeDetector","getSupportedFormats","userAgentData","brands","some","brand","platform","getHighEntropyValues","architecture","platformVersion","parseInt","formats","_scanFrame","round","videoWidth","videoHeight","downScaledWidth","downScaledHeight","offsetWidth","offsetHeight","offsetLeft","offsetTop","objectFit","objectPosition","split","parseFloat","endsWith","top","left","paused","ended","requestVideoFrameCallback","readyState","_codeOutlineHighlightRemovalTimeout","setAttribute","log","Object","assign","exact","_getFacingMode","getTracks","removeTrack","getContext","alpha","imageSmoothingEnabled","drawImage","Image","_awaitImageLoad","HTMLVideoElement","HTMLCanvasElement","SVGImageElement","OffscreenCanvas","ImageBitmap","File","Blob","URL","src","createObjectURL","toString","revokeObjectURL","complete","naturalWidth","ErrorEvent","_workerMessageId","postMessage","BookCodeFlowComponent_div_0_div_4_Template","BookCodeFlowComponent_div_0_div_5_Template","_r7","room_code","is_scanning","BookCodeFlowComponent","_router","_route","_event_form","_booking_form","ngOnDestroy","_video_el","nativeElement","track","_qr_scanner","queryParamMap","params","has","_checkinBooking","_checkinEvent","ngAfterViewInit","error","QrScanner","handleQrCode","url","regex","exec","navigate","asset_id","bookings","queryBookings","period_start","getUnixTime","period_end","addMinutes","email","currentUser","checkinBooking","endOfDay","queryParams","newForm","Booking","space_id","queryEvents","checkinEventGuest","showSystem","CalendarEvent","system","viewQuery","BookCodeFlowComponent_div_0_Template","BookCodeFlowComponent_ng_template_1_Template","bld_r14","display_name","DeskFlowDetailedFormComponent_form_0_div_8_mat_option_5_Template","buildings","lvl_r19","DeskFlowDetailedFormComponent_form_0_div_10_mat_option_5_Template","levels","_r24","patchValue","DeskFlowDetailedFormComponent_form_0_div_12_mat_checkbox_9_Template","tmp_2_0","allow_all_day","members","_c1","opt_r28","pattern","DeskFlowDetailedFormComponent_form_0_div_17_mat_option_9_Template","recurr_end","recurrence_pattern","recurrence_options","tmp_4_0","book_until","opt_r33","_r35","DeskFlowDetailedFormComponent_form_0_div_18_mat_option_6_Template","secondary_resource","DeskFlowDetailedFormComponent_form_0_div_1_Template","DeskFlowDetailedFormComponent_form_0_div_8_Template","DeskFlowDetailedFormComponent_form_0_div_10_Template","DeskFlowDetailedFormComponent_form_0_div_12_Template","DeskFlowDetailedFormComponent_form_0_div_13_Template","DeskFlowDetailedFormComponent_form_0_div_14_Template","DeskFlowDetailedFormComponent_form_0_div_15_Template","DeskFlowDetailedFormComponent_form_0_div_17_Template","DeskFlowDetailedFormComponent_form_0_div_18_Template","DeskFlowDetailedFormComponent_form_0_div_20_Template","allow_groups","allow_time_changes","can_book_for_others","needs_reason","tmp_8_0","can_recurr","tmp_10_0","can_book_lockers","DeskFlowDetailedFormComponent","addDays","building_list","active_levels","DeskFlowDetailedFormComponent_form_0_Template","findDesk","is_edit","_r6","allocateDesk","DeskFlowFormComponent","auto_allocation","quick_times","clearForm","initialised","levelsForBuilding","quickBook","roundToNearestMinutes","nearestTo","markAllAsTouched","valid","getInvalidFields","centered_at","lvl","levelWithID","desk_list","available_resources","desk_id","map_id","findNearbyFeature","desk","asset_name","booking_type","confirmPost","i4","DeskFlowFormComponent_button_12_Template","DeskFlowFormComponent_ng_template_13_Template","feat_r7","desk_r5","setActiveDesk","DeskFlowMapComponent_li_22_div_9_Template","active_desk","DeskFlowMapComponent_div_24_div_9_Template","positions","zoom","center","styles","actions","labels","makeBooking","DeskFlowMapComponent","_active_desk","hide_map","_explore","map_url","map_styles","map_positions","map_features","map_actions","map_labels","desks","option_details","valueChanges","startWith","recurrence","formatRecurrence","end","interval","days_of_week","format","setLevel","debounceTime","assets","available","status","bookable","fill","action","callback","setStyles","setActions","setFeatures","stopPropagation","preventDefault","DeskFlowMapComponent_li_22_Template","DeskFlowMapComponent_div_24_Template","DeskFlowMapComponent_div_25_Template","DeskFlowMapComponent_div_27_Template","_r0","DeskFlowConfirmComponent","FlowSuccessComponent","extra","route","is_host","calendar","FlowSuccessComponent_br_8_Template","_c2","_c3","last_success","user_email","extension_data","BookDeskFlowComponent","view","loadForm","paramMap","param","setView","BookDeskFlowComponent_ng_container_2_Template","BookDeskFlowComponent_ng_container_3_Template","BookDeskFlowComponent_ng_container_4_Template","BookDeskFlowComponent_ng_container_5_Template","bld_r9","setBuilding","DetailBookSpaceFormComponent_form_0_div_18_mat_form_field_3_mat_option_2_Template","DetailBookSpaceFormComponent_form_0_div_18_mat_form_field_3_Template","optionsChange","DetailBookSpaceFormComponent_form_0_div_19_mat_option_5_Template","features_label","hide_actions","DetailBookSpaceFormComponent_form_0_section_20_div_1_Template","DetailBookSpaceFormComponent_form_0_section_20_div_2_Template","hide_attendees","catering","editCatering","DetailBookSpaceFormComponent_form_0_div_33_div_4_Template","DetailBookSpaceFormComponent_form_0_div_33_div_5_Template","_r23","DetailBookSpaceFormComponent_form_0_mat_checkbox_16_Template","DetailBookSpaceFormComponent_form_0_div_18_Template","DetailBookSpaceFormComponent_form_0_div_19_Template","DetailBookSpaceFormComponent_form_0_section_20_Template","DetailBookSpaceFormComponent_form_0_div_32_Template","DetailBookSpaceFormComponent_form_0_div_33_Template","max_duration","show_features","hide_notes","has_catering","DetailBookSpaceFormComponent","_catering","DetailBookSpaceFormComponent_form_0_Template","confirmBooking","SpaceFlowFormComponent","allow_standalone_bookings","capacity","quick_capacities","host","findSpace","SpaceFlowFormComponent_button_19_Template","SpaceFlowFindItemComponent","bookChange","bookSpace","book","viewLocation","MapLocateModalComponent","maxWidth","maxHeight","bld_r11","SpaceFlowFindComponent_mat_form_field_12_mat_option_3_Template","zone_ids","SpaceFlowFindComponent_mat_form_field_14_mat_option_4_Template","item_r18","item_r20","_r22","SpaceFlowFindComponent_mat_form_field_20_mat_option_3_Template","space_r25","handleBookEvent","book_space","SpaceFlowFindComponent_ng_container_23_ng_container_1_space_flow_find_item_1_Template","spaces","SpaceFlowFindComponent_ng_container_23_ng_container_1_Template","space_r31","_r33","SpaceFlowFindComponent_div_25_div_8_Template","SpaceFlowFindComponent_div_25_div_9_Template","space_list","SpaceFlowFindComponent","_space_pipe","available_spaces","_getSpaceList","id_list","keys","resolve","i5","SpacePipe","SpaceFlowFindComponent_mat_form_field_12_Template","SpaceFlowFindComponent_mat_form_field_14_Template","SpaceFlowFindComponent_mat_option_19_Template","SpaceFlowFindComponent_mat_form_field_20_Template","SpaceFlowFindComponent_ng_container_23_Template","SpaceFlowFindComponent_div_25_Template","SpaceFlowFindComponent_ng_template_26_Template","SpaceFlowFindComponent_ng_template_28_Template","tmp_5_0","SpaceFlowConfirmComponent_div_41_button_3_Template","space_r6","can_view_location","user_r8","item_r10","SpaceFlowConfirmComponent_div_55_div_12_div_4_Template","_r14","show_catering","SpaceFlowConfirmComponent_div_55_div_12_Template","show_people","SpaceFlowConfirmComponent","show_spaces","postForm","SpaceFlowConfirmComponent_span_17_Template","SpaceFlowConfirmComponent_div_41_Template","SpaceFlowConfirmComponent_div_54_Template","SpaceFlowConfirmComponent_div_55_Template","SpaceFlowConfirmComponent_span_57_Template","SpaceFlowConfirmComponent_mat_spinner_58_Template","tmp_7_0","tmp_11_0","tmp_12_0","tmp_13_0","tmp_16_0","tmp_17_0","BookSpaceFlowComponent","BookSpaceFlowComponent_ng_container_2_Template","BookSpaceFlowComponent_ng_container_3_Template","BookSpaceFlowComponent_ng_container_4_Template","BookSpaceFlowComponent_ng_container_5_Template","date_r8","setDate","counts","lvl_r12","ParkingFlowMapComponent_div_0_div_5_mat_option_4_Template","space_r15","setActive","active_space","levelName","ParkingFlowMapComponent_div_0_div_22_p_4_Template","_r20","reserveSpace","existing","ParkingFlowMapComponent_div_0_button_2_Template","ParkingFlowMapComponent_div_0_div_5_Template","ParkingFlowMapComponent_div_0_button_10_Template","ParkingFlowMapComponent_div_0_div_22_Template","ParkingFlowMapComponent_div_0_div_24_Template","dates","ParkingFlowMapComponent_ng_template_2_div_0_Template","SpacePingComponent","_details","ratio","zoom$","ratio$","MAP_FEATURE_DATA","ParkingFlowMapComponent","_booking","_parking","week_availablility","existing_event","idx","events","reset","full_size","z_index","ExploreParkingService","ParkingFlowMapComponent_div_0_Template","ParkingFlowMapComponent_ng_template_2_Template","ParkingFlowConfirmComponent","BookParkingFlowComponent","BookParkingFlowComponent_ng_container_2_Template","BookParkingFlowComponent_ng_container_3_Template","BookParkingFlowComponent_ng_container_4_Template","formatted_recurrence","s_r8","MeetingFlowConfirmModalComponent_div_28_ng_container_6_Template","user_r11","MeetingFlowConfirmModalComponent_div_29_mat_chip_9_Template","attendees","item_r17","MeetingFlowConfirmModalComponent_div_30_div_1_div_7_div_12_span_4_Template","MeetingFlowConfirmModalComponent_div_30_div_1_div_7_div_12_Template","order_r15","MeetingFlowConfirmModalComponent_div_30_div_1_div_7_Template","catering_orders","item_r21","MeetingFlowConfirmModalComponent_div_30_div_2_div_6_Template","MeetingFlowConfirmModalComponent_div_30_div_1_Template","MeetingFlowConfirmModalComponent_div_30_div_2_Template","MeetingFlowConfirmModalComponent","_space","getRawValue","address","_dialog_ref","show_close","dismiss","cancelPost","cancelPostForm","i18n_5","MeetingFlowConfirmModalComponent_button_1_Template","MeetingFlowConfirmModalComponent_div_20_Template","MeetingFlowConfirmModalComponent_div_28_Template","MeetingFlowConfirmModalComponent_div_29_Template","MeetingFlowConfirmModalComponent_div_30_Template","MeetingFlowConfirmModalComponent_div_31_Template","MeetingFlowConfirmModalComponent_button_33_Template","user_r10","MeetingFlowConfirmComponent_section_26_mat_chip_9_Template","s_r12","MeetingFlowConfirmComponent_section_27_ng_container_6_Template","MeetingFlowConfirmComponent","_sheet_ref","i6","i18n_3","MeetingFlowConfirmComponent_button_0_Template","MeetingFlowConfirmComponent_mat_spinner_4_Template","MeetingFlowConfirmComponent_div_18_Template","MeetingFlowConfirmComponent_section_26_Template","MeetingFlowConfirmComponent_section_27_Template","MeetingFlowConfirmComponent_button_29_Template","MeetingFormDetailsComponent_div_0_div_11_mat_checkbox_9_Template","end_date","MeetingFormDetailsComponent_div_0_div_12_mat_checkbox_10_Template","date_end","start_date","use_24hr","MeetingFormDetailsComponent_div_0_div_13_div_8_Template","MeetingFormDetailsComponent_div_0_div_13_div_9_Template","allow_multiday","MeetingFormDetailsComponent_div_0_div_15_mat_checkbox_7_Template","MeetingFormDetailsComponent_div_0_div_11_Template","MeetingFormDetailsComponent_div_0_div_12_Template","MeetingFormDetailsComponent_div_0_div_13_Template","MeetingFormDetailsComponent_div_0_div_14_Template","MeetingFormDetailsComponent_div_0_div_15_Template","allow_recurrence","MeetingFormDetailsComponent","force_time","set","hours","minutes","MeetingFormDetailsComponent_div_0_Template","findAvailableTime","hide_block","allow_externals","code_r13","focusInput","code_filter","MeetingFlowFormComponent_form_5_section_29_mat_form_field_13_mat_option_5_Template","_c4","filtered_codes","has_codes","MeetingFlowFormComponent_form_5_section_29_mat_form_field_13_Template","MeetingFlowFormComponent_form_5_section_29_mat_form_field_15_Template","_c5","has_assets","MeetingFlowFormComponent_form_5_section_14_Template","MeetingFlowFormComponent_form_5_div_27_Template","MeetingFlowFormComponent_form_5_section_29_Template","MeetingFlowFormComponent_form_5_section_31_Template","MeetingFlowFormComponent_form_5_section_32_Template","viewConfirm","strict_capacity_check","total_capacity","MeetingFlowFormComponent","attendee_count","user","_assets","_bottom_sheet","_idle","setValidators","updateValueAndValidity","resetForm","openEventLinkModal","innerWidth","dialog_ref","unsubWith","sheet_ref","instance","afterDismissed","_checkSubResourceEligibility","idleFor","unsub","confirm_text","reload","_input_el","focus","organiser","FindAvailabilityModalComponent","users","_checkAssetsEligibility","_checkCateringEligibility","disable","timer","filtered_assets","hide_for_zones","z","notifyWarn","enable","i7","i8","MeetingFlowFormComponent_form_5_Template","MeetingFlowSuccessComponent_span_8_span_2_Template","MeetingFlowSuccessComponent","last_event","MeetingFlowSuccessComponent_span_8_Template","MeetingFlowSuccessComponent_span_9_Template","MeetingFlowSuccessComponent_span_11_Template","MeetingFlowSuccessComponent_p_12_Template","BookMeetingFlowComponent","listenForStatusChanges","BookMeetingFlowComponent_meeting_flow_success_1_Template","BookMeetingFlowComponent_meeting_flow_confirm_2_Template","BookMeetingFlowComponent_meeting_flow_form_3_Template","feat_r9","NewDeskFlowConfirmComponent_section_25_ng_container_17_Template","booking_asset","is_group","asset_r11","NewDeskFlowConfirmComponent_section_26_div_6_Template","assets_count","NewDeskFlowConfirmComponent","booking","needs_locker","postFormForGroup","NewDeskFlowConfirmComponent_button_0_Template","NewDeskFlowConfirmComponent_mat_spinner_4_Template","NewDeskFlowConfirmComponent_section_25_Template","NewDeskFlowConfirmComponent_section_26_Template","NewDeskFlowConfirmComponent_section_27_Template","NewDeskFlowConfirmComponent_button_29_Template","_c18","_c23","NewDeskFormDetailsComponent_div_0_section_31_p_8_Template","NewDeskFormDetailsComponent_div_0_section_1_Template","NewDeskFormDetailsComponent_div_0_div_8_Template","NewDeskFormDetailsComponent_div_0_mat_checkbox_26_Template","NewDeskFormDetailsComponent_div_0_div_27_Template","NewDeskFormDetailsComponent_div_0_div_28_Template","NewDeskFormDetailsComponent_div_0_section_29_Template","NewDeskFormDetailsComponent_div_0_section_31_Template","NewDeskFormDetailsComponent_div_0_section_32_Template","NewDeskFormDetailsComponent","from_id","setFeature","selected_desk","NewDeskFormDetailsComponent_div_0_Template","NewDeskFlowFormComponent","startOfMinute","outlook_link","google_link","ical_link","NewDeskFlowSuccessComponent","show_links","viewCalendarLinks","openBookingLinkModal","generateMicrosoftCalendarLink","generateGoogleCalendarLink","generateCalendarFileLink","NewDeskFlowSuccessComponent_span_7_Template","NewDeskFlowSuccessComponent_span_8_Template","NewDeskFlowSuccessComponent_span_10_Template","NewDeskFlowSuccessComponent_p_11_Template","NewDeskFlowSuccessComponent_div_12_Template","_c12","NewDeskFlowComponent","asset","notifyInfo","Desk","NewDeskFlowComponent_ng_container_2_Template","NewDeskFlowComponent_ng_container_3_Template","VisitorFlowComponent","onDone","feat_r8","NewParkingFlowConfirmComponent_section_25_ng_container_16_Template","asset_r10","NewParkingFlowConfirmComponent_section_26_div_6_Template","NewParkingFlowConfirmComponent","NewParkingFlowConfirmComponent_button_0_Template","NewParkingFlowConfirmComponent_mat_spinner_4_Template","NewParkingFlowConfirmComponent_section_25_Template","NewParkingFlowConfirmComponent_section_26_Template","NewParkingFlowConfirmComponent_button_28_Template","bld_r3","ParkingFormDetailsComponent_div_0_mat_option_9_Template","ParkingFormDetailsComponent_div_0_mat_checkbox_39_Template","ParkingFormDetailsComponent","ParkingFormDetailsComponent_div_0_Template","ParkingFlowFormComponent","ParkingFlowSuccessComponent","resource","NewParkingFlowComponent","NewParkingFlowComponent_parking_flow_success_1_Template","NewParkingFlowComponent_parking_flow_confirm_2_Template","NewParkingFlowComponent_parking_flow_form_3_Template","CodeFlowSuccessComponent","CodeFlowErrorComponent","CodeFlowErrorComponent_ng_container_8_Template","CodeFlowErrorComponent_ng_container_9_Template","CodeFlowErrorComponent_ng_container_10_Template","CodeFlowErrorComponent_a_12_Template","CodeFlowErrorComponent_a_13_Template","BookLockerFlowConfirmComponent_section_25_ng_container_11_Template","BookLockerFlowConfirmComponent_section_26_div_6_Template","BookLockerFlowConfirmComponent","BookLockerFlowConfirmComponent_button_0_Template","BookLockerFlowConfirmComponent_mat_spinner_4_Template","BookLockerFlowConfirmComponent_section_25_Template","BookLockerFlowConfirmComponent_section_26_Template","BookLockerFlowConfirmComponent_button_28_Template","b_r3","LockerFormDetailsComponent_div_0_mat_option_14_Template","LockerFormDetailsComponent_div_0_section_33_Template","_c14","tmp_9_0","custom_durations","LockerFormDetailsComponent","setBookingAsset","_setCustomDateOptions","locker","undefined","selected_locker","bank_id","LockerFormDetailsComponent_div_0_Template","BookLockerFlowFormComponent","BookLockerFlowSuccessComponent","BookLockerFlowSuccessComponent_span_7_Template","BookLockerFlowSuccessComponent_span_8_Template","BookLockerFlowSuccessComponent_div_12_Template","ROUTES","path","component","children","redirectTo","BookLockerFlowComponent","BookLockerFlowComponent_locker_flow_success_1_Template","BookLockerFlowComponent_locker_flow_confirm_2_Template","BookLockerFlowComponent_locker_flow_form_3_Template","BookModule","SharedComponentModule","SharedExploreModule","MatButtonToggleModule","MatBottomSheetModule","SharedBookingsModule","RouterModule","forChild"],"sourceRoot":"webpack:///","sources":["./libs/catering/src/lib/catering-item-modal.component.ts","./libs/catering/src/lib/catering-option-modal.component.ts","./libs/catering/src/lib/utilities.ts","./libs/catering/src/lib/catering-order-modal.component.ts","./libs/catering/src/lib/catering-order-options-modal.component.ts","./libs/catering/src/lib/catering-import-menu-modal.component.ts","./libs/catering/src/lib/catering-state.service.ts","./libs/catering/src/lib/catering-order-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-order-state.service.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list-item.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-list.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-details.component.ts","./libs/catering/src/lib/catering-order-modal/catering-item-filters.component.ts","./libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component.ts","./libs/catering/src/lib/catering-list-field.component.ts","./libs/catering/src/lib/catering.module.ts","./apps/workplace/src/app/book/book.component.ts","./node_modules/qr-scanner/qr-scanner.min.js","./apps/workplace/src/app/book/code-flow.component.ts","./apps/workplace/src/app/book/desk-flow/detailed-form.component.ts","./apps/workplace/src/app/book/desk-flow/form.component.ts","./apps/workplace/src/app/book/desk-flow/map.component.ts","./apps/workplace/src/app/book/desk-flow/confirm.component.ts","./apps/workplace/src/app/book/flow-success.component.ts","./apps/workplace/src/app/book/desk-flow.component.ts","./apps/workplace/src/app/book/space-flow/detailed-form.component.ts","./apps/workplace/src/app/book/space-flow/form.component.ts","./apps/workplace/src/app/book/space-flow/find-item.component.ts","./apps/workplace/src/app/book/space-flow/find.component.ts","./apps/workplace/src/app/book/space-flow/confirm.component.ts","./apps/workplace/src/app/book/space-flow.component.ts","./apps/workplace/src/app/book/parking-flow/parking-flow-map.component.ts","./apps/workplace/src/app/book/parking-flow/parking-flow-confirm.component.ts","./apps/workplace/src/app/book/parking-flow.component.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm-modal.component.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-confirm.component.ts","./apps/workplace/src/app/book/meeting-flow/meeting-form-details.component.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-form.component.ts","./apps/workplace/src/app/book/meeting-flow/meeting-flow-success.component.ts","./apps/workplace/src/app/book/meeting-flow.component.ts","./apps/workplace/src/app/book/new-desk-flow/new-desk-flow-confirm.component.ts","./apps/workplace/src/app/book/new-desk-flow/new-desk-form-details.component.ts","./apps/workplace/src/app/book/new-desk-flow/new-desk-flow-form.component.ts","./apps/workplace/src/app/book/new-desk-flow/new-desk-flow-success.component.ts","./apps/workplace/src/app/book/new-desk-flow.component.ts","./apps/workplace/src/app/book/visitor-flow.component.ts","./apps/workplace/src/app/book/new-parking-flow/parking-flow-confirm.component.ts","./apps/workplace/src/app/book/new-parking-flow/parking-form-details.component.ts","./apps/workplace/src/app/book/new-parking-flow/parking-flow-form.component.ts","./apps/workplace/src/app/book/new-parking-flow/parking-flow-success.component.ts","./apps/workplace/src/app/book/new-parking-flow.component.ts","./apps/workplace/src/app/book/code-flow-success.component.ts","./apps/workplace/src/app/book/code-flow-error.component.ts","./apps/workplace/src/app/book/locker-flow/locker-flow-confirm.component.ts","./apps/workplace/src/app/book/locker-flow/locker-form-details.component.ts","./apps/workplace/src/app/book/locker-flow/locker-flow-form.component.ts","./apps/workplace/src/app/book/locker-flow/locker-flow-success.component.ts","./apps/workplace/src/app/book/locker-flow.component.ts","./apps/workplace/src/app/book/book.module.ts"],"sourcesContent":["import { COMMA, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { Component, EventEmitter, Inject, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogEvent, randomInt } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\nexport interface CateringItemModalData {\n    item: CateringItem;\n    categories?: string[];\n}\n\n@Component({\n    selector: 'catering-item-modal',\n    template: `\n        <header>\n            <h3>{{ item.id ? 'Edit' : 'Add' }} Item</h3>\n            <button icon matRipple mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                    <label\n                        for=\"title\"\n                        [class.error]=\"\n                            form.controls.name.invalid &&\n                            form.controls.name.touched\n                        \"\n                    >\n                        Name<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"name\"\n                            placeholder=\"Item name\"\n                            formControlName=\"name\"\n                        />\n                        <mat-error>Name is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\" *ngIf=\"form.controls.category\">\n                    <label\n                        for=\"category\"\n                        [class.error]=\"\n                            form.controls.category.invalid &&\n                            form.controls.category.touched\n                        \"\n                    >\n                        Category<span>*</span>:\n                    </label>\n                    <mat-form-field appearance=\"outline\">\n                        <input\n                            matInput\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            formControlName=\"category\"\n                            [matAutocomplete]=\"auto\"\n                        />\n                        <mat-error>Category is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.tags\">\n                <label\n                    for=\"tags\"\n                    [class.error]=\"\n                        form.controls.tags.invalid && form.controls.tags.touched\n                    \"\n                    i18n=\"@@tagsLabel\"\n                >\n                    Tags:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <mat-chip-grid #chipList aria-label=\"Item Tags\">\n                        <mat-chip-row\n                            *ngFor=\"let item of tag_list\"\n                            (removed)=\"removeTag(item)\"\n                        >\n                            {{ item }}\n                            <button\n                                matChipRemove\n                                [attr.aria-label]=\"'Remove ' + item\"\n                            >\n                                <app-icon>cancel</app-icon>\n                            </button>\n                        </mat-chip-row>\n                    </mat-chip-grid>\n                    <input\n                        name=\"tags\"\n                        placeholder=\"Item tags e.g. Gluten Free, Vegan etc.\"\n                        i18n-placeholder=\"@@zoneTagsPlaceholder\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputSeparatorKeyCodes]=\"separators\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addTag($event)\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.description\">\n                <label for=\"description\">Description:</label>\n                <mat-form-field appearance=\"outline\">\n                    <textarea\n                        matInput\n                        name=\"description\"\n                        placeholder=\"Item Description\"\n                        formControlName=\"description\"\n                    ></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.unit_price.invalid &&\n                        form.controls.unit_price.touched\n                    \"\n                >\n                    Unit Price<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                    <mat-error>Unit Price is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-none w-28 min-w-0\">Accept Points?</label>\n                <mat-checkbox formControlName=\"accept_points\">{{\n                    form.get('accept_points')?.value ? 'No' : 'Yes'\n                }}</mat-checkbox>\n            </div>\n            <div class=\"flex items-center flex-wrap max-w-lg\" list>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Gluten Free')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Gluten Free' })\n                            : removeTag('Gluten Free')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Gluten Free (GF)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegan')\"\n                    (ngModelChange)=\"\n                        $event ? addTag({ value: 'Vegan' }) : removeTag('Vegan')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegan (VG)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Vegetarian')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Vegetarian' })\n                            : removeTag('Vegetarian')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Vegetarian (V)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Dairy')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Dairy' })\n                            : removeTag('Contains Dairy')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Dairy (D)\n                </mat-checkbox>\n                <mat-checkbox\n                    [ngModel]=\"hasTag('Contains Nuts')\"\n                    (ngModelChange)=\"\n                        $event\n                            ? addTag({ value: 'Contains Nuts' })\n                            : removeTag('Contains Nuts')\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Contains Nuts (N)\n                </mat-checkbox>\n            </div>\n            <div class=\"flex items-center\">\n                <label class=\"flex-1 w-24 min-w-0\">Discount Cap</label>\n                <a-counter\n                    class=\"border border-base-200 rounded\"\n                    formControlName=\"discount_cap\"\n                    [min]=\"0\"\n                    [max]=\"100\"\n                    [step]=\"5\"\n                    [render_fn]=\"renderPercent\"\n                ></a-counter>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.images\">\n                <label for=\"images\" i18n=\"@@imagesLabel\">Images:</label>\n                <image-list-field\n                    name=\"images\"\n                    formControlName=\"images\"\n                ></image-list-field>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of categories\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            [list] mat-checkbox {\n                margin: 0.5rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.item.name || '', [Validators.required]),\n        description: new FormControl(this.item.description || ''),\n        category: new FormControl(this.item.category || '', [\n            Validators.required,\n        ]),\n        unit_price: new FormControl(this.item.unit_price, [\n            Validators.required,\n        ]),\n        tags: new FormControl(this.item.tags || []),\n        accept_points: new FormControl(this.item.accept_points || false),\n        discount_cap: new FormControl(this.item.discount_cap || 0),\n        images: new FormControl(this.item.images || []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n    /** List of separator characters for tags */\n    public readonly separators: number[] = [ENTER, COMMA, SPACE];\n\n    /** Current item details */\n    public get item(): CateringItem {\n        return this._data.item || new CateringItem();\n    }\n\n    /** List of available categories */\n    public get categories(): string[] {\n        return this._data.categories || [];\n    }\n\n    public get tag_list(): string[] {\n        return this.form.controls.tags.value;\n    }\n\n    public renderPercent(value: number = 0) {\n        return `${value}%`;\n    }\n\n    public hasTag(tag: string) {\n        return this.tag_list.includes(tag);\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemModalData\n    ) {}\n\n    /**\n     * Add a tag to the list of tags for the item\n     * @param event Input event\n     */\n    public addTag(event: MatChipInputEvent): void {\n        if (!this.form || !this.form.controls.tags) return;\n        this.form.controls.tags.markAsDirty();\n        const input = event.input;\n        const value = event.value;\n        const tag_list = this.tag_list;\n        if ((value || '').trim()) {\n            tag_list.push(value);\n            this.form.controls.tags.setValue(tag_list);\n        }\n\n        // Reset the input value\n        if (input) input.value = '';\n    }\n\n    /**\n     * Remove tag from the list\n     * @param existing_tag Tag to remove\n     */\n    public removeTag(existing_tag: string): void {\n        if (!this.form || !this.form.controls.tags) return;\n        const tag_list = this.tag_list;\n        this.form.controls.tags.markAsDirty();\n        const index = tag_list.indexOf(existing_tag);\n\n        if (index >= 0) {\n            tag_list.splice(index, 1);\n            this.form.controls.tags.setValue(tag_list);\n        }\n    }\n\n    public saveChanges() {\n        this.loading = true;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this.item,\n                    id: this.item.id || `item-${randomInt(9999_9999)}`,\n                    ...this.form.value,\n                }),\n            },\n        });\n    }\n}\n","import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent } from 'libs/common/src/lib/types';\nimport { randomInt } from 'libs/common/src/lib/general';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOption } from './catering.interfaces';\n\nexport interface CateringItemOptionModalData {\n    parent: CateringItem;\n    option: CateringOption;\n    types: string[];\n}\n\n@Component({\n    selector: 'catering-option-modal',\n    template: `\n        <header>\n            <h3>{{ option.id ? 'Edit' : 'Add' }} Item Option</h3>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <form\n            class=\"p-4 overflow-auto max-h-[65vh]\"\n            *ngIf=\"form && !loading; else load_state\"\n            [formGroup]=\"form\"\n        >\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.name\">\n                <label\n                    for=\"title\"\n                    [class.error]=\"\n                        form.controls.name.invalid && form.controls.name.touched\n                    \"\n                >\n                    Name<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"name\"\n                        placeholder=\"Item name\"\n                        formControlName=\"name\"\n                    />\n                    <mat-error>Name is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.group\">\n                <label\n                    for=\"group\"\n                    [class.error]=\"\n                        form.controls.group.invalid &&\n                        form.controls.group.touched\n                    \"\n                >\n                    Type<span>*</span>:\n                </label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"group\"\n                        placeholder=\"Type of option e.g. Number of sugars\"\n                        formControlName=\"group\"\n                        [matAutocomplete]=\"auto\"\n                    />\n                    <mat-error>Type is required</mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.unit_price\">\n                <label for=\"title\">Unit Price:</label>\n                <mat-form-field appearance=\"outline\">\n                    <input\n                        matInput\n                        name=\"unit-price\"\n                        type=\"number\"\n                        placeholder=\"Unit Price\"\n                        formControlName=\"unit_price\"\n                    />\n                </mat-form-field>\n            </div>\n            <div class=\"flex flex-col\" *ngIf=\"form.controls.multiple\">\n                <mat-checkbox name=\"multiple\" formControlName=\"multiple\">\n                    Can select multiple of type\n                </mat-checkbox>\n            </div>\n        </form>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex p-2 items-center justify-center border-t border-solid border-base-200\"\n        >\n            <button\n                btn\n                matRipple\n                [disabled]=\"!form.dirty\"\n                (click)=\"saveChanges()\"\n            >\n                Save\n            </button>\n        </footer>\n        <ng-template #load_state>\n            <div loading class=\"flex flex-col items-center p-8 space-y-2 w-64\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Saving catering item option...</p>\n            </div>\n        </ng-template>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of types\" [value]=\"option\">\n                {{ option }}\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [``],\n})\nexport class CateringItemOptionModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Form fields for item */\n    public form = new FormGroup({\n        name: new FormControl(this.option.name || '', [Validators.required]),\n        group: new FormControl(this.option.group || '', [Validators.required]),\n        unit_price: new FormControl(this.option.unit_price),\n        multiple: new FormControl(!!this.option.multiple, []),\n    });\n    /** Whether changes are being saved */\n    public loading = false;\n\n    /** Current item details */\n    public get option(): CateringOption {\n        return this._data.option;\n    }\n\n    /** List of available categories */\n    public get types(): string[] {\n        return this._data.types || [];\n    }\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringItemOptionModalData\n    ) {}\n\n    public saveChanges() {\n        this.loading = true;\n        const new_option = {\n            ...this.option,\n            id: this.option.id || `option-${randomInt(9999_9999)}`,\n            ...this.form.value,\n        } as CateringOption;\n        this.event.emit({\n            reason: 'done',\n            metadata: {\n                item: new CateringItem({\n                    ...this._data.parent,\n                    options: this._data.parent.options\n                        .filter((i) => i.id !== new_option.id)\n                        .concat([new_option]),\n                }),\n            },\n        });\n    }\n}\n","import { isAfter, isBefore, setHours, subHours } from 'date-fns';\n\nimport { CalendarEvent } from 'libs/events/src/lib/event.class';\nimport { CateringItem } from './catering-item.class';\nimport { Observable, of } from 'rxjs';\nimport { showMetadata } from '@placeos/ts-client';\nimport { catchError, map } from 'rxjs/operators';\nimport { stringToMinutes } from '@placeos/common';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nconst RULE_REQUESTS: Record<string, Observable<AttachedResourceRuleset[]>> = {};\n\nexport function getCateringRulesForZone(\n    zone_id: string,\n    fresh: boolean = false\n) {\n    if (!zone_id) return of([] as AttachedResourceRuleset[]);\n    if (!RULE_REQUESTS[zone_id] || fresh)\n        RULE_REQUESTS[zone_id] = showMetadata(zone_id, 'catering_config').pipe(\n            map(\n                (_) =>\n                    (_.details instanceof Array\n                        ? _.details\n                        : []) as AttachedResourceRuleset[]\n            ),\n            catchError((e) => of([] as AttachedResourceRuleset[]))\n        );\n    return RULE_REQUESTS[zone_id];\n}\n\nexport function cateringItemAvailable(\n    item: CateringItem,\n    rules: AttachedResourceRuleset[],\n    event: CalendarEvent\n) {\n    let is_available = true;\n    for (const rule of rules) {\n        if (\n            item.category === rule.name ||\n            item.tags.includes(rule.name) ||\n            event.resources.find((_) => _.zones.includes(rule.name)) ||\n            event.space?.zones.includes(rule.name) ||\n            rule.name === '*'\n        ) {\n            let matches = 0;\n            for (const condition of rule.rules) {\n                const date = new Date(event.date);\n                switch (condition[0]) {\n                    case 'is_before':\n                        matches += isBefore(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'within_hours':\n                        matches += isAfter(\n                            Date.now(),\n                            subHours(date, condition[1])\n                        )\n                            ? 1\n                            : 0;\n                        break;\n                    case 'after_hour':\n                        matches += isAfter(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'before_hour':\n                        matches += isBefore(date, setHours(date, condition[1]))\n                            ? 1\n                            : 0;\n                        break;\n                    case 'min_length':\n                        matches +=\n                            event.duration >= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'max_length':\n                        matches +=\n                            event.duration <= stringToMinutes(condition[1])\n                                ? 1\n                                : 0;\n                        break;\n                    case 'visitor_type':\n                        matches +=\n                            event.ext('visitor_type') === condition[1] ? 1 : 0;\n                        break;\n                    default:\n                        matches += 1;\n                }\n            }\n            is_available = matches >= rule.rules.length;\n        }\n    }\n    return is_available;\n}\n","import { Component, Inject, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\n\nimport { AsyncHandler, DialogEvent, HashMap, unique } from '@placeos/common';\n\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport { CateringOption } from './catering.interfaces';\nimport { OrganisationService } from '@placeos/organisation';\nimport { cateringItemAvailable } from './utilities';\nimport { AttachedResourceRuleset } from '@placeos/components';\n\nexport interface CateringOrderModalData {\n    order: CateringOrder;\n    code: string;\n    menu: Observable<CateringItem[]>;\n    loading: Observable<boolean>;\n    getCateringConfig: (_: string) => Promise<AttachedResourceRuleset[]>;\n    selectOptions: (_: CateringOption[]) => Promise<CateringOption[]>;\n}\n\n// TODO: Split template into 2 children components. Order menu and Order Confirm;\n\n@Component({\n    selector: 'app-catering-order-modal',\n    template: `\n        <div class=\"main min-w-[20rem]\" *ngIf=\"!loading; else load_state\">\n            <ng-container *ngIf=\"!show_order_details; else order_details\">\n                <mat-tab-group>\n                    <ng-container *ngFor=\"let cat of categories\">\n                        <mat-tab\n                            *ngIf=\"(menu_items || {})[cat].length\"\n                            [label]=\"cat\"\n                        >\n                            <div class=\"list\">\n                                <div\n                                    item\n                                    class=\"flex items-center p-2 border-b border-base-200\"\n                                    *ngFor=\"let item of (menu_items || {})[cat]\"\n                                >\n                                    <div class=\"flex-1 w-1/2\">\n                                        <div class=\"flex-1 w-1/2\">\n                                            {{ item.name }}\n                                        </div>\n                                        <div\n                                            class=\"text-xs no-underline\"\n                                            *ngIf=\"item.options.length\"\n                                        >\n                                            Options Available\n                                        </div>\n                                    </div>\n                                    <div\n                                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                                    >\n                                        {{\n                                            item.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                    <a-counter\n                                        ngDefaultControl\n                                        [ngModel]=\"item.quantity\"\n                                        (ngModelChange)=\"\n                                            updateItemQuantity(item, $event)\n                                        \"\n                                        *ngIf=\"!item.options.length\"\n                                    ></a-counter>\n                                    <div\n                                        class=\"flex items-center\"\n                                        *ngIf=\"item.options.length\"\n                                    >\n                                        <div\n                                            [matTooltip]=\"\n                                                item.quantity\n                                                    ? 'Items with options must be removed from order confirmation page'\n                                                    : ''\n                                            \"\n                                        >\n                                            <button\n                                                icon\n                                                matRipple\n                                                [disabled]=\"true\"\n                                            >\n                                                <app-icon>remove</app-icon>\n                                            </button>\n                                        </div>\n                                        <div\n                                            class=\"count h-12 w-12 flex items-center justify-center\"\n                                        >\n                                            {{ item.quantity }}\n                                        </div>\n                                        <button\n                                            icon\n                                            matRipple\n                                            (click)=\"addItem(item)\"\n                                        >\n                                            <app-icon>add</app-icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-tab>\n                    </ng-container>\n                </mat-tab-group>\n            </ng-container>\n        </div>\n        <footer\n            *ngIf=\"!loading\"\n            class=\"flex items-center justify-center space-x-2 p-2 border-t border-base-200\"\n        >\n            <ng-container *ngIf=\"!show_order_details; else order_actions\">\n                <button btn matRipple class=\"inverse\" mat-dialog-close>\n                    Cancel\n                </button>\n                <button\n                    confirm\n                    btn\n                    matRipple\n                    [disabled]=\"!order.item_count\"\n                    [matBadge]=\"order.item_count\"\n                    [matBadgeHidden]=\"!order.item_count\"\n                    matBadgeColor=\"warn\"\n                    (click)=\"show_order_details = true\"\n                >\n                    Confirm\n                </button>\n            </ng-container>\n            <ng-template #order_actions>\n                <button\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"show_order_details = false\"\n                >\n                    Back\n                </button>\n                <button save btn matRipple (click)=\"saveOrder()\">\n                    Save Order\n                </button>\n            </ng-template>\n        </footer>\n        <ng-template #load_state>\n            <div class=\"flex flex-col w-64 p-8 items-center space-y-2\">\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n        <ng-template #order_details>\n            <header class=\"h-[3.25rem]\">\n                <h3>Confirm Order</h3>\n            </header>\n            <div class=\"list\">\n                <div\n                    item\n                    class=\"flex items-center p-2 border-b border-base-200\"\n                    *ngFor=\"let item of order.items\"\n                >\n                    <div class=\"flex-1 w-1/2\">\n                        <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                        <div\n                            class=\"text-xs underline\"\n                            *ngIf=\"item.options.length\"\n                            [matTooltip]=\"optionsFor(item)\"\n                        >\n                            {{ item.options.length }} option{{\n                                item.options.length === 1 ? '' : 's'\n                            }}\n                            selected\n                        </div>\n                    </div>\n                    <div\n                        class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                    >\n                        {{ item.total_cost / 100 | currency: code }}\n                    </div>\n                    <a-counter\n                        [ngModel]=\"item.quantity\"\n                        (ngModelChange)=\"updateItemQuantity(item, $event)\"\n                    ></a-counter>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .list {\n                height: 24em;\n                min-width: 32em;\n                max-width: calc(100vw - 1em);\n            }\n\n            footer button {\n                min-width: 12em;\n            }\n\n            input {\n                position: relative;\n                width: 100%;\n                padding: 1em;\n                border: none;\n                border-radius: 0 !important;\n                border-top: 1px solid #ccc;\n                border-bottom: 1px solid #ccc;\n                outline: none;\n                font-size: 1em;\n            }\n\n            input:focus {\n                border: none;\n                border-top: 2px solid var(--s);\n                border-bottom: 2px solid var(--s);\n                box-shadow: none;\n            }\n\n            input.error::placeholder {\n                color: rgba(var(--error), 0.45);\n            }\n        `,\n    ],\n})\nexport class CateringOrderModalComponent\n    extends AsyncHandler\n    implements OnInit\n{\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** Whether changes are being saved */\n    public loading = '';\n    /** Current order */\n    public order: CateringOrder;\n    /** Name of the active category */\n    public category: string;\n    /** Whether order details should be shown */\n    public show_order_details: boolean;\n    /** Catering rules for selected space */\n    public rules: readonly AttachedResourceRuleset[];\n    /** List of menu items to show */\n    public menu_items: HashMap<CateringItem[]> = {};\n    /** List of categories for the active menu */\n    public categories: string[] = [];\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderModalData\n    ) {\n        super();\n        this.loading = 'Loading menu...';\n    }\n\n    public async ngOnInit() {\n        this.loading = 'Loading menu...';\n        this.order = new CateringOrder(this._data.order);\n        this.rules = await this._data.getCateringConfig(\n            this.order.event?.space?.level?.parent_id\n        );\n        this._data.menu.subscribe((list) => {\n            this.loading = 'Loading menu...';\n            const categories = unique(list.map((item) => item.category));\n            const map = {};\n            for (const cat of categories) {\n                map[cat] = list.filter((item) => {\n                    return (\n                        item.category === cat &&\n                        cateringItemAvailable(\n                            item,\n                            this.rules as any,\n                            this.order.event\n                        )\n                    );\n                });\n            }\n            this.categories = categories;\n            this.menu_items = map;\n            this.updateMenuQuantities();\n            this.timeout('clear_loading', () => (this.loading = ''), 1000);\n        });\n    }\n\n    public addItem(item: CateringItem, choose_options: boolean = true) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id &&\n                itm.options.length ===\n                    itm.options.reduce(\n                        (c, o) =>\n                            c +\n                            (item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        if (choose_options && item.options?.length) {\n            this._data.selectOptions(item.options).then((options) => {\n                const new_item = new CateringItem({ ...item, options });\n                this.addItem(new_item, false);\n            });\n        } else if (old_item) {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items\n                    .filter(\n                        (i) =>\n                            !(\n                                i.id === item.id &&\n                                i.options_string === item.options_string\n                            )\n                    )\n                    .concat([\n                        new CateringItem({\n                            ...item,\n                            quantity: old_item.quantity + 1,\n                        }),\n                    ]),\n            });\n        } else {\n            this.order = new CateringOrder({\n                ...this.order,\n                items: this.order.items.concat([\n                    new CateringItem({ ...item, quantity: 1 }),\n                ]),\n            });\n        }\n        this.updateMenuQuantities();\n    }\n\n    public removeItem(item: CateringItem) {\n        this.order = new CateringOrder({\n            ...this.order,\n            items: this.order.items.filter(\n                (_) =>\n                    _.id !== item.id && _.options_string === item.options_string\n            ),\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateItemQuantity(item: CateringItem, amount: number) {\n        const old_item = this.order.items.find(\n            (itm) =>\n                itm.id === item.id && itm.options_string === item.options_string\n        );\n        let items = [...this.order.items];\n        if (old_item) {\n            items = this.order.items\n                .filter(\n                    (i) =>\n                        !(\n                            i.id === item.id &&\n                            i.options_string === item.options_string\n                        )\n                )\n                .concat([new CateringItem({ ...item, quantity: amount })]);\n        } else {\n            items = this.order.items.concat([\n                new CateringItem({ ...item, quantity: amount }),\n            ]);\n        }\n        items.sort((a, b) => a.name.localeCompare(b.name));\n        this.order = new CateringOrder({\n            ...this.order,\n            items,\n        });\n        this.updateMenuQuantities();\n    }\n\n    public updateMenuQuantities() {\n        for (const cat in this.menu_items) {\n            for (const item of this.menu_items[cat]) {\n                (item as any).quantity = this.order.items.reduce(\n                    (c, i) => (i.id === item.id ? c + i.quantity : c),\n                    0\n                );\n            }\n        }\n    }\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public saveOrder() {\n        this.event.emit({\n            reason: 'done',\n            metadata: { order: this.order },\n        });\n    }\n\n    public confirmOrder() {\n        this.show_order_details = true;\n    }\n}\n","import { Component, Inject, Output, EventEmitter } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { DialogEvent, HashMap } from 'libs/common/src/lib/types';\nimport { unique } from 'libs/common/src/lib/general';\n\nimport { CateringOption, CateringOptionGroup } from './catering.interfaces';\n\nexport interface CateringOrderOptionsModalData {\n    code: string;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'app-catering-options-modal',\n    template: `\n        <header>\n            <h3>Select options</h3>\n            <button icon mat-dialog-close>\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main class=\"overflow-auto\">\n            <div\n                class=\"pt-1 pb-2 border-b border-base-200\"\n                *ngFor=\"let group of groups\"\n                [attr.group]=\"group.name\"\n            >\n                <div class=\"font-medium p-2 capitalize\">{{ group.name }}</div>\n                <div class=\"flex flex-col pl-6\">\n                    <ng-container *ngIf=\"!group.multiple; else multi_options\">\n                        <mat-radio-group\n                            class=\"flex flex-col\"\n                            aria-label=\"Select an option\"\n                            ngModel\n                            (ngModelChange)=\"updateGroupOption(group, $event)\"\n                        >\n                            <mat-radio-button class=\"my-1 mx-0\" value=\"\">\n                                <span class=\"font-medium p-2\">None</span>\n                            </mat-radio-button>\n                            <mat-radio-button\n                                class=\"my-1 mx-0\"\n                                *ngFor=\"let opt of group?.options\"\n                                [value]=\"opt.id\"\n                            >\n                                <div class=\"flex items-center justify-center\">\n                                    <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                        {{ opt.name }}\n                                    </div>\n                                    <div\n                                        class=\"opacity-60 text-xs\"\n                                        *ngIf=\"opt.unit_price\"\n                                    >\n                                        +{{\n                                            opt.unit_price / 100\n                                                | currency: code\n                                        }}\n                                    </div>\n                                </div>\n                            </mat-radio-button>\n                        </mat-radio-group>\n                    </ng-container>\n                    <ng-template #multi_options>\n                        <mat-checkbox\n                            *ngFor=\"let opt of group?.options\"\n                            [(ngModel)]=\"option_state[opt.id]\"\n                        >\n                            <div class=\"flex items-center justify-center\">\n                                <div class=\"font-medium p-2 flex-1 w-1/2\">\n                                    {{ opt.name }}\n                                </div>\n                                <div\n                                    class=\"opacity-60 text-xs\"\n                                    *ngIf=\"opt.unit_price\"\n                                >\n                                    +{{ opt.unit_price / 100 | currency: code }}\n                                </div>\n                            </div>\n                        </mat-checkbox>\n                    </ng-template>\n                </div>\n            </div>\n        </main>\n        <footer class=\"p-2\">\n            <button btn matRipple class=\"w-32\" (click)=\"saveOptions()\">\n                Save\n            </button>\n        </footer>\n    `,\n    styles: [\n        `\n            main {\n                min-height: 24em;\n                width: 24rem;\n                max-width: calc(100vw - 2rem);\n            }\n        `,\n    ],\n})\nexport class CateringOrderOptionsModalComponent {\n    /** Emitter for events on the modal */\n    @Output() public event = new EventEmitter<DialogEvent>();\n    /** List of option groups */\n    public readonly groups: CateringOptionGroup[];\n    /** Mapping of options to their active state */\n    public option_state: HashMap<boolean> = {};\n    public readonly code = this._data.code;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: CateringOrderOptionsModalData\n    ) {\n        const groups = unique(\n            this._data.options.map((i) => i.group || 'Other')\n        );\n        const group_list = [];\n        for (const group of groups) {\n            const options = this._data.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        for (const option of group.options) {\n            this.option_state[option.id] = option.id === id;\n        }\n    }\n\n    public saveOptions() {\n        const options = this._data.options.filter(\n            (opt) => this.option_state[opt.id]\n        );\n        this.event.emit({ reason: 'done', metadata: { options } });\n    }\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { csvToJson, DialogEvent, downloadFile } from '@placeos/common';\nimport { CateringItem } from './catering-item.class';\n\n@Component({\n    selector: 'catering-import-menu-modal',\n    template: `\n        <header class=\"h-12 bg-primary flex items-center justify-between px-4\">\n            <h2>Import Catering Menu</h2>\n            <button icon mat-dialog-close *ngIf=\"!loading\">\n                <app-icon>close</app-icon>\n            </button>\n        </header>\n        <main *ngIf=\"!loading; else load_state\">\n            <div\n                class=\"relative flex flex-col items-center justify-center space-y-2 h-[24rem] w-[24rem] border-4 border-base-200 border-dashed rounded-xl hover:bg-base-200 m-4 p-4 cursor-pointer\"\n            >\n                <app-icon class=\"text-4xl\">upload</app-icon>\n                <p>Click to select file or Drag and drop files</p>\n                <input\n                    type=\"file\"\n                    class=\"absolute inset-0 opacity-0\"\n                    (change)=\"handleFileEvent($event)\"\n                />\n            </div>\n            <div class=\"flex items-center justify-center px-4 pb-4\">\n                <button\n                    matRipple\n                    class=\"clear underline w-48\"\n                    (click)=\"downloadTemplate()\"\n                >\n                    Download Template\n                </button>\n            </div>\n        </main>\n        <ng-template #load_state>\n            <main\n                class=\"flex flex-col items-center justify-center space-y-2 p-8 h-[24rem] w-[24rem]\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </main>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringImportMenuModalComponent {\n    @Output() public event = new EventEmitter<DialogEvent>();\n    public loading: string;\n\n    /** Upload the image to the cloud */\n    public handleFileEvent(event: DragEvent) {\n        this.loading = 'Processing menu data...';\n        const element: HTMLInputElement = event.target as any;\n        if (!element?.files) return (this.loading = '');\n        const files: FileList = element.files;\n        if (!files.length) return (this.loading = '');\n        const file = files[0];\n        const fileReader = new FileReader();\n        fileReader.addEventListener('loadend', (e: any) => {\n            const contents = e.target.result;\n            const data = csvToJson(contents);\n            this.loading = '';\n            this.event.emit({\n                reason: 'done',\n                metadata: data\n                    .filter((_) => (_.type || '').toLowerCase() === 'item')\n                    .map(\n                        (i) =>\n                            new CateringItem({\n                                ...i,\n                                options: data\n                                    .filter(\n                                        (_) =>\n                                            (_.type || '').toLowerCase() ===\n                                                'option' && _.tags === i.id\n                                    )\n                                    .map((_) => ({\n                                        id: _.id,\n                                        name: _.name,\n                                        group: _.category,\n                                        multiple: _.multiple,\n                                        unit_price: _.unit_price,\n                                    })),\n                            })\n                    ),\n            });\n        });\n        fileReader.readAsText(file);\n    }\n\n    public downloadTemplate() {\n        const template = `ID,Type,Name,Unit Price,Category,Description,Tags,Multiple\nitem-1,item,Coffee,200,Drink,Wake Up,,\noption-1,option,1 Sugar,20,Sugars,,item-1,false`;\n        downloadFile('import-menu-template.csv', template);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    updateMetadata,\n    showMetadata,\n    PlaceMetadata,\n} from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    first,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    tap,\n} from 'rxjs/operators';\n\nimport {\n    AsyncHandler,\n    flatten,\n    notifyError,\n    notifySuccess,\n    openConfirmModal,\n    SettingsService,\n    unique,\n} from '@placeos/common';\nimport { Building, OrganisationService } from '@placeos/organisation';\n\nimport {\n    CateringItemModalComponent,\n    CateringItemModalData,\n} from './catering-item-modal.component';\nimport {\n    CateringItemOptionModalComponent,\n    CateringItemOptionModalData,\n} from './catering-option-modal.component';\nimport {\n    AttachedResourceConfigModalComponent,\n    AttachedResourceRuleset,\n    AttachedResourceConfigModalData,\n} from '@placeos/components';\nimport { CateringItem } from './catering-item.class';\nimport { CateringOrder } from './catering-order.class';\nimport {\n    CateringOrderModalComponent,\n    CateringOrderModalData,\n} from './catering-order-modal.component';\nimport { CateringOption } from './catering.interfaces';\nimport {\n    CateringOrderOptionsModalComponent,\n    CateringOrderOptionsModalData,\n} from './catering-order-options-modal.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nexport interface CateringSettings {\n    require_notes?: boolean;\n    charge_codes?: string[];\n    disabled_rooms?: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringStateService extends AsyncHandler {\n    private _updated = new BehaviorSubject(0);\n    /** Active menu */\n    private _menu = new BehaviorSubject<CateringItem[]>([]);\n    /** Whether the menu for the active building is loading */\n    private _loading = new BehaviorSubject<boolean>(false);\n    /** Currency code for the active building */\n    private _currency = new BehaviorSubject<string>('USD');\n\n    private _change = new BehaviorSubject(0);\n    /** Observable for the active menu */\n    public readonly menu = this._menu.asObservable();\n    /** Observable for whether the menu for the active building is loadingg */\n    public readonly loading = this._loading.asObservable();\n    /** Observable for the currency code of the active building */\n    public readonly currency = this._currency.asObservable();\n\n    public readonly settings = combineLatest([\n        this._org.active_building,\n        this._change,\n    ]).pipe(\n        filter(([_]) => !!_),\n        switchMap(([_]) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => (_.details as CateringSettings) || {}),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public zone = '';\n\n    public get is_editable() {\n        return !this.zone || this.zone === this._org.building?.id;\n    }\n\n    public get categories() {\n        const menu = this._menu.getValue();\n        return unique(menu.map((i) => i.category));\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'building',\n            this._org.active_building.subscribe(async (bld: Building) => {\n                if (bld) {\n                    const menu = (await this.getCateringForZone(bld.id)).map(\n                        (i) => new CateringItem(i)\n                    );\n                    this._currency.next(\n                        this._settings.get('app.currency') ||\n                            bld.currency ||\n                            'USD'\n                    );\n                    this._menu.next(menu);\n                }\n            })\n        );\n    }\n\n    /**\n     * Create/Edit catering order\n     * @param order Order to manipulate\n     */\n    public async manageCateringOrder(order: CateringOrder) {\n        const ref = this._dialog.open<\n            CateringOrderModalComponent,\n            CateringOrderModalData\n        >(CateringOrderModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                order,\n                menu: this.menu,\n                loading: this.loading,\n                getCateringConfig: (_) => this.getCateringConfig(_),\n                selectOptions: (_) => this.selectOptions(_),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        ref.close();\n        return details?.metadata?.order || order;\n    }\n\n    public async addItem(item: CateringItem = new CateringItem()) {\n        const ref = this._dialog.open<\n            CateringItemModalComponent,\n            CateringItemModalData\n        >(CateringItemModalComponent, {\n            data: {\n                item,\n                categories: this.categories,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public updateItem(item: CateringItem) {\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) menu.splice(index, 1, item);\n        else menu.push(item);\n        this.updateMenu(this._org.building.id, menu).then(() =>\n            this._menu.next([...menu])\n        );\n    }\n\n    public async addOption(\n        item: CateringItem,\n        option: CateringOption = {} as any\n    ) {\n        const types = unique(item.options.map((i) => i.group));\n        const ref = this._dialog.open<\n            CateringItemOptionModalComponent,\n            CateringItemOptionModalData\n        >(CateringItemOptionModalComponent, {\n            data: {\n                parent: item,\n                option,\n                types,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        const menu = this._menu.getValue();\n        const index = menu.findIndex((itm) => itm.id === item.id);\n        if (index >= 0) {\n            menu.splice(index, 1, details.metadata.item);\n        } else {\n            menu.push(details.metadata.item);\n        }\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                ref.close();\n            },\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async selectOptions(options: CateringOption[]) {\n        const ref = this._dialog.open<\n            CateringOrderOptionsModalComponent,\n            CateringOrderOptionsModalData\n        >(CateringOrderOptionsModalComponent, {\n            data: {\n                code: this._currency.getValue(),\n                options,\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return [];\n        ref.close();\n        return details.metadata.options;\n    }\n\n    public async deleteItem(item: CateringItem) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item',\n                content: `Are you sure you wish to remove the catering item ${item.name} from the menu?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item...');\n        const menu = this._menu.getValue().filter((itm) => item.id !== itm.id);\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async deleteOption(item: CateringItem, option: CateringOption) {\n        const details = await openConfirmModal(\n            {\n                title: 'Delete Catering Item Option',\n                content: `Are you sure you wish to remove the catering option \"${option.name}\" from \"${item.name}\"?`,\n                icon: {\n                    type: 'icon',\n                    class: 'material-icons',\n                    content: 'delete',\n                },\n            },\n            this._dialog\n        );\n        if (details.reason !== 'done') return;\n        details.loading('Removing catering item option...');\n        const menu = this._menu.getValue();\n        menu.splice(\n            menu.findIndex((itm) => itm.id === item.id),\n            1,\n            new CateringItem({\n                ...item,\n                options: item.options.filter((opt) => opt.id !== option.id),\n            })\n        );\n        this.updateMenu(this._org.building.id, menu).then(\n            () => {\n                this._menu.next([...menu]);\n                details.close();\n            },\n            () => details.loading('')\n        );\n    }\n\n    public async editConfig() {\n        const config = await this.getCateringConfig(this._org.building.id);\n        const { require_notes } = await this.settings.pipe(take(1)).toPromise();\n        const menu = this._menu.getValue();\n        const types = unique(flatten(menu.map((i) => [i.category, ...i.tags])));\n        const ref = this._dialog.open<\n            AttachedResourceConfigModalComponent,\n            AttachedResourceConfigModalData\n        >(AttachedResourceConfigModalComponent, {\n            data: {\n                config,\n                types,\n                require_notes,\n                saveNotes: (b) => this.saveSettings({ require_notes: b }),\n            },\n        });\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        this.updateConfig(this._org.building.id, details.metadata).then(\n            () => ref.close(),\n            () => (ref.componentInstance.loading = false)\n        );\n    }\n\n    public async importMenu() {\n        const ref = this._dialog.open(CateringImportMenuModalComponent);\n        const details = await Promise.race([\n            ref.componentInstance.event\n                .pipe(first((_) => _.reason === 'done'))\n                .toPromise(),\n            ref.afterClosed().toPromise(),\n        ]);\n        if (details?.reason !== 'done') return;\n        ref.componentInstance.loading = 'Updating menu...';\n        const menu = this._menu.getValue();\n        const bld = this._org.building;\n        const updated_menu = unique(details.metadata.concat(menu), 'id');\n        await this.updateMenu(bld.id, updated_menu).catch((_) => {\n            notifyError('Error importing catering menu');\n            ref.close();\n            throw _;\n        });\n        notifySuccess(\n            `Successfully imported catering menu. ${details.metadata.length} item(s) added.`\n        );\n        ref.close();\n    }\n\n    private updateMenu(zone_id: string, menu: CateringItem[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering',\n            details: menu,\n            description: `Catering menu for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public async saveSettings(settings: CateringSettings) {\n        const old_settings = await this.settings.pipe(take(1)).toPromise();\n        const result = await updateMetadata(this._org.building.id, {\n            id: this._org.building.id,\n            name: 'catering-settings',\n            details: { ...old_settings, ...settings },\n            description: `Catering settings for ${this._org.building.id}`,\n        }).toPromise();\n        this._change.next(Date.now());\n        return result;\n    }\n\n    private async getCateringForZone(zone_id: string): Promise<CateringItem[]> {\n        const menu = (await showMetadata(zone_id, 'catering').toPromise())\n            .details;\n        return menu instanceof Array ? menu : [];\n    }\n\n    public async getCateringConfig(\n        zone_id: string = this._org.building.id\n    ): Promise<AttachedResourceRuleset[]> {\n        const rules = (\n            await showMetadata(zone_id, 'catering_config').toPromise()\n        ).details;\n        return rules instanceof Array ? (rules as any) : [];\n    }\n\n    private updateConfig(zone_id: string, config: AttachedResourceRuleset[]) {\n        return updateMetadata(zone_id, {\n            id: zone_id,\n            name: 'catering_config',\n            details: config,\n            description: `Catering menu config for ${zone_id}`,\n        }).toPromise();\n    }\n\n    public addItemToOrder(order: CateringOrder, new_item: CateringItem) {\n        let items = order.items;\n        const match = items.find(\n            (item) =>\n                item.id === new_item.id &&\n                new_item.options?.length ===\n                    item.options?.reduce(\n                        (c, o) =>\n                            c +\n                            (new_item.options.find((opt) => o.id === opt.id)\n                                ? 1\n                                : 0),\n                        0\n                    )\n        );\n        match\n            ? ((match as any).quantity += 1)\n            : (items = items.concat([\n                  new CateringItem({ ...new_item, quantity: 1 }),\n              ]));\n        const new_order = new CateringOrder({\n            ...order,\n            items,\n            event: null,\n        });\n        return new_order;\n    }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CateringOrder } from './catering-order.class';\n\nimport { CateringOrdersService } from './catering-orders.service';\n\n@Component({\n    selector: 'catering-order-list',\n    template: `\n        <div\n            class=\"sticky top-0 w-full text-sm font-medium flex items-center py-4 border-solid border-b border-base-200 bg-base-100\"\n        >\n            <div class=\"w-20\"></div>\n            <div class=\"w-24\">Time</div>\n            <div class=\"w-48\">Meeting Time</div>\n            <div class=\"flex-1\">Location</div>\n            <div class=\"w-56\">Host</div>\n            <div class=\"w-28\">Charge Code</div>\n            <div class=\"w-24\">Notes</div>\n            <div class=\"w-28\">Invoice No.</div>\n            <div class=\"w-36\">Status</div>\n            <div class=\"w-12\"></div>\n        </div>\n        <ul class=\"list-none p-0 m-0 w-full flex-1 overflow-auto\">\n            <li\n                class=\"border-solid border-b border-base-200\"\n                *ngFor=\"let order of order_list | async; trackBy: trackByFn\"\n            >\n                <catering-order [order]=\"order\"></catering-order>\n            </li>\n            <div\n                empty\n                class=\"info-block opacity-60\"\n                *ngIf=\"!(order_list | async)?.length\"\n            >\n                <p class=\"p-4 text-center\">No Catering Orders</p>\n            </div>\n        </ul>\n        <mat-progress-bar\n            *ngIf=\"loading | async\"\n            class=\"w-full\"\n            mode=\"indeterminate\"\n        ></mat-progress-bar>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class CateringOrderListComponent implements OnInit, OnDestroy {\n    /** List of filtered orders */\n    public readonly order_list = this._orders.filtered;\n    /** Whether order list is loading */\n    public readonly loading = this._orders.loading;\n\n    constructor(private _orders: CateringOrdersService) {}\n\n    public ngOnInit() {\n        this._orders.startPolling();\n    }\n\n    public ngOnDestroy() {\n        this._orders.stopPolling();\n    }\n\n    /* istanbul ignore next */\n    public trackByFn(index: number, order: CateringOrder) {\n        return order ? order.id : undefined;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { SettingsService, unique } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { PlaceMetadata, showMetadata } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n    catchError,\n    filter,\n    map,\n    shareReplay,\n    switchMap,\n    tap,\n} from 'rxjs/operators';\nimport { CateringItem } from '../catering-item.class';\nimport { cateringItemAvailable, getCateringRulesForZone } from '../utilities';\nimport { CateringSettings } from '../catering-state.service';\nimport { Space } from 'libs/spaces/src/lib/space.class';\n\nexport interface CateringOrderOptions {\n    // Affects backend requests\n    zone?: string;\n}\n\nexport interface CateringOrderFilters {\n    // Affects frontend filtering\n    date?: number;\n    duration?: number;\n    zone_id?: string;\n    resources?: Space[];\n    search: string;\n    tags: string[];\n    categories: string[];\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CateringOrderStateService {\n    private _options = new BehaviorSubject<CateringOrderOptions>({});\n    private _filters = new BehaviorSubject<CateringOrderFilters>({\n        search: '',\n        tags: [],\n        categories: [],\n    });\n    private _loading = new BehaviorSubject('');\n\n    public readonly loading = this._loading.asObservable();\n    public readonly filters = this._filters.asObservable();\n\n    public readonly settings = this._org.active_building.pipe(\n        filter((_) => !!_),\n        switchMap((_) =>\n            showMetadata(_.id, 'catering-settings').pipe(\n                catchError((_) => of({} as PlaceMetadata))\n            )\n        ),\n        map((_) => _.details as CateringSettings),\n        tap((_) =>\n            this._settings.post('require_catering_notes', !!_?.require_notes)\n        ),\n        shareReplay(1)\n    );\n\n    public readonly charge_codes = this.settings.pipe(\n        map((_) => _.charge_codes || [])\n    );\n    public readonly availability = this.settings.pipe(\n        map((_) => _.disabled_rooms || [])\n    );\n\n    public readonly available_menu: Observable<CateringItem[]> = combineLatest([\n        this._options,\n        this._org.active_building,\n    ]).pipe(\n        filter(([_, bld]) => !!bld),\n        switchMap(([{ zone }, bld]) => {\n            this._loading.next('[Menu]');\n            return showMetadata(zone || bld.id, 'catering').pipe(\n                map((d) => d.details.map((_) => new CateringItem(_))),\n                catchError((_) => [])\n            );\n        }),\n        tap((_) => this._loading.next('')),\n        shareReplay(1)\n    );\n\n    public readonly categories = this.available_menu.pipe(\n        map((_) => unique(_.map((i) => i.category)))\n    );\n\n    public readonly filtered_menu = combineLatest([\n        this._filters,\n        this.available_menu,\n    ]).pipe(\n        switchMap(\n            async ([\n                {\n                    search,\n                    tags,\n                    categories,\n                    zone_id,\n                    date,\n                    duration,\n                    resources,\n                },\n                l,\n            ]) => {\n                const rules = await getCateringRulesForZone(\n                    zone_id\n                ).toPromise();\n                search = search.toLowerCase();\n                let list = search\n                    ? l.filter((_) => _.name.toLowerCase().includes(search))\n                    : l;\n                list = tags.length\n                    ? list.filter((_) => tags.every((t) => _.tags.includes(t)))\n                    : list;\n                list = categories.length\n                    ? list.filter((_) => categories.includes(_.category))\n                    : list;\n                list = list.filter((_) =>\n                    cateringItemAvailable(_, rules, {\n                        date,\n                        duration,\n                        resources,\n                    } as any)\n                );\n                return list;\n            }\n        ),\n        shareReplay(1)\n    );\n\n    public get currency_code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public setOptions(opts: Partial<CateringOrderOptions>) {\n        this._options.next({ ...this._options.getValue(), ...opts });\n    }\n\n    public setFilters(opts: Partial<CateringOrderFilters>) {\n        this._filters.next({ ...this._filters.getValue(), ...opts });\n    }\n\n    public getFilters() {\n        return { ...this._filters.getValue() };\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CateringItem } from '../catering-item.class';\n\n@Component({\n    selector: 'catering-item-list-item',\n    template: `\n        <li\n            item\n            [class.!border-base-200]=\"active\"\n            class=\"relative p-2 rounded-lg w-full shadow border bg-base-100 border-base-200 sm:w-[20rem]\"\n        >\n            <button\n                matRipple\n                name=\"select-catering-item\"\n                class=\"w-full h-full flex items-center\"\n                (click)=\"select.emit()\"\n            >\n                <div\n                    class=\"relative w-16 h-16 rounded-xl bg-neutral mr-4 overflow-hidden border border-base-200 flex items-center justify-center\"\n                >\n                    <div\n                        class=\"absolute top-1 left-1 border border-white bg-neutral rounded-full h-6 w-6 flex items-center justify-center text-white text-xs\"\n                        *ngIf=\"item.quantity && selected\"\n                    >\n                        {{ item.quantity || '1' }}\n                    </div>\n                    <img\n                        auth\n                        *ngIf=\"item.images?.length; else placeholder\"\n                        class=\"object-cover min-h-full min-w-full\"\n                        [source]=\"item.images[0]\"\n                    />\n                    <ng-template #placeholder>\n                        <img\n                            class=\"m-auto\"\n                            src=\"assets/icons/catering-placeholder.svg\"\n                        />\n                    </ng-template>\n                </div>\n                <div class=\"space-y-2 text-left flex-1\">\n                    <div class=\"font-medium flex flex-col pr-10\">\n                        <div>{{ item.name || 'Item' }}</div>\n                        <div class=\"opacity-60 text-xs\">\n                            {{ item.category }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center text-sm space-x-1\">\n                        <p\n                            class=\"flex-1 w-px bg-base-100 rounded\"\n                            *ngIf=\"item.unit_price\"\n                        >\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                        <div\n                            class=\"text-xs px-2 py-1 rounded-2xl shadow border border-base-200\"\n                            *ngIf=\"item.option_list?.length\"\n                        >\n                            {{ options }}\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-success flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Gluten Free')\"\n                        >\n                            GF\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegan')\"\n                        >\n                            VG\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-info flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Vegetarian')\"\n                        >\n                            V\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-warning flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Dairy')\"\n                        >\n                            D\n                        </div>\n                        <div\n                            class=\"text-xs h-5 w-7 rounded-xl shadow bg-orange-600 flex items-center justify-center\"\n                            *ngIf=\"item.tags?.includes('Contains Nuts')\"\n                        >\n                            N\n                        </div>\n                    </div>\n                </div>\n            </button>\n            <button\n                icon\n                matRipple\n                name=\"toggle-catering-item-favourite\"\n                class=\"absolute top-1 right-1\"\n                [class.text-blue-400]=\"favourite\"\n                (click)=\"toggleFav.emit()\"\n            >\n                <app-icon>{{\n                    favourite ? 'favorite' : 'favorite_border'\n                }}</app-icon>\n            </button>\n        </li>\n    `,\n    styles: [``],\n})\nexport class CateringItemListItemComponent {\n    @Input() public item: CateringItem;\n    @Input() public active = false;\n    @Input() public selected = false;\n    @Input() public favourite = false;\n    @Input() public code: string = 'USD';\n    @Output() public toggleFav = new EventEmitter();\n    @Output() public select = new EventEmitter();\n\n    public get options() {\n        return this.item.option_list?.map((_) => _.name).join(', ');\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\n@Component({\n    selector: 'catering-item-list',\n    template: `\n        <div class=\"w-full h-full overflow-auto py-2\">\n            <ng-container *ngIf=\"(list | async)?.length\">\n                <h3 class=\"font-bold px-2\">Ordered Items</h3>\n                <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                    {{ (list | async)?.length || 0 }} items(s)\n                </p>\n\n                <ul class=\"list-style-none space-y-2 p-2\">\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"true\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        (toggleFav)=\"toggleFav.emit(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n            <h3 class=\"font-bold px-2\">Results</h3>\n            <p count class=\"text-sm opacity-60 mb-2 px-2\">\n                {{ (item_list | async)?.length || 0 }} result(s) found\n            </p>\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ul\n                    class=\"list-style-none space-y-2 p-2\"\n                    *ngIf=\"(item_list | async)?.length; else empty_state\"\n                >\n                    <catering-item-list-item\n                        class=\"block\"\n                        *ngFor=\"let item of item_list | async\"\n                        [item]=\"item\"\n                        [active]=\"active === item.custom_id\"\n                        [selected]=\"selected.includes(item.custom_id)\"\n                        [favourite]=\"isFavourite(item.id)\"\n                        [code]=\"code\"\n                        (toggleFav)=\"toggleFav(item.id)\"\n                        (select)=\"selectItem(item, true)\"\n                    ></catering-item-list-item>\n                </ul>\n            </ng-container>\n        </div>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\">\n                    No available items for selected time and/or filters\n                </p>\n            </div>\n        </ng-template>\n        <ng-template #load_state>\n            <div\n                loading\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p class=\"opacity-30\">Finding available items...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [``],\n})\nexport class CateringItemListComponent {\n    @Input() public active: string = '';\n    @Input() public selected: string = '';\n    @Input() public selected_items: CateringItem[] = [];\n    @Input() public favorites: string[] = [];\n    @Output() public toggleFav = new EventEmitter<CateringItem>();\n    @Output() public onSelect = new EventEmitter<CateringItem>();\n\n    public readonly list = new BehaviorSubject<CateringItem[]>([]);\n    public readonly loading = this._state.loading;\n    public readonly item_list = this._state.filtered_menu;\n\n    public get code() {\n        return this._state.currency_code;\n    }\n\n    constructor(private _state: CateringOrderStateService) {}\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.selected_items) {\n            this.list.next(this.selected_items || []);\n        }\n    }\n\n    public isFavourite(item_id: string) {\n        return this.favorites?.includes(item_id);\n    }\n\n    public selectItem(item: CateringItem, clear_state: boolean = false) {\n        this.onSelect.emit(item);\n        if (clear_state) {\n            item.options?.forEach((_) => delete _.active);\n        }\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { unique } from '@placeos/common';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOption } from '../catering.interfaces';\n\ninterface CateringOptionGroup {\n    name: string;\n    multiple: boolean;\n    options: CateringOption[];\n}\n\n@Component({\n    selector: 'catering-item-details',\n    template: `\n        <ng-container *ngIf=\"item; else empty_state\">\n            <section image class=\"relative w-full h-64 sm:h-40 bg-neutral\">\n                <image-carousel\n                    [images]=\"item.images\"\n                    class=\"absolute inset-0\"\n                ></image-carousel>\n                <button\n                    icon\n                    matRipple\n                    name=\"close-catering-item-details\"\n                    (click)=\"close.emit()\"\n                    class=\"absolute top-2 left-2 bg-neutral sm:hidden text-white\"\n                >\n                    <app-icon>arrow_back</app-icon>\n                </button>\n                <button\n                    icon\n                    matRipple\n                    name=\"toggle-catering-item-favourite-details\"\n                    [class.text-white]=\"!fav\"\n                    [class.text-blue-400]=\"fav\"\n                    (click)=\"toggleFav.emit()\"\n                    class=\"absolute top-2 right-2 bg-neutral\"\n                >\n                    <app-icon>{{\n                        fav ? 'favorite' : 'favorite_border'\n                    }}</app-icon>\n                </button>\n            </section>\n            <div class=\"p-2 space-y-2 flex-1 h-1/2 overflow-auto\">\n                <section actions class=\"z-0 flex items-center justify-between\">\n                    <div>\n                        <h2 class=\"text-xl font-medium mb-2 mt-4\">\n                            {{ item.name }}\n                        </h2>\n                        <p *ngIf=\"item.unit_price\">\n                            {{ item.unit_price / 100 | currency: code }}\n                        </p>\n                    </div>\n                    <a-counter\n                        [(ngModel)]=\"item.quantity\"\n                        (ngModelChange)=\"\n                            active ? activeChange.emit(active) : ''\n                        \"\n                        [min]=\"1\"\n                        [max]=\"item.count || 10\"\n                    ></a-counter>\n                </section>\n                <section class=\"flex items-center flex-wrap\">\n                    <div\n                        class=\"px-2 py-1 rounded-2xl bg-base-200 text-sm capitalize m-1\"\n                        *ngFor=\"let tag of item.tags\"\n                    >\n                        {{ tag }}\n                    </div>\n                </section>\n                <hr />\n                <section details class=\"space-y-2\">\n                    <div class=\"flex flex-col flex-wrap\">\n                        <div\n                            class=\"min-w-1/2 flex-1\"\n                            *ngFor=\"let group of groups\"\n                            [attr.group]=\"group.name\"\n                        >\n                            <div class=\"font-medium p-2 capitalize\">\n                                {{ group.name }}\n                            </div>\n                            <div class=\"flex flex-col pl-4\">\n                                <ng-container\n                                    *ngIf=\"!group.multiple; else multi_options\"\n                                >\n                                    <mat-radio-group\n                                        class=\"flex flex-col\"\n                                        aria-label=\"Select an option\"\n                                        [(ngModel)]=\"group_state[group.name]\"\n                                        (ngModelChange)=\"\n                                            updateGroupOption(group, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <mat-radio-button class=\"m-0\" value=\"\">\n                                            <span class=\"font-medium p-2\" i18n\n                                                >None</span\n                                            >\n                                        </mat-radio-button>\n                                        <mat-radio-button\n                                            class=\"m-0\"\n                                            *ngFor=\"let opt of group?.options\"\n                                            [value]=\"opt.id\"\n                                        >\n                                            <div\n                                                class=\"flex items-center justify-center max-w-[calc(100vw-4rem)] sm:max-w-[15rem]\"\n                                            >\n                                                <div\n                                                    class=\"font-medium p-2 flex-1 w-1/2 whitespace-normal\"\n                                                >\n                                                    {{ opt.name }}\n                                                </div>\n                                                <div\n                                                    class=\"opacity-60 text-xs\"\n                                                    *ngIf=\"opt.unit_price\"\n                                                >\n                                                    +{{\n                                                        opt.unit_price / 100\n                                                            | currency: code\n                                                    }}\n                                                </div>\n                                            </div>\n                                        </mat-radio-button>\n                                    </mat-radio-group>\n                                </ng-container>\n                                <ng-template #multi_options>\n                                    <mat-checkbox\n                                        *ngFor=\"let opt of group?.options\"\n                                        [(ngModel)]=\"option_state[opt.id]\"\n                                        (ngModelChange)=\"\n                                            updateCheckedState(opt.id, $event)\n                                        \"\n                                        [disabled]=\"item?.in_order\"\n                                    >\n                                        <div\n                                            class=\"flex items-center justify-center\"\n                                        >\n                                            <div\n                                                class=\"font-medium p-2 flex-1 w-1/2\"\n                                            >\n                                                {{ opt.name }}\n                                            </div>\n                                            <div\n                                                class=\"opacity-60 text-xs\"\n                                                *ngIf=\"opt.unit_price\"\n                                            >\n                                                +{{\n                                                    opt.unit_price / 100\n                                                        | currency: code\n                                                }}\n                                            </div>\n                                        </div>\n                                    </mat-checkbox>\n                                </ng-template>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n            <div\n                class=\"px-2 pt-2 pb-[5.5rem] border-t border-base-200 shadow sm:hidden\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"select-catering-item-details\"\n                    [class.inverse]=\"active\"\n                    class=\"w-full\"\n                    (click)=\"active = !active; activeChange.emit(active)\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-2xl\">{{\n                            active ? 'remove' : 'add'\n                        }}</app-icon>\n                        <p>\n                            {{ active ? 'Remove this item' : 'Add this item' }}\n                        </p>\n                    </div>\n                </button>\n            </div>\n        </ng-container>\n        <ng-template #empty_state>\n            <div\n                empty\n                class=\"p-16 flex flex-col items-center justify-center space-y-2\"\n            >\n                <p class=\"opacity-30 text-center\" i18n>\n                    Select an item to view it's details\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                width: 30%;\n                min-width: 20rem;\n                height: 100%;\n                min-height: 65vh;\n            }\n        `,\n    ],\n})\nexport class CateringItemDetailsComponent {\n    @Input() public item?: CateringItem;\n    @Input() public active: boolean = false;\n    @Input() public fav: boolean = false;\n    @Input() public code: string = 'USD';\n\n    @Output() public toggleFav = new EventEmitter<void>();\n    @Output() public activeChange = new EventEmitter<boolean>();\n    @Output() public close = new EventEmitter<void>();\n\n    public option_state: Record<string, boolean> = {};\n    public group_state: Record<string, string> = {};\n    public groups: CateringOptionGroup[];\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.item && this.item) {\n            this._update();\n        }\n    }\n\n    public updateGroupOption(group: CateringOptionGroup, id: string) {\n        if (!group) return;\n        this.group_state[group.name] = id;\n        for (const option of group.options) {\n            option.active = option.id === id;\n        }\n    }\n\n    public updateCheckedState(id: string, state: boolean) {\n        const option = this.item?.options.find((_) => _.id === id);\n        if (option) option.active = state;\n    }\n\n    private _update() {\n        if (!this.item) return;\n        if (!this.item.quantity) {\n            (this.item as any).quantity = 1;\n        }\n        this.option_state = {};\n        this.group_state = {};\n        const groups = unique(this.item.options.map((i) => i.group || 'Other'));\n        const group_list = [];\n        for (const group of groups) {\n            const options = this.item.options.filter((i) => i.group === group);\n            group_list.push({\n                name: group,\n                multiple: !!options.find((i) => i.multiple),\n                options,\n            });\n        }\n        this.groups = group_list;\n        if (this.item.option_list) {\n            for (const opt of this.item.option_list) {\n                const option = this.item.options.find((_) => _.id === opt.id);\n                if (option) {\n                    option.active = true;\n                    this.option_state[opt.id] = true;\n                    this.updateGroupOption(\n                        this.groups.find((g) => g.name === option.group),\n                        option.id\n                    );\n                }\n            }\n        }\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { CateringOrderStateService } from './catering-order-state.service';\nimport { SettingsService } from '@placeos/common';\n\nconst ICONS = {\n    coffee: `<svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_605_8664)\">\n    <path d=\"M38.388 21.2474C37.8243 20.7996 37.1598 20.4847 36.4474 20.3278C35.735 20.1708 34.9944 20.1762 34.2846 20.3434C34.2476 19.7774 34.2049 19.2037 34.1483 18.6155C34.1243 18.3664 34.0043 18.1349 33.8119 17.9668C33.6195 17.7986 33.3687 17.706 33.1088 17.707H1.26151C1.00166 17.706 0.750839 17.7986 0.558442 17.9668C0.366045 18.1349 0.246035 18.3664 0.222073 18.6155C-0.42931 25.3581 0.106585 30.5307 4.80024 35.4799C8.88062 39.7819 15.7271 39.9998 17.0599 39.9998H17.3047C18.6375 39.9998 25.4863 39.7774 29.5643 35.4799C30.5412 34.4597 31.3937 33.3353 32.1052 32.1286C32.2481 32.1199 32.3875 32.0819 32.514 32.0174C34.0959 31.2139 35.6169 30.3039 37.0656 29.2943C38.3815 28.4227 39.3664 27.1618 39.871 25.7028C40.0702 24.9006 40.0372 24.0612 39.7758 23.2757C39.5144 22.4902 39.0344 21.7887 38.388 21.2474ZM28.0329 34.13C24.4699 37.8905 18.0323 37.9984 17.3093 37.9984H17.0645C16.3426 37.9984 9.90389 37.8872 6.34092 34.13C2.37257 29.9436 1.75351 25.466 2.21549 19.7085H32.1583C32.6214 25.4649 32.0024 29.9425 28.0329 34.13ZM37.8498 25.2091C37.4485 26.2369 36.7212 27.117 35.771 27.7243C35.024 28.2636 34.2434 28.7582 33.4334 29.2053C34.1268 27.0036 34.4428 24.7078 34.3689 22.4082C34.3839 22.4027 34.3989 22.4082 34.4139 22.3982C34.8447 22.2182 35.3192 22.1579 35.7837 22.2242C36.2482 22.2905 36.6841 22.4808 37.0421 22.7733C37.4001 23.0659 37.6658 23.4491 37.8092 23.8796C37.9525 24.3101 37.9678 24.7707 37.8533 25.2091H37.8498Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.43243 8.16274C9.85735 8.48322 10.2069 8.88673 10.4582 9.34669C10.7094 9.80666 10.8565 10.3126 10.89 10.8313C10.7939 11.9569 10.2754 13.0103 9.43128 13.7946C9.32937 13.883 9.24664 13.9899 9.18786 14.1092C9.12907 14.2286 9.0954 14.3579 9.08878 14.4898C9.08216 14.6217 9.10275 14.7536 9.14931 14.8778C9.19588 15.002 9.26753 15.1161 9.36012 15.2136C9.45271 15.311 9.56442 15.3898 9.6888 15.4455C9.81319 15.5012 9.9478 15.5326 10.0849 15.538C10.2219 15.5433 10.3587 15.5225 10.4874 15.4767C10.6161 15.4309 10.734 15.3611 10.8345 15.2712C12.1048 14.1093 12.8679 12.5254 12.9688 10.8413C12.9432 10.042 12.7392 9.25727 12.3708 8.5405C12.0023 7.82373 11.478 7.19166 10.8334 6.68722C10.4067 6.38353 10.055 5.99283 9.80341 5.54303C9.55184 5.09323 9.40662 4.59547 9.37815 4.08534C9.51392 3.18283 10.0073 2.36595 10.7548 1.80591C10.9718 1.64618 11.1147 1.41065 11.1528 1.15024C11.1908 0.889843 11.1208 0.625512 10.958 0.414392C10.7951 0.203272 10.5525 0.062327 10.2826 0.0220596C10.0127 -0.0182078 9.73715 0.0454338 9.51559 0.199206C8.90219 0.651996 8.39004 1.21933 8.0098 1.86721C7.62956 2.5151 7.38907 3.2302 7.30273 3.9697C7.30292 4.77855 7.49485 5.5767 7.86392 6.30333C8.23298 7.02996 8.76944 7.66592 9.43243 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M23.0984 8.16274C23.5234 8.48322 23.8729 8.88673 24.1242 9.34669C24.3754 9.80666 24.5225 10.3126 24.556 10.8313C24.4599 11.9569 23.9414 13.0103 23.0973 13.7946C22.9954 13.883 22.9126 13.9899 22.8539 14.1092C22.7951 14.2286 22.7614 14.3579 22.7548 14.4898C22.7482 14.6217 22.7687 14.7536 22.8153 14.8778C22.8619 15.002 22.9335 15.1161 23.0261 15.2136C23.1187 15.311 23.2304 15.3898 23.3548 15.4455C23.4792 15.5012 23.6138 15.5326 23.7509 15.538C23.8879 15.5433 24.0247 15.5225 24.1534 15.4767C24.2821 15.4309 24.4 15.3611 24.5005 15.2712C25.7708 14.1093 26.5339 12.5254 26.6348 10.8413C26.6092 10.042 26.4052 9.25727 26.0368 8.5405C25.6683 7.82373 25.144 7.19166 24.4994 6.68722C24.0727 6.38353 23.721 5.99283 23.4694 5.54303C23.2178 5.09323 23.0726 4.59547 23.0442 4.08534C23.1799 3.18283 23.6733 2.36595 24.4208 1.80591C24.6378 1.64618 24.7807 1.41065 24.8188 1.15024C24.8568 0.889843 24.7868 0.625512 24.624 0.414392C24.4611 0.203272 24.2185 0.062327 23.9486 0.0220596C23.6787 -0.0182078 23.4032 0.0454338 23.1816 0.199206C22.5682 0.651996 22.0561 1.21933 21.6758 1.86721C21.2956 2.5151 21.0551 3.2302 20.9688 3.9697C20.9689 4.77855 21.1609 5.5767 21.5299 6.30333C21.899 7.02996 22.4355 7.66592 23.0984 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M16.2645 8.16274C16.6894 8.48322 17.039 8.88673 17.2902 9.34669C17.5414 9.80666 17.6886 10.3126 17.722 10.8313C17.626 11.9569 17.1074 13.0103 16.2633 13.7946C16.1614 13.883 16.0787 13.9899 16.0199 14.1092C15.9611 14.2286 15.9274 14.3579 15.9208 14.4898C15.9142 14.6217 15.9348 14.7536 15.9813 14.8778C16.0279 15.002 16.0996 15.1161 16.1922 15.2136C16.2847 15.311 16.3964 15.3898 16.5208 15.4455C16.6452 15.5012 16.7798 15.5326 16.9169 15.538C17.054 15.5433 17.1908 15.5225 17.3194 15.4767C17.4481 15.4309 17.5661 15.3611 17.6666 15.2712C18.9368 14.1093 19.6999 12.5254 19.8009 10.8413C19.7752 10.042 19.5713 9.25727 19.2028 8.5405C18.8343 7.82373 18.31 7.19166 17.6654 6.68722C17.2387 6.38353 16.887 5.99283 16.6354 5.54303C16.3839 5.09323 16.2386 4.59547 16.2102 4.08534C16.346 3.18283 16.8393 2.36595 17.5869 1.80591C17.8038 1.64618 17.9468 1.41065 17.9848 1.15024C18.0228 0.889843 17.9528 0.625512 17.79 0.414392C17.6271 0.203272 17.3845 0.062327 17.1146 0.0220596C16.8447 -0.0182078 16.5692 0.0454338 16.3476 0.199206C15.7342 0.651996 15.2221 1.21933 14.8418 1.86721C14.4616 2.5151 14.2211 3.2302 14.1348 3.9697C14.1349 4.77855 14.3269 5.5767 14.6959 6.30333C15.065 7.02996 15.6015 7.66592 16.2645 8.16274Z\" fill=\"currentcolor\"/>\n    <path d=\"M7.16328 29.7138C5.86597 27.7051 5.17938 25.3866 5.18141 23.0212C5.18141 22.7558 5.07191 22.5013 4.87697 22.3136C4.68204 22.1259 4.41765 22.0205 4.14198 22.0205C3.8663 22.0205 3.60191 22.1259 3.40698 22.3136C3.21204 22.5013 3.10254 22.7558 3.10254 23.0212C3.10081 25.7653 3.89738 28.4551 5.40201 30.7857C5.55001 31.0072 5.78275 31.1637 6.04976 31.2211C6.31677 31.2784 6.59652 31.2322 6.82832 31.0923C7.06012 30.9524 7.22529 30.7301 7.288 30.4737C7.35071 30.2174 7.30588 29.9475 7.16328 29.7227V29.7138Z\" fill=\"currentcolor\"/>\n    <path d=\"M9.06498 32.7103C8.94112 32.6482 8.84235 32.548 8.78434 32.4257C8.73082 32.3026 8.65227 32.1911 8.55334 32.0977C8.45441 32.0043 8.33708 31.9309 8.20825 31.8818C8.07942 31.8327 7.9417 31.8089 7.80317 31.8118C7.66464 31.8146 7.5281 31.8441 7.40159 31.8986C7.27508 31.953 7.16115 32.0312 7.06649 32.1286C6.97184 32.226 6.89837 32.3407 6.8504 32.4658C6.80244 32.591 6.78094 32.7241 6.78719 32.8574C6.79344 32.9906 6.8273 33.1213 6.88678 33.2418C7.13536 33.7758 7.56332 34.2136 8.10177 34.4849C8.34682 34.6079 8.63256 34.6321 8.89616 34.5523C9.15975 34.4724 9.37959 34.295 9.50732 34.0591C9.63505 33.8232 9.6602 33.5481 9.57725 33.2943C9.49429 33.0405 9.31003 32.8289 9.06498 32.7059V32.7103Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_605_8664\">\n    <rect width=\"40\" height=\"40\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    drinks: `<svg width=\"28\" height=\"39\" viewBox=\"0 0 28 39\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8203)\">\n    <path d=\"M0 0L0.662157 8.11078C0.662157 8.12619 0.653028 8.1394 0.653028 8.15481C0.658117 8.18851 0.664982 8.22193 0.673584 8.25496L3.1852 39H25.1048L28.0034 0H0ZM25.7932 1.98093L25.4085 7.16985C25.3982 7.16985 25.3902 7.16985 25.3799 7.16985H2.64519L2.22279 1.98642L25.7932 1.98093ZM23.1948 37.0191H5.08147L2.80846 9.14527H25.2612L23.1948 37.0191Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.24983 23.3122C6.28864 23.3122 6.32861 23.3122 6.364 23.3122C6.49825 23.2972 6.6281 23.2567 6.74613 23.1933C6.86415 23.1298 6.96804 23.0445 7.05181 22.9423C7.13559 22.8401 7.19762 22.7229 7.23436 22.5975C7.2711 22.4722 7.28181 22.341 7.26589 22.2117C7.0661 20.5444 6.86517 18.8155 6.66538 17.0855C6.4576 15.2861 6.24869 13.4846 6.03862 11.7502C5.99894 11.4962 5.85848 11.267 5.64686 11.111C5.43525 10.955 5.16904 10.8843 4.90438 10.9138C4.63973 10.9434 4.39731 11.0708 4.22831 11.2694C4.0593 11.4679 3.9769 11.722 3.9985 11.978C4.20628 13.7091 4.41522 15.5084 4.623 17.3056C4.82392 19.0378 5.02485 20.77 5.22578 22.4395C5.25574 22.6807 5.37661 22.9029 5.56542 23.0638C5.75424 23.2247 5.99781 23.3131 6.24983 23.3122Z\" fill=\"currentcolor\"/>\n    <path d=\"M6.05485 24.414C5.9204 24.4288 5.79029 24.469 5.67201 24.5323C5.55372 24.5957 5.44958 24.6809 5.36557 24.7832C5.28156 24.8854 5.21933 25.0027 5.18245 25.1282C5.14557 25.2537 5.13477 25.385 5.15067 25.5145L5.31392 26.8857C5.34197 27.1276 5.46141 27.351 5.64945 27.5134C5.83748 27.6758 6.08096 27.7658 6.33341 27.7662C6.37223 27.7662 6.41105 27.7662 6.44759 27.7607C6.5817 27.7462 6.71152 27.7063 6.82966 27.6434C6.9478 27.5806 7.05194 27.4959 7.13612 27.3942C7.22029 27.2925 7.28287 27.1758 7.32027 27.0508C7.35766 26.9258 7.36913 26.7949 7.35404 26.6656L7.1908 25.2889C7.15839 25.0286 7.02114 24.791 6.80864 24.6273C6.59614 24.4636 6.32541 24.387 6.05485 24.414Z\" fill=\"currentcolor\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8203\">\n    <rect width=\"28\" height=\"39\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>\n    `,\n    snacks: `<svg width=\"44\" height=\"30\" viewBox=\"0 0 44 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.9739 12.3839H39.9673C39.8416 11.3068 39.529 10.2613 39.0441 9.29623C38.2937 7.89066 37.2396 6.67826 35.9616 5.75118C34.6837 4.82411 33.2156 4.20677 31.669 3.94605C31.658 3.94605 31.6471 3.94605 31.635 3.94605C29.7116 1.41671 26.4577 0.0219894 22.162 0.00292969C17.7851 0.0287164 14.3819 1.44362 12.4015 3.94605C12.3773 3.94605 12.3553 3.94605 12.3312 3.94605C10.7845 4.20721 9.31631 4.82484 8.03823 5.75207C6.76016 6.6793 5.70574 7.89174 4.95505 9.29734C4.47112 10.2623 4.15888 11.3074 4.03289 12.3839H4.02631C2.34137 14.0479 1.12087 16.1402 0.490328 18.4457C-0.140217 20.7512 -0.15805 23.1866 0.438675 25.5015C1.16762 28.1328 2.30494 29.6228 3.81991 29.9323C4.02143 29.975 4.22667 29.9968 4.43249 29.9973C5.03503 29.925 5.61546 29.722 6.13483 29.4017C6.6542 29.0815 7.1005 28.6516 7.44377 28.1407C8.13563 27.3077 8.96125 26.601 9.88529 26.0508C10.6588 25.658 11.4715 25.3513 12.3092 25.136C12.7407 25.007 13.2105 24.8624 13.7122 24.6875C14.2182 24.7717 14.7299 24.8148 15.2426 24.8164C16.5191 24.8132 17.7827 24.5561 18.963 24.0597C19.2243 24.1678 19.4915 24.2603 19.7633 24.3366C20.4624 24.5255 21.1737 24.6634 21.892 24.7492C21.9649 24.7584 22.0386 24.7584 22.1115 24.7492C22.8298 24.6634 23.5411 24.5255 24.2402 24.3366C24.5121 24.2602 24.7794 24.1674 25.0405 24.0585C26.6985 24.7663 28.5179 24.9843 30.2913 24.6875C30.7941 24.8568 31.2639 25.0014 31.6954 25.136C32.5326 25.3518 33.3449 25.6585 34.1182 26.0508C35.0422 26.6006 35.8675 27.3074 36.5586 28.1407C36.9021 28.6516 37.3486 29.0816 37.8682 29.4018C38.3877 29.722 38.9683 29.925 39.571 29.9973C39.7765 29.9968 39.9813 29.975 40.1825 29.9323C41.6986 29.6228 42.8359 28.1317 43.5648 25.5015C44.1604 23.1863 44.1418 20.7509 43.5107 18.4455C42.8796 16.1401 41.6588 14.0479 39.9739 12.3839ZM8.94886 24.276C7.83296 24.927 6.83512 25.7694 5.99906 26.7661C5.09447 27.7561 4.76074 28.07 4.20854 27.9568C3.49936 27.8111 2.83628 26.7459 2.34227 24.9543C1.92223 23.3112 1.86627 21.5932 2.17848 19.9252C2.4907 18.2572 3.16322 16.6814 4.14706 15.3124C4.29059 16.0686 4.52165 16.8048 4.83539 17.5054C6.01506 20.1182 8.00316 22.2624 10.4935 23.6078C9.96108 23.7857 9.44437 24.0092 8.94886 24.276ZM14.1514 22.7266C13.9962 22.6555 13.8256 22.6265 13.6562 22.6425C12.1235 22.2411 10.6976 21.4958 9.48221 20.461C8.26685 19.4261 7.2926 18.1277 6.63029 16.66C6.16216 15.6502 5.92631 14.5445 5.94077 13.4274C5.95523 12.3102 6.21962 11.2112 6.71373 10.2145C7.64306 8.45293 9.17618 7.10357 11.0193 6.42493C9.99726 9.36013 10.6472 13.6553 12.7165 17.6365C13.6785 19.5654 15.0132 21.2752 16.6401 22.6627C15.8195 22.8232 14.9787 22.8448 14.1514 22.7266ZM23.7451 22.3903C23.1716 22.5448 22.5889 22.6613 22.0007 22.7389C21.4117 22.6614 20.8283 22.5449 20.254 22.3903C18.2033 21.8521 16.0374 19.7219 14.462 16.6925C12.6704 13.2438 12.0469 9.47672 12.8834 7.09538C14.473 2.55356 19.9093 2.03223 22.1653 2.01765C25.4445 2.03783 29.66 2.93475 31.1157 7.09538C31.9501 9.4756 31.3353 13.2427 29.5393 16.6903C27.9628 19.7197 25.798 21.851 23.7451 22.3891V22.3903ZM27.3579 22.6649C28.9873 21.2782 30.3233 19.5673 31.2848 17.6365C33.353 13.6542 34.0019 9.36013 32.9798 6.42493C34.8231 7.1032 36.3564 8.45266 37.2854 10.2145C37.7798 11.2111 38.0446 12.31 38.0594 13.4271C38.0743 14.5442 37.8388 15.6501 37.371 16.66C36.7089 18.1267 35.7356 19.4246 34.5215 20.4595C33.3074 21.4945 31.883 22.2405 30.3517 22.6436C30.1773 22.6248 30.0013 22.6546 29.8423 22.73C29.0162 22.8474 28.1769 22.825 27.3579 22.6638V22.6649ZM41.6601 24.9555C41.165 26.7493 40.5009 27.8122 39.7939 27.9579C39.2516 28.07 38.9156 27.7595 38.0033 26.7673C37.1671 25.7707 36.1693 24.9284 35.0536 24.2772C34.5589 24.0089 34.0429 23.7839 33.5111 23.6045C36.0014 22.2591 37.9895 20.1148 39.1692 17.502C39.4825 16.8016 39.7135 16.0659 39.8575 15.3101C40.8408 16.6799 41.5127 18.2562 41.8245 19.9245C42.1364 21.5927 42.0802 23.311 41.6601 24.9543V24.9555Z\" fill=\"currentColor\"/>\n    <path d=\"M17.3428 15.7782C16.1626 13.048 15.7674 10.0313 16.2032 7.08028C16.2231 6.94931 16.2174 6.81565 16.1867 6.68691C16.1559 6.55816 16.1006 6.43686 16.024 6.32994C15.9473 6.22302 15.8508 6.13257 15.7399 6.06375C15.629 5.99493 15.5059 5.94908 15.3777 5.92884C15.2495 5.90859 15.1186 5.91434 14.9925 5.94576C14.8665 5.97717 14.7477 6.03365 14.643 6.11194C14.5383 6.19023 14.4497 6.2888 14.3824 6.40205C14.315 6.5153 14.2701 6.641 14.2503 6.77197C13.7579 10.1061 14.2045 13.5144 15.538 16.5989C15.5889 16.7227 15.6636 16.8349 15.7575 16.9289C15.8515 17.0229 15.9628 17.0967 16.0851 17.1462C16.2074 17.1956 16.3381 17.2197 16.4695 17.2168C16.601 17.214 16.7306 17.1844 16.8507 17.1298C16.9709 17.0752 17.0791 16.9966 17.1691 16.8987C17.2591 16.8008 17.3291 16.6855 17.3749 16.5597C17.4208 16.4338 17.4415 16.2998 17.436 16.1656C17.4305 16.0315 17.3988 15.8997 17.3428 15.7782Z\" fill=\"currentColor\"/>\n    <path d=\"M19.696 19.2067C19.2865 18.9533 18.9569 18.5852 18.7464 18.146C18.6921 18.023 18.6143 17.9124 18.5174 17.8206C18.4206 17.7288 18.3067 17.6578 18.1825 17.6118C18.0583 17.5658 17.9263 17.5456 17.7944 17.5526C17.6625 17.5596 17.5333 17.5935 17.4144 17.6524C17.2955 17.7112 17.1894 17.7939 17.1023 17.8953C17.0153 17.9968 16.949 18.1151 16.9075 18.2432C16.866 18.3712 16.85 18.5065 16.8606 18.641C16.8712 18.7755 16.908 18.9065 16.969 19.0262C17.3477 19.8156 17.9407 20.4772 18.6772 20.9321C18.7884 21.0004 18.9117 21.0457 19.0401 21.0654C19.1684 21.085 19.2993 21.0786 19.4253 21.0466C19.5512 21.0146 19.6698 20.9576 19.7741 20.8788C19.8785 20.8 19.9666 20.701 20.0335 20.5874C20.1004 20.4738 20.1448 20.3478 20.164 20.2168C20.1832 20.0857 20.177 19.952 20.1456 19.8234C20.1143 19.6947 20.0585 19.5737 19.9813 19.4671C19.9041 19.3605 19.8072 19.2705 19.696 19.2022V19.2067Z\" fill=\"currentColor\"/>\n    </svg>\n    `,\n    meals: `<svg width=\"44\" height=\"47\" viewBox=\"0 0 44 47\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clip-path=\"url(#clip0_598_8219)\">\n    <path d=\"M42.941 2.11595C42.7415 1.9851 42.4981 1.93888 42.2644 1.98745C42.0307 2.03602 41.8259 2.1754 41.695 2.37496L34.006 14.102C33.3796 13.6496 32.7178 13.2483 32.027 12.902C32.0551 12.8557 32.0786 12.8068 32.097 12.756L35.4431 1.14795C35.5094 0.91841 35.4818 0.671927 35.3663 0.46273C35.2509 0.253533 35.0571 0.098759 34.8275 0.0324549C34.598 -0.0338492 34.3515 -0.0062506 34.1423 0.109178C33.9331 0.224607 33.7783 0.41841 33.712 0.647954L30.382 12.202C28.8498 11.6558 27.2357 11.3751 25.609 11.372C23.5868 11.3208 21.5789 11.7248 19.7337 12.5541C17.8886 13.3834 16.2534 14.6167 14.949 16.163C13.472 15.5617 11.8698 15.3326 10.2834 15.4959C8.69704 15.6593 7.17511 16.21 5.85156 17.0996C4.528 17.9893 3.44339 19.1906 2.69314 20.5978C1.94289 22.0051 1.54999 23.5752 1.54904 25.17H0.900049C0.781014 25.1699 0.663159 25.1936 0.553309 25.2394C0.443459 25.2853 0.343801 25.3524 0.260096 25.4371C0.176391 25.5217 0.110305 25.6221 0.0656684 25.7325C0.0210317 25.8428 -0.00126705 25.9609 5.5571e-05 26.08C0.0892682 29.5951 1.16582 33.0142 3.10662 35.9464C5.04743 38.8786 7.77413 41.2054 10.975 42.661V45.147C10.975 45.3856 11.0699 45.6146 11.2386 45.7834C11.4074 45.9521 11.6364 46.047 11.8751 46.047H29.692C29.9307 46.047 30.1596 45.9521 30.3284 45.7834C30.4972 45.6146 30.592 45.3856 30.592 45.147V42.665C33.7927 41.2092 36.5191 38.8822 38.4597 35.9501C40.4004 33.018 41.4768 29.599 41.566 26.084C41.5674 25.9649 41.5451 25.8468 41.5004 25.7365C41.4558 25.6261 41.3897 25.5257 41.306 25.4411C41.2223 25.3565 41.1226 25.2893 41.0128 25.2434C40.9029 25.1976 40.7851 25.1739 40.666 25.174H39.976C39.82 21.3924 38.1759 17.8258 35.402 15.251L43.197 3.36196C43.3282 3.16274 43.3749 2.91961 43.3269 2.68598C43.2789 2.45235 43.1401 2.24733 42.941 2.11595ZM11.292 17.249C13.3949 17.2513 15.4113 18.0864 16.9 19.5716C18.3887 21.0568 19.2286 23.0711 19.236 25.174H18.476C18.4537 23.2835 17.6871 21.4779 16.3423 20.149C14.9976 18.82 13.1832 18.0747 11.2925 18.0747C9.4019 18.0747 7.58747 18.82 6.24273 20.149C4.89799 21.4779 4.13134 23.2835 4.10903 25.174H3.34905C3.35619 23.0712 4.1959 21.0569 5.68447 19.5717C7.17304 18.0865 9.18928 17.2513 11.292 17.249ZM30.46 25.174C30.3295 24.0738 29.829 23.0506 29.0406 22.2723C28.2521 21.494 27.2226 21.0067 26.1208 20.8904C25.019 20.7742 23.9104 21.0358 22.9769 21.6324C22.0433 22.2291 21.3403 23.1252 20.983 24.174C20.8976 23.3879 20.7156 22.6154 20.441 21.874C21.2275 20.8287 22.312 20.0461 23.5519 19.6292C24.7917 19.2124 26.1287 19.1807 27.3869 19.5384C28.6451 19.8962 29.7655 20.6265 30.6005 21.6334C31.4356 22.6402 31.9461 23.8763 32.065 25.179L30.46 25.174ZM28.66 25.174H22.555C22.6942 24.4666 23.0746 23.8296 23.6314 23.3717C24.1882 22.9138 24.8867 22.6634 25.6075 22.6634C26.3284 22.6634 27.0269 22.9138 27.5837 23.3717C28.1404 23.8296 28.5209 24.4666 28.66 25.174ZM33.8661 25.174C33.7524 23.5697 33.1734 22.0335 32.1999 20.7533C31.2265 19.4731 29.9008 18.5046 28.3853 17.9663C26.8698 17.428 25.2303 17.3434 23.6674 17.7227C22.1045 18.102 20.6862 18.9288 19.5861 20.102C19.3425 19.7013 19.0704 19.3187 18.772 18.957C19.6483 18.0285 20.7095 17.2942 21.8871 16.8014C23.0648 16.3086 24.3327 16.0683 25.609 16.096C28.0701 16.1 30.4374 17.0409 32.2298 18.7275C34.0222 20.414 35.1053 22.7196 35.259 25.176L33.8661 25.174ZM15.376 25.174C15.376 24.0911 14.9459 23.0525 14.1802 22.2868C13.4145 21.5211 12.3759 21.091 11.2931 21.091C10.2102 21.091 9.17165 21.5211 8.40594 22.2868C7.64023 23.0525 7.21005 24.0911 7.21005 25.174H5.91003C5.92931 23.7594 6.5048 22.4093 7.51193 21.4158C8.51906 20.4223 9.87684 19.8653 11.2915 19.8653C12.7062 19.8653 14.064 20.4223 15.0712 21.4158C16.0783 22.4093 16.6537 23.7594 16.673 25.174H15.376ZM13.576 25.174H9.01205C9.02455 24.5769 9.27051 24.0085 9.6972 23.5906C10.1239 23.1728 10.6973 22.9387 11.2945 22.9387C11.8918 22.9387 12.4652 23.1728 12.8919 23.5906C13.3186 24.0085 13.5646 24.5769 13.5771 25.174H13.576ZM12.7761 44.251V43.132H28.792V44.251H12.7761ZM29.136 41.332H12.436C9.52258 40.1406 6.99281 38.1712 5.12332 35.6389C3.25383 33.1066 2.11663 30.109 1.83605 26.974H39.7281C39.4482 30.1081 38.3122 33.1051 36.4441 35.6373C34.5761 38.1695 32.048 40.1395 29.136 41.332ZM38.178 25.174H37.0601C36.9048 22.2401 35.6312 19.4773 33.5013 17.4538C31.3713 15.4303 28.547 14.2998 25.609 14.295C24.0957 14.2643 22.5927 14.55 21.1962 15.1338C19.7996 15.7176 18.5404 16.5865 17.499 17.685C17.2087 17.4481 16.9052 17.2277 16.5901 17.025C17.7218 15.7645 19.1155 14.7668 20.6734 14.1017C22.2314 13.4367 23.9159 13.1204 25.609 13.175C28.8438 13.1792 31.9531 14.4275 34.2929 16.6611C36.6327 18.8948 38.0237 21.9428 38.178 25.174Z\" fill=\"currentColor\"/>\n    <path d=\"M3.39209 30.1722C4.045 32.6025 5.31628 34.8222 7.08209 36.6152C7.16443 36.7021 7.26327 36.7717 7.37286 36.8199C7.48244 36.8682 7.60056 36.8941 7.72027 36.8961C7.83999 36.8981 7.95888 36.8762 8.07003 36.8317C8.18118 36.7872 8.28235 36.7209 8.36758 36.6368C8.45281 36.5528 8.52038 36.4525 8.56637 36.342C8.61237 36.2314 8.63585 36.1128 8.63543 35.9931C8.63501 35.8733 8.6107 35.7549 8.56393 35.6447C8.51716 35.5344 8.44888 35.4347 8.36306 35.3512C6.81633 33.7796 5.70257 31.8346 5.13006 29.7052C5.1013 29.589 5.04966 29.4797 4.97815 29.3837C4.90663 29.2878 4.81669 29.207 4.71359 29.1462C4.61049 29.0854 4.49631 29.0458 4.37771 29.0297C4.25912 29.0136 4.1385 29.0213 4.02291 29.0523C3.90733 29.0834 3.7991 29.1372 3.70456 29.2106C3.61001 29.284 3.53106 29.3755 3.47232 29.4798C3.41357 29.584 3.3762 29.699 3.36242 29.8179C3.34865 29.9368 3.35875 30.0572 3.39209 30.1722Z\" fill=\"#323232\"/>\n    <path d=\"M10.5356 39.5502C10.7282 39.6767 10.962 39.7245 11.1889 39.6838C11.4157 39.643 11.6182 39.5168 11.7547 39.3312C11.8913 39.1456 11.9514 38.9146 11.9227 38.6859C11.8941 38.4573 11.7788 38.2483 11.6006 38.1022L10.3336 37.1752C10.1407 37.0392 9.90209 36.9844 9.66918 37.0226C9.43627 37.0609 9.2277 37.1891 9.08843 37.3797C8.94915 37.5702 8.89031 37.8079 8.92458 38.0414C8.95884 38.2749 9.08345 38.4857 9.27159 38.6282L10.5356 39.5502Z\" fill=\"#323232\"/>\n    </g>\n    <defs>\n    <clipPath id=\"clip0_598_8219\">\n    <rect width=\"43.348\" height=\"46.051\" fill=\"white\"/>\n    </clipPath>\n    </defs>\n    </svg>`,\n};\n\n@Component({\n    selector: 'catering-item-filters',\n    template: `\n        <div class=\"px-4 mt-3 mb-2\" [class.sm:hidden]=\"!search\">\n            <mat-form-field appearance=\"outline\" class=\"w-full h-14\">\n                <app-icon matPrefix class=\"text-xl\">search</app-icon>\n                <input\n                    matInput\n                    [ngModel]=\"(filters | async)?.search\"\n                    (ngModelChange)=\"setFilters({ search: $event })\"\n                    placeholder=\"Search menu...\"\n                />\n            </mat-form-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-2\" *ngIf=\"!search\" i18n>\n            Options\n        </h3>\n        <div class=\"flex flex-col px-2\" *ngIf=\"!search\">\n            <mat-checkbox\n                [(ngModel)]=\"at_time\"\n                (ngModelChange)=\"at_timeChange.next($event)\"\n                [matTooltip]=\"exact_tooltip\"\n            >\n                Exact Time\n            </mat-checkbox>\n            <label>Deliver After:</label>\n            <a-duration-field\n                [(ngModel)]=\"offset\"\n                (ngModelChange)=\"offsetChange.next($event)\"\n                [time]=\"(filters | async)?.date\"\n                [step]=\"5\"\n                [min]=\"min_offset\"\n                [max]=\"max_offset\"\n            ></a-duration-field>\n        </div>\n        <h3 class=\"hidden sm:block font-medium px-2 py-4\" *ngIf=\"!search\" i18n>\n            Catergories\n        </h3>\n        <div\n            class=\"flex flex-col px-2 space-y-4\"\n            [class.sm:hidden]=\"search\"\n            [class.sm:pt-1]=\"!search\"\n        >\n            <mat-checkbox\n                *ngFor=\"let item of categories | async\"\n                [attr.name]=\"item\"\n                [ngModel]=\"(filters | async)?.categories?.includes(item)\"\n                (ngModelChange)=\"toggleCategory(item)\"\n            >\n                {{ item }}\n            </mat-checkbox>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                min-width: 16rem;\n            }\n        `,\n    ],\n})\nexport class CateringItemFiltersComponent {\n    @Input() public search = false;\n\n    @Input() public at_time = false;\n    @Output() public at_timeChange = new EventEmitter<boolean>();\n    @Input() public offset = 0;\n    @Output() public offsetChange = new EventEmitter<number>();\n\n    public readonly icons = ICONS;\n\n    public readonly filters = this._state.filters;\n\n    public readonly setFilters = (f) => this._state.setFilters(f);\n\n    public readonly categories = this._state.categories;\n\n    public readonly exact_tooltip =\n        'Deliver at exactly specified time. \\nNote that changes to the booking will not be \\nreflected in the order if this is set.';\n\n    public get min_offset() {\n        return Math.max(this._settings.get('app.catering.min_offset'), 0);\n    }\n\n    public get max_offset() {\n        const duration = this._state.getFilters().duration;\n        return Math.max(\n            15,\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n    }\n\n    constructor(\n        private _state: CateringOrderStateService,\n        private _settings: SettingsService\n    ) {}\n\n    public async toggleCategory(name: string) {\n        const { categories } = await this.filters.pipe(take(1)).toPromise();\n        if (categories.includes(name))\n            this.setFilters({\n                categories: categories.filter((_) => _ !== name),\n            });\n        else this.setFilters({ categories: [...categories, name] });\n    }\n\n    public async toggleTag(tag: string) {\n        const { tags } = await this.filters.pipe(take(1)).toPromise();\n        if (tags.includes(tag))\n            this.setFilters({ tags: tags.filter((_) => _ !== tag) });\n        else this.setFilters({ tags: [...tags, tag] });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { CateringItem } from '../catering-item.class';\nimport { CateringOrderStateService } from './catering-order-state.service';\n\nconst EMPTY_FAVS: string[] = [];\n\n@Component({\n    selector: 'new-catering-order-modal',\n    template: `\n        <div\n            class=\"w-[100vw] h-[100vh] sm:relative sm:w-auto sm:h-auto flex flex-col bg-base-100\"\n        >\n            <header class=\"flex items-center space-x-4 w-full\">\n                <button\n                    icon\n                    matRipple\n                    [mat-dialog-close]=\"selected\"\n                    class=\"bg-neutral\"\n                >\n                    <app-icon>close</app-icon>\n                </button>\n                <h3 i18n>Add Catering</h3>\n            </header>\n            <main\n                class=\"flex-1 flex items-center divide-x divide-base-200 min-h-[65vh] h-[65vh] sm:max-h-[65vh] sm:max-w-[95vw] w-full overflow-hidden\"\n            >\n                <catering-item-filters\n                    class=\"h-full hidden sm:block sm:max-w-[12rem] sm:h-[65vh] sm:max-h-full\"\n                    [(at_time)]=\"exact_time\"\n                    [(offset)]=\"offset\"\n                ></catering-item-filters>\n                <div\n                    class=\"flex flex-col items-center flex-1 w-1/2 h-full sm:h-[65vh]\"\n                >\n                    <catering-item-filters\n                        class=\"w-full border-b border-base-200\"\n                        [search]=\"true\"\n                    ></catering-item-filters>\n                    <catering-item-list\n                        [active]=\"displayed?.custom_id\"\n                        [selected]=\"selected_ids\"\n                        [selected_items]=\"selected\"\n                        [favorites]=\"favorites\"\n                        (toggleFav)=\"toggleFavourite($event)\"\n                        (onSelect)=\"displayed = $event\"\n                        class=\"flex-1 h-1/2 w-full overflow-hidden\"\n                    ></catering-item-list>\n                </div>\n                <catering-item-details\n                    [item]=\"displayed!\"\n                    class=\"h-full w-full sm:h-[65vh] absolute sm:relative sm:flex sm:max-w-[16rem] z-20 bg-base-100\"\n                    [class.hidden]=\"!displayed\"\n                    [class.inset-0]=\"displayed\"\n                    [active]=\"selected_ids.includes(displayed?.custom_id || '')\"\n                    (activeChange)=\"setSelected(displayed!, $event)\"\n                    [code]=\"code\"\n                    [fav]=\"\n                        !!displayed &&\n                        this.favorites.includes(displayed?.id || '')\n                    \"\n                    (toggleFav)=\"toggleFavourite(displayed!)\"\n                    (close)=\"displayed = null\"\n                ></catering-item-details>\n            </main>\n            <footer\n                class=\"flex sm:hidden flex-col-reverse items-center justify-end px-2 pt-2 pb-[5.5rem] border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    class=\"inverse sm:hidden w-full sm:w-auto\"\n                    *ngIf=\"displayed\"\n                    (click)=\"displayed = null\"\n                    i18n\n                >\n                    Back\n                </button>\n                <button\n                    btn\n                    matRipple\n                    name=\"save-catering-item\"\n                    [mat-dialog-close]=\"selected\"\n                    [class.mb-2]=\"displayed\"\n                    class=\"w-full sm:w-auto sm:mb-0\"\n                    i18n\n                >\n                    View List\n                </button>\n            </footer>\n            <footer\n                class=\"hidden sm:flex items-center justify-between p-2 border-t border-base-200 w-full\"\n            >\n                <button\n                    btn\n                    matRipple\n                    name=\"catering-item-return\"\n                    [mat-dialog-close]=\"selected\"\n                    class=\"clear text-secondary\"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">arrow_back</app-icon>\n                        <div class=\"mr-1 underline\" i18n>Back to form</div>\n                    </div>\n                </button>\n                <p class=\"opacity-60 text-sm\" i18n>\n                    {{ count }} items(s) added\n                </p>\n                <button\n                    btn\n                    matRipple\n                    name=\"toggle-catering-item\"\n                    [disabled]=\"!displayed\"\n                    [class.inverse]=\"isSelected(displayed?.custom_id)\"\n                    (click)=\"\n                        setSelected(\n                            displayed,\n                            !isSelected(displayed?.custom_id)\n                        )\n                    \"\n                >\n                    <div class=\"flex items-center\">\n                        <app-icon class=\"text-xl\">{{\n                            isSelected(displayed?.custom_id) ? 'remove' : 'add'\n                        }}</app-icon>\n                        <div class=\"mr-1\">\n                            {{\n                                isSelected(displayed?.custom_id)\n                                    ? 'Remove from Booking'\n                                    : 'Add to booking'\n                            }}\n                        </div>\n                    </div>\n                </button>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class NewCateringOrderModalComponent {\n    public displayed: CateringItem | null = null;\n    public selected: CateringItem[] = [...(this._data[0] || [])];\n    public exact_time = this._data[2] ?? false;\n    public offset: number;\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get selected_ids() {\n        return this.selected.map((_) => _.custom_id).join(',');\n    }\n\n    public get count() {\n        return this.selected.reduce((t, i) => t + i.quantity, 0);\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _order: CateringOrderStateService,\n        private _org: OrganisationService,\n        @Inject(MAT_DIALOG_DATA)\n        private _data: [CateringItem[], any, boolean, number]\n    ) {\n        const duration = this._data[1].duration;\n        this._order.setFilters(this._data[1]);\n        this.offset = Math.min(\n            Math.max(\n                this._settings.get('app.catering.min_offset'),\n                this._data[3] || 0\n            ),\n            (duration || 60) - this._settings.get('app.catering.end_offset')\n        );\n    }\n\n    public isSelected(id: string) {\n        return id && this.selected_ids.includes(id);\n    }\n\n    public setSelected(item: CateringItem, state: boolean) {\n        const list = this.selected.filter(\n            (_) => _.custom_id !== item.custom_id\n        );\n        if (state) {\n            const new_item = new CateringItem({ ...item, in_order: true });\n            list.push(new_item);\n            this.displayed = new_item;\n        }\n        this.selected = list;\n    }\n\n    public toggleFavourite(item: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(item.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                item.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== item.id)\n            );\n        }\n    }\n}\n","import { Component, forwardRef, Input, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    randomString,\n    SettingsService,\n} from '@placeos/common';\n\nimport { CateringItem } from 'libs/catering/src/lib/catering-item.class';\nimport { NewCateringOrderModalComponent } from 'libs/catering/src/lib/catering-order-modal/new-catering-order-modal.component';\nimport { CateringOrder } from './catering-order.class';\nimport { Organisation, OrganisationService } from '@placeos/organisation';\nimport { format, startOfDay } from 'date-fns';\n\nconst EMPTY_FAVS = [];\n\n@Component({\n    selector: `catering-list-field`,\n    template: `\n        <div list class=\"space-y-2\">\n            <div\n                order\n                *ngFor=\"let order of orders\"\n                class=\"border shadow bg-base-100 rounded-xl overflow-hidden\"\n                [class.border-error]=\"end_time < order.deliver_at\"\n                [class.border-base-300]=\"end_time >= order.deliver_at\"\n            >\n                <div class=\"flex items-center space-x-2 p-4\">\n                    <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-4\">\n                            <div>\n                                Order for\n                                {{ order.deliver_at | date: 'mediumDate' }} at\n                                {{ order.deliver_at | date: time_format }}\n                            </div>\n                            <div\n                                class=\"flex items-center justify-center h-6 w-6 rounded-full bg-error text-error-content\"\n                                [matTooltip]=\"err_tooltip\"\n                                *ngIf=\"end_time < order.deliver_at\"\n                            >\n                                <app-icon>priority_high</app-icon>\n                            </div>\n                        </div>\n                        <div class=\"text-xs opacity-60\">\n                            {{ order.item_count }} item(s) for\n                            {{\n                                order.total_cost / 100 | currency: currency_code\n                            }}\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Duplicate Order\"\n                        (click)=\"duplicateOrder(order)\"\n                    >\n                        <app-icon>content_copy</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Edit Order\"\n                        (click)=\"editOrder(order)\"\n                    >\n                        <app-icon>edit</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        matTooltip=\"Remove Order\"\n                        class=\"text-error\"\n                        (click)=\"removeOrder(order)\"\n                    >\n                        <app-icon>delete</app-icon>\n                    </button>\n                    <button\n                        icon\n                        matRipple\n                        [matTooltip]=\"\n                            show_order[order.id]\n                                ? 'Hide order items'\n                                : 'Show order items'\n                        \"\n                        (click)=\"show_order[order.id] = !show_order[order.id]\"\n                    >\n                        <app-icon>\n                            {{\n                                show_order[order.id]\n                                    ? 'expand_less'\n                                    : 'expand_more'\n                            }}\n                        </app-icon>\n                    </button>\n                </div>\n                <div\n                    class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                    [@show]=\"show_order[order.id] ? 'show' : 'hide'\"\n                >\n                    <div\n                        class=\"flex items-center px-4 py-1 space-x-2 hover:opacity-90\"\n                        *ngFor=\"let item of order.items\"\n                    >\n                        <div class=\"flex items-center flex-1\">\n                            {{ item.name || 'Item' }}\n                            <span\n                                class=\"text-xs opacity-60 ml-4 font-normal\"\n                                *ngIf=\"item.option_list?.length\"\n                                [matTooltip]=\"optionList(item)\"\n                            >\n                                {{ item.option_list?.length || '0' }} option(s)\n                            </span>\n                        </div>\n                        <div\n                            class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                        >\n                            x{{ item.quantity }}\n                        </div>\n                        <div\n                            class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                        >\n                            {{\n                                item.unit_price_with_options / 100\n                                    | currency: currency_code\n                            }}\n                            ea\n                        </div>\n                        <button\n                            icon\n                            matRipple\n                            matTooltip=\"Remove Order Item\"\n                            class=\"text-error\"\n                            (click)=\"removeOrderItem(order, item)\"\n                        >\n                            <app-icon>delete</app-icon>\n                        </button>\n                        <button\n                            icon\n                            matRipple\n                            name=\"toggle-catering-item-favourite\"\n                            [matTooltip]=\"\n                                favorites.includes(item.id)\n                                    ? 'Remove from favourites'\n                                    : 'Add to favourites'\n                            \"\n                            [class.text-blue-400]=\"favorites.includes(item.id)\"\n                            (click)=\"toggleFavourite(item)\"\n                        >\n                            <app-icon>{{\n                                favorites.includes(item.id)\n                                    ? 'favorite'\n                                    : 'favorite_border'\n                            }}</app-icon>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <button\n            btn\n            matRipple\n            name=\"add-catering-item\"\n            class=\"w-[calc(100%-1px)] inverse mt-2\"\n            [disabled]=\"disabled\"\n            (click)=\"editOrder()\"\n        >\n            <div class=\"flex items-center justify-center space-x-2\">\n                <app-icon>search</app-icon>\n                <span>Add Order</span>\n            </div>\n        </button>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            /* istanbul ignore next */\n            useExisting: forwardRef(() => CateringListFieldComponent),\n            multi: true,\n        },\n    ],\n})\nexport class CateringListFieldComponent implements ControlValueAccessor {\n    @Input() public options: {\n        date?: number;\n        duration?: number;\n        all_day?: boolean;\n        zone_id?: string;\n    } = {};\n    public orders: CateringOrder[] = [];\n    public show_order: Record<string, boolean> = {};\n    public disabled = false;\n    public err_tooltip =\n        'Delivery time is outside of the event time.\\nThis order will be ignored.';\n\n    private _onChange: (_: CateringOrder[]) => void;\n    private _onTouch: (_: CateringOrder[]) => void;\n    public selected: CateringOrder[] = [];\n\n    public get favorites() {\n        return (\n            this._settings.get<string[]>('favourite_menu_items') || EMPTY_FAVS\n        );\n    }\n\n    public get end_time() {\n        return (\n            (this.options.date || Date.now()) +\n            (this.options.duration || 30) * 60 * 1000\n        );\n    }\n\n    public get time_format() {\n        return this._settings.time_format || 'shortTime';\n    }\n\n    public get currency_code() {\n        return this._org.building?.currency || 'USD';\n    }\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService,\n        private _dialog: MatDialog\n    ) {}\n\n    /**\n     * Update the form field value\n     * @param new_value New value to set on the form field\n     */\n    public setValue(new_value: CateringOrder[]) {\n        this.orders = new_value;\n        if (this._onChange) this._onChange(this.orders);\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.options) {\n            for (const order of this.orders) {\n                (order as any).event = this.options;\n            }\n        }\n    }\n\n    /**\n     * Update local value when form control value is changed\n     * @param value The new value for the component\n     */\n    public writeValue(value: CateringOrder[]) {\n        this.orders = value instanceof Array ? [...value] : [];\n        if (this.orders.length && !(this.orders[0] instanceof CateringOrder)) {\n            this.orders = this.orders.map((_) => new CateringOrder(_));\n        }\n    }\n\n    public readonly registerOnChange = (fn: (_: CateringOrder[]) => void) =>\n        (this._onChange = fn);\n    public readonly registerOnTouched = (fn: (_: CateringOrder[]) => void) =>\n        (this._onTouch = fn);\n    public readonly setDisabledState = (s: boolean) => (this.disabled = s);\n\n    public removeOrder(order: CateringItem) {\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        this.setValue(updated_list);\n    }\n\n    public duplicateOrder(order: CateringOrder) {\n        const new_order = new CateringOrder({\n            ...order,\n            id: `order-${randomString(8)}`,\n        });\n        this.setValue([...this.orders, new_order]);\n    }\n\n    public removeOrderItem(order: CateringOrder, item: CateringItem) {\n        const new_order = new CateringOrder({\n            ...order,\n            items: order.items.filter((_) => _.custom_id !== item.custom_id),\n        });\n        const updated_list = this.orders.filter((_) => _.id !== order.id);\n        if (new_order.items.length > 0) {\n            this.setValue([...updated_list, new_order]);\n        } else this.setValue(updated_list);\n    }\n\n    public editOrder(order: CateringOrder = new CateringOrder()) {\n        const ref = this._dialog.open(NewCateringOrderModalComponent, {\n            data: [\n                order.items,\n                {\n                    ...this.options,\n                    date: this.options.all_day\n                        ? startOfDay(this.options.date).valueOf()\n                        : this.options.date,\n                    duration: this.options.all_day\n                        ? Math.max(24 * 60, this.options.duration)\n                        : this.options.duration,\n                },\n                !!order.deliver_time,\n                order.deliver_offset,\n            ],\n        });\n        ref.afterClosed().subscribe((items?: CateringItem[]) => {\n            const orders = this.orders.filter((_) => _.id !== order.id);\n            if (!items?.length) return;\n            const time = new Date(this.options.date);\n            const new_order = new CateringOrder({\n                ...order,\n                items,\n                event: this.options as any,\n                deliver_offset: ref.componentInstance.offset,\n                deliver_time: ref.componentInstance.exact_time\n                    ? time.getHours() + time.getMinutes() / 60\n                    : null,\n            });\n            if (new_order.item_count <= 0) return;\n            this.setValue([...orders, new_order]);\n        });\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n\n    public toggleFavourite(cateringitem: CateringItem) {\n        const fav_list = this.favorites;\n        const new_state = !fav_list.includes(cateringitem.id);\n        if (new_state) {\n            this._settings.saveUserSetting('favourite_menu_items', [\n                ...fav_list,\n                cateringitem.id,\n            ]);\n        } else {\n            this._settings.saveUserSetting(\n                'favourite_menu_items',\n                fav_list.filter((_) => _ !== cateringitem.id)\n            );\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { FormFieldsModule } from '@placeos/form-fields';\n\nimport { ComponentsModule } from 'libs/components/src/lib/components.module';\n\nimport { CateringItemModalComponent } from './catering-item-modal.component';\nimport { CateringMenuItemComponent } from './catering-menu-item.component';\nimport { CateringMenuComponent } from './catering-menu.component';\nimport { CateringItemOptionModalComponent } from './catering-option-modal.component';\nimport { CateringOrderItemComponent } from './catering-order-item.component';\nimport { CateringOrderListComponent } from './catering-order-list.component';\nimport { CateringOrderModalComponent } from './catering-order-modal.component';\nimport { CateringOrderOptionsModalComponent } from './catering-order-options-modal.component';\nimport { CateringOrderComponent } from './catering-order.component';\nimport { CateringImportMenuModalComponent } from './catering-import-menu-modal.component';\n\nimport { NewCateringOrderModalComponent } from './catering-order-modal/new-catering-order-modal.component';\nimport { CateringItemListComponent } from './catering-order-modal/catering-item-list.component';\nimport { CateringItemDetailsComponent } from './catering-order-modal/catering-item-details.component';\nimport { CateringItemFiltersComponent } from './catering-order-modal/catering-item-filters.component';\nimport { CateringListFieldComponent } from './catering-list-field.component';\nimport { ChargeCodeListModalComponent } from './charge-code-list-modal.component';\nimport { CateringItemListItemComponent } from './catering-order-modal/catering-item-list-item.component';\n\nconst COMPONENTS: Type<any>[] = [\n    CateringOrderOptionsModalComponent,\n    CateringOrderModalComponent,\n    CateringItemModalComponent,\n    CateringMenuComponent,\n    CateringMenuItemComponent,\n    CateringItemOptionModalComponent,\n    CateringOrderListComponent,\n    CateringOrderComponent,\n    CateringOrderItemComponent,\n    CateringImportMenuModalComponent,\n\n    CateringListFieldComponent,\n    NewCateringOrderModalComponent,\n    CateringItemListComponent,\n    CateringItemDetailsComponent,\n    CateringItemFiltersComponent,\n    CateringItemListItemComponent,\n\n    ChargeCodeListModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        MatMenuModule,\n        MatTabsModule,\n        MatAutocompleteModule,\n        MatDialogModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ComponentsModule,\n        MatFormFieldModule,\n        FormFieldsModule,\n    ],\n    providers: [],\n    exports: [...COMPONENTS],\n})\nexport class SharedCateringModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'placeos-book',\n    template: `\n        <topbar *ngIf=\"!hide_nav\"></topbar>\n        <div class=\"flex-1 flex sm:flex-row flex-col-reverse h-1/2\">\n            <main\n                class=\"flex flex-col flex-1 h-1/2 sm:h-auto overflow-hidden\"\n            >\n                <router-outlet></router-outlet>\n            </main>\n        </div>\n        <footer-menu class=\"z-10\" *ngIf=\"!hide_nav\"></footer-menu>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class BookComponent {\n    public get hide_nav() {\n        return localStorage.getItem('PlaceOS.hide_nav') === 'true';\n    }\n}\n","class e{constructor(a,b,c,d,f){this._legacyCanvasSize=e.DEFAULT_CANVAS_SIZE;this._preferredCamera=\"environment\";this._maxScansPerSecond=25;this._lastScanTimestamp=-1;this._destroyed=this._flashOn=this._paused=this._active=!1;this.$video=a;this.$canvas=document.createElement(\"canvas\");c&&\"object\"===typeof c?this._onDecode=b:(c||d||f?console.warn(\"You're using a deprecated version of the QrScanner constructor which will be removed in the future\"):console.warn(\"Note that the type of the scan result passed to onDecode will change in the future. To already switch to the new api today, you can pass returnDetailedScanResult: true.\"),\nthis._legacyOnDecode=b);b=\"object\"===typeof c?c:{};this._onDecodeError=b.onDecodeError||(\"function\"===typeof c?c:this._onDecodeError);this._calculateScanRegion=b.calculateScanRegion||(\"function\"===typeof d?d:this._calculateScanRegion);this._preferredCamera=b.preferredCamera||f||this._preferredCamera;this._legacyCanvasSize=\"number\"===typeof c?c:\"number\"===typeof d?d:this._legacyCanvasSize;this._maxScansPerSecond=b.maxScansPerSecond||this._maxScansPerSecond;this._onPlay=this._onPlay.bind(this);this._onLoadedMetaData=\nthis._onLoadedMetaData.bind(this);this._onVisibilityChange=this._onVisibilityChange.bind(this);this._updateOverlay=this._updateOverlay.bind(this);a.disablePictureInPicture=!0;a.playsInline=!0;a.muted=!0;let h=!1;a.hidden&&(a.hidden=!1,h=!0);document.body.contains(a)||(document.body.appendChild(a),h=!0);c=a.parentElement;if(b.highlightScanRegion||b.highlightCodeOutline){d=!!b.overlay;this.$overlay=b.overlay||document.createElement(\"div\");f=this.$overlay.style;f.position=\"absolute\";f.display=\"none\";\nf.pointerEvents=\"none\";this.$overlay.classList.add(\"scan-region-highlight\");if(!d&&b.highlightScanRegion){this.$overlay.innerHTML='<svg class=\"scan-region-highlight-svg\" viewBox=\"0 0 238 238\" preserveAspectRatio=\"none\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;fill:none;stroke:#e9b213;stroke-width:4;stroke-linecap:round;stroke-linejoin:round\"><path d=\"M31 2H10a8 8 0 0 0-8 8v21M207 2h21a8 8 0 0 1 8 8v21m0 176v21a8 8 0 0 1-8 8h-21m-176 0H10a8 8 0 0 1-8-8v-21\"/></svg>';try{this.$overlay.firstElementChild.animate({transform:[\"scale(.98)\",\n\"scale(1.01)\"]},{duration:400,iterations:Infinity,direction:\"alternate\",easing:\"ease-in-out\"})}catch(m){}c.insertBefore(this.$overlay,this.$video.nextSibling)}b.highlightCodeOutline&&(this.$overlay.insertAdjacentHTML(\"beforeend\",'<svg class=\"code-outline-highlight\" preserveAspectRatio=\"none\" style=\"display:none;width:100%;height:100%;fill:none;stroke:#e9b213;stroke-width:5;stroke-dasharray:25;stroke-linecap:round;stroke-linejoin:round\"><polygon/></svg>'),this.$codeOutlineHighlight=this.$overlay.lastElementChild)}this._scanRegion=\nthis._calculateScanRegion(a);requestAnimationFrame(()=>{let m=window.getComputedStyle(a);\"none\"===m.display&&(a.style.setProperty(\"display\",\"block\",\"important\"),h=!0);\"visible\"!==m.visibility&&(a.style.setProperty(\"visibility\",\"visible\",\"important\"),h=!0);h&&(console.warn(\"QrScanner has overwritten the video hiding style to avoid Safari stopping the playback.\"),a.style.opacity=\"0\",a.style.width=\"0\",a.style.height=\"0\",this.$overlay&&this.$overlay.parentElement&&this.$overlay.parentElement.removeChild(this.$overlay),\ndelete this.$overlay,delete this.$codeOutlineHighlight);this.$overlay&&this._updateOverlay()});a.addEventListener(\"play\",this._onPlay);a.addEventListener(\"loadedmetadata\",this._onLoadedMetaData);document.addEventListener(\"visibilitychange\",this._onVisibilityChange);window.addEventListener(\"resize\",this._updateOverlay);this._qrEnginePromise=e.createQrEngine()}static set WORKER_PATH(a){console.warn(\"Setting QrScanner.WORKER_PATH is not required and not supported anymore. Have a look at the README for new setup instructions.\")}static async hasCamera(){try{return!!(await e.listCameras(!1)).length}catch(a){return!1}}static async listCameras(a=\n!1){if(!navigator.mediaDevices)return[];let b=async()=>(await navigator.mediaDevices.enumerateDevices()).filter(d=>\"videoinput\"===d.kind),c;try{a&&(await b()).every(d=>!d.label)&&(c=await navigator.mediaDevices.getUserMedia({audio:!1,video:!0}))}catch(d){}try{return(await b()).map((d,f)=>({id:d.deviceId,label:d.label||(0===f?\"Default Camera\":`Camera ${f+1}`)}))}finally{c&&(console.warn(\"Call listCameras after successfully starting a QR scanner to avoid creating a temporary video stream\"),e._stopVideoStream(c))}}async hasFlash(){let a;\ntry{if(this.$video.srcObject){if(!(this.$video.srcObject instanceof MediaStream))return!1;a=this.$video.srcObject}else a=(await this._getCameraStream()).stream;return\"torch\"in a.getVideoTracks()[0].getSettings()}catch(b){return!1}finally{a&&a!==this.$video.srcObject&&(console.warn(\"Call hasFlash after successfully starting the scanner to avoid creating a temporary video stream\"),e._stopVideoStream(a))}}isFlashOn(){return this._flashOn}async toggleFlash(){this._flashOn?await this.turnFlashOff():await this.turnFlashOn()}async turnFlashOn(){if(!this._flashOn&&\n!this._destroyed&&(this._flashOn=!0,this._active&&!this._paused))try{if(!await this.hasFlash())throw\"No flash available\";await this.$video.srcObject.getVideoTracks()[0].applyConstraints({advanced:[{torch:!0}]})}catch(a){throw this._flashOn=!1,a;}}async turnFlashOff(){this._flashOn&&(this._flashOn=!1,await this._restartVideoStream())}destroy(){this.$video.removeEventListener(\"loadedmetadata\",this._onLoadedMetaData);this.$video.removeEventListener(\"play\",this._onPlay);document.removeEventListener(\"visibilitychange\",\nthis._onVisibilityChange);window.removeEventListener(\"resize\",this._updateOverlay);this._destroyed=!0;this._flashOn=!1;this.stop();e._postWorkerMessage(this._qrEnginePromise,\"close\")}async start(){if(this._destroyed)throw Error(\"The QR scanner can not be started as it had been destroyed.\");if(!this._active||this._paused)if(\"https:\"!==window.location.protocol&&console.warn(\"The camera stream is only accessible if the page is transferred via https.\"),this._active=!0,!document.hidden)if(this._paused=\n!1,this.$video.srcObject)await this.$video.play();else try{let {stream:a,facingMode:b}=await this._getCameraStream();!this._active||this._paused?e._stopVideoStream(a):(this._setVideoMirror(b),this.$video.srcObject=a,await this.$video.play(),this._flashOn&&(this._flashOn=!1,this.turnFlashOn().catch(()=>{})))}catch(a){if(!this._paused)throw this._active=!1,a;}}stop(){this.pause();this._active=!1}async pause(a=!1){this._paused=!0;if(!this._active)return!0;this.$video.pause();this.$overlay&&(this.$overlay.style.display=\n\"none\");let b=()=>{this.$video.srcObject instanceof MediaStream&&(e._stopVideoStream(this.$video.srcObject),this.$video.srcObject=null)};if(a)return b(),!0;await new Promise(c=>setTimeout(c,300));if(!this._paused)return!1;b();return!0}async setCamera(a){a!==this._preferredCamera&&(this._preferredCamera=a,await this._restartVideoStream())}static async scanImage(a,b,c,d,f=!1,h=!1){let m,n=!1;b&&(\"scanRegion\"in b||\"qrEngine\"in b||\"canvas\"in b||\"disallowCanvasResizing\"in b||\"alsoTryWithoutScanRegion\"in\nb||\"returnDetailedScanResult\"in b)?(m=b.scanRegion,c=b.qrEngine,d=b.canvas,f=b.disallowCanvasResizing||!1,h=b.alsoTryWithoutScanRegion||!1,n=!0):b||c||d||f||h?console.warn(\"You're using a deprecated api for scanImage which will be removed in the future.\"):console.warn(\"Note that the return type of scanImage will change in the future. To already switch to the new api today, you can pass returnDetailedScanResult: true.\");b=!!c;try{let p,k;[c,p]=await Promise.all([c||e.createQrEngine(),e._loadImage(a)]);\n[d,k]=e._drawToCanvas(p,m,d,f);let q;if(c instanceof Worker){let g=c;b||e._postWorkerMessageSync(g,\"inversionMode\",\"both\");q=await new Promise((l,v)=>{let w,u,r,y=-1;u=t=>{t.data.id===y&&(g.removeEventListener(\"message\",u),g.removeEventListener(\"error\",r),clearTimeout(w),null!==t.data.data?l({data:t.data.data,cornerPoints:e._convertPoints(t.data.cornerPoints,m)}):v(e.NO_QR_CODE_FOUND))};r=t=>{g.removeEventListener(\"message\",u);g.removeEventListener(\"error\",r);clearTimeout(w);v(\"Scanner error: \"+(t?\nt.message||t:\"Unknown Error\"))};g.addEventListener(\"message\",u);g.addEventListener(\"error\",r);w=setTimeout(()=>r(\"timeout\"),1E4);let x=k.getImageData(0,0,d.width,d.height);y=e._postWorkerMessageSync(g,\"decode\",x,[x.data.buffer])})}else q=await Promise.race([new Promise((g,l)=>window.setTimeout(()=>l(\"Scanner error: timeout\"),1E4)),(async()=>{try{var [g]=await c.detect(d);if(!g)throw e.NO_QR_CODE_FOUND;return{data:g.rawValue,cornerPoints:e._convertPoints(g.cornerPoints,m)}}catch(l){g=l.message||l;\nif(/not implemented|service unavailable/.test(g))return e._disableBarcodeDetector=!0,e.scanImage(a,{scanRegion:m,canvas:d,disallowCanvasResizing:f,alsoTryWithoutScanRegion:h});throw`Scanner error: ${g}`;}})()]);return n?q:q.data}catch(p){if(!m||!h)throw p;let k=await e.scanImage(a,{qrEngine:c,canvas:d,disallowCanvasResizing:f});return n?k:k.data}finally{b||e._postWorkerMessage(c,\"close\")}}setGrayscaleWeights(a,b,c,d=!0){e._postWorkerMessage(this._qrEnginePromise,\"grayscaleWeights\",{red:a,green:b,\nblue:c,useIntegerApproximation:d})}setInversionMode(a){e._postWorkerMessage(this._qrEnginePromise,\"inversionMode\",a)}static async createQrEngine(a){a&&console.warn(\"Specifying a worker path is not required and not supported anymore.\");a=()=>import(\"./qr-scanner-worker.min.js\").then(c=>c.createWorker());if(!(!e._disableBarcodeDetector&&\"BarcodeDetector\"in window&&BarcodeDetector.getSupportedFormats&&(await BarcodeDetector.getSupportedFormats()).includes(\"qr_code\")))return a();let b=navigator.userAgentData;\nreturn b&&b.brands.some(({brand:c})=>/Chromium/i.test(c))&&/mac ?OS/i.test(b.platform)&&await b.getHighEntropyValues([\"architecture\",\"platformVersion\"]).then(({architecture:c,platformVersion:d})=>/arm/i.test(c||\"arm\")&&13<=parseInt(d||\"13\")).catch(()=>!0)?a():new BarcodeDetector({formats:[\"qr_code\"]})}_onPlay(){this._scanRegion=this._calculateScanRegion(this.$video);this._updateOverlay();this.$overlay&&(this.$overlay.style.display=\"\");this._scanFrame()}_onLoadedMetaData(){this._scanRegion=this._calculateScanRegion(this.$video);\nthis._updateOverlay()}_onVisibilityChange(){document.hidden?this.pause():this._active&&this.start()}_calculateScanRegion(a){let b=Math.round(2/3*Math.min(a.videoWidth,a.videoHeight));return{x:Math.round((a.videoWidth-b)/2),y:Math.round((a.videoHeight-b)/2),width:b,height:b,downScaledWidth:this._legacyCanvasSize,downScaledHeight:this._legacyCanvasSize}}_updateOverlay(){requestAnimationFrame(()=>{if(this.$overlay){var a=this.$video,b=a.videoWidth,c=a.videoHeight,d=a.offsetWidth,f=a.offsetHeight,h=a.offsetLeft,\nm=a.offsetTop,n=window.getComputedStyle(a),p=n.objectFit,k=b/c,q=d/f;switch(p){case \"none\":var g=b;var l=c;break;case \"fill\":g=d;l=f;break;default:(\"cover\"===p?k>q:k<q)?(l=f,g=l*k):(g=d,l=g/k),\"scale-down\"===p&&(g=Math.min(g,b),l=Math.min(l,c))}var [v,w]=n.objectPosition.split(\" \").map((r,y)=>{const x=parseFloat(r);return r.endsWith(\"%\")?(y?f-l:d-g)*x/100:x});n=this._scanRegion.width||b;q=this._scanRegion.height||c;p=this._scanRegion.x||0;var u=this._scanRegion.y||0;k=this.$overlay.style;k.width=\n`${n/b*g}px`;k.height=`${q/c*l}px`;k.top=`${m+w+u/c*l}px`;c=/scaleX\\(-1\\)/.test(a.style.transform);k.left=`${h+(c?d-v-g:v)+(c?b-p-n:p)/b*g}px`;k.transform=a.style.transform}})}static _convertPoints(a,b){if(!b)return a;let c=b.x||0,d=b.y||0,f=b.width&&b.downScaledWidth?b.width/b.downScaledWidth:1;b=b.height&&b.downScaledHeight?b.height/b.downScaledHeight:1;for(let h of a)h.x=h.x*f+c,h.y=h.y*b+d;return a}_scanFrame(){!this._active||this.$video.paused||this.$video.ended||(\"requestVideoFrameCallback\"in\nthis.$video?this.$video.requestVideoFrameCallback.bind(this.$video):requestAnimationFrame)(async()=>{if(!(1>=this.$video.readyState)){var a=Date.now()-this._lastScanTimestamp,b=1E3/this._maxScansPerSecond;a<b&&await new Promise(d=>setTimeout(d,b-a));this._lastScanTimestamp=Date.now();try{var c=await e.scanImage(this.$video,{scanRegion:this._scanRegion,qrEngine:this._qrEnginePromise,canvas:this.$canvas})}catch(d){if(!this._active)return;this._onDecodeError(d)}!e._disableBarcodeDetector||await this._qrEnginePromise instanceof\nWorker||(this._qrEnginePromise=e.createQrEngine());c?(this._onDecode?this._onDecode(c):this._legacyOnDecode&&this._legacyOnDecode(c.data),this.$codeOutlineHighlight&&(clearTimeout(this._codeOutlineHighlightRemovalTimeout),this._codeOutlineHighlightRemovalTimeout=void 0,this.$codeOutlineHighlight.setAttribute(\"viewBox\",`${this._scanRegion.x||0} `+`${this._scanRegion.y||0} `+`${this._scanRegion.width||this.$video.videoWidth} `+`${this._scanRegion.height||this.$video.videoHeight}`),this.$codeOutlineHighlight.firstElementChild.setAttribute(\"points\",\nc.cornerPoints.map(({x:d,y:f})=>`${d},${f}`).join(\" \")),this.$codeOutlineHighlight.style.display=\"\")):this.$codeOutlineHighlight&&!this._codeOutlineHighlightRemovalTimeout&&(this._codeOutlineHighlightRemovalTimeout=setTimeout(()=>this.$codeOutlineHighlight.style.display=\"none\",100))}this._scanFrame()})}_onDecodeError(a){a!==e.NO_QR_CODE_FOUND&&console.log(a)}async _getCameraStream(){if(!navigator.mediaDevices)throw\"Camera not found.\";let a=/^(environment|user)$/.test(this._preferredCamera)?\"facingMode\":\n\"deviceId\",b=[{width:{min:1024}},{width:{min:768}},{}],c=b.map(d=>Object.assign({},d,{[a]:{exact:this._preferredCamera}}));for(let d of[...c,...b])try{let f=await navigator.mediaDevices.getUserMedia({video:d,audio:!1}),h=this._getFacingMode(f)||(d.facingMode?this._preferredCamera:\"environment\"===this._preferredCamera?\"user\":\"environment\");return{stream:f,facingMode:h}}catch(f){}throw\"Camera not found.\";}async _restartVideoStream(){let a=this._paused;await this.pause(!0)&&!a&&this._active&&await this.start()}static _stopVideoStream(a){for(let b of a.getTracks())b.stop(),\na.removeTrack(b)}_setVideoMirror(a){this.$video.style.transform=\"scaleX(\"+(\"user\"===a?-1:1)+\")\"}_getFacingMode(a){return(a=a.getVideoTracks()[0])?/rear|back|environment/i.test(a.label)?\"environment\":/front|user|face/i.test(a.label)?\"user\":null:null}static _drawToCanvas(a,b,c,d=!1){c=c||document.createElement(\"canvas\");let f=b&&b.x?b.x:0,h=b&&b.y?b.y:0,m=b&&b.width?b.width:a.videoWidth||a.width,n=b&&b.height?b.height:a.videoHeight||a.height;d||(d=b&&b.downScaledWidth?b.downScaledWidth:m,b=b&&b.downScaledHeight?\nb.downScaledHeight:n,c.width!==d&&(c.width=d),c.height!==b&&(c.height=b));b=c.getContext(\"2d\",{alpha:!1});b.imageSmoothingEnabled=!1;b.drawImage(a,f,h,m,n,0,0,c.width,c.height);return[c,b]}static async _loadImage(a){if(a instanceof Image)return await e._awaitImageLoad(a),a;if(a instanceof HTMLVideoElement||a instanceof HTMLCanvasElement||a instanceof SVGImageElement||\"OffscreenCanvas\"in window&&a instanceof OffscreenCanvas||\"ImageBitmap\"in window&&a instanceof ImageBitmap)return a;if(a instanceof\nFile||a instanceof Blob||a instanceof URL||\"string\"===typeof a){let b=new Image;b.src=a instanceof File||a instanceof Blob?URL.createObjectURL(a):a.toString();try{return await e._awaitImageLoad(b),b}finally{(a instanceof File||a instanceof Blob)&&URL.revokeObjectURL(b.src)}}else throw\"Unsupported image type.\";}static async _awaitImageLoad(a){a.complete&&0!==a.naturalWidth||await new Promise((b,c)=>{let d=f=>{a.removeEventListener(\"load\",d);a.removeEventListener(\"error\",d);f instanceof ErrorEvent?\nc(\"Image load error\"):b()};a.addEventListener(\"load\",d);a.addEventListener(\"error\",d)})}static async _postWorkerMessage(a,b,c,d){return e._postWorkerMessageSync(await a,b,c,d)}static _postWorkerMessageSync(a,b,c,d){if(!(a instanceof Worker))return-1;let f=e._workerMessageId++;a.postMessage({id:f,type:b,data:c},d);return f}}e.DEFAULT_CANVAS_SIZE=400;e.NO_QR_CODE_FOUND=\"No QR code found\";e._disableBarcodeDetector=!1;e._workerMessageId=0;export default e\n","import {\n    Component,\n    OnInit,\n    Output,\n    EventEmitter,\n    ViewChild,\n    ElementRef,\n    OnDestroy,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    Booking,\n    BookingFormService,\n    BookingType,\n    checkinBooking,\n    queryBookings,\n} from '@placeos/bookings';\nimport { AsyncHandler, currentUser, notifyError } from '@placeos/common';\nimport {\n    CalendarEvent,\n    checkinEventGuest,\n    EventFormService,\n    queryEvents,\n} from '@placeos/events';\nimport { showSystem } from '@placeos/ts-client';\nimport { addMinutes, endOfDay, getUnixTime } from 'date-fns';\nimport QrScanner from 'qr-scanner';\n\n@Component({\n    selector: 'book-code-flow',\n    template: `\n        <div\n            class=\"flex-1 overflow-hidden flex items-center justify-center bg-neutral relative\"\n            *ngIf=\"!loading; else load_state\"\n        >\n            <video\n                class=\"min-w-full min-h-full object-cover\"\n                id=\"video\"\n                #video\n            ></video>\n            <div\n                class=\"absolute text-white text-center inset-0 flex flex-col items-center justify-center\"\n            >\n                <div\n                    class=\"flex flex-col z-10 justify-end items-center relative\"\n                    *ngIf=\"is_scanning\"\n                >\n                    <h2 class=\"text-3xl mb-1 uppercase subpixel-antialiased\">\n                        Scan QR Code\n                    </h2>\n                    <span class=\" mb-4 \">\n                        Scan the QR code outisde a PlaceOS room or space.\n                    </span>\n                </div>\n                <div\n                    class=\"flex flex-col z-10 justify-end items-center relative\"\n                    *ngIf=\"!is_scanning\"\n                >\n                    <h2 class=\"text-3xl mb-1 uppercase subpixel-antialiased\">\n                        Enter Room ID\n                    </h2>\n                    <span class=\"mb-4\">\n                        Enter the room ID number outisde a PlaceOS room or\n                        space.\n                    </span>\n                </div>\n                <div class=\"flex items-center justify-center\">\n                    <div\n                        box\n                        class=\"rounded-2xl h-64 w-64 transition-all flex items-center justify-center p-8 m-8 space-x-2\"\n                        [class.input]=\"!is_scanning\"\n                    >\n                        <span class=\"uppercase\">Booking ID</span>\n                        <input\n                            matInput\n                            class=\"border-none bg-none w-full text-3xl text-left\"\n                            [(ngModel)]=\"room_code\"\n                            name=\"booking-id\"\n                            placeholder=\"e.g. 12102910\"\n                        />\n                    </div>\n                </div>\n                <div\n                    class=\"m-4 p-2 flex items-center space-x-2 bg-base-100 bg-opacity-50 rounded\"\n                >\n                    <button\n                        matRipple\n                        [class]=\"\n                            'flex-1 text-black border-none w-40 ' +\n                            (is_scanning\n                                ? 'bg-base-100'\n                                : 'bg-transparent hover:bg-base-100 hover:dark:bg-neutral-600 bg-opacity-50')\n                        \"\n                        (click)=\"is_scanning = true\"\n                    >\n                        Scan Code\n                    </button>\n                    <button\n                        matRipple\n                        [class]=\"\n                            'flex-1 text-black border-none w-40 ' +\n                            (!is_scanning\n                                ? 'bg-base-100'\n                                : 'bg-transparent hover:bg-base-100 hover:dark:bg-neutral-600 bg-opacity-50')\n                        \"\n                        (click)=\"is_scanning = false\"\n                    >\n                        Enter Code\n                    </button>\n                </div>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Checking in booking...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                width: 100%;\n                height: 100vh;\n                display: flex;\n                flex-direction: column;\n                background: #f0f0f0;\n            }\n\n            [box] {\n                box-shadow: 0px 0px 0px 100vw rgba(0, 0, 0, 0.5);\n            }\n\n            [box] > * {\n                display: none;\n            }\n\n            [box].input {\n                width: 32rem !important;\n                max-width: calc(100% - 2rem) !important;\n                padding: 1rem !important;\n                height: 4rem !important;\n                color: black !important;\n                background: white;\n                box-shadow: 0px 0px 0px 100vw rgba(0, 0, 0, 0.8);\n            }\n\n            [box].input > * {\n                display: initial;\n            }\n\n            [box] span {\n                font-family: var(--heading-font);\n                font-weight: 500;\n                text-transform: uppercase;\n                letter-spacing: 0.05em;\n            }\n        `,\n    ],\n})\nexport class BookCodeFlowComponent\n    extends AsyncHandler\n    implements OnInit, OnDestroy\n{\n    /** Menu event */\n    @Output() public menu = new EventEmitter(false);\n    /** Boolean to toggle scan/code */\n    public is_scanning = true;\n    /** Room Code input value */\n    public room_code: string;\n    public loading = false;\n\n    private _qr_scanner;\n    /** Video element to emit camera feed */\n    @ViewChild('video')\n    private _video_el: ElementRef<HTMLVideoElement>;\n\n    constructor(\n        private _router: Router,\n        private _route: ActivatedRoute,\n        private _event_form: EventFormService,\n        private _booking_form: BookingFormService\n    ) {\n        super();\n    }\n\n    public ngOnDestroy() {\n        if (this._video_el?.nativeElement?.srcObject) {\n            (this._video_el.nativeElement.srcObject as any)\n                .getTracks()\n                .forEach((track) => track?.stop());\n        }\n        this._qr_scanner?.stop();\n    }\n\n    public ngOnInit(): void {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                if (params.has('asset_id'))\n                    this._checkinBooking(params.get('asset_id'));\n                if (params.has('space_id'))\n                    this._checkinEvent(\n                        params.get('space_id'),\n                        params.get('email')\n                    );\n            })\n        );\n    }\n\n    public ngAfterViewInit() {\n        if (!navigator.mediaDevices?.getUserMedia || this.loading) return;\n        navigator.mediaDevices\n            .getUserMedia({ video: true })\n            .then((stream) => (this._video_el.nativeElement.srcObject = stream))\n            .catch((e) => console.error('Unable to fetch media devices!', e));\n        this._qr_scanner = new QrScanner(this._video_el.nativeElement, (r) =>\n            this.handleQrCode(r)\n        );\n        this._qr_scanner.start();\n    }\n\n    private handleQrCode(result: string) {\n        const url = result;\n        const hashindex = url.indexOf('/#/');\n        // could just whole page redirect to url\n        if (hashindex > 0) {\n            const regex = /[?&]([^=#]+)=([^&#]*)/g;\n            const params = {};\n            let match;\n            while ((match = regex.exec(url))) {\n                params[match[1]] = match[2];\n            }\n            this._router.navigate([url.split('/#')[1].split('?')[0]], params);\n        }\n    }\n\n    private async _checkinBooking(\n        asset_id: string,\n        type: BookingType = 'desk'\n    ) {\n        this.loading = true;\n        let bookings = await queryBookings({\n            period_start: getUnixTime(Date.now()),\n            period_end: getUnixTime(addMinutes(Date.now(), 5)),\n            type,\n            email: currentUser().email,\n        })\n            .toPromise()\n            .catch((_) => [] as Booking[]);\n        const item = bookings.find((_) => _.asset_id === asset_id);\n        if (item) {\n            await checkinBooking(item.id, true)\n                .toPromise()\n                .catch((_) => {\n                    notifyError(\n                        `Unable to checkin booking with resource \"${asset_id}\"`\n                    );\n                    this.loading = false;\n                    throw _;\n                });\n            this._router.navigate(['/book', 'code', 'success']);\n        } else {\n            bookings = await queryBookings({\n                period_start: getUnixTime(Date.now()),\n                period_end: getUnixTime(endOfDay(Date.now())),\n                type,\n            })\n                .toPromise()\n                .catch((_) => [] as Booking[]);\n            let item = bookings.find((_) => _.asset_id === asset_id);\n            if (item) {\n                this._router.navigate(['/book', 'code', 'error'], {\n                    queryParams: { type: 'not_started', asset_id },\n                });\n                return;\n            }\n            bookings = await queryBookings({\n                period_start: getUnixTime(Date.now()),\n                period_end: getUnixTime(addMinutes(Date.now(), 5)),\n                type,\n            })\n                .toPromise()\n                .catch((_) => [] as Booking[]);\n            item = bookings.find((_) => _.asset_id === asset_id);\n            if (item) {\n                this._router.navigate(['/book', 'code', 'error'], {\n                    queryParams: { type: 'wrong_resource', asset_id },\n                });\n                return;\n            }\n            this._router.navigate(['/book', 'code', 'error'], {\n                queryParams: { type: 'no_booking', asset_id },\n            });\n            this._booking_form.newForm(new Booking({ asset_id, type }));\n            this._booking_form.setOptions({ type });\n        }\n        this.loading = false;\n    }\n\n    private async _checkinEvent(space_id: string, email?: string) {\n        if (!email) email = currentUser().email;\n        this.loading = true;\n        const bookings = await queryEvents({\n            period_start: getUnixTime(Date.now()),\n            period_end: getUnixTime(Date.now() + 5 * 60 * 1000),\n        })\n            .toPromise()\n            .catch((_) => []);\n        const item = bookings.find((_) =>\n            _.resources.find((s) => s.id === space_id || s.email === space_id)\n        );\n        if (item) {\n            await checkinEventGuest(item.id, email, true)\n                .toPromise()\n                .catch((_) => {\n                    notifyError(\n                        `Unable to checkin event with resource \"${space_id}\"`\n                    );\n                    this.loading = false;\n                    throw _;\n                });\n            this._router.navigate(['/book', 'code', 'success']);\n            this.loading = false;\n        } else {\n            const space = await showSystem(space_id).toPromise();\n            if (space) {\n                this._event_form.newForm(new CalendarEvent({ system: space }));\n            }\n            this._router.navigate(['/book', 'meeting']);\n        }\n        this.loading = false;\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BookingFormService } from '@placeos/bookings';\nimport { SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { addDays, endOfDay, format } from 'date-fns';\n\n@Component({\n    selector: 'detailed-book-desks-form',\n    template: `\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <div\n                class=\"w-[640px] max-w-[calc(100%-2rem)] mx-auto mb-4\"\n                *ngIf=\"allow_groups\"\n            >\n                <mat-button-toggle-group\n                    class=\"w-full\"\n                    [ngModel]=\"(options | async)?.group ? 'group' : 'single'\"\n                    (ngModelChange)=\"\n                        setOptions({\n                            group: $event === 'group'\n                        })\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    <mat-button-toggle class=\"w-1/2\" value=\"single\">\n                        Single\n                    </mat-button-toggle>\n                    <mat-button-toggle class=\"w-1/2\" value=\"group\">\n                        Group\n                    </mat-button-toggle>\n                </mat-button-toggle-group>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/4\">\n                    <label>Date</label>\n                    <a-date-field [to]=\"book_until\" formControlName=\"date\">\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1 w-full sm:w-1/4\"\n                    *ngIf=\"(buildings | async)?.length > 1\"\n                >\n                    <label>Building</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Select building\"\n                            [(ngModel)]=\"building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event?.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex flex-col flex-1 w-full sm:w-1/4\"\n                    *ngIf=\"(levels | async)?.length > 1\"\n                >\n                    <label>Level</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            placeholder=\"Any Level\"\n                            ngModel\n                            [disabled]=\"!building\"\n                            (ngModelChange)=\"\n                                setOptions({\n                                    zone_id: $event || building.id\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let lvl of levels | async\"\n                                [value]=\"lvl.id\"\n                            >\n                                {{ lvl.display_name || lvl.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n                *ngIf=\"allow_time_changes\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Start Time</label>\n                    <a-time-field\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3 relative\">\n                    <label>End Time</label>\n                    <a-duration-field\n                        formControlName=\"duration\"\n                        [time]=\"form.get('date')?.value\"\n                        [max]=\"10 * 60\"\n                        [min]=\"60\"\n                        [step]=\"60\"\n                        [disabled]=\"form.value.all_day\"\n                    >\n                    </a-duration-field>\n                    <mat-checkbox\n                        formControlName=\"all_day\"\n                        *ngIf=\"allow_all_day\"\n                        class=\"absolute top-0 right-0\"\n                    >\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n                *ngIf=\"can_book_for_others\"\n            >\n                <label>Host</label>\n                <a-user-search-field\n                    formControlName=\"user\"\n                ></a-user-search-field>\n            </div>\n            <div\n                class=\"flex flex-col flex-1 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n                *ngIf=\"needs_reason\"\n            >\n                <label>Details</label>\n                <mat-form-field class=\"w-full\" appearance=\"outline\">\n                    <input\n                        matInput\n                        formControlName=\"description\"\n                        placeholder=\"Reason for booking...\"\n                    />\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col flex-1 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n                *ngIf=\"(options | async)?.group\"\n            >\n                <label>Group Members</label>\n                <a-user-list-field\n                    [simple]=\"true\"\n                    [ngModel]=\"(options | async)?.members || []\"\n                    (ngModelChange)=\"setOptions({ members: $event })\"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                ></a-user-list-field>\n            </div>\n            <div\n                class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n                *ngIf=\"can_recurr\"\n            >\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Recurrence Period</label>\n                    <mat-form-field appearance=\"outline\">\n                        <mat-select\n                            [ngModel]=\"(options | async)?.recurrence_pattern\"\n                            (ngModelChange)=\"setOptions({ pattern: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            placeholder=\"None\"\n                        >\n                            <mat-option value=\"none\">None</mat-option>\n                            <mat-option\n                                *ngFor=\"let opt of recurrence_options\"\n                                [value]=\"opt\"\n                            >\n                                <span class=\"capitalize\">{{ opt }}</span>\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                    <label>Recurrence End</label>\n                    <a-date-field\n                        [disabled]=\"\n                            !(options | async)?.pattern ||\n                            (options | async)?.pattern === 'none'\n                        \"\n                        [ngModel]=\"\n                            (options | async)?.recurr_end || form?.value?.date\n                        \"\n                        (ngModelChange)=\"\n                            setOptions({\n                                recurr_end: $event\n                            })\n                        \"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [to]=\"book_until\"\n                    >\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex flex-col flex-1 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n                *ngIf=\"(features | async)?.length\"\n            >\n                <label>Desk Features</label>\n                <mat-form-field class=\"w-full\" appearance=\"outline\">\n                    <mat-select\n                        multiple\n                        [ngModel]=\"(options | async)?.features || []\"\n                        (ngModelChange)=\"\n                            setOptions({\n                                features: $event || []\n                            })\n                        \"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        placeholder=\"Any Feature\"\n                    >\n                        <mat-option\n                            *ngFor=\"let opt of features | async\"\n                            class=\"capitalize\"\n                            [value]=\"opt\"\n                        >\n                            {{ opt }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div\n                class=\"flex flex-col flex-1 w-[640px] max-w-[calc(100%-2rem)] mx-auto mb-4\"\n                *ngIf=\"can_book_lockers\"\n            >\n                <mat-checkbox\n                    [ngModel]=\"!!form.value.secondary_resource\"\n                    (ngModelChange)=\"\n                        form.patchValue({\n                            secondary_resource: $event ? 'locker' : ''\n                        })\n                    \"\n                    [ngModelOptions]=\"{ standalone: true }\"\n                >\n                    Require locker\n                </mat-checkbox>\n            </div>\n        </form>\n    `,\n    styles: [``],\n})\nexport class DeskFlowDetailedFormComponent {\n    @Input() public form: FormGroup;\n    /** List of available buildings to select */\n    public readonly buildings = this._org.building_list;\n    /** List of available levels for the selected building */\n    public readonly levels = this._org.active_levels;\n    /** List of set options for desk booking */\n    public readonly options = this._state.options;\n    /** List of set options for desk booking */\n    public readonly features = this._state.features;\n\n    public readonly recurrence_options = ['daily', 'weekly', 'monthly'];\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get can_book_lockers() {\n        return this._settings.get('app.desks.can_book_lockers');\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.desks.can_book_for_others');\n    }\n\n    public get can_recurr() {\n        return this._settings.get('app.desks.recurrence_allowed');\n    }\n\n    public get allow_groups() {\n        return this._settings.get('app.desks.allow_groups');\n    }\n\n    public get needs_reason() {\n        return this._settings.get('app.desks.needs_reason') === true;\n    }\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get book_until() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        );\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService, findNearbyFeature } from '@placeos/bookings';\nimport {\n    currentUser,\n    getInvalidFields,\n    notifyError,\n    randomInt,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { addDays, setHours, addMinutes, roundToNearestMinutes } from 'date-fns';\nimport { first, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'desk-flow-form',\n    template: `\n        <section form class=\"flex-1 min-h-[50%]\">\n            <h2\n                class=\"text-xl uppercase font-medium mb-2 mt-4 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                {{ is_edit ? 'Edit' : 'Detailed' }} Desk Booking\n            </h2>\n            <detailed-book-desks-form [form]=\"form\"></detailed-book-desks-form>\n            <div class=\"mb-4 border-b border-base-200 w-full\"></div>\n            <div\n                class=\"flex flex-col sm:flex-row items-center justify-center space-x-0 space-y-2 sm:space-y-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto mb-4\"\n            >\n                <button\n                    class=\"sm:flex-1 w-full sm:w-auto h-[2.75rem] inverse\"\n                    btn\n                    matRipple\n                    clear\n                    (click)=\"clearForm()\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-xl\">clear</app-icon>\n                        <span class=\"ml-2 mx-4\">{{\n                            is_edit ? 'Cancel Edit' : 'Clear Form'\n                        }}</span>\n                    </div>\n                </button>\n                <button\n                    class=\"sm:flex-1 w-full sm:w-auto h-[2.75rem]\"\n                    find\n                    btn\n                    matRipple\n                    *ngIf=\"!auto_allocation; else alloc_button\"\n                    (click)=\"findDesk()\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-xl\">search</app-icon>\n                        <span class=\"ml-2 mx-4\">{{\n                            is_edit ? 'Update Desk' : 'Find Desk'\n                        }}</span>\n                    </div>\n                </button>\n            </div>\n        </section>\n        <ng-template #alloc_button>\n            <button\n                class=\"sm:flex-1 w-full sm:w-auto h-[2.75rem]\"\n                find\n                btn\n                matRipple\n                (click)=\"allocateDesk()\"\n            >\n                {{ is_edit ? 'Update Desk' : 'Book Desk' }}\n            </button>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                overflow: auto;\n            }\n\n            [quick] {\n                background-color: #007ac8;\n            }\n        `,\n    ],\n})\nexport class DeskFlowFormComponent implements OnInit {\n    public time = 0;\n    public level = '';\n\n    public readonly quick_times = [\n        { name: 'Now', value: 0 },\n        {\n            name: 'Tomorrow',\n            value: setHours(addDays(new Date(), 1), 9).valueOf(),\n        },\n    ];\n\n    public levels = [];\n\n    public get is_edit() {\n        return !!this.form?.get('id')?.value;\n    }\n\n    public get auto_allocation() {\n        return !!this._settings.get('app.desks.auto_allocation');\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this.time = 0;\n        this.level = this._org.building.id;\n        this._state.clearForm();\n    };\n\n    constructor(\n        private _state: BookingFormService,\n        private _router: Router,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _));\n        await this._org.active_levels.pipe(first((_) => _?.length > 0));\n        this.level = this._org.building?.id;\n        this.levels = [\n            { id: this._org.building?.id, name: 'Any Level' },\n            ...this._org.levelsForBuilding(this._org.building),\n        ];\n    }\n\n    public quickBook() {\n        this.form.patchValue({\n            date: (this.time < 24 * 60\n                ? addMinutes(\n                      roundToNearestMinutes(new Date(), { nearestTo: 5 }),\n                      this.time\n                  )\n                : setHours(addDays(new Date(), 1), 8)\n            ).valueOf(),\n            title: 'Ad-hoc Desk Booking',\n        });\n        this.findDesk();\n    }\n\n    public findDesk() {\n        this.form.markAllAsTouched();\n        this.form.patchValue({ asset_id: ' ' });\n        if (!this.form.valid) return;\n        this.form.patchValue({ asset_id: '' });\n        this._router.navigate(['/book', 'desks', 'map']);\n    }\n\n    public async allocateDesk() {\n        this.form.markAllAsTouched();\n        this.form.patchValue({ asset_id: ' ' });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        // Find nearby desk for user's department\n        const settings = this._settings.get('app.departments') || {\n            '*': {\n                level: this._org.levelsForBuilding()[0]?.id,\n                centered_at: { x: 0.5, y: 0.5 },\n            },\n        };\n        const group = currentUser().groups.find((_) => _ in settings) ?? '*';\n        if (!settings[group]) {\n            this._router.navigate(['/book', 'desks', 'map']);\n            return;\n        }\n        const { level, centered_at } = settings[group];\n        const lvl = this._org.levelWithID([level]);\n        if (!lvl) {\n            this._router.navigate(['/book', 'desks', 'map']);\n            return;\n        }\n        const desk_list = await this._state.available_resources\n            .pipe(take(1))\n            .toPromise();\n        const desk_id = level.map_id\n            ? await findNearbyFeature(\n                  lvl.map_id,\n                  centered_at,\n                  desk_list.map((_) => _?.map_id || _?.id || '')\n              )\n            : desk_list[randomInt(desk_list.length)].id;\n        const desk = desk_list.find(\n            (_) => _.map_id === desk_id || _.id === desk_id\n        );\n        if (!desk) {\n            this._router.navigate(['/book', 'desks', 'map']);\n            return;\n        }\n        this._state.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name || desk.id,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name || desk.id,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n        });\n        await this._state.confirmPost().catch((_) => console.error(_));\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport {\n    AsyncHandler,\n    formatRecurrence,\n    SettingsService,\n} from '@placeos/common';\nimport { ExploreStateService } from '@placeos/explore';\nimport { Desk } from '@placeos/organisation';\nimport { format } from 'date-fns';\nimport { BehaviorSubject, combineLatest, of } from 'rxjs';\nimport { debounceTime, map, startWith } from 'rxjs/operators';\n\n@Component({\n    selector: 'desk-flow-map',\n    template: `\n        <div topbar class=\"\">\n            <a\n                button\n                class=\"clear h-[2.75rem] text-white\"\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'desks', 'form']\"\n            >\n                <div class=\"flex items-center justify-center h-full\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <span class=\"ml-2 mx-4\">Back</span>\n                </div>\n            </a>\n        </div>\n        <div class=\"flex flex-col flex-1 h-1/2 w-full \">\n            <h2 class=\"text-2xl px-4 pt-4 text-center\">Available Desks</h2>\n            <an-action-field\n                class=\"my-4 mx-auto w-[640px] max-w-[calc(100vw-2rem)]\"\n                [matMenuTriggerFor]=\"menu\"\n            >\n                {{ (option_details | async) || 'No Filters' }}\n            </an-action-field>\n            <mat-menu #menu=\"matMenu\">\n                <div\n                    (click)=\"$event.stopPropagation(); ($event.preventDefault)\"\n                    class=\"pt-4 max-h-[65vh] overflow-auto\"\n                >\n                    <detailed-book-desks-form\n                        [form]=\"form\"\n                    ></detailed-book-desks-form>\n                </div>\n            </mat-menu>\n            <div listing class=\"flex flex-1 h-1/2 relative space-x-2\">\n                <ul\n                    class=\"list-style-none w-full sm:w-[20rem] max-w-[48rem] mx-auto bg-base-200 pb-32 overflow-auto h-full rounded-tr-lg space-y-2\"\n                    [class.!w-full]=\"hide_map\"\n                    [class.rounded-tl-lg]=\"hide_map\"\n                >\n                    <div\n                        class=\"py-2 px-4 sticky top-0 inset-x-0 bg-base-200 border-b border-base-200 z-10\"\n                    >\n                        {{ (desks | async)?.length || '0' }} matches available\n                    </div>\n                    <li\n                        matRipple\n                        *ngFor=\"let desk of desks | async\"\n                        [attr.desk-id]=\"desk.id\"\n                        class=\"flex items-center p-2 mx-2 bg-base-100 rounded shadow cursor-pointer space-x-2 min-h-[5rem] border\"\n                        [class.border-primary]=\"active_desk?.id === desk.id\"\n                        (click)=\"setActiveDesk(desk)\"\n                    >\n                        <app-icon class=\"text-2xl\">place</app-icon>\n                        <div class=\"flex flex-col w-1/2 flex-1\">\n                            <div name class=\"\">{{ desk.name || desk.id }}</div>\n                            <div level class=\"text-xs\">\n                                {{\n                                    desk.zone?.display_name ||\n                                        desk.zone?.name ||\n                                        '&lt;No Level&gt;'\n                                }}\n                            </div>\n                            <div features class=\"w-full flex flex-wrap\">\n                                <div\n                                    *ngFor=\"let feat of desk.features || []\"\n                                    class=\"text-xs bg-primary text-white rounded-xl px-2 py-1 mt-1 mr-2\"\n                                >\n                                    {{ feat }}\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n                <div\n                    class=\"hidden sm:block flex-1 bg-base-200 rounded-tl-lg border-l border-t border-base-200 relative overflow-hidden h-full\"\n                    *ngIf=\"!hide_map\"\n                >\n                    <i-map\n                        [src]=\"url | async\"\n                        [zoom]=\"(positions | async)?.zoom\"\n                        [center]=\"(positions | async)?.center\"\n                        [styles]=\"styles | async\"\n                        [features]=\"features | async\"\n                        [actions]=\"actions | async\"\n                        [labels]=\"labels | async\"\n                        [focus]=\"active_desk?.map_id || active_desk?.id\"\n                    ></i-map>\n                    <div\n                        class=\"absolute top-2 left-2 bg-base-100 rounded-3xl h-10 px-3 flex items-center border border-base-200\"\n                        *ngIf=\"level | async\"\n                    >\n                        {{\n                            (level | async)?.display_name ||\n                                (level | async)?.name\n                        }}\n                    </div>\n                </div>\n                <div\n                    *ngIf=\"loading | async\"\n                    class=\"absolute inset-0 bg-base-100 bg-opacity-60 flex flex-col items-center justify-center space-y-2 !m-0 z-20\"\n                >\n                    <mat-spinner [diameter]=\"32\"></mat-spinner>\n                    <p>{{ loading | async }}</p>\n                </div>\n                <div\n                    selection\n                    class=\"absolute bottom-2 left-1/2 transform -translate-x-1/2 p-2 bg-base-100 shadow rounded w-[24rem] max-w-[calc(100vw-1rem)] space-y-2 !m-0 border border-base-200\"\n                    *ngIf=\"active_desk\"\n                >\n                    <div class=\"\">\n                        <div name class=\"\">{{ active_desk.name }}</div>\n                        <div level class=\"text-xs\">\n                            {{\n                                active_desk.zone?.display_name ||\n                                    active_desk.zone.name ||\n                                    '&lt;No Level&gt;'\n                            }}\n                        </div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <button\n                            matRipple\n                            class=\"inverse flex-1\"\n                            (click)=\"setActiveDesk(null)\"\n                        >\n                            Clear\n                        </button>\n                        <button\n                            matRipple\n                            class=\"flex-1\"\n                            (click)=\"makeBooking()\"\n                        >\n                            Book\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n\n            [topbar] {\n                background-color: #00539f;\n            }\n        `,\n    ],\n})\nexport class DeskFlowMapComponent extends AsyncHandler implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._explore.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._explore.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._explore.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._explore.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._explore.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._explore.map_labels;\n    public readonly level = this._explore.level;\n\n    public readonly desks = this._state.available_resources;\n\n    public readonly loading = this._state.loading;\n\n    public readonly form = this._state.form;\n\n    public readonly option_details = combineLatest([\n        this._state.options,\n        this.form.valueChanges.pipe(startWith({})),\n    ]).pipe(\n        map(([options]) => {\n            const form = this._state.form;\n            const recurrence = formatRecurrence({\n                pattern: options.pattern as any,\n                end: options.recurr_end,\n                start: form.value.date,\n                interval: 1,\n                days_of_week: [],\n            });\n            const details = `${format(form.value.date, 'dd MMM yyyy')}${\n                options.pattern && options.pattern !== 'none'\n                    ? ', ' + recurrence\n                    : ''\n            }${options.group ? ', ' + options.group : ''}, ${\n                options.features?.length || 'Any'\n            } Feature${(options.features?.length || 0) < 2 ? '' : 's'}`;\n            if (options.zone_id) this._explore.setLevel(options.zone_id);\n            return details;\n        })\n    );\n\n    private _active_desk = new BehaviorSubject<Desk>(null);\n\n    public readonly makeBooking = () => this._state.confirmPost();\n\n    public get active_desk(): Desk {\n        return this._active_desk.getValue();\n    }\n\n    public get hide_map() {\n        return !!this._settings.get('app.desks.hide_map');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _explore: ExploreStateService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'assets-statue',\n            combineLatest([\n                this._state.resources,\n                this._state.available_resources,\n                this._active_desk,\n            ])\n                .pipe(debounceTime(200))\n                .subscribe(([assets, available]) => {\n                    const status = {};\n                    const actions = [];\n                    for (const desk of assets) {\n                        const active =\n                            desk.bookable &&\n                            available.find((d) => d.id === desk.id);\n                        status[`#${desk.map_id || desk.id}`] = {\n                            fill: desk.bookable\n                                ? available.find((d) => d.id === desk.id)\n                                    ? '#43a047'\n                                    : '#e53935'\n                                : '#999',\n                            opacity: 0.6,\n                        };\n                        if (active)\n                            actions.push({\n                                id: desk.map_id || desk.id,\n                                action: 'click',\n                                callback: () => this.setActiveDesk(desk as any),\n                            });\n                    }\n                    this._explore.setStyles('desks', status);\n                    this._explore.setActions('desks', actions);\n                    this._explore.setFeatures(\n                        'desks',\n                        this.active_desk\n                            ? [\n                                  {\n                                      location:\n                                          this.active_desk.map_id ||\n                                          this.active_desk.id,\n                                      content: `\n                    <span class=\"flex h-4 w-4 rounded-full absolute top-1/4 left-1/4 transform -translate-x-1/2 -translate-y-1/2 border-[3px] border-whiteå00 shadow\" >\n                        <span class=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-primary opacity-75\"></span>\n                        <span class=\"relative inline-flex rounded-full h-full w-full bg-primary\"></span>\n                    </span>`,\n                                  },\n                              ]\n                            : []\n                    );\n                })\n        );\n    }\n\n    public setActiveDesk(desk: Desk) {\n        this._explore.setLevel(desk?.zone?.id);\n        this._active_desk.next(desk);\n        this._state.form.patchValue({\n            asset_id: desk?.id,\n            asset_name: desk.name,\n            map_id: desk?.map_id || desk?.id,\n            description: desk.name,\n            booking_type: 'desk',\n            zones: desk.zone ? [desk.zone?.parent_id, desk.zone?.id] : [],\n        });\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'desk-flow-confirm',\n    template: `\n        <div topbar class=\"\">\n            <a\n                btn\n                matRipple\n                class=\"clear h-[2.75rem] text-white\"\n                [routerLink]=\"['/book', 'desks', 'map']\"\n            >\n                <div class=\"flex items-center justify-center h-full\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <span class=\"ml-2 mx-4\">Back</span>\n                </div>\n            </a>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n\n            [topbar] {\n                background-color: #00539f;\n            }\n        `,\n    ],\n})\nexport class DeskFlowConfirmComponent {}\n","import { Component, Input } from '@angular/core';\nimport { currentUser } from '@placeos/common';\n\n@Component({\n    selector: 'flow-success',\n    template: `\n        <div\n            name=\"success\"\n            class=\"fixed inset-0 flex flex-col bg-indigo-900 items-center justify-center z-50\"\n        >\n            <div class=\"text-7xl rounded-full bg-base-100 text-success mb-4\">\n                <app-icon>done</app-icon>\n            </div>\n            <div class=\"text-center text-lg text-white mb-4 leading-10\">\n                Thank you, your {{ type }} booking was successful!<br />\n                {{ extra }} <br *ngIf=\"extra\" />\n                An event has been added to {{ title }} calendar\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <a\n                    btn\n                    matRipple\n                    class=\"w-32 border border-white\"\n                    [routerLink]=\"['/book', route]\"\n                    [queryParams]=\"{}\"\n                >\n                    New Booking\n                </a>\n                <a\n                    btn\n                    matRipple\n                    class=\"w-32 border border-white\"\n                    [routerLink]=\"['/schedule']\"\n                    [queryParams]=\"{ email: calendar }\"\n                >\n                    Your Bookings\n                </a>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class FlowSuccessComponent {\n    @Input() public calendar: string;\n    @Input() public extra = '';\n    @Input() public route = 'spaces';\n    @Input() public type = 'space';\n\n    public get is_host(): boolean {\n        return this.calendar === currentUser()?.email;\n    }\n\n    public get title() {\n        return this.is_host ? 'your' : \"the host'\";\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { first } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-book-desk-flow',\n    template: `\n        <div class=\"bg-base-100 h-full w-full\">\n            <ng-container [ngSwitch]=\"view\">\n                <ng-container *ngSwitchCase=\"'map'\">\n                    <desk-flow-map></desk-flow-map>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'confirm'\">\n                    <desk-flow-confirm></desk-flow-confirm>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'success'\">\n                    <flow-success\n                        type=\"desk\"\n                        route=\"desks\"\n                        [calendar]=\"last_success?.user_email\"\n                        [extra]=\"\n                            last_success?.extension_data?.secondary_resource\n                                ? 'Locker E-093 has been allocated for this booking.'\n                                : ''\n                        \"\n                    ></flow-success>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <desk-flow-form></desk-flow-form>\n                </ng-container>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class BookDeskFlowComponent extends AsyncHandler implements OnInit {\n    public get view() {\n        return this._state.view;\n    }\n    public get last_success() {\n        return this._state.last_success;\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._state.loadForm();\n        if (!this._state.form) this._state.newForm();\n        this._state.form.patchValue({ booking_type: 'desk' });\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((param) => {\n                if (param.has('step'))\n                    this._state.setView(param.get('step') as any);\n            })\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((param) => {\n                if (param.has('success'))\n                    this._state.setView(param.get('success') as any);\n            })\n        );\n    }\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CateringOrder, CateringStateService } from '@placeos/catering';\nimport { SettingsService } from '@placeos/common';\nimport { EventFlowOptions } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'detailed-book-space-form',\n    template: `\n        <form *ngIf=\"form\" [formGroup]=\"form\">\n            <section class=\"mb-4 border-b border-base-200\">\n                <div\n                    class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n                >\n                    <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                        <label for=\"date\">Date</label>\n                        <a-date-field name=\"date\" formControlName=\"date\">\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1 w-full sm:w-1/3\">\n                        <label for=\"start-time\">Start Time</label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex flex-col flex-1 w-full sm:w-1/3 relative\">\n                        <label for=\"end-time\">End Time</label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.value.date\"\n                            [max]=\"max_duration\"\n                        >\n                        </a-duration-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute top-0 right-0\"\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex flex-col sm:flex-row space-x-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n                >\n                    <div\n                        class=\"flex flex-col flex-1 w-full\"\n                        *ngIf=\"show_features && features?.length\"\n                    >\n                        <label for=\"building\">Building</label>\n                        <mat-form-field\n                            overlay\n                            buildings\n                            class=\"w-full h-[3.25rem]\"\n                            *ngIf=\"(buildings | async)?.length > 1\"\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                placeholder=\"Select Building...\"\n                                [ngModel]=\"building\"\n                                (ngModelChange)=\"setBuilding($event)\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let bld of buildings | async\"\n                                    [value]=\"bld\"\n                                >\n                                    {{ bld.display_name || bld.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div\n                        class=\"flex flex-col flex-1 w-full\"\n                        *ngIf=\"show_features && features?.length\"\n                    >\n                        <label for=\"features\">Features</label>\n                        <mat-form-field\n                            class=\"w-full h-[3.25rem]\"\n                            overlay\n                            appearance=\"outline\"\n                        >\n                            <mat-select\n                                [placeholder]=\"'Any ' + features_label\"\n                                multiple\n                                [ngModel]=\"options?.features\"\n                                (ngModelChange)=\"\n                                    optionsChange.emit({ features: $event })\n                                \"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let item of features\"\n                                    [value]=\"item\"\n                                >\n                                    {{ item }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </section>\n            <section\n                class=\"mb-4 border-b border-base-200\"\n                *ngIf=\"can_book_for_others || !hide_attendees\"\n            >\n                <div\n                    class=\"flex flex-col w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n                    *ngIf=\"can_book_for_others\"\n                >\n                    <label for=\"host\">Host<span>*</span></label>\n                    <host-select-field\n                        name=\"host\"\n                        formControlName=\"organiser\"\n                    ></host-select-field>\n                </div>\n                <div\n                    class=\"flex flex-col w-[640px] max-w-[calc(100%-2rem)] mx-auto mb-2\"\n                    *ngIf=\"!hide_attendees\"\n                >\n                    <label for=\"attendees\">Attendees</label>\n                    <a-user-list-field\n                        name=\"attendees\"\n                        [hideActions]=\"hide_actions\"\n                        formControlName=\"attendees\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"mb-4 border-b border-base-200\">\n                <div class=\"w-[640px] max-w-[calc(100%-2rem)] mx-auto\">\n                    <div class=\"flex flex-col\">\n                        <label for=\"title\"\n                            >Meeting Subject <span>*</span></label\n                        >\n                        <mat-form-field appearance=\"outline\">\n                            <input\n                                name=\"title\"\n                                matInput\n                                formControlName=\"title\"\n                                placeholder=\"Meeting title\"\n                            />\n                            <mat-error>Meeting Subject is required</mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div\n                        class=\"flex flex-col resize-y mb-4\"\n                        *ngIf=\"!hide_notes\"\n                    >\n                        <label for=\"notes\">Notes</label>\n                        <rich-text-input\n                            name=\"notes\"\n                            formControlName=\"body\"\n                            placeholder=\"Add meeting notes here...\"\n                        ></rich-text-input>\n                    </div>\n                    <div class=\"flex flex-col mb-4\" *ngIf=\"has_catering\">\n                        <label>Catering</label>\n                        <an-action-field (onAction)=\"editCatering()\">\n                            <div\n                                class=\"opacity-40\"\n                                *ngIf=\"!form?.value.catering?.length\"\n                            >\n                                Add catering\n                            </div>\n                            <div\n                                class=\"flex items-center\"\n                                *ngIf=\"form?.value.catering?.length\"\n                            >\n                                <div class=\"flex-1 w-1/2\">\n                                    {{ form?.value.catering[0].item_count }}\n                                    item(s)\n                                </div>\n                                <div class=\"text-xs opacity-60 px-4\">\n                                    {{\n                                        form?.value.catering[0].total_cost / 100\n                                            | currency: code\n                                    }}\n                                </div>\n                            </div>\n                        </an-action-field>\n                    </div>\n                </div>\n            </section>\n        </form>\n    `,\n    styles: [``],\n})\nexport class DetailBookSpaceFormComponent {\n    @Input() public form: FormGroup;\n    @Input() public options: EventFlowOptions;\n    @Input() public features: string[] = [];\n    @Output() public optionsChange = new EventEmitter<EventFlowOptions>();\n\n    public readonly buildings = this._org.building_list;\n    public readonly setBuilding = (b) => (this._org.building = b);\n\n    public get building() {\n        return this._org.building;\n    }\n\n    public get has_catering() {\n        return !!this._settings.get('app.events.has_catering');\n    }\n\n    public get hide_actions() {\n        return !!this._settings.get('app.events.hide_user_actions');\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 4 * 60;\n    }\n\n    public get show_features() {\n        return !!this._settings.get('app.events.features_on_form');\n    }\n\n    public get features_label() {\n        return this._settings.get('app.events.features_label') || 'feature';\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    public readonly editCatering = async () =>\n        this.form.patchValue({\n            catering: [\n                await this._catering.manageCateringOrder(\n                    (this.form.value.catering\n                        ? this.form.value.catering[0]\n                        : null) || new CateringOrder()\n                ),\n            ],\n        });\n\n    constructor(\n        private _catering: CateringStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    currentUser,\n    getInvalidFields,\n    notifyError,\n    SettingsService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { addDays, addMinutes, roundToNearestMinutes, setHours } from 'date-fns';\n\n@Component({\n    selector: 'space-flow-form',\n    template: `\n        <section form class=\"flex-1 min-h-[50%]\">\n            <h2\n                class=\"text-xl uppercase font-medium mb-2 mt-4 w-[640px] max-w-[calc(100%-2rem)] mx-auto\"\n            >\n                {{ is_edit ? 'Edit' : 'Detailed' }} Space Booking\n            </h2>\n            <detailed-book-space-form\n                [form]=\"form\"\n                [options]=\"options | async\"\n                (optionsChange)=\"setOptions($event)\"\n                [features]=\"features | async\"\n            ></detailed-book-space-form>\n            <div\n                class=\"flex flex-col sm:flex-row items-center justify-center space-x-0 space-y-2 sm:space-y-0 sm:space-x-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto mb-4\"\n            >\n                <button\n                    class=\"sm:flex-1 w-full sm:w-auto h-[2.75rem] inverse\"\n                    btn\n                    matRipple\n                    clear\n                    (click)=\"clearForm()\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-xl\">clear</app-icon>\n                        <span class=\"ml-2 mx-4\">{{\n                            is_edit ? 'Cancel Edit' : 'Clear Form'\n                        }}</span>\n                    </div>\n                </button>\n                <button\n                    class=\"sm:flex-1 w-full sm:w-auto h-[2.75rem]\"\n                    btn\n                    matRipple\n                    find-space\n                    (click)=\"findSpace()\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-xl\">search</app-icon>\n                        <span class=\"ml-2 mx-4\">{{\n                            is_edit ? 'Update Spaces' : 'Find Space'\n                        }}</span>\n                    </div>\n                </button>\n                <button\n                    class=\"sm:flex-1 w-full sm:w-auto h-[2.75rem]\"\n                    btn\n                    matRipple\n                    standalone\n                    *ngIf=\"is_edit || allow_standalone_bookings\"\n                    (click)=\"confirmBooking()\"\n                >\n                    <div class=\"flex items-center justify-center\">\n                        <app-icon class=\"text-xl\">event_available</app-icon>\n                        <span class=\"ml-2 mx-4\">{{\n                            is_edit ? 'Confirm changes' : 'Book without Space'\n                        }}</span>\n                    </div>\n                </button>\n            </div>\n        </section>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n                overflow: auto;\n            }\n\n            [quick] {\n                background-color: #007ac8;\n            }\n        `,\n    ],\n})\nexport class SpaceFlowFormComponent {\n    public time = 0;\n    public capacity = 0;\n\n    public readonly quick_times = [\n        { name: 'Now', value: 0 },\n        { name: 'Later Today', value: 120 },\n        {\n            name: 'Tomorrow',\n            value: setHours(addDays(new Date(), 1), 9).valueOf(),\n        },\n    ];\n\n    public readonly quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public readonly options = this._state.options;\n    public readonly features = this._state.features;\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get is_edit() {\n        return !!this.form?.value?.id;\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public get allow_standalone_bookings() {\n        return this._settings.get('app.events.allow_standalone_bookings');\n    }\n\n    public readonly clearForm = () => {\n        this.time = this.capacity = 0;\n        this._state.clearForm();\n    };\n\n    constructor(\n        private _state: EventFormService,\n        private _settings: SettingsService,\n        private _router: Router\n    ) {}\n\n    public quickBook() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        this.form.patchValue({\n            date: (this.time < 24 * 60\n                ? addMinutes(\n                      roundToNearestMinutes(new Date(), { nearestTo: 5 }),\n                      this.time\n                  )\n                : setHours(addDays(new Date(), 1), 8)\n            ).valueOf(),\n            title: 'Ad-hoc Meeting',\n        });\n        this._state.setOptions({ capacity: this.capacity });\n        this._router.navigate(['/book', 'spaces', 'find']);\n    }\n\n    public findSpace() {\n        this.form.markAllAsTouched();\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this._router.navigate(['/book', 'spaces', 'find']);\n    }\n\n    public confirmBooking() {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        this.form.markAllAsTouched();\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this._router.navigate(['/book', 'spaces', 'confirm']);\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Space } from '@placeos/spaces';\nimport { MapLocateModalComponent } from '@placeos/components';\n\n@Component({\n    selector: 'space-flow-find-item',\n    template: `\n        <div\n            class=\"flex items-center bg-base-100 p-2 my-2 shadow w-[640px] max-w-[calc(100%-2rem)] mx-auto rounded\"\n        >\n            <div class=\"flex flex-col flex-1 space-y-2 \">\n                <div class=\"flex items-center\">\n                    <div class=\"p-2 rounded-full bg-base-200 mr-2\">\n                        <app-icon>place</app-icon>\n                    </div>\n                    <span\n                        >{{ space?.level?.display_name || space?.level?.name }},\n                        {{ space?.display_name || space?.name }}</span\n                    >\n                </div>\n                <div class=\"flex items-center\">\n                    <div class=\"p-2 rounded-full bg-base-200 mr-2\">\n                        <app-icon>group</app-icon>\n                    </div>\n                    <span>{{ space?.capacity || 0 }} People</span>\n                </div>\n            </div>\n            <div class=\"flex flex-col space-y-2 ml-2\">\n                <button\n                    matRipple\n                    book\n                    [class.bg-warning]=\"multiple && book\"\n                    [class.border-pending]=\"multiple && book\"\n                    (click)=\"bookSpace()\"\n                >\n                    {{ multiple ? (book ? 'Remove' : 'Select') : 'Book' }}\n                </button>\n                <button\n                    locate\n                    btn\n                    matRipple\n                    class=\"inverse\"\n                    (click)=\"viewLocation()\"\n                >\n                    Map\n                </button>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            button {\n                width: 8rem;\n            }\n        `,\n    ],\n})\nexport class SpaceFlowFindItemComponent {\n    /** Space to display details for */\n    @Input() public space: Space;\n    /** Whether space should be booked */\n    @Input() public multiple: boolean;\n    /** Whether space should be booked */\n    @Input() public book: boolean;\n    /** Emitter for changes to book value */\n    @Output() public bookChange = new EventEmitter<boolean>();\n\n    constructor(private _dialog: MatDialog) {}\n\n    public bookSpace() {\n        this.book = this.multiple ? !this.book : true;\n        this.bookChange.emit(this.book);\n    }\n\n    public viewLocation() {\n        this._dialog.open(MapLocateModalComponent, {\n            maxWidth: '95vw',\n            maxHeight: '95vh',\n            data: { item: this.space },\n        });\n    }\n}\n","import { Component, OnInit, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HashMap, SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\nimport { combineLatest } from 'rxjs';\nimport { filter, first, map, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'space-flow-find',\n    template: `\n        <div topbar class=\"\">\n            <a\n                button\n                class=\"clear h-[2.75rem] text-white\"\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'spaces', 'form']\"\n            >\n                <div class=\"flex items-center justify-center h-full\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <span class=\"ml-2 mx-4\">Back</span>\n                </div>\n            </a>\n        </div>\n        <div filters>\n            <div class=\"w-[640px] max-w-[calc(100%-2rem)] mx-auto py-4\">\n                <h2 class=\"text-xl uppercase font-medium text-white\">\n                    Available Spaces\n                </h2>\n                <div\n                    class=\"flex flex-col items-center sm:flex-row space-x-0 sm:space-x-2\"\n                >\n                    <mat-form-field\n                        overlay\n                        buildings\n                        class=\"w-full sm:w-px sm:flex-1 h-[3.25rem]\"\n                        *ngIf=\"(buildings | async)?.length > 1\"\n                        appearance=\"outline\"\n                    >\n                        <mat-select\n                            placeholder=\"Select Building...\"\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of buildings | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        class=\"w-full sm:w-px sm:flex-1 h-[3.25rem]\"\n                        overlay\n                        *ngIf=\"(levels | async)?.length > 0\"\n                        appearance=\"outline\"\n                    >\n                        <mat-select\n                            placeholder=\"Level\"\n                            [ngModel]=\"\n                                (options | async)?.zone_ids?.length\n                                    ? (options | async)?.zone_ids[0]\n                                    : ''\n                            \"\n                            (ngModelChange)=\"setOptions({ zone_ids: [$event] })\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of levels | async\"\n                                [value]=\"item.id\"\n                            >\n                                {{ item.display_name || item.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        class=\"w-full sm:w-px sm:flex-1 h-[3.25rem] hidden sm:block\"\n                        overlay\n                        appearance=\"outline\"\n                    >\n                        <mat-select\n                            placeholder=\"Any Capacity\"\n                            [ngModel]=\"(options | async)?.capacity\"\n                            (ngModelChange)=\"setOptions({ capacity: $event })\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of quick_capacities\"\n                                [value]=\"item.value\"\n                            >\n                                {{ item.name }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field\n                        class=\"w-full sm:w-px sm:flex-1 h-[3.25rem] hidden sm:block\"\n                        overlay\n                        appearance=\"outline\"\n                        *ngIf=\"(features | async)?.length\"\n                    >\n                        <mat-select\n                            [placeholder]=\"'Any ' + features_label\"\n                            multiple\n                            [ngModel]=\"(options | async)?.features\"\n                            (ngModelChange)=\"setOptions({ features: $event })\"\n                        >\n                            <mat-option\n                                *ngFor=\"let item of features | async\"\n                                [value]=\"item\"\n                            >\n                                {{ item }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n        </div>\n        <div class=\"flex-1 w-full bg-base-200 overflow-auto\">\n            <ng-container *ngIf=\"!(loading | async); else load_state\">\n                <ng-container\n                    *ngIf=\"(spaces | async)?.length > 0; else empty_state\"\n                >\n                    <space-flow-find-item\n                        *ngFor=\"let space of spaces | async\"\n                        class=\"w-[640px] max-w-[calc(100%-2rem)] mx-auto \"\n                        [space]=\"space\"\n                        [multiple]=\"multiple\"\n                        [book]=\"book_space[space.id]\"\n                        (bookChange)=\"handleBookEvent(space, $event)\"\n                    ></space-flow-find-item>\n                    <p class=\"p-4 text-center opacity-60\">\n                        End of available spaces list\n                    </p>\n                </ng-container>\n            </ng-container>\n        </div>\n        <div *ngIf=\"multiple\" class=\"bg-base-100 border-t border-base-200\">\n            <div\n                class=\"flex items-center w-[640px] max-w-[calc(100%-2rem)] mx-auto p-2\"\n            >\n                <div class=\"flex-1 underline\" [matMenuTriggerFor]=\"menu\">\n                    {{ space_list?.length }} space(s) selected\n                </div>\n                <button\n                    class=\"w-32\"\n                    [disabled]=\"!space_list?.length\"\n                    btn\n                    matRipple\n                    (click)=\"confirmBooking()\"\n                >\n                    Book\n                </button>\n            </div>\n            <mat-menu #menu=\"matMenu\" yPosition=\"above\">\n                <div\n                    class=\"flex items-center pointer-events-none leading-tight\"\n                    mat-menu-item\n                    *ngFor=\"let space of space_list\"\n                >\n                    <div class=\"flex flex-col mr-4\">\n                        <div>{{ space.display_name || space.name }}</div>\n                        <div class=\"text-xs opacity-70\">\n                            {{ space.level?.display_name || space.level?.name }}\n                            ~ {{ space.capacity || '2+' }} People\n                        </div>\n                    </div>\n                    <button\n                        icon\n                        matRipple\n                        class=\"pointer-events-auto\"\n                        (click)=\"\n                            this.handleBookEvent(space, false);\n                            $event.stopPropagation()\n                        \"\n                    >\n                        <app-icon>close</app-icon>\n                    </button>\n                </div>\n                <div\n                    mat-menu-item\n                    class=\" opacity-60\"\n                    *ngIf=\"!space_list?.length\"\n                >\n                    No selected spaces\n                </div>\n            </mat-menu>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"h-full w-full flex flex-col items-center justify-center space-y-2\"\n            >\n                <mat-spinner [diameter]=\"32\"></mat-spinner>\n                <p>Retrieving available spaces...</p>\n            </div>\n        </ng-template>\n        <ng-template #empty_state>\n            <div\n                class=\"h-full w-full flex flex-col items-center justify-center space-y-2 p-8 text-center\"\n            >\n                <p>\n                    No available spaces for selected time, capacity or level(s)\n                </p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n\n            [topbar] {\n                background-color: var(--secondary-dark);\n            }\n\n            [filters] {\n                background-color: var(--p);\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class SpaceFlowFindComponent implements OnInit {\n    public book_space: HashMap<boolean> = {};\n    public quick_capacities = [\n        { name: 'Any Capacity', value: 0 },\n        { name: 'Small (1 - 4)', value: 1 },\n        { name: 'Medium (5 - 12)', value: 5 },\n        { name: 'Large (13 - 32)', value: 13 },\n        { name: 'Huge (32+)', value: 33 },\n    ];\n\n    public space_list: Space[] = [];\n\n    /** List of available buildings */\n    public readonly buildings = this._org.building_list;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n\n    public readonly levels = combineLatest([\n        this.building,\n        this._state.options,\n    ]).pipe(\n        filter(([_]) => !!_),\n        map(([bld]) => [\n            {\n                id: this._org.building.id,\n                name: 'All Levels',\n            },\n            ...this._org.levelsForBuilding(bld),\n        ])\n    );\n\n    public readonly loading = this._state.loading;\n    public readonly options = this._state.options;\n\n    public readonly spaces = this._state.available_spaces;\n    public readonly features = this._state.features;\n    public async setBuilding(bld) {\n        const opts = await this.options.pipe(take(1)).toPromise();\n        if (bld) this._org.building = bld;\n        const levels = this._org.levelsForBuilding(this._org.building);\n        const lvl = levels.find((_) => opts.zone_ids?.includes(_.id));\n        if (!lvl && levels.length) {\n            this.setOptions({ zone_ids: [levels[0].id] });\n        }\n    }\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public get multiple() {\n        return this._settings.get('app.events.multiple_spaces') ?? false;\n    }\n\n    public get features_label() {\n        return this._settings.get('app.events.features_label') || 'feature';\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: EventFormService,\n        private _settings: SettingsService,\n        private _router: Router,\n        private _space_pipe: SpacePipe\n    ) {}\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => !!_)).toPromise();\n        this.setBuilding(this._org.building);\n        this.book_space = {};\n        const resources = this._state.form?.get('resources')?.value || [];\n        resources.forEach((_) => (this.book_space[_.id] = true));\n        this.space_list = await this._getSpaceList();\n    }\n\n    public async handleBookEvent(space: Space, book: boolean = true) {\n        if (this.multiple) {\n            this.book_space[space.id] = book;\n        } else {\n            this.book_space = {};\n            this.book_space[space.id] = book;\n            this.confirmBooking();\n        }\n        this.space_list = await this._getSpaceList();\n    }\n\n    public async confirmBooking() {\n        const spaces = await this._getSpaceList();\n        this._state.form.patchValue({\n            resources: spaces,\n            system: spaces[0] as any,\n        });\n        this._router.navigate(['/book', 'spaces', 'confirm']);\n    }\n\n    private _getSpaceList() {\n        const id_list = Object.keys(this.book_space).filter(\n            (k) => this.book_space[k]\n        );\n        return id_list.length\n            ? Promise.all(id_list.map((_) => this._space_pipe.transform(_)))\n            : Promise.resolve([]);\n    }\n}\n","import { Component } from '@angular/core';\nimport { CateringItem } from '@placeos/catering';\nimport { notifyError, SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'space-flow-confirm',\n    template: `\n        <div topbar class=\"\">\n            <a\n                button\n                class=\"clear h-[2.75rem] text-white\"\n                btn\n                matRipple\n                [routerLink]=\"['/book', 'spaces', 'find']\"\n            >\n                <div class=\"flex items-center justify-center h-full\">\n                    <app-icon class=\"text-xl\">arrow_back</app-icon>\n                    <span class=\"ml-2 mx-4\">Back</span>\n                </div>\n            </a>\n        </div>\n        <div\n            class=\"flex flex-col items-center space-y-2 w-[640px] max-w-[calc(100%-2rem)] mx-auto mb-4\"\n        >\n            <h2 class=\"text-xl uppercase font-medium w-full my-4\">\n                Your meeting details\n            </h2>\n            <div\n                class=\"flex items-center py-2 space-x-2 border-b border-base-200 w-full\"\n            >\n                <div class=\"p-2 rounded-full bg-base-200 mr-2\">\n                    <app-icon>event</app-icon>\n                </div>\n                <div class=\"flex-1 truncate\">\n                    {{ form.value.date | date: 'longDate' }}\n                    <span *ngIf=\"!form.value.all_day\">\n                        at {{ form.value.date | date: 'shortTime' }} ~\n                        {{\n                            form.value.date + form.value.duration * 60 * 1000\n                                | date: 'shortTime'\n                        }}\n                    </span>\n                </div>\n                <a\n                    btn\n                    matRipple\n                    class=\"clear underline\"\n                    [routerLink]=\"['/book', 'spaces', 'form']\"\n                    >Edit</a\n                >\n            </div>\n            <div\n                class=\"flex items-center py-2 space-x-2 border-b border-base-200 w-full\"\n            >\n                <div class=\"p-2 rounded-full bg-base-200 mr-2\">\n                    <app-icon>schedule</app-icon>\n                </div>\n                <div class=\"flex-1 truncate\">\n                    {{\n                        form.value.all_day\n                            ? 'All Day'\n                            : (form.value.duration | duration)\n                    }}\n                </div>\n                <a\n                    btn\n                    matRipple\n                    class=\"clear underline\"\n                    [routerLink]=\"['/book', 'spaces', 'form']\"\n                >\n                    Edit\n                </a>\n            </div>\n            <div class=\"border-b border-base-200 w-full\">\n                <div class=\"flex items-center py-2 space-x-2 \">\n                    <div class=\"p-2 rounded-full bg-base-200 mr-2\">\n                        <app-icon>place</app-icon>\n                    </div>\n                    <div class=\"flex-1 truncate\">\n                        {{ form.get('resources')?.value?.length }} Space(s)\n                    </div>\n                    <button\n                        matRipple\n                        [disabled]=\"!form.get('resources')?.value?.length\"\n                        class=\"clear bg-transparent border-none underline\"\n                        (click)=\"show_spaces = !show_spaces\"\n                    >\n                        {{ show_spaces ? 'Hide' : 'Show' }}\n                    </button>\n                    <a\n                        btn\n                        matRipple\n                        class=\"clear underline\"\n                        [routerLink]=\"['/book', 'spaces', 'find']\"\n                        >Edit</a\n                    >\n                </div>\n                <div\n                    list\n                    [style.height]=\"\n                        !show_spaces\n                            ? '0'\n                            : form.get('resources')?.value?.length * 2.5 + 'rem'\n                    \"\n                    class=\"overflow-hidden\"\n                >\n                    <div\n                        class=\"flex items-center h-10 pl-12\"\n                        *ngFor=\"let space of form.get('resources')?.value\"\n                    >\n                        <span\n                            >{{ space.display_name || space.name }} [{{\n                                space.level?.display_name || space.level?.name\n                            }}]</span\n                        >\n\n                        <button\n                            matRipple\n                            class=\"bg-transparent border-none underline\"\n                            *ngIf=\"can_view_location\"\n                        >\n                            Map\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"border-b border-base-200 w-full\">\n                <div class=\"flex items-center py-2 space-x-2 \">\n                    <div class=\"p-2 rounded-full bg-base-200 mr-2\">\n                        <app-icon>group</app-icon>\n                    </div>\n                    <div class=\"flex-1 truncate\">\n                        {{ form.get('attendees')?.value?.length || 0 }}\n                        Attendee(s)\n                    </div>\n                    <button\n                        matRipple\n                        [disabled]=\"!form.get('attendees')?.value?.length\"\n                        class=\"clear bg-transparent border-none underline\"\n                        (click)=\"show_people = !show_people\"\n                    >\n                        {{ show_people ? 'Hide' : 'Show' }}\n                    </button>\n                    <a\n                        btn\n                        matRipple\n                        class=\"clear underline\"\n                        [routerLink]=\"['/book', 'spaces', 'form']\"\n                        >Edit</a\n                    >\n                </div>\n                <div\n                    list\n                    [style.height]=\"\n                        !show_people\n                            ? '0'\n                            : form.get('attendees')?.value?.length * 3 + 'rem'\n                    \"\n                    class=\"overflow-hidden\"\n                >\n                    <div\n                        class=\"flex items-center h-12 pl-12 space-x-2\"\n                        *ngFor=\"let user of form.get('attendees')?.value\"\n                    >\n                        <a-user-avatar\n                            class=\"text-sm\"\n                            [user]=\"user\"\n                        ></a-user-avatar>\n                        <span>{{ user.name || user.email }}</span>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"border-b border-base-200 w-full\"\n                *ngIf=\"form.value.catering?.length\"\n            >\n                <div class=\"flex items-center py-2 space-x-2 \">\n                    <div class=\"p-2 rounded-full bg-base-200 mr-2\">\n                        <app-icon>group</app-icon>\n                    </div>\n                    <div class=\"flex-1 truncate\">\n                        {{ form.value.catering[0]?.item_count || 0 }}\n                        Catering Item(s)\n                    </div>\n                    <button\n                        matRipple\n                        class=\"clear bg-transparent border-none underline\"\n                        (click)=\"show_catering = !show_catering\"\n                    >\n                        {{ show_people ? 'Hide' : 'Show' }}\n                    </button>\n                    <a\n                        btn\n                        matRipple\n                        class=\"clear underline\"\n                        [routerLink]=\"['/book', 'spaces', 'form']\"\n                        >Edit</a\n                    >\n                </div>\n                <div\n                    list\n                    [style.height]=\"\n                        !show_catering\n                            ? '0'\n                            : form.value.catering[0]?.items.length * 3 + 'rem'\n                    \"\n                    class=\"overflow-hidden\"\n                >\n                    <div\n                        class=\"flex items-center h-12 pl-12 space-x-2\"\n                        *ngFor=\"let item of form.value.catering[0]?.items\"\n                    >\n                        <div class=\"flex-1 w-1/2\">\n                            <div class=\"flex-1 w-1/2\">{{ item.name }}</div>\n                            <div\n                                class=\"text-xs underline\"\n                                *ngIf=\"item.options.length\"\n                                [matTooltip]=\"optionsFor(item)\"\n                            >\n                                {{ item.options.length }} option{{\n                                    item.options.length === 1 ? '' : 's'\n                                }}\n                                selected\n                            </div>\n                        </div>\n                        <div\n                            class=\"bg-primary text-xs rounded px-4 py-2 mx-2 text-white font-medium\"\n                        >\n                            {{ item.total_cost / 100 | currency: code }}\n                        </div>\n                        <a-counter [(ngModel)]=\"item.quantity\"></a-counter>\n                    </div>\n                </div>\n            </div>\n            <button\n                matRipple\n                class=\"w-32\"\n                confirm\n                [disabled]=\"loading\"\n                (click)=\"postForm()\"\n            >\n                <span *ngIf=\"!loading\">Confirm</span>\n                <mat-spinner\n                    class=\"mx-auto\"\n                    [diameter]=\"24\"\n                    *ngIf=\"loading\"\n                ></mat-spinner>\n            </button>\n        </div>\n        <\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n                display: flex;\n                flex-direction: column;\n            }\n\n            [topbar] {\n                background-color: #00539f;\n            }\n\n            [list] {\n                transition: height 200ms;\n            }\n        `,\n    ],\n})\nexport class SpaceFlowConfirmComponent {\n    public show_spaces = false;\n    public show_people = false;\n    public show_catering = false;\n    public loading = false;\n\n    public readonly postForm = async () => {\n        this.loading = true;\n        await this._state\n            .postForm()\n            .catch((_) =>\n                notifyError(\n                    _ instanceof Object ? _.message || 'Bad Request' : _\n                )\n            );\n        this.loading = false;\n    };\n\n    public optionsFor(item: CateringItem) {\n        return item.options.map((i) => i.name).join('\\n');\n    }\n\n    public get can_view_location() {\n        return !this._settings.get('app.no_maps');\n    }\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: EventFormService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'placeos-book-space-flow',\n    template: `\n        <div class=\"bg-base-100 h-full w-full\">\n            <ng-container [ngSwitch]=\"view\">\n                <ng-container *ngSwitchCase=\"'find'\">\n                    <space-flow-find></space-flow-find>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'confirm'\">\n                    <space-flow-confirm></space-flow-confirm>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'success'\">\n                    <flow-success\n                        [calendar]=\"last_success?.host\"\n                    ></flow-success>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <space-flow-form></space-flow-form>\n                </ng-container>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class BookSpaceFlowComponent extends AsyncHandler implements OnInit {\n    public get view() {\n        return this._state.view;\n    }\n    public get last_success() {\n        return this._state.last_success;\n    }\n\n    constructor(\n        private _state: EventFormService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.loadForm();\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((param) => {\n                if (param.has('step'))\n                    this._state.setView(param.get('step') as any);\n            })\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((param) => {\n                if (param.has('success'))\n                    this._state.setView(param.get('success') as any);\n            })\n        );\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler } from '@placeos/common';\nimport { MAP_FEATURE_DATA } from '@placeos/components';\nimport { ExploreParkingService, ExploreStateService } from '@placeos/explore';\nimport { OrganisationService } from '@placeos/organisation';\nimport { addDays, format, startOfDay } from 'date-fns';\nimport { BehaviorSubject } from 'rxjs';\nimport { first, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'space-ping',\n    template: `\n        <div\n            class=\"absolute inset-0 pointer-events-auto\"\n            [style.transform]=\"'scale(' + zoom * ratio + ')'\"\n        >\n            <div\n                class=\"absolute inset-0 animate-ping border-4 border-green-600\"\n            ></div>\n        </div>\n    `,\n})\nclass SpacePingComponent extends AsyncHandler {\n    public zoom = 1;\n    public ratio = 1;\n    constructor(@Inject(MAP_FEATURE_DATA) private _details: any) {\n        super();\n        this.subscription(\n            'zoom',\n            this._details.zoom$?.subscribe((_) => (this.zoom = _))\n        );\n        this.subscription(\n            'ratio',\n            this._details.ratio$?.subscribe((_) => (this.ratio = _))\n        );\n    }\n}\n\n@Component({\n    selector: 'parking-flow-map',\n    template: `\n        <div\n            class=\"w-full h-full flex flex-col items-center relative\"\n            *ngIf=\"!(loading | async); else load_state\"\n        >\n            <div\n                class=\"p-4 flex items-center justify-center bg-secondary w-full shadow z-10 text-white space-x-2\"\n            >\n                <button\n                    matRipple\n                    *ngFor=\"let date of dates\"\n                    [class.selected]=\"date.id === (options | async)?.date\"\n                    class=\"border border-white flex flex-col items-center justify-center h-24 w-28 rounded\"\n                    (click)=\"setDate(date.id)\"\n                >\n                    <p class=\"mb-2 font-medium\">{{ date.name }}</p>\n                    <p class=\"text-2xl\">\n                        {{ ((counts | async) || {})[date.id] || '0' }}\n                    </p>\n                    <p class=\"text-sm\">Available</p>\n                </button>\n            </div>\n            <div class=\"flex w-full h-1/2 flex-1 z-0\">\n                <div\n                    class=\"p-2 sm:w-[18rem] w-full h-full bg-base-200 shadow border-r border-base-200 z-10 overflow-auto space-y-2\"\n                >\n                    <div\n                        class=\"bg-base-100 sticky top-0 w-full z-10\"\n                        *ngIf=\"(levels | async)?.length > 1\"\n                    >\n                        <mat-form-field\n                            appearance=\"outline\"\n                            class=\"w-full h-[3.25rem]\"\n                        >\n                            <mat-select\n                                [ngModel]=\"level | async\"\n                                (ngModelChange)=\"setLevel($event?.id)\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let lvl of levels | async\"\n                                    [value]=\"lvl\"\n                                >\n                                    {{ lvl.display_name || lvl.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <p>{{ (available | async)?.length }} space(s) available</p>\n                    <button\n                        matRipple\n                        class=\"flex items-center justify-between bg-base-100 rounded-lg border border-base-200 p-2 w-full\"\n                        [class.active]=\"(active_space | async)?.id === space.id\"\n                        (click)=\"setActive(space)\"\n                        *ngFor=\"let space of available | async\"\n                    >\n                        <div class=\"text-lg\">Bay No. {{ space.name }}</div>\n                        <div class=\"opacity-60\">\n                            {{ levelName(space.zone_id) }}\n                        </div>\n                    </button>\n                </div>\n                <div\n                    class=\"bg-base-200 flex-1 w-1/2 h-full z-0 relative hidden sm:block\"\n                >\n                    <i-map\n                        [src]=\"url | async\"\n                        [zoom]=\"(positions | async)?.zoom\"\n                        [center]=\"(positions | async)?.center\"\n                        [styles]=\"styles | async\"\n                        [features]=\"features | async\"\n                        [actions]=\"actions | async\"\n                        [labels]=\"labels | async\"\n                    ></i-map>\n                    <explore-zoom-controls\n                        class=\"absolute bottom-0 right-0\"\n                    ></explore-zoom-controls>\n                </div>\n                <div\n                    *ngIf=\"active_space | async\"\n                    class=\"absolute left-1/2 bottom-2 -translate-x-1/2 bg-base-100 shadow rounded p-4 flex flex-col space-y-2\"\n                >\n                    <p>\n                        Parking Bay No.\n                        {{ (active_space | async).name }} selected.\n                    </p>\n                    <p\n                        class=\"p-2 rounded text-sm max-w-[20rem] text-center text-pending leading-tight\"\n                        *ngIf=\"(existing | async)?.length\"\n                    >\n                        Note that your existing parking space reservation will\n                        be replaced\n                    </p>\n                    <button btn matRipple (click)=\"reserveSpace()\">\n                        Reserve Space\n                    </button>\n                </div>\n                <div\n                    class=\"absolute inset-0 bg-base-100/80 flex flex-col items-center justify-center z-50\"\n                    *ngIf=\"!(levels | async)?.length\"\n                >\n                    <p>\n                        Parking is not available for\n                        {{\n                            (building | async)?.display_name ||\n                                (building | async)?.name\n                        }}\n                    </p>\n                </div>\n            </div>\n        </div>\n        <ng-template #load_state>\n            <div\n                class=\"absolute inset-0 bg-base-100/80 flex flex-col items-center justify-center z-50 space-y-2\"\n                *ngIf=\"!(levels | async)?.length\"\n            >\n                <mat-spinner diameter=\"32\"></mat-spinner>\n                <p>Reserving parking space...</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [\n        `\n            .active {\n                background-color: var(--s) !important;\n                color: #fff;\n            }\n\n            .selected {\n                background-color: #fff !important;\n                color: #000d;\n            }\n        `,\n    ],\n    providers: [ExploreParkingService],\n})\nexport class ParkingFlowMapComponent extends AsyncHandler {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n\n    public readonly building = this._org.active_building;\n\n    public readonly level = this._state.level;\n\n    public readonly levels = this._parking.levels;\n\n    public readonly available = this._parking.available_spaces;\n\n    public readonly counts = this._parking.week_availablility;\n\n    public readonly options = this._parking.options;\n\n    public readonly existing = this._parking.existing_event;\n\n    public readonly loading = this._booking.loading;\n\n    public readonly active_space = new BehaviorSubject(null);\n\n    public readonly dates = new Array(7).fill(0).map((_, idx) => ({\n        id: startOfDay(addDays(Date.now(), idx)).valueOf(),\n        name: format(addDays(Date.now(), idx), 'EEE, dd MMM'),\n        available: 0,\n    }));\n\n    public readonly setDate = (d) => this._parking.setOptions({ date: d });\n\n    public levelName(zone_id) {\n        const lvl = this._org.levelWithID([zone_id]);\n        return lvl?.display_name || lvl?.name || '';\n    }\n\n    public setActive(space) {\n        if (space === this.active_space.getValue())\n            this.active_space.next(null);\n        else {\n            this._booking.form.patchValue({\n                asset_id: space.id,\n                asset_name: space.name,\n            });\n            this.active_space.next(space);\n        }\n    }\n\n    public readonly setLevel = (l) => this._state.setLevel(l);\n    public readonly reserveSpace = async () => {\n        const events = await this._parking.existing_event\n            .pipe(take(1))\n            .toPromise();\n        if (events.length) this._booking.form.patchValue({ id: events[0].id }); // Prevent booking duplicate parking spaces\n        await this._booking.postForm();\n        this._router.navigate(['book', 'parking', 'success']);\n    };\n\n    constructor(\n        private _state: ExploreStateService,\n        private _parking: ExploreParkingService,\n        private _org: OrganisationService,\n        private _booking: BookingFormService,\n        private _router: Router\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._state.reset();\n        this.subscription(\n            'levels',\n            this._parking.levels.subscribe((levels) => {\n                this._state.setLevel(levels[0]?.id);\n            })\n        );\n        this.subscription(\n            'spaces',\n            this._parking.available_spaces.subscribe((spaces) => {\n                this._state.setActions(\n                    'parking_spaces',\n                    (spaces || []).map((_) => ({\n                        id: _.map_id,\n                        action: 'click',\n                        callback: () => this.setActive(_),\n                    }))\n                );\n            })\n        );\n        this.subscription(\n            'active_space',\n            this.active_space.subscribe((space) => {\n                if (!space) return this._state.setFeatures('parking_space', []);\n                this._state.setFeatures('parking_space', [\n                    {\n                        location: space.map_id,\n                        content: SpacePingComponent,\n                        full_size: true,\n                        z_index: 0,\n                    },\n                ]);\n            })\n        );\n    }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'parking-flow-confirm',\n    template: ``,\n    styles: [``]\n})\nexport class ParkingFlowConfirmComponent {\n    \n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: 'placeos-book-parking-flow',\n    template: `\n        <div class=\"bg-base-100 h-full w-full\">\n            <ng-container [ngSwitch]=\"view\">\n                <ng-container *ngSwitchCase=\"'confirm'\">\n                    <parking-flow-confirm></parking-flow-confirm>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"'success'\">\n                    <flow-success\n                        [calendar]=\"last_success?.host\"\n                        route=\"parking\"\n                        type=\"parking\"\n                    ></flow-success>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <parking-flow-map></parking-flow-map>\n                </ng-container>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class BookParkingFlowComponent extends AsyncHandler implements OnInit {\n    public get view() {\n        return this._state.view;\n    }\n    public get last_success() {\n        return this._state.last_success;\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.setOptions({ type: 'parking' });\n        this._state.loadForm();\n        if (!this._state.form) this._state.newForm();\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((param) => {\n                if (param.has('step'))\n                    this._state.setView(param.get('step') as any);\n            })\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((param) => {\n                if (param.has('success'))\n                    this._state.setView(param.get('success') as any);\n            })\n        );\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { CateringItem, CateringOrder } from '@placeos/catering';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm-modal',\n    template: `\n        <div\n            header\n            class=\"p-4 flex items-center justify-center border-b border-base-200 relative\"\n        >\n            <button\n                icon\n                name=\"close-meeting-confirm\"\n                matRipple\n                mat-dialog-close\n                *ngIf=\"show_close\"\n                class=\"absolute left-2 top-1/2 -translate-y-1/2\"\n            >\n                <app-icon>close</app-icon>\n            </button>\n            <h2 class=\"text-xl font-medium\" i18n>Confirm Meeting booking</h2>\n            <mat-spinner\n                diameter=\"32\"\n                class=\"absolute right-2 top-1/2 -translate-y-1/2\"\n                [class.opacity-0]=\"!(loading | async)\"\n            ></mat-spinner>\n        </div>\n        <main class=\"min-w-[48rem] divide-y divide-base-200 p-4 space-y-4\">\n            <div class=\"flex divide-x divide-base-200\">\n                <div class=\"pr-4 py-4 pl-16 relative space-y-2 flex-1\">\n                    <div\n                        class=\"absolute top-4 left-4 flex items-center justify-center rounded-full border border-success text-success text-2xl\"\n                    >\n                        <app-icon>done</app-icon>\n                    </div>\n                    <h3 class=\"text-xl !mt-0\">\n                        {{ event.title || 'Meeting Details' }}\n                    </h3>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>today</app-icon>\n                        <div date>{{ event.date | date: 'fullDate' }}</div>\n                    </div>\n                    <div\n                        class=\"flex items-center space-x-2\"\n                        *ngIf=\"event.recurrence?.pattern\"\n                    >\n                        <app-icon>update</app-icon>\n                        <div date>{{ formatted_recurrence }}</div>\n                    </div>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>schedule</app-icon>\n                        <div time>\n                            {{\n                                event.all_day\n                                    ? 'All Day'\n                                    : (event.date | date: time_format) +\n                                      ' - ' +\n                                      (event.date + event.duration * 60 * 1000\n                                          | date: time_format + ' (z)')\n                            }}\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"pr-4 py-4 pl-16 relative space-y-2 flex-1\"\n                    *ngIf=\"event.resources.length\"\n                >\n                    <div\n                        class=\"absolute top-4 left-4 flex items-center justify-center rounded-full border border-success text-success text-2xl\"\n                    >\n                        <app-icon>done</app-icon>\n                    </div>\n                    <h3 class=\"text-xl !mt-0\" i18n>Booked Room</h3>\n                    <ng-container *ngFor=\"let s of event.resources\">\n                        <div class=\"flex items-center space-x-2\">\n                            <app-icon>layers</app-icon>\n                            <div>\n                                {{ level?.display_name || level?.name }},\n                                {{ s.display_name || s.name }}\n                            </div>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>place</app-icon>\n                        <div>{{ location }}</div>\n                    </div>\n                </div>\n            </div>\n            <div\n                class=\"pr-4 py-4 pl-16 relative space-y-2\"\n                *ngIf=\"event.attendees.length\"\n            >\n                <div\n                    class=\"absolute top-4 left-4 flex items-center justify-center rounded-full border border-success text-success text-2xl\"\n                >\n                    <app-icon>done</app-icon>\n                </div>\n                <h3 class=\"text-xl !mt-0\" i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { Attendee } other { Attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n            <div\n                class=\"flex divide-x divide-base-200\"\n                *ngIf=\"event.catering?.length || event.assets?.length\"\n            >\n                <div\n                    class=\"pr-4 py-4 pl-16 relative space-y-2 flex-1\"\n                    *ngIf=\"event.catering?.length\"\n                >\n                    <div\n                        class=\"absolute top-4 left-4 flex items-center justify-center rounded-full border border-success text-success text-2xl\"\n                    >\n                        <app-icon>done</app-icon>\n                    </div>\n                    <h3 class=\"text-xl !mt-0\" i18n>Catering</h3>\n                    <div class=\"flex flex-col space-y-2\">\n                        <div\n                            order\n                            *ngFor=\"let order of catering_orders\"\n                            class=\"border border-base-300 bg-base-100 rounded-xl overflow-hidden\"\n                        >\n                            <div class=\"flex items-center space-x-2 p-3\">\n                                <div class=\"flex-1 flex items-center space-x-2\">\n                                    <div class=\"text-sm flex-1\">\n                                        Order at\n                                        {{\n                                            order.deliver_at | date: time_format\n                                        }}\n                                    </div>\n                                    <div\n                                        class=\"text-xs bg-success text-success-content px-2 py-1 rounded\"\n                                    >\n                                        {{ order.item_count }} item(s)\n                                    </div>\n                                    <div\n                                        class=\"text-xs bg-info text-info-content px-2 py-1 rounded\"\n                                    >\n                                        Total:\n                                        {{\n                                            order.total_cost / 100\n                                                | currency: currency_code\n                                        }}\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                class=\"flex flex-col bg-base-200 divide-y divide-base-100\"\n                            >\n                                <div\n                                    class=\"flex items-center px-3 py-1 space-x-2 hover:opacity-90\"\n                                    *ngFor=\"let item of order.items\"\n                                >\n                                    <div class=\"flex items-center flex-1\">\n                                        <span class=\"text-sm\">{{\n                                            item.name || 'Item'\n                                        }}</span>\n                                        <span\n                                            class=\"text-xs opacity-60 ml-4 font-normal\"\n                                            *ngIf=\"item.option_list?.length\"\n                                            [matTooltip]=\"optionList(item)\"\n                                        >\n                                            {{\n                                                item.option_list?.length || '0'\n                                            }}\n                                            option(s)\n                                        </span>\n                                    </div>\n                                    <div\n                                        class=\"rounded bg-success text-success-content text-xs px-2 py-1\"\n                                    >\n                                        x{{ item.quantity }}\n                                    </div>\n                                    <div\n                                        class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                    >\n                                        {{\n                                            item.unit_price_with_options / 100\n                                                | currency: currency_code\n                                        }}\n                                        ea\n                                    </div>\n                                    <div\n                                        class=\"rounded bg-info text-info-content text-xs px-2 py-1\"\n                                    >\n                                        {{\n                                            item.total_cost / 100\n                                                | currency: currency_code\n                                        }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div\n                    class=\"pr-4 py-4 pl-16 relative space-y-2 flex-1\"\n                    *ngIf=\"event.assets?.length\"\n                >\n                    <div\n                        class=\"absolute top-4 left-4 flex items-center justify-center rounded-full border border-success text-success text-2xl\"\n                    >\n                        <app-icon>done</app-icon>\n                    </div>\n                    <h3 class=\"text-xl !mt-0\" i18n>Assets</h3>\n                    <div\n                        class=\"flex items-center\"\n                        *ngFor=\"let item of event.assets\"\n                    >\n                        <div\n                            count\n                            class=\"flex items-center justify-center w-12 h-12 rounded-full\"\n                        >\n                            {{ item.amount }}\n                        </div>\n                        <div name class=\"flex-1\">{{ item.name }}</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"pr-4 py-4 pl-16 relative space-y-2\" *ngIf=\"event.body\">\n                <div\n                    class=\"absolute top-4 left-4 flex items-center justify-center rounded-full border border-success text-success text-2xl\"\n                >\n                    <app-icon>done</app-icon>\n                </div>\n                <h3 class=\"text-xl !mt-0\" i18n>Notes</h3>\n                <div [innerHTML]=\"event.body | sanitize\"></div>\n            </div>\n        </main>\n        <footer\n            class=\"p-2 border-t border-base-200 flex items-center justify-end\"\n        >\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-32\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-32\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [``],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmModalComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n    public readonly catering_orders;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n            result.close();\n        }\n        const resp = await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            return false;\n        });\n        if (resp) this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._dialog_ref?.close(e);\n\n    private _space = this.event.resources[0];\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(\n                this.event.resources[0]?.email\n            )) || this._space;\n    }\n\n    public get event() {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space(): Space {\n        return this.event.resources[0];\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    public get code() {\n        return this._org.currency_code;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        @Optional()\n        private _dialog_ref: MatDialogRef<MeetingFlowConfirmModalComponent>,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.catering_orders = this.event.catering?.map(\n            (order) => new CateringOrder({ ...order, event: this.event })\n        );\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CateringItem } from '@placeos/catering';\nimport {\n    AsyncHandler,\n    SettingsService,\n    notifyError,\n    openConfirmModal,\n} from '@placeos/common';\nimport {\n    CalendarEvent,\n    EventFormService,\n    formatRecurrence,\n} from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { SpacePipe } from 'libs/spaces/src/lib/space.pipe';\n\n@Component({\n    selector: 'meeting-flow-confirm',\n    template: `\n        <button\n            icon\n            matRipple\n            name=\"close-meeting-confirm\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 i18n>Confirm Meeting booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 px-2\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ event.title || 'Meeting Details' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>today</app-icon>\n                    <div date>{{ event.date | date: 'fullDate' }}</div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"event.recurrence?.pattern\"\n                >\n                    <app-icon>update</app-icon>\n                    <div date>{{ formatted_recurrence }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            event.all_day\n                                ? 'All Day'\n                                : (event.date | date: time_format) +\n                                  ' - ' +\n                                  (event.date + event.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            attendees\n            class=\"flex space-x-1 px-2\"\n            *ngIf=\"event.attendees.length\"\n        >\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>\n                    {{ event.attendees.length }} { event.attendees.length,\n                    plural, =1 { attendee } other { attendees } }\n                </h3>\n                <div attendee-list>\n                    <mat-chip-list #chipList aria-label=\"User selection\">\n                        <mat-chip *ngFor=\"let user of event.attendees\">\n                            <div class=\"flex items-center\">\n                                <app-icon class=\"mr-2\">business</app-icon>\n                                {{ user.name || user.email }}\n                            </div>\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n            </div>\n        </section>\n        <section spaces class=\"flex space-x-1 px-2\" *ngIf=\"space?.id\">\n            <app-icon class=\"text-success mt-1\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Booked Room</h3>\n                <ng-container *ngFor=\"let s of event.resources\">\n                    <div class=\"flex items-center space-x-2\">\n                        <app-icon>meeting_room</app-icon>\n                        <div>\n                            {{ level?.display_name || level?.name }},\n                            {{ s.display_name || s.name }}\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                btn\n                name=\"confirm-meeting\"\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n            <!-- <button\n                btn\n                matRipple\n                class=\"inverse w-full\"\n                *ngIf=\"loading | async\"\n                (click)=\"cancelPost()\"\n                i18n\n            >\n                Undo\n            </button> -->\n        </footer>\n    `,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n            }\n\n            h2 {\n                font-size: 1.5rem;\n                font-weight: medium;\n                margin-bottom: 0.5rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    providers: [SpacePipe],\n})\nexport class MeetingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._event_form.loading;\n\n    public readonly postForm = async () => {\n        if (!this.space) {\n            const result = await openConfirmModal(\n                {\n                    title: 'Make Booking without a Room',\n                    content:\n                        'You are creating a booking without a room, are you sure?',\n                    icon: { content: 'event_available' },\n                },\n                this._dialog\n            );\n            if (result.reason !== 'done') return;\n        }\n        await this._event_form.postForm().catch((_) => {\n            notifyError(_);\n            throw _;\n        });\n        this.dismiss(true);\n    };\n    public readonly cancelPost = () => this._event_form.cancelPostForm();\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    private _space = this.event.resources[0];\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get formatted_recurrence() {\n        return formatRecurrence({\n            ...this.event.recurrence,\n            start: this.event.date || this.event.recurrence.start,\n        });\n    }\n\n    public get event(): CalendarEvent {\n        return this._event_form.form.getRawValue() as any;\n    }\n\n    public get space() {\n        return this._space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space.zones);\n    }\n\n    public get location() {\n        const building = this._org.buildings.find((_) =>\n            this.space.zones.includes(_.id)\n        );\n        return building?.address || building?.display_name || building?.name;\n    }\n\n    constructor(\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _space_pipe: SpacePipe,\n        private _dialog: MatDialog,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        this._space =\n            (await this._space_pipe.transform(this.event.resources[0].email)) ||\n            this._space;\n    }\n\n    public optionList(item: CateringItem) {\n        return item.option_list?.map((_) => _.name).join('\\n');\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { SettingsService } from '@placeos/common';\nimport { addDays, endOfDay, set, startOfDay } from 'date-fns';\n\n@Component({\n    selector: 'meeting-form-details',\n    template: `\n        <div *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"title\">{{ 'FORM.TITLE' | translate }}</label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"e.g. Team Meeting\"\n                        />\n                        <mat-error>{{\n                            'FORM.TITLE_ERROR' | translate\n                        }}</mat-error>\n                    </mat-form-field>\n                </div>\n                <div\n                    class=\"flex-1 min-w-[256px] relative\"\n                    *ngIf=\"!allow_multiday\"\n                >\n                    <label for=\"date\">\n                        {{ 'FORM.DATE' | translate }}<span>*</span>\n                    </label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                    <mat-checkbox\n                        formControlName=\"all_day\"\n                        *ngIf=\"allow_all_day\"\n                        class=\"absolute -top-2 right-2\"\n                    >\n                        {{ 'FORM.ALL_DAY' | translate }}\n                    </mat-checkbox>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center flex-wrap sm:space-x-2\"\n                *ngIf=\"allow_multiday\"\n            >\n                <div class=\"flex-1 min-w-[256px] relative\">\n                    <label for=\"date\">\n                        {{ 'FORM.DATE' | translate }}<span>*</span>\n                    </label>\n                    <a-date-field\n                        name=\"date\"\n                        formControlName=\"date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                    <mat-checkbox\n                        formControlName=\"all_day\"\n                        *ngIf=\"allow_all_day\"\n                        class=\"absolute -top-2 right-2\"\n                    >\n                        {{ 'FORM.ALL_DAY' | translate }}\n                    </mat-checkbox>\n                </div>\n                <div class=\"flex-1 min-w-[256px] relative\">\n                    <label for=\"date\">\n                        {{ 'FORM.END_DATE' | translate }}<span>*</span>\n                    </label>\n                    <a-date-field\n                        name=\"date\"\n                        [formControl]=\"form.controls.date_end\"\n                        [from]=\"start_date\"\n                        [to]=\"end_date\"\n                    >\n                        {{ 'FORM.DATE_ERROR' | translate }}\n                    </a-date-field>\n                </div>\n            </div>\n            <div\n                class=\"flex items-center space-x-2\"\n                *ngIf=\"!form.value.all_day\"\n            >\n                <div class=\"flex-1 w-1/3\">\n                    <label for=\"start-time\">\n                        {{ 'FORM.START_TIME' | translate }}\n                        <span>*</span>\n                    </label>\n                    <a-time-field\n                        name=\"start-time\"\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex-1 w-1/3\" *ngIf=\"allow_multiday\">\n                    <label for=\"end-time\">\n                        {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                    </label>\n                    <a-time-field\n                        name=\"end-time\"\n                        [ngModel]=\"form.value.date_end\"\n                        (ngModelChange)=\"form.patchValue({ date_end: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex-1 w-1/3\" *ngIf=\"!allow_multiday\">\n                    <label for=\"end-time\">\n                        {{ 'FORM.END_TIME' | translate }}<span>*</span>\n                    </label>\n                    <a-duration-field\n                        name=\"end-time\"\n                        formControlName=\"duration\"\n                        [time]=\"form?.value?.date\"\n                        [max]=\"max_duration\"\n                        [use_24hr]=\"use_24hr\"\n                    ></a-duration-field>\n                </div>\n            </div>\n            <div *ngIf=\"can_book_for_others\" class=\"w-full flex flex-col\">\n                <label for=\"host\">\n                    {{ 'FORM.HOST' | translate }}<span>*</span>\n                </label>\n                <host-select-field\n                    name=\"host\"\n                    formControlName=\"organiser\"\n                ></host-select-field>\n            </div>\n            <div *ngIf=\"allow_recurrence\" class=\"w-full flex flex-col\">\n                <label for=\"recurrence\">\n                    {{ 'FORM.RECURRENCE' | translate }}<span>*</span>\n                </label>\n                <recurrence-field\n                    name=\"recurrence\"\n                    [date]=\"form.value.date\"\n                    formControlName=\"recurrence\"\n                ></recurrence-field>\n                <mat-checkbox\n                    *ngIf=\"form.value.id\"\n                    formControlName=\"update_master\"\n                >\n                    Update all future events\n                </mat-checkbox>\n            </div>\n        </div>\n    `,\n    styles: [],\n})\nexport class MeetingFormDetailsComponent {\n    @Input() public form: FormGroup;\n\n    public readonly force_time = set(Date.now(), {\n        hours: 6,\n        minutes: 0,\n    }).valueOf();\n\n    public get max_duration() {\n        return this._settings.get('app.events.max_duration') || 480;\n    }\n\n    public get can_book_for_others() {\n        return this._settings.get('app.events.can_book_for_others');\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.events.allow_all_day');\n    }\n\n    public get allow_recurrence() {\n        return this._settings.get('app.events.allow_recurrence');\n    }\n\n    public get allow_multiday() {\n        return this._settings.get('app.events.allow_multiday');\n    }\n\n    public get start_date() {\n        return startOfDay(this.form.value.date).valueOf();\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.events.allowed_future_days') || 180\n            )\n        ).valueOf();\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(private _settings: SettingsService) {}\n}\n","import { Component, ElementRef, TemplateRef, ViewChild } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    currentUser,\n    getInvalidFields,\n    notifyError,\n    notifyWarn,\n    openConfirmModal,\n    SettingsService,\n    UserIdleTimeService,\n} from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\nimport { Space } from '@placeos/spaces';\nimport { FindAvailabilityModalComponent } from '@placeos/users';\nimport { CateringOrderStateService } from 'libs/catering/src/lib/catering-order-modal/catering-order-state.service';\nimport { BehaviorSubject, combineLatest, timer } from 'rxjs';\nimport { first, map, take, tap } from 'rxjs/operators';\nimport { MeetingFlowConfirmModalComponent } from './meeting-flow-confirm-modal.component';\nimport { MeetingFlowConfirmComponent } from './meeting-flow-confirm.component';\nimport { AssetStateService } from 'libs/assets/src/lib/asset-state.service';\n\n@Component({\n    selector: 'meeting-flow-form',\n    template: `\n        <div class=\"h-full w-full bg-base-200 overflow-auto\">\n            <div\n                class=\"max-w-full w-[48rem] mx-auto sm:my-4 bg-base-100 border border-base-300\"\n            >\n                <h2\n                    class=\"w-full p-4 sm:py-4 sm:px-16 text-2xl font-medium border-b border-base-300\"\n                >\n                    {{ !!form.value.id ? 'Edit' : 'Book' }}\n                    {{ 'WPA.BOOK_MEETING_HEADING' | translate }}\n                </h2>\n                <form\n                    class=\"p-0 sm:py-4 sm:px-16 divide-y divide-base-200 space-y-2\"\n                    [formGroup]=\"form\"\n                    *ngIf=\"form\"\n                >\n                    <section class=\"p-2\">\n                        <h3 class=\"space-x-2 flex items-center\">\n                            <div\n                                class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                            >\n                                1\n                            </div>\n                            <div class=\"text-xl\">\n                                {{ 'WPA.DETAILS' | translate }}\n                            </div>\n                            <div class=\"flex-1 w-px\"></div>\n                            <button\n                                icon\n                                name=\"toggle-details-meeting\"\n                                matRipple\n                                (click)=\"\n                                    hide_block.details = !hide_block.details\n                                \"\n                            >\n                                <app-icon>{{\n                                    hide_block.details\n                                        ? 'expand_more'\n                                        : 'expand_less'\n                                }}</app-icon>\n                            </button>\n                        </h3>\n                        <div\n                            class=\"overflow-hidden\"\n                            [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                        >\n                            <meeting-form-details\n                                class=\"mt-4\"\n                                [form]=\"form\"\n                            ></meeting-form-details>\n                        </div>\n                    </section>\n                    <section class=\"p-2\" *ngIf=\"!hide_attendees\">\n                        <h3 class=\"space-x-2 flex items-center\">\n                            <div\n                                class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                            >\n                                2\n                            </div>\n                            <div class=\"text-xl\">\n                                {{ 'FORM.ATTENDEES' | translate }}\n                            </div>\n                            <div class=\"flex-1 w-px\"></div>\n                            <button\n                                matRipple\n                                name=\"find-attendee-availability\"\n                                class=\"bg-none underline text-xs text-info\"\n                                (click)=\"findAvailableTime()\"\n                            >\n                                {{ 'WPA.AVAILABILITY' | translate }}\n                            </button>\n                            <button\n                                icon\n                                name=\"toggle-attendees-meeting\"\n                                matRipple\n                                (click)=\"\n                                    hide_block.attendees = !hide_block.attendees\n                                \"\n                            >\n                                <app-icon>{{\n                                    hide_block.attendees\n                                        ? 'expand_more'\n                                        : 'expand_less'\n                                }}</app-icon>\n                            </button>\n                        </h3>\n                        <div\n                            class=\"overflow-hidden\"\n                            [@show]=\"hide_block.attendees ? 'hide' : 'show'\"\n                        >\n                            <a-user-list-field\n                                class=\"mt-4\"\n                                formControlName=\"attendees\"\n                                [guests]=\"allow_externals\"\n                            ></a-user-list-field>\n                        </div>\n                    </section>\n                    <section class=\"p-2\">\n                        <h3 class=\"space-x-2 flex items-center\">\n                            <div\n                                class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                            >\n                                3\n                            </div>\n                            <div class=\"text-xl\">\n                                {{ 'WPA.ROOM' | translate }}\n                            </div>\n                            <div class=\"flex-1 w-px\"></div>\n                            <button\n                                icon\n                                name=\"toggle-spaces-meeting\"\n                                matRipple\n                                (click)=\"\n                                    hide_block.resources = !hide_block.resources\n                                \"\n                            >\n                                <app-icon>{{\n                                    hide_block.resources\n                                        ? 'expand_more'\n                                        : 'expand_less'\n                                }}</app-icon>\n                            </button>\n                        </h3>\n                        <div\n                            class=\"overflow-hidden flex flex-col items-center\"\n                            [@show]=\"hide_block.resources ? 'hide' : 'show'\"\n                        >\n                            <div\n                                *ngIf=\"\n                                    !strict_capacity_check &&\n                                    total_capacity &&\n                                    total_capacity <=\n                                        form.value.attendees?.length\n                                \"\n                                class=\"bg-warning text-warning-content rounded shadow p-2 text-xs mx-auto my-2 inline-flex\"\n                            >\n                                The selected room has less capacity than the\n                                number of meeting attendees.\n                            </div>\n                            <space-list-field\n                                class=\"w-full\"\n                                formControlName=\"resources\"\n                            ></space-list-field>\n                        </div>\n                    </section>\n                    <section class=\"p-2\" *ngIf=\"has_catering | async\">\n                        <h3 class=\"space-x-2 flex items-center\">\n                            <div\n                                class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                            >\n                                4\n                            </div>\n                            <div class=\"text-xl\">\n                                {{ 'WPA.CATERING' | translate }}\n                            </div>\n                            <div class=\"flex-1 w-px\"></div>\n                            <button\n                                icon\n                                name=\"toggle-catering-meeting\"\n                                matRipple\n                                (click)=\"\n                                    hide_block.catering = !hide_block.catering\n                                \"\n                            >\n                                <app-icon>{{\n                                    hide_block.catering\n                                        ? 'expand_more'\n                                        : 'expand_less'\n                                }}</app-icon>\n                            </button>\n                        </h3>\n                        <div\n                            class=\"overflow-hidden\"\n                            [@show]=\"hide_block.catering ? 'hide' : 'show'\"\n                        >\n                            <catering-list-field\n                                formControlName=\"catering\"\n                                [options]=\"{\n                                    date: form.value.date,\n                                    duration: form.value.duration,\n                                    all_day: form.value.all_day,\n                                    zone_id: form.value?.resources?.length\n                                        ? form.value?.resources[0]?.level\n                                              ?.parent_id\n                                        : ''\n                                }\"\n                            ></catering-list-field>\n                            <mat-form-field\n                                appearance=\"outline\"\n                                class=\"w-[calc(100%-1px)] mt-2\"\n                                *ngIf=\"\n                                    form.value.catering?.length && has_codes\n                                        | async\n                                \"\n                                (openedChange)=\"focusInput()\"\n                            >\n                                <mat-select\n                                    formControlName=\"catering_charge_code\"\n                                    placeholder=\"Charge Code\"\n                                >\n                                    <input\n                                        #input\n                                        class=\"sticky top-0 bg-base-100 px-4 py-3 text-base border-x-0 border-t-0 border-b focus:border-b border-base-200 w-full rounded-none z-50\"\n                                        [ngModel]=\"code_filter.getValue()\"\n                                        (ngModelChange)=\"\n                                            code_filter.next($event)\n                                        \"\n                                        [ngModelOptions]=\"{ standalone: true }\"\n                                        placeholder=\"Search charge codes...\"\n                                    />\n                                    <mat-option class=\"hidden\"></mat-option>\n                                    <mat-option\n                                        *ngFor=\"\n                                            let code of filtered_codes | async\n                                        \"\n                                        [value]=\"code\"\n                                    >\n                                        {{ code }}\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error>\n                                    Catering charge code is required\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-form-field\n                                appearance=\"outline\"\n                                class=\"w-[calc(100%-1px)]\"\n                                [class.mt-2]=\"\n                                    !(\n                                        form.value.catering?.length && has_codes\n                                        | async\n                                    )\n                                \"\n                                *ngIf=\"form.value.catering?.length\"\n                            >\n                                <textarea\n                                    matInput\n                                    formControlName=\"catering_notes\"\n                                    placeholder=\"Extra catering details...\"\n                                ></textarea>\n                                <mat-error>\n                                    Catering Order notes are required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </section>\n                    <section class=\"p-2\" *ngIf=\"has_assets\">\n                        <h3 class=\"space-x-2 flex items-center\">\n                            <div\n                                class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                            >\n                                {{ !(has_catering | async) ? '4' : '5' }}\n                            </div>\n                            <div class=\"text-xl\">\n                                {{ 'WPA.ASSETS' | translate }}\n                            </div>\n                            <div class=\"flex-1 w-px\"></div>\n                            <button\n                                icon\n                                name=\"toggle-assets-meeting\"\n                                matRipple\n                                (click)=\"hide_block.assets = !hide_block.assets\"\n                            >\n                                <app-icon>{{\n                                    hide_block.assets\n                                        ? 'expand_more'\n                                        : 'expand_less'\n                                }}</app-icon>\n                            </button>\n                        </h3>\n                        <div\n                            class=\"overflow-hidden\"\n                            [@show]=\"hide_block.assets ? 'hide' : 'show'\"\n                        >\n                            <asset-list-field\n                                [date]=\"form.value.date\"\n                                [duration]=\"form.value.duration\"\n                                formControlName=\"assets\"\n                            ></asset-list-field>\n                        </div>\n                    </section>\n                    <section class=\"p-2\" *ngIf=\"!hide_notes\">\n                        <h3 class=\"space-x-2 flex items-center mb-4\">\n                            <div\n                                class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                            >\n                                {{\n                                    !(has_catering | async) || !has_assets\n                                        ? !(has_catering | async) && !has_assets\n                                            ? '4'\n                                            : '5'\n                                        : '6'\n                                }}\n                            </div>\n                            <div class=\"text-xl\">\n                                {{ 'FORM.NOTES' | translate }}\n                            </div>\n                        </h3>\n                        <div class=\"w-full flex flex-col\">\n                            <label for=\"notes\">\n                                {{ 'WPA.NOTES_INFO' | translate }}\n                            </label>\n                            <rich-text-input\n                                name=\"notes\"\n                                formControlName=\"body\"\n                                placeholder=\"Notes...\"\n                            ></rich-text-input>\n                        </div>\n                    </section>\n                    <section\n                        class=\"flex flex-col sm:flex-row items-center sm:space-x-2 p-2\"\n                    >\n                        <button\n                            btn\n                            name=\"open-meeting-confirm\"\n                            matRipple\n                            confirm\n                            class=\"mb-2 sm:mb-0 w-full sm:w-auto\"\n                            (click)=\"viewConfirm()\"\n                        >\n                            {{ 'WPA.CONFIRM_MEETING' | translate }}\n                        </button>\n                        <button\n                            btn\n                            name=\"clear-form-meeting\"\n                            matRipple\n                            clear-form\n                            class=\"inverse w-full sm:w-auto\"\n                            (click)=\"clearForm()\"\n                        >\n                            { !!form.value.id, select, true { Reset } false {\n                            Clear } } {{ 'WPA.CLEAR_FORM' | translate }}\n                        </button>\n                    </section>\n                </form>\n            </div>\n        </div>\n    `,\n    styles: [],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class MeetingFlowFormComponent extends AsyncHandler {\n    public sheet_ref: MatBottomSheetRef<any>;\n    public dialog_ref: MatDialogRef<any>;\n    public hide_block: Record<string, boolean> = {};\n    public code_filter = new BehaviorSubject('');\n\n    public readonly has_catering = this._catering.available_menu.pipe(\n        map((l) => l.length > 0)\n    );\n\n    public readonly has_codes = this._catering.charge_codes.pipe(\n        map((l) => l.length > 0),\n        tap((has_codes) => {\n            if (!has_codes) {\n                this.form.get('catering_charge_code').setValidators([]);\n                this.form.updateValueAndValidity();\n            }\n        })\n    );\n\n    public readonly filtered_codes = combineLatest([\n        this.code_filter,\n        this._catering.charge_codes,\n    ]).pipe(\n        map(([s, l]) =>\n            l.filter((_) => _.toLowerCase().includes(s.toLowerCase()))\n        )\n    );\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public get has_assets() {\n        return !!this._settings.get('app.events.has_assets');\n    }\n\n    public get hide_notes() {\n        return !!this._settings.get('app.events.hide_notes');\n    }\n\n    public get hide_attendees() {\n        return !!this._settings.get('app.events.hide_attendees');\n    }\n\n    public get allow_externals() {\n        return this._settings.get('app.events.allow_externals');\n    }\n\n    public get strict_capacity_check() {\n        return this._settings.get('app.events.strict_capacity_check');\n    }\n\n    public get total_capacity() {\n        return (\n            this.form.value.resources?.reduce((c, i) => c + i.capacity, 0) || 0\n        );\n    }\n\n    public get attendee_count() {\n        const user = currentUser();\n        let count = this.form.value.attendees?.length || 0;\n        if (\n            !this.form.value.attendees.find(\n                (_) => _.email.toLowerCase() === user.email.toLowerCase()\n            )\n        ) {\n            count += 1;\n        }\n        return count;\n    }\n\n    public readonly clearForm = () => this._state.resetForm();\n\n    public readonly viewConfirm = () => {\n        if (!this.form.value.host)\n            this.form.patchValue({ host: currentUser()?.email });\n        if (\n            this.strict_capacity_check &&\n            this.attendee_count > this.total_capacity\n        ) {\n            return notifyError(\n                'Attendee count is greater than the capacity of the selected rooms'\n            );\n        }\n        this.form.markAllAsTouched();\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        if (\n            this._settings.get('app.events.no_standalone') &&\n            !this.form.value.resources.length\n        )\n            return notifyError('You need to select a room to make a booking');\n        if (this._settings.get('app.events.booking_unavailable'))\n            return this._state.openEventLinkModal();\n        if (window.innerWidth >= 768) {\n            this.dialog_ref = this._dialog.open(\n                MeetingFlowConfirmModalComponent\n            );\n            this.dialog_ref.componentInstance.show_close = true;\n            this.dialog_ref.afterClosed().subscribe((value) => {\n                if (value) {\n                    this.unsubWith('idle');\n                    this._router.navigate(['/book', 'meeting', 'success']);\n                    this._state.setView('success');\n                }\n            });\n        } else {\n            this.sheet_ref = this._bottom_sheet.open(\n                MeetingFlowConfirmComponent\n            );\n            this.sheet_ref.instance.show_close = true;\n            this.sheet_ref.afterDismissed().subscribe((value) => {\n                if (value) {\n                    this.unsubWith('idle');\n                    this._router.navigate(['/book', 'meeting', 'success']);\n                    this._state.setView('success');\n                }\n            });\n        }\n    };\n\n    @ViewChild('confirm_ref') private _confirm_ref: TemplateRef<any>;\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _state: EventFormService,\n        private _catering: CateringOrderStateService,\n        private _assets: AssetStateService,\n        private _settings: SettingsService,\n        private _router: Router,\n        private _dialog: MatDialog,\n        private _bottom_sheet: MatBottomSheet,\n        private _org: OrganisationService,\n        private _idle: UserIdleTimeService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'space_changes',\n            this.form.controls.resources.valueChanges.subscribe((l) =>\n                this._checkSubResourceEligibility(l)\n            )\n        );\n        this.subscription(\n            'date_changes',\n            this.form.controls.date.valueChanges.subscribe((l) =>\n                this._checkSubResourceEligibility(this.form.value.resources)\n            )\n        );\n        this.subscription(\n            'duration_changes',\n            this.form.controls.duration.valueChanges.subscribe((l) =>\n                this._checkSubResourceEligibility(this.form.value.resources)\n            )\n        );\n        this._catering.setOptions({ zone: '' });\n        this._checkSubResourceEligibility(this.form.value.resources || []);\n        this.subscription(\n            'idle-listen',\n            this._idle\n                .idleFor(\n                    (this._settings.get('app.idle_timeout') || 5) * 60 * 1000\n                )\n                .subscribe(async () => {\n                    this.unsub('idle');\n                    await openConfirmModal(\n                        {\n                            title: 'Idle Timeout',\n                            content: 'Your form data is out of date',\n                            icon: { content: 'update' },\n                            confirm_text: 'Refresh',\n                        },\n                        this._dialog\n                    );\n                    this._state.newForm();\n                    location.reload();\n                })\n        );\n    }\n\n    public focusInput() {\n        this.timeout(\n            'input-focus',\n            () => {\n                this._input_el.nativeElement.value = '';\n                this._input_el?.nativeElement?.focus();\n            },\n            300\n        );\n    }\n\n    public findAvailableTime() {\n        const { attendees, organiser, date, duration } = this.form.value;\n        const ref = this._dialog.open(FindAvailabilityModalComponent, {\n            data: {\n                users: attendees,\n                host: organiser || currentUser(),\n                date,\n                duration,\n            },\n        });\n        ref.afterClosed().subscribe((d) => {\n            if (!d) return;\n            this.form.patchValue({\n                date: ref.componentInstance.date,\n                attendees: ref.componentInstance.users.getValue(),\n                duration: ref.componentInstance.duration,\n            });\n        });\n    }\n\n    private async _checkSubResourceEligibility(list: Space[]) {\n        return Promise.all([\n            this._checkAssetsEligibility(list),\n            this._checkCateringEligibility(list),\n        ]);\n    }\n\n    private async _checkAssetsEligibility(list: Space[]) {\n        if (!list?.length) return this.form.controls.assets.disable();\n        await timer(100).toPromise();\n        const value = this.form.getRawValue();\n        this._assets.setOptions({\n            date: value.date,\n            duration: value.duration,\n            resources: list,\n            zone_id: this._org.levelWithID(list[0].zones)?.parent_id,\n            tags: [],\n            categories: [],\n        } as any);\n        await timer(500).toPromise();\n        const items = await this._assets.filtered_assets\n            .pipe(take(1))\n            .toPromise();\n        const disabled_rooms = await this._assets.disabled_rooms\n            .pipe(take(1))\n            .toPromise();\n        console.log('Disabled Rooms', disabled_rooms);\n        const can_cater = list.every(\n            (s) =>\n                items.filter(\n                    (_) =>\n                        !(_ as any).hide_for_zones?.find((z) =>\n                            s.zones.includes(z)\n                        )\n                ).length > 0\n        );\n        if (\n            !can_cater ||\n            disabled_rooms.find((_) => list.find((i) => i.id === _))\n        ) {\n            this.form.patchValue({ assets: [] });\n            this.form.controls.assets.disable();\n            notifyWarn(\n                `Assets are unavailable for some of the selected spaces.`\n            );\n        } else {\n            this.form.controls.assets.enable();\n        }\n    }\n\n    private async _checkCateringEligibility(list: Space[]) {\n        if (!list?.length) return this.form.controls.catering.disable();\n        await timer(100).toPromise();\n        const value = this.form.getRawValue();\n        this._catering.setFilters({\n            search: '',\n            date: value.date,\n            duration: value.duration,\n            resources: list,\n            zone_id: this._org.levelWithID(list[0].zones)?.parent_id,\n            tags: [],\n            categories: [],\n        });\n        await timer(500).toPromise();\n        const menu = await this._catering.filtered_menu\n            .pipe(take(1))\n            .toPromise();\n        const disabled_rooms = await this._catering.availability\n            .pipe(take(1))\n            .toPromise();\n        const can_cater = list.every(\n            (s) =>\n                menu.filter(\n                    (_) => !_.hide_for_zones.find((z) => s.zones.includes(z))\n                ).length > 0\n        );\n        if (\n            !can_cater ||\n            disabled_rooms.find((_) => list.find((i) => i.id === _))\n        ) {\n            this.form.patchValue({ catering: [] });\n            this.form.controls.catering.disable();\n            notifyWarn(\n                `Catering is unavailable for some of the selected spaces.`\n            );\n        } else {\n            this.form.controls.catering.enable();\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { SettingsService } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'meeting-flow-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col z-50 overflow-auto\"\n        >\n            <main\n                class=\"flex-1 flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <h2 class=\"text-2xl font-medium\">\n                    {{ 'WPA.BOOKING_CONFIRMED' | translate }}\n                </h2>\n                <img src=\"assets/icons/success.svg\" />\n                <p class=\"text-center max-w-[32rem]\" i18n>\n                    Your\n                    <span *ngIf=\"space\">\n                        room booking for\n                        {{ level?.display_name || level?.name\n                        }}<span *ngIf=\"level\">,</span>\n                        {{ space?.display_name || space?.name }}\n                    </span>\n                    <span *ngIf=\"!space\">meeting</span> has been successfully\n                    booked for {{ last_event.date | date: 'mediumDate'\n                    }}<span *ngIf=\"!last_event?.all_day\">\n                        at {{ last_event.date | date: time_format }}-{{\n                            last_event.date + last_event.duration * 60 * 1000\n                                | date: time_format\n                        }}</span\n                    >.\n                </p>\n                <p *ngIf=\"true\">\n                    Please allow up to 5 minutes for you booking to be approved.\n                </p>\n            </main>\n            <footer\n                class=\"sticky bottom-0 bg-base-100 p-2 w-full border-t border-base-200 mt-4 flex items-center justify-center\"\n            >\n                <a\n                    btn\n                    name=\"meeting-created-continue\"\n                    matRipple\n                    class=\"w-full max-w-[32rem]\"\n                    [routerLink]=\"['/']\"\n                >\n                    {{ 'WPA.BOOKING_DONE_CONTINUE' | translate }}\n                </a>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class MeetingFlowSuccessComponent {\n    public get last_event() {\n        return this._event_form.last_success;\n    }\n\n    public get space() {\n        return this.last_event.space;\n    }\n\n    public get level() {\n        return this._org.levelWithID(this.space?.zones);\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _event_form: EventFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'placeos-book-meeting-flow',\n    template: `\n        <div class=\"bg-base-100 h-full w-full z-50\" [ngSwitch]=\"view\">\n            <meeting-flow-success *ngSwitchCase=\"'success'\">\n            </meeting-flow-success>\n            <meeting-flow-confirm *ngSwitchCase=\"'confirm'\">\n            </meeting-flow-confirm>\n            <meeting-flow-form *ngSwitchDefault></meeting-flow-form>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class BookMeetingFlowComponent extends AsyncHandler implements OnInit {\n    public get view() {\n        return this._state.view;\n    }\n    public get last_success() {\n        return this._state.last_success;\n    }\n\n    constructor(\n        private _state: EventFormService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.loadForm();\n        this._state.listenForStatusChanges();\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((param) => {\n                if (param.has('step'))\n                    this._state.setView(param.get('step') as any);\n            })\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((param) => {\n                if (param.has('success')) this._state.setView('success');\n            })\n        );\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService, notifyError } from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { map, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'new-desk-flow-confirm',\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n                margin-top: 0.3rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    template: `\n        <button\n            icon\n            name=\"close-desk-confirm\"\n            matRipple\n            class=\"absolute right-2 top-2 bg-base-200\"\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-4 pt-4\">\n            <h2 class=\"text-2xl font-medium mb-2\" i18n>Confirm Desk Booking</h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 py-4 px-2\">\n            <app-icon class=\"text-success\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ booking.title || '~Untitled~' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>calendar_today</app-icon>\n                    <div date>{{ booking.date | date: 'fullDate' }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            booking.all_day\n                                ? 'All Day'\n                                : (booking.date | date: time_format) +\n                                  ' - ' +\n                                  (booking.date + booking.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            desk\n            class=\"flex space-x-1 py-4 px-2 border-t border-neutral\"\n            *ngIf=\"booking_asset?.id\"\n        >\n            <app-icon class=\"text-success\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 name>\n                    {{ booking_asset?.name || booking_asset?.id || '' }}\n                </h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>person</app-icon>\n                    <span i18n>{{\n                        (is_group | async) ? 'Multiple Desks' : 'Single desk'\n                    }}</span>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n                <ng-container *ngFor=\"let feat of booking_asset.features\">\n                    <div features class=\"flex items-center space-x-2\">\n                        <app-icon>arrow_upward</app-icon>\n                        <div>{{ feat }}</div>\n                    </div>\n                </ng-container>\n            </div>\n        </section>\n        <section\n            assets\n            class=\"flex space-x-1 py-4 px-2 border-t border-neutral\"\n            *ngIf=\"assets?.length\"\n        >\n            <app-icon class=\"text-success\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>{{ assets_count }} Asset(s)</h3>\n                <div class=\"flex space-x-2\" *ngFor=\"let asset of assets\">\n                    <div\n                        class=\"h-5 w-5 bg-base-200 rounded-full flex items-center justify-center\"\n                    >\n                        {{ asset.amount }}\n                    </div>\n                    <span>{{ asset.name }}</span>\n                </div>\n            </div>\n        </section>\n        <section\n            assets\n            class=\"flex space-x-1 py-4 px-2 border-t\"\n            *ngIf=\"needs_locker\"\n        >\n            <app-icon class=\"text-success\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>Requested Locker</h3>\n                <div class=\"flex space-x-2\">\n                    <span>Locker E-043</span>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                name=\"confirm-desk\"\n                btn\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n        </footer>\n    `,\n})\nexport class NewDeskFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._state.loading;\n    public readonly is_group = this._state.options.pipe(map((_) => _.group));\n\n    public readonly postForm = async () => {\n        try {\n            if ((await this._state.options.pipe(take(1)).toPromise())?.group) {\n                await this._state.postFormForGroup();\n            } else {\n                await this._state.postForm();\n            }\n            this.dismiss(true);\n        } catch (e) {\n            console.log('Booking Error:', e);\n            notifyError(\n                typeof e === 'string'\n                    ? e\n                    : `Desk unavailable at the selected time`\n            );\n        }\n    };\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    public get booking() {\n        return this._state.form.value as any;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get assets() {\n        return this.booking.assets || null;\n    }\n\n    public get needs_locker() {\n        return !!this.booking.secondary_resource;\n    }\n\n    public get assets_count() {\n        return this.assets?.length\n            ? this.assets.reduce((a, b) => a + b.amount, 0)\n            : 0;\n    }\n\n    public get booking_asset() {\n        return this.booking.booking_asset as Desk;\n    }\n\n    public get location() {\n        const building = this._org.buildings.find(\n            (b) => b.id === this.booking_asset?.zone?.parent_id\n        );\n        const level = this._org.levels.find(\n            (l) => l.id === this.booking_asset?.zone?.id\n        );\n        return `${level?.display_name || level?.name}${building ? ',' : ''} ${\n            building?.address || building?.display_name || building?.name || ''\n        }`;\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { addDays, endOfDay, set } from 'date-fns';\n\n@Component({\n    selector: 'new-desk-form-details',\n    styles: [],\n    template: `\n        <!-- <div class=\"m-2 bg-warning p-2 text-center rounded shadow text-sm\">\n            The selected desk hasn't been booked. Please book the desk to be\n            able to check-in.\n        </div> -->\n        <div\n            class=\"p-0 sm:py-4 sm:px-16 divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"flex items-center\" *ngIf=\"allow_groups\">\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-secondary]=\"!(options | async)?.group\"\n                    (click)=\"setOptions({ group: false, members: [] })\"\n                >\n                    <app-icon class=\"text-2xl\">person</app-icon>\n                    <div class=\"\" i18n>Single</div>\n                    <div\n                        class=\"absolute h-1 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-base-200]=\"(options | async)?.group\"\n                        [class.bg-secondary]=\"!(options | async)?.group\"\n                    ></div>\n                </button>\n                <button\n                    matRipple\n                    class=\"relative h-16 flex items-center justify-center flex-1 space-x-2\"\n                    [class.text-secondary]=\"(options | async)?.group\"\n                    (click)=\"setOptions({ group: true })\"\n                >\n                    <app-icon class=\"text-2xl\">group_add</app-icon>\n                    <div class=\"\" i18n>Group</div>\n                    <div\n                        class=\"absolute h-1 inset-x-0 bottom-0 !m-0\"\n                        [class.bg-base-200]=\"!(options | async)?.group\"\n                        [class.bg-secondary]=\"(options | async)?.group\"\n                    ></div>\n                </button>\n            </section>\n            <section class=\"p-2\" [class.!border-none]=\"allow_groups\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\" i18n>Details</div>\n                </h3>\n                <div\n                    class=\"w-full\"\n                    *ngIf=\"can_book_for_others && !(options | async)?.group\"\n                >\n                    <label for=\"title\">Host<span>*</span></label>\n                    <a-user-search-field\n                        formControlName=\"user\"\n                    ></a-user-search-field>\n                </div>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"title\">Add Title<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <input\n                                matInput\n                                name=\"title\"\n                                formControlName=\"title\"\n                                placeholder=\"e.g. Focus Time\"\n                            />\n                            <mat-error i18n\n                                >Booking title is required.</mat-error\n                            >\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px] relative\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field\n                            name=\"date\"\n                            formControlName=\"date\"\n                            [to]=\"end_date\"\n                            i18n\n                        >\n                            Date and time must be in the future\n                        </a-date-field>\n                        <mat-checkbox\n                            formControlName=\"all_day\"\n                            *ngIf=\"allow_all_day\"\n                            class=\"absolute -top-2 right-0\"\n                            i18n\n                        >\n                            All Day\n                        </mat-checkbox>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"!form.value.all_day\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"end-time\" i18n>\n                            End Time<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n                <div\n                    class=\"flex items-center space-x-2\"\n                    *ngIf=\"can_book_lockers\"\n                >\n                    <div class=\"flex-1 w-1/3\">\n                        <mat-checkbox\n                            [ngModel]=\"!!form.value.secondary_resource\"\n                            (ngModelChange)=\"\n                                form.patchValue({\n                                    secondary_resource: $event ? 'locker' : ''\n                                })\n                            \"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            i18n\n                        >\n                            Require locker\n                        </mat-checkbox>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"(options | async)?.group\">\n                <h3 class=\"space-x-2 flex items-center\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        2\n                    </div>\n                    <div class=\"text-xl\" i18n>Group Members</div>\n                    <div class=\"flex-1 w-px\"></div>\n                </h3>\n                <div class=\"overflow-hidden\">\n                    <a-user-list-field\n                        class=\"mt-4\"\n                        [ngModel]=\"(options | async)?.members || []\"\n                        (ngModelChange)=\"setOptions({ members: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                    ></a-user-list-field>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"form.contains('resources')\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 3 : 2 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Desk</div>\n                </h3>\n                <desk-list-field formControlName=\"resources\"></desk-list-field>\n                <p\n                    *ngIf=\"(options | async)?.group\"\n                    class=\"text-center rounded px-2 py-1 bg-warning shadow text-xs\"\n                >\n                    Desks nearby to the selected desk will booked for group\n                    members\n                </p>\n            </section>\n            <section class=\"p-2\" *ngIf=\"has_assets\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 4 : 3 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Request Asset</div>\n                </h3>\n                <asset-list-field\n                    [date]=\"form.value.date\"\n                    [duration]=\"form.value.duration\"\n                    formControlName=\"assets\"\n                ></asset-list-field>\n            </section>\n        </div>\n    `,\n})\nexport class NewDeskFormDetailsComponent extends AsyncHandler {\n    @Input() public form: FormGroup;\n    @Output() public find = new EventEmitter<void>();\n    /** List of available buildings to select */\n    public readonly buildings = this._org.building_list;\n    /** List of available levels for the selected building */\n    public readonly levels = this._org.active_levels;\n    /** List of set options for desk booking */\n    public readonly options = this._state.options;\n    /** List of set options for desk booking */\n    public readonly features = this._state.features;\n\n    public readonly force_time = set(Date.now(), {\n        hours: 6,\n        minutes: 0,\n    }).valueOf();\n\n    /** Selected desk for booking */\n    public selected_desk: Desk;\n    public from_id = false;\n\n    public readonly recurrence_options = ['daily', 'weekly', 'monthly'];\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    public get can_book_for_others() {\n        return this._settings.get('app.desks.can_book_for_others');\n    }\n\n    public get can_book_lockers() {\n        return this._settings.get('app.desks.can_book_lockers');\n    }\n    public get can_recurr() {\n        return this._settings.get('app.desks.recurrence_allowed');\n    }\n\n    public get allow_groups() {\n        return this._settings.get('app.desks.allow_groups');\n    }\n\n    public get has_assets() {\n        return !!this._settings.get('app.desks.has_assets');\n    }\n\n    public get needs_reason() {\n        return this._settings.get('app.desks.needs_reason') === true;\n    }\n\n    public get allow_time_changes() {\n        return !!this._settings.get('app.desks.allow_time_changes');\n    }\n\n    public get allow_all_day() {\n        return (\n            this.allow_time_changes &&\n            !!this._settings.get('app.desks.allow_all_day')\n        );\n    }\n\n    public get end_date() {\n        return endOfDay(\n            addDays(\n                Date.now(),\n                this._settings.get('app.desks.available_period') || 90\n            )\n        ).valueOf();\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.form && this.form) {\n            if (this.selected_desk?.id) {\n                this.form.patchValue({ resources: [this.selected_desk] });\n            }\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\nimport {\n    getInvalidFields,\n    notifyError,\n    SettingsService,\n} from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { isBefore, startOfMinute } from 'date-fns';\nimport { first } from 'rxjs/operators';\nimport { NewDeskFlowConfirmComponent } from './new-desk-flow-confirm.component';\n\n@Component({\n    selector: 'new-desk-flow-form',\n    styles: [],\n    template: `\n        <div class=\"h-full w-full bg-base-200 overflow-auto\">\n            <div\n                class=\"max-w-full w-[48rem] mx-auto sm:my-4 bg-base-100 border border-base-200\"\n            >\n                <h2\n                    class=\"w-full p-4 sm:py-4 sm:px-16 text-2xl font-medium border-b border-base-200\"\n                    i18n\n                >\n                    Book Desk\n                </h2>\n                <new-desk-form-details [form]=\"form\"></new-desk-form-details>\n                <div class=\"sm:mb-2 border-b border-base-200 w-full\"></div>\n                <section\n                    class=\"flex flex-col sm:flex-row items-center sm:space-x-2 p-2 sm:px-16 sm:mb-2\"\n                >\n                    <button\n                        btn\n                        name=\"open-desk-confirm\"\n                        matRipple\n                        confirm\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"viewConfirm()\"\n                        i18n\n                    >\n                        Confirm Desk\n                    </button>\n                </section>\n            </div>\n        </div>\n    `,\n})\nexport class NewDeskFlowFormComponent implements OnInit {\n    public sheet_ref: MatBottomSheetRef<any>;\n    public level = '';\n    public levels = [];\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this.level = this._org.building.id;\n        this._state.clearForm();\n    };\n\n    public readonly viewConfirm = () => {\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(NewDeskFlowConfirmComponent);\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._state.setView('success');\n                this._router.navigate(['/book', 'new-desks', 'success']);\n            }\n        });\n    };\n\n    constructor(\n        private _state: BookingFormService,\n        private _router: Router,\n        private _org: OrganisationService,\n        private _bottom_sheet: MatBottomSheet,\n        private _settings: SettingsService\n    ) {}\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _));\n        await this._org.active_levels.pipe(first((_) => _?.length > 0));\n        this._state.setOptions({ type: 'desk' });\n        this.level = this._org.building?.id;\n        this.levels = [\n            { id: this._org.building?.id, name: 'Any Level' },\n            ...this._org.levelsForBuilding(this._org.building),\n        ];\n        if (isBefore(this.form.value.date, Date.now())) {\n            this.form.patchValue({ date: startOfMinute(Date.now()).valueOf() });\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { SettingsService } from '@placeos/common';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\n\n@Component({\n    selector: 'new-desk-flow-success',\n    styles: [],\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col z-50 overflow-auto\"\n        >\n            <main\n                class=\"flex-1 flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <h2 class=\"text-2xl font-medium text-center\" i18n>\n                    {{ last_event.asset_name || last_event.asset_id\n                    }}{{ location }} Booked!\n                </h2>\n                <img src=\"assets/icons/success.svg\" />\n                <p class=\"text-center\" i18n>\n                    Your\n                    <span group *ngIf=\"last_event?.attendees?.length\">\n                        group of\n                        {{ last_event?.attendees?.length + 1 }}\n                    </span>\n                    desk{{ last_event?.attendees?.length ? 's' : '' }} has been\n                    successfully booked\n                    <span\n                        assets\n                        *ngIf=\"last_event?.extension_data?.assets?.length\"\n                    >\n                        including\n                        {{ last_event?.extension_data?.assets?.length }}\n                        asset(s)\n                    </span>\n                    for {{ last_event.date | date: 'mediumDate' }}\n                    <span *ngIf=\"!last_event?.all_day\">\n                        at {{ last_event.date | date: time_format }}-{{\n                            last_event.date + last_event.duration * 60 * 1000\n                                | date: time_format\n                        }}</span\n                    >.\n                </p>\n                <p *ngIf=\"true\">\n                    Please allow up to 5 minutes for you booking to be approved.\n                </p>\n                <div\n                    class=\"flex flex-col items-center space-y-4 p-4 relative\"\n                    *ngIf=\"show_links\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        name=\"desk-outlook-link\"\n                        class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                        [href]=\"outlook_link | sanitize: 'url'\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferer\"\n                    >\n                        <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                        <span i18n>Add to Outlook</span>\n                    </a>\n                    <a\n                        btn\n                        matRipple\n                        name=\"desk-google-link\"\n                        class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                        [href]=\"google_link | sanitize: 'url'\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferer\"\n                    >\n                        <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                        <span i18n>Add to Google Calendar</span>\n                    </a>\n                    <a\n                        btn\n                        matRipple\n                        name=\"desk-ical-link\"\n                        class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                        [href]=\"ical_link | safe: 'url'\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferer\"\n                    >\n                        <app-icon class=\"text-xl\">download</app-icon>\n                        <span i18n>Download iCal File</span>\n                    </a>\n                </div>\n            </main>\n            <footer\n                class=\"sticky bottom-0 p-2 w-full border-t bg-base-100 border-base-200 mt-4 flex items-center justify-center\"\n            >\n                <a\n                    btn\n                    name=\"desk-confirm-continue\"\n                    matRipple\n                    class=\"w-full max-w-[32rem] mx-auto\"\n                    [routerLink]=\"['/']\"\n                    i18n\n                >\n                    Great, thanks!\n                </a>\n            </footer>\n        </div>\n    `,\n})\nexport class NewDeskFlowSuccessComponent {\n    public outlook_link = '';\n    public google_link = '';\n    public ical_link = '';\n    public get location() {\n        const desk = this.last_event?.extension_data?.booking_asset;\n        if (!desk) return '';\n        return desk.zone\n            ? `, ${desk.zone.display_name || desk.zone.name || desk.zone.id}`\n            : '';\n    }\n\n    public get last_event() {\n        return this._state.last_success;\n    }\n\n    public get show_links() {\n        return this._settings.get('app.desks.show_calendar_links');\n    }\n\n    public readonly viewCalendarLinks = () =>\n        this._state.openBookingLinkModal();\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        this.outlook_link = generateMicrosoftCalendarLink(\n            this.last_event as any\n        );\n        this.google_link = generateGoogleCalendarLink(this.last_event as any);\n        this.ical_link = generateCalendarFileLink(this.last_event as any);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, notifyInfo } from '@placeos/common';\nimport { Desk, OrganisationService } from '@placeos/organisation';\nimport { first, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'placeos-new-book-desk-flow',\n    template: `\n        <div class=\"bg-base-100 h-full w-full z-50\">\n            <ng-container [ngSwitch]=\"view\">\n                <ng-container *ngSwitchCase=\"'success'\">\n                    <new-desk-flow-success></new-desk-flow-success>\n                </ng-container>\n                <ng-container *ngSwitchDefault>\n                    <new-desk-flow-form></new-desk-flow-form>\n                </ng-container>\n            </ng-container>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class NewDeskFlowComponent extends AsyncHandler implements OnInit {\n    public get view() {\n        return this._state.view;\n    }\n    public get last_success() {\n        return this._state.last_success;\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _route: ActivatedRoute,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _)).toPromise();\n        this._state.loadForm();\n        this._state.setOptions({ type: 'desk' });\n        this._state.form.patchValue({ booking_type: 'desk' });\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((param) => {\n                if (param.has('step'))\n                    this._state.setView(param.get('step') as any);\n            })\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('success')) {\n                    this._state.setView(params.get('success') as any);\n                }\n                if (params.has('asset_id')) {\n                    const id = params.get('asset_id');\n                    const resources = await this._state.resources\n                        .pipe(take(1))\n                        .toPromise();\n                    let asset = resources.find((_) => _.id === id);\n                    if (!asset) {\n                        return notifyInfo(\n                            'Unable to find desk with given asset ID.'\n                        );\n                    }\n                    this._state.form.patchValue({\n                        resources: [\n                            new Desk({\n                                id: asset.id,\n                                name: asset.name || asset.id,\n                            }),\n                        ],\n                    });\n                }\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'placeos-book-space-flow',\n    template: `\n        <div class=\"bg-base-200 h-full w-full overflow-auto\">\n            <div\n                class=\"w-full h-full sm:h-auto max-w-[48rem] mx-auto sm:my-4 bg-base-100 shadow border border-base-200 overflow-hidden\"\n            >\n                <invite-visitor-form (done)=\"onDone()\"></invite-visitor-form>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: relative;\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class VisitorFlowComponent {\n    constructor(private _router: Router) {}\n\n    public onDone() {\n        this._router.navigate(['/']);\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'new-parking-flow-confirm',\n    template: ` <button\n            close\n            icon\n            matRipple\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 class=\"text-2xl font-medium mb-2\" i18n>\n                Confirm Parking Reservation\n            </h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 py-4 px-2\">\n            <app-icon class=\"text-success\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ booking.title || '~Untitled~' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>calendar_today</app-icon>\n                    <div date>{{ booking.date | date: 'fullDate' }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            booking.all_day\n                                ? 'All Day'\n                                : (booking.date | date: time_format) +\n                                  ' - ' +\n                                  (booking.date + booking.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            resource\n            class=\"flex space-x-1 py-4 px-2 border-t\"\n            *ngIf=\"booking_asset?.id\"\n        >\n            <app-icon class=\"text-success\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 name>\n                    {{ booking_asset?.name || booking_asset?.id || '' }}\n                </h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>person</app-icon>\n                    <span i18n>Car Park</span>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n                <ng-container *ngFor=\"let feat of booking_asset.features\">\n                    <div features class=\"flex items-center space-x-2\">\n                        <app-icon>arrow_upward</app-icon>\n                        <div>{{ feat }}</div>\n                    </div>\n                </ng-container>\n            </div>\n        </section>\n        <section\n            assets\n            class=\"flex space-x-1 py-4 px-2 border-t\"\n            *ngIf=\"assets?.length\"\n        >\n            <app-icon class=\"text-success\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>{{ assets_count }} Asset(s)</h3>\n                <div class=\"flex space-x-2\" *ngFor=\"let asset of assets\">\n                    <div class=\"h-5 w-5 bg-base-200 rounded-full\">\n                        {{ asset.amount }}\n                    </div>\n                    <span>{{ asset.name }}</span>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                confirm\n                btn\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n        </footer>`,\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n                margin-top: 0.3rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n})\nexport class NewParkingFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._state.loading;\n\n    public readonly postForm = async () => {\n        await this._state.postForm();\n        this.dismiss(true);\n    };\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking() {\n        return this._state.form.value as any;\n    }\n\n    public get assets() {\n        return this.booking.assets || null;\n    }\n\n    public get assets_count() {\n        return this.assets?.length\n            ? this.assets.reduce((a, b) => a + b.amount, 0)\n            : 0;\n    }\n\n    public get booking_asset() {\n        return this.booking.booking_asset;\n    }\n\n    public get location() {\n        const building = this._org.buildings.find(\n            (b) => b.id === this.booking_asset?.zone?.parent_id\n        );\n        const level = this._org.levels.find(\n            (l) => l.id === this.booking_asset?.zone?.id\n        );\n        return `${level?.display_name || level?.name}${building ? ',' : ''} ${\n            building?.address || building?.display_name || building?.name || ''\n        }`;\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BookingAsset } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'parking-form-details',\n    template: `\n        <div *ngIf=\"form\" [formGroup]=\"form\">\n            <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"title\" i18n>Building<span>*</span></label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <mat-select\n                            [ngModel]=\"building | async\"\n                            (ngModelChange)=\"setBuilding($event)\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                        >\n                            <mat-option\n                                *ngFor=\"let bld of building_list | async\"\n                                [value]=\"bld\"\n                            >\n                                {{ bld.display_name || bld.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error i18n>Building is required</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"title\" i18n>Add Title<span>*</span></label>\n                    <mat-form-field appearance=\"outline\" class=\"w-full\">\n                        <input\n                            matInput\n                            name=\"title\"\n                            formControlName=\"title\"\n                            placeholder=\"e.g. Team Meeting\"\n                        />\n                        <mat-error i18n>Meeting title is required.</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex-1 min-w-[256px]\">\n                    <label for=\"date\" i18n>Date<span>*</span></label>\n                    <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                        Date and time must be in the future\n                    </a-date-field>\n                </div>\n            </div>\n            <div class=\"flex items-center space-x-2\">\n                <div class=\"flex-1 w-1/3\">\n                    <label for=\"start-time\" i18n\n                        >Start Time<span>*</span></label\n                    >\n                    <a-time-field\n                        name=\"start-time\"\n                        [ngModel]=\"form.value.date\"\n                        (ngModelChange)=\"form.patchValue({ date: $event })\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [use_24hr]=\"use_24hr\"\n                    ></a-time-field>\n                </div>\n                <div class=\"flex-1 w-1/3 relative\">\n                    <label for=\"end-time\" i18n>End Time<span>*</span></label>\n                    <a-duration-field\n                        name=\"end-time\"\n                        formControlName=\"duration\"\n                        [time]=\"form?.value?.date\"\n                        [max]=\"max_duration\"\n                        [use_24hr]=\"use_24hr\"\n                    >\n                    </a-duration-field>\n                    <mat-checkbox\n                        formControlName=\"all_day\"\n                        *ngIf=\"allow_all_day\"\n                        class=\"absolute -top-2 right-0\"\n                        i18n\n                    >\n                        All Day\n                    </mat-checkbox>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ParkingFormDetailsComponent extends AsyncHandler {\n    @Input() public form: FormGroup;\n\n    public readonly building = this._org.active_building;\n    public readonly building_list = this._org.building_list;\n\n    public get max_duration() {\n        return this._settings.get('app.bookings.max_duration') || 480;\n    }\n\n    public get allow_all_day() {\n        return this._settings.get('app.bookings.allow_all_day');\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _settings: SettingsService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n}\n","import { Component } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\nimport {\n    ANIMATION_SHOW_CONTRACT_EXPAND,\n    AsyncHandler,\n    getInvalidFields,\n    notifyError,\n    SettingsService,\n} from '@placeos/common';\nimport { NewParkingFlowConfirmComponent } from './parking-flow-confirm.component';\n\n@Component({\n    selector: 'parking-flow-form',\n    template: `\n        <div class=\"h-full w-full bg-base-200 overflow-auto\">\n            <div\n                class=\"max-w-full w-[48rem] mx-auto sm:my-4 bg-base-100 border border-base-200\"\n            >\n                <h2\n                    class=\"w-full p-4 sm:py-4 sm:px-16 text-2xl font-medium border-b border-base-200\"\n                    i18n\n                >\n                    {{ form.value.id ? 'Edit' : 'Book' }} Parking Reservation\n                </h2>\n                <form\n                    class=\"p-0 sm:py-4 sm:px-16 divide-y divide-base-200 space-y-2\"\n                    [formGroup]=\"form\"\n                >\n                    <section class=\"p-2\">\n                        <h3 class=\"space-x-2 flex items-center\">\n                            <div\n                                class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                            >\n                                1\n                            </div>\n                            <div class=\"text-xl\" i18n>Details</div>\n                            <div class=\"flex-1 w-px\"></div>\n                            <button\n                                icon\n                                matRipple\n                                (click)=\"\n                                    hide_block.details = !hide_block.details\n                                \"\n                            >\n                                <app-icon>{{\n                                    hide_block.details\n                                        ? 'expand_more'\n                                        : 'expand_less'\n                                }}</app-icon>\n                            </button>\n                        </h3>\n                        <div\n                            class=\"overflow-hidden\"\n                            [@show]=\"hide_block.details ? 'hide' : 'show'\"\n                        >\n                            <parking-form-details\n                                class=\"mt-4\"\n                                [form]=\"form\"\n                            ></parking-form-details>\n                        </div>\n                    </section>\n                    <section class=\"p-2\">\n                        <h3 class=\"space-x-2 flex items-center\">\n                            <div\n                                class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                            >\n                                2\n                            </div>\n                            <div class=\"text-xl\" i18n>Space</div>\n                            <div class=\"flex-1 w-px\"></div>\n                            <button\n                                icon\n                                matRipple\n                                (click)=\"hide_block.space = !hide_block.space\"\n                            >\n                                <app-icon>{{\n                                    hide_block.space\n                                        ? 'expand_more'\n                                        : 'expand_less'\n                                }}</app-icon>\n                            </button>\n                        </h3>\n                        <div\n                            class=\"overflow-hidden\"\n                            [@show]=\"hide_block.space ? 'hide' : 'show'\"\n                        >\n                            <parking-space-list-field\n                                formControlName=\"resources\"\n                            ></parking-space-list-field>\n                        </div>\n                    </section>\n                    <section\n                        class=\"flex flex-col sm:flex-row items-center sm:space-x-2 p-2\"\n                    >\n                        <button\n                            btn\n                            matRipple\n                            confirm\n                            class=\"mb-2 sm:mb-0 w-full sm:w-auto\"\n                            (click)=\"viewConfirm()\"\n                            i18n\n                        >\n                            Confirm Reservation\n                        </button>\n                        <button\n                            btn\n                            matRipple\n                            clear-form\n                            class=\"inverse w-full sm:w-auto\"\n                            (click)=\"clearForm()\"\n                            i18n\n                        >\n                            {{ form.value.id ? 'Reset' : 'Clear' }} Form\n                        </button>\n                    </section>\n                </form>\n            </div>\n        </div>\n    `,\n    styles: [``],\n    animations: [ANIMATION_SHOW_CONTRACT_EXPAND],\n})\nexport class ParkingFlowFormComponent extends AsyncHandler {\n    public hide_block: Record<string, boolean> = {};\n    public sheet_ref: any;\n\n    public readonly clearForm = () => this._state.resetForm();\n\n    public get form() {\n        return this._state.form;\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService,\n        private _router: Router,\n        private _bottom_sheet: MatBottomSheet\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.setOptions({ type: 'parking' });\n    }\n\n    public readonly viewConfirm = () => {\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(\n            NewParkingFlowConfirmComponent\n        );\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'new-parking', 'success']);\n                this._state.setView('success');\n            }\n        });\n    };\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { SettingsService } from '@placeos/common';\n\n@Component({\n    selector: 'parking-flow-success',\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col z-50 overflow-auto\"\n        >\n            <main\n                class=\"flex-1 flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <h2 class=\"text-2xl font-medium\" i18n>\n                    Parking Space Confirmed!\n                </h2>\n                <p class=\"text-center max-w-[32rem]\" i18n>\n                    Your\n                    <span>\n                        parking space reservation for\n                        {{ last_event.asset_name }} at {{ location }}, </span\n                    >has been successfully booked for the\n                    {{ last_event.date | date: 'mediumDate' }} at\n                    {{ last_event.date | date: time_format }}-{{\n                        last_event.date + last_event.duration * 60 * 1000\n                            | date: time_format\n                    }}.\n                </p>\n                <img src=\"assets/icons/parking-success.svg\" />\n            </main>\n            <footer\n                class=\"sticky bottom-0 bg-base-100 p-2 w-full border-t border-base-200 mt-4 flex items-center justify-center\"\n            >\n                <a\n                    button\n                    btn\n                    matRipple\n                    class=\"w-full max-w-[32rem]\"\n                    [routerLink]=\"['/']\"\n                    i18n\n                >\n                    Great, thanks!\n                </a>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class ParkingFlowSuccessComponent {\n    public get location() {\n        const resource = this.last_event?.extension_data?.booking_asset;\n        if (!resource) return '';\n        return resource.zone\n            ? `, ${\n                  resource.zone.display_name ||\n                  resource.zone.name ||\n                  resource.zone.id\n              }`\n            : '';\n    }\n\n    public get last_event() {\n        return this._state.last_success;\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler } from '@placeos/common';\n\n@Component({\n    selector: 'placeos-new-parking-flow',\n    template: `\n        <div class=\"bg-base-100 h-full w-full z-50\" [ngSwitch]=\"view\">\n            <parking-flow-success *ngSwitchCase=\"'success'\">\n            </parking-flow-success>\n            <parking-flow-confirm *ngSwitchCase=\"'confirm'\">\n            </parking-flow-confirm>\n            <parking-flow-form *ngSwitchDefault></parking-flow-form>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class NewParkingFlowComponent extends AsyncHandler implements OnInit {\n    public get view() {\n        return this._state.view;\n    }\n    public get last_success() {\n        return this._state.last_success;\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.loadForm();\n        if (!this._state.form) this._state.newForm();\n        this._state.setOptions({ type: 'parking' });\n        this._state.form.patchValue({ booking_type: 'parking' });\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((param) => {\n                if (param.has('step'))\n                    this._state.setView(param.get('step') as any);\n            })\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((param) => {\n                if (param.has('success')) this._state.setView('success');\n            })\n        );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'code-flow-success',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100 flex flex-col z-50\">\n            <main\n                class=\"flex-1 flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <h2 class=\"text-2xl font-medium\">\n                    {{ 'WPA.RESOURCE_CHECKED_IN' | translate }}\n                </h2>\n                <img src=\"assets/icons/success.svg\" />\n                <p class=\"text-center max-w-[32rem]\">\n                    {{ 'WPA.CHECKED_IN' | translate }}\n                </p>\n            </main>\n            <footer\n                class=\"p-2 w-full border-t border-base-200 mt-4 flex items-center justify-center\"\n            >\n                <a\n                    btn\n                    matRipple\n                    class=\"w-full max-w-[32rem]\"\n                    [routerLink]=\"['/']\"\n                >\n                    {{ 'WPA.BOOKING_DONE_CONTINUE' | translate }}\n                </a>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class CodeFlowSuccessComponent {}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler } from '@placeos/common';\n\nconst VALID_TYPES = ['not_started', 'wrong_resource', 'other'];\n\n@Component({\n    selector: 'code-flow-success',\n    template: `\n        <div class=\"absolute inset-0 bg-base-100 flex flex-col z-50\">\n            <main\n                class=\"flex-1 flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <h2 class=\"text-2xl font-medium\">\n                    {{ 'WPA.RESOURCE_CHECKED_IN_FAILED' | translate }}\n                </h2>\n                <div class=\"py-4\">\n                    <img src=\"assets/icons/not-found.svg\" class=\"h-64\" />\n                </div>\n                <p class=\"text-center max-w-[32rem]\" [ngSwitch]=\"type\">\n                    <ng-container *ngSwitchCase=\"'not_started'\">\n                        Booking has not started yet. Please try again once the\n                        booking has commenced.\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"'wrong_resource'\">\n                        You have booking with a difference resource.\n                    </ng-container>\n                    <ng-container *ngSwitchDefault>\n                        You do not have a booking. Would you like to book the\n                        set resource?\n                    </ng-container>\n                </p>\n            </main>\n            <footer\n                class=\"p-2 w-full border-t border-base-200 mt-4 flex items-center justify-center space-x-2\"\n            >\n                <a\n                    btn\n                    matRipple\n                    class=\"w-full max-w-[32rem]\"\n                    [routerLink]=\"['/book', 'code']\"\n                    [queryParams]=\"{ asset_id: asset_id }\"\n                    *ngIf=\"type === 'not_started'\"\n                >\n                    {{ 'WPA.TRY_AGAIN' | translate }}\n                </a>\n                <a\n                    btn\n                    matRipple\n                    class=\"w-full max-w-[32rem]\"\n                    [routerLink]=\"['/book', 'new-desk']\"\n                    [queryParams]=\"{ asset_id: asset_id }\"\n                    *ngIf=\"type === 'no_booking'\"\n                >\n                    {{ 'WPA.BOOK' | translate }}\n                </a>\n                <a\n                    button\n                    btn\n                    matRipple\n                    class=\"w-full max-w-[32rem] inverse\"\n                    [routerLink]=\"['/']\"\n                >\n                    {{ 'COMMON.CONTINUE' | translate }}\n                </a>\n            </footer>\n        </div>\n    `,\n    styles: [``],\n})\nexport class CodeFlowErrorComponent extends AsyncHandler {\n    public type = 'other';\n    public asset = null;\n    public asset_id = '';\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _state: BookingFormService\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((params) => {\n                this.type = params.get('type') as any;\n                this.asset_id = params.get('asset_id') as any;\n            })\n        );\n    }\n}\n","import { Component, Input, Optional } from '@angular/core';\nimport { MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { BookingAsset, BookingFormService } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService, notifyError } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { take } from 'rxjs/operators';\n\n@Component({\n    selector: 'locker-flow-confirm',\n    styles: [\n        `\n            section > app-icon {\n                font-size: 1.5rem;\n                margin-top: 0.3rem;\n            }\n\n            h3 {\n                font-size: 1.25rem;\n                font-weight: medium;\n                margin: 0.5rem 0;\n            }\n        `,\n    ],\n    template: `\n        <button\n            icon\n            name=\"close-locker-confirm\"\n            matRipple\n            *ngIf=\"show_close\"\n            (click)=\"dismiss()\"\n        >\n            <app-icon>close</app-icon>\n        </button>\n        <header class=\"flex items-center justify-between px-2\">\n            <h2 class=\"text-2xl font-medium mb-2\" i18n>\n                Confirm Locker Booking\n            </h2>\n            <mat-spinner diameter=\"32\" *ngIf=\"loading | async\"></mat-spinner>\n        </header>\n        <section period class=\"flex space-x-1 py-4 px-2\">\n            <app-icon class=\"text-success\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3>{{ booking.title || '~Untitled~' }}</h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>calendar_today</app-icon>\n                    <div date>{{ booking.date | date: 'fullDate' }}</div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>schedule</app-icon>\n                    <div time>\n                        {{\n                            booking.all_day\n                                ? 'All Day'\n                                : (booking.date | date: time_format) +\n                                  ' - ' +\n                                  (booking.date + booking.duration * 60 * 1000\n                                      | date: time_format + ' (z)')\n                        }}\n                    </div>\n                </div>\n            </div>\n        </section>\n        <section\n            locker\n            class=\"flex space-x-1 py-4 px-2 border-t\"\n            *ngIf=\"booking_asset?.id\"\n        >\n            <app-icon class=\"text-success\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 name>\n                    {{ booking_asset?.name || booking_asset?.id || '' }}\n                </h3>\n                <div class=\"flex items-center space-x-2\">\n                    <app-icon>place</app-icon>\n                    <div>{{ location }}</div>\n                </div>\n                <ng-container *ngFor=\"let feat of booking_asset.features\">\n                    <div features class=\"flex items-center space-x-2\">\n                        <app-icon>arrow_upward</app-icon>\n                        <div>{{ feat }}</div>\n                    </div>\n                </ng-container>\n            </div>\n        </section>\n        <section\n            assets\n            class=\"flex space-x-1 py-4 px-2 border-t\"\n            *ngIf=\"assets?.length\"\n        >\n            <app-icon class=\"text-success\">done</app-icon>\n            <div details class=\"leading-6\">\n                <h3 i18n>{{ assets_count }} Asset(s)</h3>\n                <div class=\"flex space-x-2\" *ngFor=\"let asset of assets\">\n                    <div class=\"h-5 w-5 bg-base-200 rounded-full\">\n                        {{ asset.amount }}\n                    </div>\n                    <span>{{ asset.name }}</span>\n                </div>\n            </div>\n        </section>\n        <footer class=\"p-2 w-full border-t border-base-200 mt-4\">\n            <button\n                name=\"confirm-locker\"\n                btn\n                matRipple\n                class=\"w-full\"\n                *ngIf=\"!(loading | async)\"\n                (click)=\"postForm()\"\n                i18n\n            >\n                Confirm\n            </button>\n        </footer>\n    `,\n})\nexport class BookLockerFlowConfirmComponent extends AsyncHandler {\n    @Input() public show_close: boolean = false;\n\n    public readonly loading = this._state.loading;\n\n    public readonly postForm = async () => {\n        try {\n            if ((await this._state.options.pipe(take(1)).toPromise())?.group) {\n                await this._state.postFormForGroup();\n            } else {\n                await this._state.postForm();\n            }\n            this.dismiss(true);\n        } catch (e) {\n            notifyError(e);\n        }\n    };\n    public readonly dismiss = (e?) => this._sheet_ref?.dismiss(e);\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public get booking() {\n        return this._state.form.value as any;\n    }\n\n    public get assets() {\n        return this.booking.assets || null;\n    }\n\n    public get assets_count() {\n        return this.assets?.length\n            ? this.assets.reduce((a, b) => a + b.amount, 0)\n            : 0;\n    }\n\n    public get booking_asset() {\n        return this.booking.booking_asset as BookingAsset;\n    }\n\n    public get location() {\n        const building = this._org.buildings.find(\n            (b) => b.id === this.booking_asset?.zone?.parent_id\n        );\n        const level = this._org.levels.find(\n            (l) => l.id === this.booking_asset?.zone?.id\n        );\n        return `${level?.display_name || level?.name}${building ? ',' : ''} ${\n            building?.address || building?.display_name || building?.name || ''\n        }`;\n    }\n\n    constructor(\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        @Optional() private _sheet_ref: MatBottomSheetRef,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BookingFormService, Locker } from '@placeos/bookings';\nimport { AsyncHandler, SettingsService } from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\n\n@Component({\n    selector: 'new-locker-form-details',\n    styles: [],\n    template: `\n        <div\n            class=\"p-0 sm:py-4 sm:px-16 divide-y divide-base-200 space-y-2\"\n            *ngIf=\"form\"\n            [formGroup]=\"form\"\n        >\n            <section class=\"p-2\" [class.!border-none]=\"allow_groups\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        1\n                    </div>\n                    <div class=\"text-xl\" i18n>Details</div>\n                </h3>\n                <div class=\"flex items-center flex-wrap sm:space-x-2\">\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\" i18n>Building<span>*</span></label>\n                        <mat-form-field appearance=\"outline\" class=\"w-full\">\n                            <mat-select\n                                [(ngModel)]=\"building\"\n                                [ngModelOptions]=\"{ standalone: true }\"\n                                placeholder=\"Select Building\"\n                            >\n                                <mat-option\n                                    *ngFor=\"let b of buildings | async\"\n                                    [value]=\"b\"\n                                >\n                                    {{ b.display_name || b.name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex-1 min-w-[256px]\">\n                        <label for=\"date\" i18n>Date<span>*</span></label>\n                        <a-date-field name=\"date\" formControlName=\"date\" i18n>\n                            Date and time must be in the future\n                        </a-date-field>\n                    </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                    <div class=\"flex-1 w-1/3\">\n                        <label for=\"start-time\" i18n>\n                            Start Time<span>*</span>\n                        </label>\n                        <a-time-field\n                            name=\"start-time\"\n                            [ngModel]=\"form.value.date\"\n                            (ngModelChange)=\"form.patchValue({ date: $event })\"\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [use_24hr]=\"use_24hr\"\n                            [disabled]=\"form.value.duration > 24 * 60 - 1\"\n                        ></a-time-field>\n                    </div>\n                    <div class=\"flex-1 w-1/3 relative\">\n                        <label for=\"end-time\" i18n>\n                            End Time<span>*</span>\n                        </label>\n                        <a-duration-field\n                            name=\"end-time\"\n                            formControlName=\"duration\"\n                            [time]=\"form.get('date')?.value\"\n                            [max]=\"10 * 60\"\n                            [min]=\"60\"\n                            [step]=\"60\"\n                            [use_24hr]=\"use_24hr\"\n                            [custom_options]=\"custom_durations\"\n                        >\n                        </a-duration-field>\n                    </div>\n                </div>\n            </section>\n            <section class=\"p-2\" *ngIf=\"form.contains('resources')\">\n                <h3 class=\"space-x-2 flex items-center mb-4\">\n                    <div\n                        class=\"bg-base-200 rounded-full h-6 w-6 flex items-center justify-center\"\n                    >\n                        {{ (options | async)?.group ? 3 : 2 }}\n                    </div>\n                    <div class=\"text-xl\" i18n>Locker</div>\n                </h3>\n                <locker-list-field\n                    formControlName=\"resources\"\n                ></locker-list-field>\n            </section>\n        </div>\n    `,\n})\nexport class LockerFormDetailsComponent extends AsyncHandler {\n    @Input() public form: FormGroup;\n    @Output() public find = new EventEmitter<void>();\n    /** List of available buildings to select */\n    public readonly buildings = this._org.building_list;\n    /** List of available levels for the selected building */\n    public readonly levels = this._org.active_levels;\n    /** List of set options for locker booking */\n    public readonly options = this._state.options;\n    /** List of set options for locker booking */\n    public readonly features = this._state.features;\n\n    /** Selected locker for booking */\n    public selected_locker: Locker;\n    public from_id = false;\n    public custom_durations = [];\n\n    public readonly recurrence_options = ['daily', 'weekly', 'monthly'];\n\n    public get building() {\n        return this._org.building;\n    }\n    public set building(bld) {\n        this._org.building = bld;\n    }\n\n    public get use_24hr() {\n        return this._settings.get('app.use_24_hour_time');\n    }\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    public readonly setFeature = (f, e) => this._state.setFeature(f, e);\n\n    constructor(\n        private _state: BookingFormService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n    }\n\n    public ngOnChanges(changes: SimpleChanges) {\n        if (changes.form && this.form) {\n            this.subscription(\n                'change',\n                this.form\n                    .get('resources')\n                    ?.valueChanges?.subscribe((list) =>\n                        list?.length ? this.setBookingAsset(list[0]) : ''\n                    )\n            );\n            this.subscription(\n                'date',\n                this.form\n                    .get('date')\n                    ?.valueChanges?.subscribe((d) =>\n                        this._setCustomDateOptions()\n                    )\n            );\n            this._setCustomDateOptions();\n        }\n    }\n\n    private _setCustomDateOptions() {\n        for (const i of [1, 2, 3, 4, 5, 6, 7]) {\n            this.custom_durations.push(i * 24 * 60);\n        }\n    }\n\n    private setBookingAsset(locker: Locker) {\n        this._state.form.patchValue({ asset_id: undefined });\n        if (!locker) return;\n        this.selected_locker = locker;\n        this._state.form.patchValue({\n            asset_id: locker?.id,\n            asset_name: locker.name,\n            map_id: locker?.bank_id || locker?.id,\n            description: locker.name,\n            booking_type: 'locker',\n            zones: [this.building.id],\n            booking_asset: locker,\n        });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n    MatBottomSheet,\n    MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\nimport { Router } from '@angular/router';\nimport { BookingFormService } from '@placeos/bookings';\nimport {\n    getInvalidFields,\n    notifyError,\n    SettingsService,\n} from '@placeos/common';\nimport { OrganisationService } from '@placeos/organisation';\nimport { isBefore, startOfMinute } from 'date-fns';\nimport { first } from 'rxjs/operators';\nimport { BookLockerFlowConfirmComponent } from './locker-flow-confirm.component';\n\n@Component({\n    selector: 'locker-flow-form',\n    styles: [],\n    template: `\n        <div class=\"h-full w-full bg-base-200 overflow-auto\">\n            <div\n                class=\"max-w-full w-[48rem] mx-auto sm:my-4 bg-base-100 border border-base-200\"\n            >\n                <h2\n                    class=\"w-full p-4 sm:py-4 sm:px-16 text-2xl font-medium border-b border-base-200\"\n                    i18n\n                >\n                    Book Locker\n                </h2>\n                <new-locker-form-details\n                    [form]=\"form\"\n                ></new-locker-form-details>\n                <div class=\"sm:mb-2 border-b border-base-200 w-full\"></div>\n                <section\n                    class=\"flex flex-col sm:flex-row items-center sm:space-x-2 p-2 sm:px-16 sm:mb-2\"\n                >\n                    <button\n                        btn\n                        name=\"open-locker-confirm\"\n                        matRipple\n                        confirm\n                        class=\"w-full sm:w-auto\"\n                        (click)=\"viewConfirm()\"\n                        i18n\n                    >\n                        Confirm Locker\n                    </button>\n                </section>\n            </div>\n        </div>\n    `,\n})\nexport class BookLockerFlowFormComponent implements OnInit {\n    public sheet_ref: MatBottomSheetRef<any>;\n    public level = '';\n    public levels = [];\n\n    public get form() {\n        return this._state.form;\n    }\n\n    public readonly clearForm = () => {\n        this.level = this._org.building.id;\n        this._state.clearForm();\n    };\n\n    public readonly viewConfirm = () => {\n        if (!this.form.valid)\n            return notifyError(\n                `Some fields are invalid. [${getInvalidFields(this.form).join(\n                    ', '\n                )}]`\n            );\n        this.sheet_ref = this._bottom_sheet.open(\n            BookLockerFlowConfirmComponent\n        );\n        this.sheet_ref.instance.show_close = true;\n        this.sheet_ref.afterDismissed().subscribe((value) => {\n            if (value) {\n                this._router.navigate(['/book', 'locker', 'success']);\n                this._state.setView('success');\n            }\n        });\n    };\n\n    constructor(\n        private _state: BookingFormService,\n        private _router: Router,\n        private _org: OrganisationService,\n        private _bottom_sheet: MatBottomSheet,\n        private _settings: SettingsService\n    ) {}\n\n    public async ngOnInit() {\n        await this._org.initialised.pipe(first((_) => _));\n        await this._org.active_levels.pipe(first((_) => _?.length > 0));\n        this._state.setOptions({ type: 'locker' });\n        this.level = this._org.building?.id;\n        this.levels = [\n            { id: this._org.building?.id, name: 'Any Level' },\n            ...this._org.levelsForBuilding(this._org.building),\n        ];\n        if (isBefore(this.form.value.date, Date.now())) {\n            this.form.patchValue({ date: startOfMinute(Date.now()).valueOf() });\n        }\n    }\n}\n","import { Component } from '@angular/core';\nimport { BookingFormService } from '@placeos/bookings';\nimport { SettingsService } from '@placeos/common';\nimport {\n    generateCalendarFileLink,\n    generateGoogleCalendarLink,\n    generateMicrosoftCalendarLink,\n} from 'libs/common/src/lib/calendar-links';\n\n@Component({\n    selector: 'locker-flow-success',\n    styles: [],\n    template: `\n        <div\n            class=\"absolute inset-0 bg-base-100 flex flex-col z-50 overflow-auto\"\n        >\n            <main\n                class=\"flex-1 flex flex-col items-center justify-center space-y-2 p-8\"\n            >\n                <h2 class=\"text-2xl font-medium text-center\" i18n>\n                    {{ last_event.asset_name || last_event.asset_id\n                    }}{{ location }} Booked!\n                </h2>\n                <img src=\"assets/icons/locker-success.svg\" />\n                <p class=\"text-center\" i18n>\n                    Your\n                    <span group *ngIf=\"last_event?.attendees?.length\">\n                        group of\n                        {{ last_event?.attendees?.length + 1 }}\n                    </span>\n                    locker{{ last_event?.attendees?.length ? 's' : '' }} has\n                    been successfully booked\n                    <span\n                        assets\n                        *ngIf=\"last_event?.extension_data?.assets?.length\"\n                    >\n                        including\n                        {{ last_event?.extension_data?.assets?.length }}\n                        asset(s)\n                    </span>\n                    for the\n                    {{ last_event.date | date: 'mediumDate' }} at\n                    {{ last_event.date | date: time_format }}-{{\n                        last_event.date + last_event.duration * 60 * 1000\n                            | date: time_format\n                    }}.\n                </p>\n                <div\n                    class=\"flex flex-col items-center space-y-4 p-4 relative\"\n                    *ngIf=\"show_links\"\n                >\n                    <a\n                        btn\n                        matRipple\n                        name=\"locker-outlook-link\"\n                        class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                        [href]=\"outlook_link | sanitize: 'url'\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferer\"\n                    >\n                        <img src=\"assets/icons/outlook.svg\" class=\"w-6\" />\n                        <span i18n>Add to Outlook</span>\n                    </a>\n                    <a\n                        btn\n                        matRipple\n                        name=\"locker-google-link\"\n                        class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                        [href]=\"google_link | sanitize: 'url'\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferer\"\n                    >\n                        <img src=\"assets/icons/gcal.svg\" class=\"w-6\" />\n                        <span i18n>Add to Google Calendar</span>\n                    </a>\n                    <a\n                        btn\n                        matRipple\n                        name=\"locker-ical-link\"\n                        class=\"flex items-center p-2 space-x-2 pr-4 w-64 rounded inverse\"\n                        [href]=\"ical_link | safe: 'url'\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferer\"\n                    >\n                        <app-icon class=\"text-xl\">download</app-icon>\n                        <span i18n>Download iCal File</span>\n                    </a>\n                </div>\n            </main>\n            <footer\n                class=\"sticky bottom-0 bg-base-100 p-2 w-full border-t border-base-200 mt-4 flex items-center justify-center\"\n            >\n                <a\n                    btn\n                    name=\"locker-confirm-continue\"\n                    matRipple\n                    class=\"w-full max-w-[32rem] mx-auto\"\n                    [routerLink]=\"['/']\"\n                    i18n\n                >\n                    Great, thanks!\n                </a>\n            </footer>\n        </div>\n    `,\n})\nexport class BookLockerFlowSuccessComponent {\n    public outlook_link = '';\n    public google_link = '';\n    public ical_link = '';\n    public get location() {\n        const locker = this.last_event?.extension_data?.booking_asset;\n        if (!locker) return '';\n        return locker.zone\n            ? `, ${\n                  locker.zone.display_name || locker.zone.name || locker.zone.id\n              }`\n            : '';\n    }\n\n    public get last_event() {\n        return this._state.last_success;\n    }\n\n    public get show_links() {\n        return this._settings.get('app.lockers.show_calendar_links');\n    }\n\n    public get time_format() {\n        return this._settings.time_format;\n    }\n\n    public readonly viewCalendarLinks = () =>\n        this._state.openBookingLinkModal();\n\n    constructor(\n        private _state: BookingFormService,\n        private _settings: SettingsService\n    ) {}\n\n    public ngOnInit() {\n        this.outlook_link = generateMicrosoftCalendarLink(\n            this.last_event as any\n        );\n        this.google_link = generateGoogleCalendarLink(this.last_event as any);\n        this.ical_link = generateCalendarFileLink(this.last_event as any);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AsyncHandler } from '@placeos/common';\nimport { EventFormService } from '@placeos/events';\n\n@Component({\n    selector: 'placeos-book-locker-flow',\n    template: `\n        <div class=\"bg-base-100 h-full w-full z-50\" [ngSwitch]=\"view\">\n            <locker-flow-success *ngSwitchCase=\"'success'\">\n            </locker-flow-success>\n            <locker-flow-confirm *ngSwitchCase=\"'confirm'\">\n            </locker-flow-confirm>\n            <locker-flow-form *ngSwitchDefault></locker-flow-form>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n        `,\n    ],\n})\nexport class BookLockerFlowComponent extends AsyncHandler implements OnInit {\n    public get view() {\n        return this._state.view;\n    }\n    public get last_success() {\n        return this._state.last_success;\n    }\n\n    constructor(\n        private _state: EventFormService,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._state.loadForm();\n        this._state.listenForStatusChanges();\n        this.subscription(\n            'route.params',\n            this._route.paramMap.subscribe((param) => {\n                if (param.has('step'))\n                    this._state.setView(param.get('step') as any);\n            })\n        );\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe((param) => {\n                if (param.has('success')) this._state.setView('success');\n            })\n        );\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\n\nimport { SharedExploreModule } from '@placeos/explore';\nimport { SharedBookingsModule } from '@placeos/bookings';\nimport { SharedCateringModule } from '@placeos/catering';\n\nimport { BookComponent } from './book.component';\nimport { BookCodeFlowComponent } from './code-flow.component';\nimport { BookDeskFlowComponent } from './desk-flow.component';\nimport { DeskFlowConfirmComponent } from './desk-flow/confirm.component';\nimport { DeskFlowFormComponent } from './desk-flow/form.component';\nimport { DeskFlowDetailedFormComponent } from './desk-flow/detailed-form.component';\nimport { DeskFlowMapComponent } from './desk-flow/map.component';\nimport { FlowSuccessComponent } from './flow-success.component';\nimport { BookSpaceFlowComponent } from './space-flow.component';\nimport { SpaceFlowConfirmComponent } from './space-flow/confirm.component';\nimport { DetailBookSpaceFormComponent } from './space-flow/detailed-form.component';\nimport { SpaceFlowFindItemComponent } from './space-flow/find-item.component';\nimport { SpaceFlowFindComponent } from './space-flow/find.component';\nimport { SpaceFlowFormComponent } from './space-flow/form.component';\nimport { SharedComponentModule } from '../components/shared.module';\nimport { BookParkingFlowComponent } from './parking-flow.component';\nimport { ParkingFlowMapComponent } from './parking-flow/parking-flow-map.component';\nimport { ParkingFlowConfirmComponent } from './parking-flow/parking-flow-confirm.component';\nimport { BookMeetingFlowComponent } from './meeting-flow.component';\nimport { MeetingFlowFormComponent } from './meeting-flow/meeting-flow-form.component';\nimport { MeetingFormDetailsComponent } from './meeting-flow/meeting-form-details.component';\nimport { MeetingFlowConfirmComponent } from './meeting-flow/meeting-flow-confirm.component';\nimport { MeetingFlowSuccessComponent } from './meeting-flow/meeting-flow-success.component';\nimport { NewDeskFlowComponent } from './new-desk-flow.component';\nimport { NewDeskFlowFormComponent } from './new-desk-flow/new-desk-flow-form.component';\nimport { NewDeskFormDetailsComponent } from './new-desk-flow/new-desk-form-details.component';\nimport { NewDeskFlowConfirmComponent } from './new-desk-flow/new-desk-flow-confirm.component';\nimport { NewDeskFlowSuccessComponent } from './new-desk-flow/new-desk-flow-success.component';\nimport { VisitorFlowComponent } from './visitor-flow.component';\nimport { NewParkingFlowComponent } from './new-parking-flow.component';\nimport { ParkingFlowFormComponent } from './new-parking-flow/parking-flow-form.component';\nimport { ParkingFlowSuccessComponent } from './new-parking-flow/parking-flow-success.component';\nimport { ParkingFormDetailsComponent } from './new-parking-flow/parking-form-details.component';\nimport { MeetingFlowConfirmModalComponent } from './meeting-flow/meeting-flow-confirm-modal.component';\nimport { NewParkingFlowConfirmComponent } from './new-parking-flow/parking-flow-confirm.component';\nimport { CodeFlowSuccessComponent } from './code-flow-success.component';\nimport { CodeFlowErrorComponent } from './code-flow-error.component';\nimport { BookLockerFlowComponent } from './locker-flow.component';\nimport { BookLockerFlowSuccessComponent } from './locker-flow/locker-flow-success.component';\nimport { BookLockerFlowFormComponent } from './locker-flow/locker-flow-form.component';\nimport { BookLockerFlowConfirmComponent } from './locker-flow/locker-flow-confirm.component';\nimport { LockerFormDetailsComponent } from './locker-flow/locker-form-details.component';\n\nconst ROUTES: Route[] = [\n    {\n        path: '',\n        component: BookComponent,\n        children: [\n            { path: 'code', component: BookCodeFlowComponent },\n            { path: 'code/success', component: CodeFlowSuccessComponent },\n            { path: 'code/error', component: CodeFlowErrorComponent },\n            { path: 'new-desk', redirectTo: 'new-desks/form' },\n            { path: 'new-desks', redirectTo: 'new-desks/form' },\n            { path: 'new-desks/:step', component: NewDeskFlowComponent },\n            { path: 'new-desk', redirectTo: 'new-desks/form' },\n            { path: 'desks', redirectTo: 'desks/form' },\n            { path: 'desks/:step', component: BookDeskFlowComponent },\n            { path: 'spaces', redirectTo: 'spaces/form' },\n            { path: 'spaces/:step', component: BookSpaceFlowComponent },\n            { path: 'meeting', redirectTo: 'meeting/form' },\n            { path: 'meeting/:step', component: BookMeetingFlowComponent },\n            { path: 'parking', redirectTo: 'parking/form' },\n            { path: 'parking/:step', component: BookParkingFlowComponent },\n            { path: 'new-parking', redirectTo: 'new-parking/form' },\n            { path: 'new-parking/:step', component: NewParkingFlowComponent },\n            { path: 'visitor', redirectTo: 'visitor/form' },\n            { path: 'visitor/:step', component: VisitorFlowComponent },\n            { path: 'locker', redirectTo: 'locker/form' },\n            { path: 'locker/:step', component: BookLockerFlowComponent },\n            { path: '*', redirectTo: 'spaces/form' },\n        ],\n    },\n    { path: '*', redirectTo: 'spaces/form' },\n];\n\n@NgModule({\n    declarations: [\n        BookComponent,\n        BookSpaceFlowComponent,\n        SpaceFlowFormComponent,\n        SpaceFlowFindComponent,\n        SpaceFlowFindItemComponent,\n        SpaceFlowConfirmComponent,\n        DetailBookSpaceFormComponent,\n        BookDeskFlowComponent,\n        DeskFlowFormComponent,\n        DeskFlowDetailedFormComponent,\n        DeskFlowMapComponent,\n        DeskFlowConfirmComponent,\n        BookCodeFlowComponent,\n        CodeFlowSuccessComponent,\n        CodeFlowErrorComponent,\n        BookParkingFlowComponent,\n        ParkingFlowMapComponent,\n        ParkingFlowConfirmComponent,\n        FlowSuccessComponent,\n        BookMeetingFlowComponent,\n        MeetingFlowFormComponent,\n        MeetingFormDetailsComponent,\n        MeetingFlowConfirmComponent,\n        MeetingFlowConfirmModalComponent,\n        MeetingFlowSuccessComponent,\n        NewDeskFlowFormComponent,\n        NewDeskFormDetailsComponent,\n        NewDeskFlowComponent,\n        NewDeskFlowConfirmComponent,\n        NewDeskFlowSuccessComponent,\n        VisitorFlowComponent,\n\n        NewParkingFlowComponent,\n        ParkingFlowFormComponent,\n        NewParkingFlowConfirmComponent,\n        ParkingFlowSuccessComponent,\n        ParkingFormDetailsComponent,\n\n        BookLockerFlowComponent,\n        BookLockerFlowFormComponent,\n        BookLockerFlowConfirmComponent,\n        BookLockerFlowSuccessComponent,\n        LockerFormDetailsComponent,\n    ],\n    imports: [\n        CommonModule,\n        SharedComponentModule,\n        FormsModule,\n        SharedCateringModule,\n        SharedExploreModule,\n        ReactiveFormsModule,\n        MatButtonToggleModule,\n        MatBottomSheetModule,\n        SharedBookingsModule,\n        RouterModule.forChild(ROUTES),\n    ],\n})\nexport class BookModule {}\n"],"x_google_ignoreList":[17]}