{"version":3,"sources":["/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-search.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-desk-info.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-booking-modal.component.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/compareAsc/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInCalendarMonths/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInMonths/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/differenceInSeconds/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/_lib/cloneObject/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/_lib/assign/index.js","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/formatDistance/index.js","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-device-info.component.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/date-fns/esm/formatDistanceToNow/index.js","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-map-view.component.ts","./src/app/bookings/space-flow/space-flow.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-space-info.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-search.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-state.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore.module.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-spaces.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-zoom-control.component.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-zones.service.ts","/home/runner/work/user-interfaces/user-interfaces/node_modules/@angular/material/__ivy_ngcc__/fesm2015/slide-toggle.js","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-desks.service.ts","/home/runner/work/user-interfaces/user-interfaces/libs/explore/src/lib/explore-map-control.component.ts"],"names":["ExploreSearchComponent","_search","_router","_route","super","show","search_str","results","this","search_results","loading","setFilter","s","setItem","i","Object","select","_input_el","nativeElement","timeout","focus","e","blur","item","name","query","type","id","navigate","relativeTo","queryParams","closeSearch","showSearch","ExploreDeskInfoComponent","_details","_element","map_id","user","start","end","tries","setTimeout","parent","parentElement","ngOnInit","position","parseInt","style","top","left","y_pos","x_pos","ExploreBookingModalComponent","_data","_calendars","_events","_dialog_ref","booking","attendees","space","resource","form","markAllAsTouched","on_error","msg","disableClose","valid","list","key","controls","invalid","push","Promise","reject","join","availability","system_ids","resources","value","map","period_start","Math","floor","date","period_end","duration","catch","length","save","display_name","close","compareAsc","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","diff","getTime","differenceInCalendarMonths","yearDiff","getFullYear","monthDiff","getMonth","differenceInMonths","sign","difference","abs","setMonth","isLastMonthNotFull","result","differenceInSeconds","differenceInMilliseconds","ceil","cloneObject","dirtyObject","target","TypeError","property","hasOwnProperty","MINUTES_IN_DAY","MINUTES_IN_MONTH","formatDistance","dirtyDate","dirtyBaseDate","dirtyOptions","options","locale","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","months","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","round","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","ExploreDeviceInfoComponent","username","mac","manufacturer","os","ssid","variance","toFixed","diameter","bg_color","onEnter","loadUser","onClick","onTouch","Date","now","formatDistanceToNow","last_seen","console","log","mod","system","details","execute","_","assigned_to","ExploreMapViewComponent","_state","_s","_desks","_zones","_spaces","_users","_org","url","map_url","styles","map_styles","positions","map_positions","features","map_features","actions","map_actions","labels","map_labels","setOptions","o","initialised","pipe","toPromise","subscription","queryParamMap","subscribe","params","has","setLevel","get","find","locateSpace","locateUser","setFeatures","levelWithID","zones","feature","location","content","data","message","locate_details","organisation","bindings","location_services","system_id","module","locations","email","sort","a","b","priority","indexOf","level","radius","clearEventFormState","sessionStorage","removeItem","localStorage","SpaceFlowService","_calendar","_staff","_dialog","_event","_form","_filters","_loading_spaces","_loading_event","event","asObservable","filters","loading_spaces","loading_event","spaces","next","getValue","valueOf","building","zone_ids","then","filter","capacity","clearState","setEvent","nearestTo","storeState","setValue","ref","open","width","height","componentInstance","reason","metadata","JSON","stringify","toJSON","event_data","getItem","parse","form_data","patchValue","filter_data","organiser","host","current","title","values","ExploreSpaceInfoComponent","events","status","ExploreSearchService","_space_list","_user_list","_filter","_loading","description","u","localeCompare","space_list","user_list","filter_str","toLowerCase","includes","users","q","str","ExploreStateService","_settings","_level","_positions","zoom","center","x","y","_styles","_features","_actions","_labels","_options","lvl","show_zones","concat","reduce","style_mappings","keys","h","display","active_building","bld","level_list","levelsForBuilding","zone_id","style_map","feature_map","actions_map","labels_map","SharedExploreModule","DEFAULT_COLOURS","free","pending","reserved","busy","unknown","ExploreSpacesService","_bookings","_bindings","_statuses","clearBindings","bindToSpaces","ngOnDestroy","unsub","forEach","unbind","binding","listen","d","handleBookingsChange","bind","handleStatusChange","updateActions","updateHoverElements","bookings","bookable","clearTimeout","updateStatus","colours","fill","opacity","setStyles","hover","action","callback","bookSpace","setActions","ExploreZoomControlComponent","zoomIn","setPositions","min","zoomOut","max","reset","ExploreZonesService","_location","_capacity","init","zone_metadata","all","levels","zone","areas","area","properties","label_location","bindToZones","buildings","parent_id","area_management","parseData","filled","count","area_id","setLabels","_c0","_c1","_c2","_c3","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","providedIn","factory","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","provide","useExisting","MatSlideToggle","multi","MatSlideToggleChange","source","checked","MatSlideToggleBase","_elementRef","_MatSlideToggleMixinBase","elementRef","_focusMonitor","_changeDetectorRef","tabIndex","defaults","_animationMode","_onChange","_onTouched","_uniqueId","_required","_checked","labelPosition","ariaLabel","ariaLabelledby","change","toggleChange","markForCheck","monitor","focusOrigin","_inputElement","resolve","stopMonitoring","stopPropagation","emit","_emitChangeEvent","fn","isDisabled","disabled","focusVia","detectChanges","ɵfac","t","ɵcmp","selectors","viewQuery","rf","ctx","_t","_thumbEl","first","_thumbBarEl","hostAttrs","hostVars","hostBindings","inputs","disableRipple","color","required","outputs","exportAs","ngContentSelectors","decls","vars","consts","template","$event","_onChangeEvent","_onInputClick","_onLabelTextChange","_r0","_r4","inputId","textContent","trim","toString","directives","encapsulation","changeDetection","_MatSlideToggleRequiredValidatorModule","ɵmod","ɵinj","MatSlideToggleModule","imports","ExploreDesksService","_in_use","_reserved","_stats","occupied","total","bindToDesks","desks","in_use","is_used","some","is_reserved","devices","v","at_location","processDevices","desk_id","device","map_width","map_height","coordinates_from","sqrt","pow","desk","ExploreMapControlComponent","building_list","active_levels","setBuilding"],"mappings":"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","file":"default~bookings-bookings-module~explore-explore-module.819a7d5f800c2d4cd0d2.js","sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BaseClass } from '@user-interfaces/common';\n\nimport { ExploreSearchService } from './explore-search.service';\n\nexport interface SearchResult {\n    id: string;\n    type: 'feature' | 'space' | 'user';\n    name: string;\n    description: string;\n}\n\n@Component({\n    selector: 'explore-search',\n    template: `\n        <div class=\"fixed inset-0 z-0\" [class.hide]=\"!show\" (click)=\"show = false\"></div>\n        <div\n            role=\"search\"\n            tabindex=\"0\"\n            matRipple\n            class=\"bg-white m-2 flex items-center z-10 relative overflow-hidden\"\n            [class.show]=\"show || search_str\"\n        >\n            <app-icon\n                class=\"text-2xl\"\n                tabindex=\"0\"\n                (click)=\"show ? closeSearch($event) : showSearch()\"\n                className=\"material-icons\"\n            >\n                {{ show || search_str ? 'close' : 'search' }}\n            </app-icon>\n            <input\n                #input\n                class=\"flex-1 text-base\"\n                [(ngModel)]=\"search_str\"\n                (ngModelChange)=\"setItem($event)\"\n                placeholder=\"Search for...\"\n                (blur)=\"show = !!search_str\"\n                [matAutocomplete]=\"auto\"\n                [matAutocompleteConnectedTo]=\"origin\"\n            />\n            <mat-spinner *ngIf=\"loading | async\" class=\"mr-2\" [diameter]=\"32\"></mat-spinner>\n            <div\n                name=\"anchor\"\n                class=\"absolute bottom-0\"\n                matAutocompleteOrigin\n                #origin=\"matAutocompleteOrigin\"\n            ></div>\n        </div>\n        <mat-autocomplete #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of results | async\" [value]=\"option\">\n                <div class=\"flex items-center leading-tight\">\n                    <div class=\"flex-1 overflow-hidden\">\n                        <div class=\"truncate w-full\">{{ option.name }}</div>\n                        <div class=\"text-xs\">{{ option.description }}</div>\n                    </div>\n                    <div class=\"text-xs font-bold p-2 capitalize text-white bg-gray-500 rounded\">\n                        {{ option.type }}\n                    </div>\n                </div>\n            </mat-option>\n        </mat-autocomplete>\n    `,\n    styles: [\n        `\n            :host {\n                z-index: 99;\n            }\n\n            [role='search'] {\n                height: 3.125rem;\n                width: 3.125rem;\n                border-radius: 1.5rem;\n                border: 1px solid #ccc;\n                outline: none;\n                transition: width 200ms;\n            }\n\n            app-icon {\n                outline: none;\n                margin: .55rem;\n            }\n\n            [role='search'].show {\n                width: 32rem;\n                max-width: calc(100vw - 1rem);\n                border-color: #1e88e5;\n            }\n\n            [name='anchor'] {\n                left: 2rem;\n                right: 2rem;\n            }\n\n            input {\n                border: none;\n                outline: none;\n            }\n\n            .hide {\n                display: none;\n            }\n        `,\n    ],\n})\nexport class ExploreSearchComponent extends BaseClass {\n    public show: boolean = false;\n    public search_str: string = '';\n    public readonly results = this._search.search_results;\n    public readonly loading = this._search.loading;\n    public readonly setFilter = (s) => this._search.setFilter(s);\n    public readonly setItem = (i) => (i instanceof Object ? this.select(i) : this.setFilter(i));\n\n    @ViewChild('input') private _input_el: ElementRef<HTMLInputElement>;\n\n    constructor(\n        private _search: ExploreSearchService,\n        private _router: Router,\n        private _route: ActivatedRoute\n    ) {\n        super();\n    }\n\n    public showSearch() {\n        this.show = true;\n        if (this._input_el?.nativeElement) {\n            this.timeout('focus', () => this._input_el.nativeElement.focus(), 200);\n        }\n    }\n\n    public closeSearch(e?: any) {\n        this.show = false;\n        this.search_str = '';\n        if (this._input_el?.nativeElement) {\n            this._input_el.nativeElement.focus();\n            this._input_el.nativeElement.blur();\n        }\n    }\n\n    public select(item: SearchResult) {\n        this.search_str = item.name;\n        const query: any = {};\n        query[item.type || 'space'] = item.id;\n        this._router.navigate([], { relativeTo: this._route, queryParams: query });\n    }\n}\n","import { Component, ElementRef, Inject, OnInit } from '@angular/core';\n\nimport { MAP_FEATURE_DATA } from '@user-interfaces/components';\n\nexport interface SpaceInfoData {\n    map_id: string;\n    user: string;\n    start?: number;\n    end?: number;\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-desk-info',\n    template: `\n        <div\n            name=\"space-info\"\n            [id]=\"map_id\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <h4 class=\"m-0 font-medium\">{{ map_id }}</h4>\n                <p class=\"mt-2 text-sm\" *ngIf=\"user\">{{ user }}</p>\n                <p class=\"mt-1 text-sm\" *ngIf=\"start\">\n                    {{ start | date: 'shortTime' }} &ndash;\n                    {{ end | date: 'shortTime' }}\n                </p>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreDeskInfoComponent implements OnInit {\n    /** Space to display details for */\n    public readonly map_id = this._details.map_id;\n    public readonly user = this._details.user;\n    public readonly start = this._details.start;\n    public readonly end = this._details.end;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { notifyError, notifySuccess } from '@user-interfaces/common';\nimport { CalendarEvent, EventsService, generateEventForm } from '@user-interfaces/events';\nimport { Space } from '@user-interfaces/spaces';\nimport { CalendarService } from '@user-interfaces/calendar';\n\nexport interface ExploreBookingModalData {\n    space: Space;\n}\n\n@Component({\n    selector: 'explore-booking-modal',\n    template: `\n        <header>\n            <h2>New Booking</h2>\n            <div class=\"flex-1\"></div>\n            <button *ngIf=\"!loading\" mat-icon-button mat-dialog-close>\n                <app-icon className=\"material-icons\">close</app-icon>\n            </button>\n        </header>\n        <ng-container *ngIf=\"!loading; else load_state\">\n            <main [formGroup]=\"form\" class=\"p-4\">\n                <div class=\"flex flex-col\">\n                    <label>Title<span>*</span>:</label>\n                    <mat-form-field appearance=\"outline\">\n                        <input matInput formControlName=\"title\" placeholder=\"Booking Title\" />\n                        <mat-error>Booking title is required</mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"flex flex-col\">\n                    <label>Space:</label>\n                    <div class=\"sm:mt-4 mb-4\">{{ form.controls.resources?.value[0].display_name || form.controls.resources?.value[0].name }}</div>\n                </div>\n                <div class=\"flex sm:space-x-4 flex-wrap\">\n                    <div class=\"flex flex-col\">\n                        <label>Date:</label>\n                        <div class=\"sm:mt-4 mb-4\">{{ form.controls.date?.value | date:'medium' }}</div>\n                    </div>\n                    <div class=\"flex flex-col\">\n                        <label>Duration:</label>\n                        <a-duration-field formControlName=\"duration\"></a-duration-field>\n                    </div>\n                </div>\n            </main>\n            <footer class=\"flex justify-center p-2 border-t border-gray-200\">\n                <button mat-button (click)=\"save()\">Save</button>\n            </footer>\n        </ng-container>\n        <ng-template #load_state>\n            <div class=\"w-full h-64 flex flex-col items-center justify-center\">\n                <mat-spinner class=\"m-4\" [diameter]=\"48\"></mat-spinner>\n                <p>{{ loading }}</p>\n            </div>\n        </ng-template>\n    `,\n    styles: [`\n        header {\n            max-width: calc(100vw + 100%);\n        }\n    `],\n})\nexport class ExploreBookingModalComponent {\n    public booking: CalendarEvent;\n    public form: FormGroup;\n    public loading: string;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private _data: ExploreBookingModalData,\n        private _calendars: CalendarService,\n        private _events: EventsService,\n        private _dialog_ref: MatDialogRef<ExploreBookingModalComponent>\n    ) {}\n\n    public ngOnInit() {\n        this.booking = new CalendarEvent({\n            attendees: [{ ...this._data.space, resource: true } as any],\n        });\n        this.form = generateEventForm(this.booking);\n    }\n\n    public async save() {\n        this.form.markAllAsTouched();\n        const on_error = (msg) => {\n            this.loading = '';\n            notifyError(msg);\n            this._dialog_ref.disableClose = false;\n        }\n        if (!this.form.valid) {\n            const list = [];\n            for (const key in this.form.controls) {\n                if (this.form.controls[key].invalid) {\n                    list.push(key);\n                }\n            }\n            return Promise.reject(on_error(`Some form fields are not valid: [${list.join(', ')}]`));\n        }\n        this._dialog_ref.disableClose = true;\n        this.loading = 'Checking space availability...';\n        const spaces = await this._calendars.availability({\n            system_ids: this.form.controls.resources.value?.map(s => s.id).join(','),\n            period_start: Math.floor(this.form.value.date / 1000),\n            period_end: Math.floor(this.form.value.date / 1000) + this.form.value.duration * 60,\n        }).catch((e) => {\n            on_error('Space is unavailble for the selected time and duration');\n            throw e;\n        });\n        if (spaces.length <= 0) {\n            return on_error('Space is unavailble for the selected time and duration');\n        }\n        this.loading = 'Creating booking...';\n        await this._events.save(new CalendarEvent(this.form.value)).catch((e) => {\n            on_error('Error creating booking.');\n            throw e;\n        });\n        notifySuccess(`Successfully created booking in ${this._data.space.display_name || this._data.space.name}`);\n        this._dialog_ref.close();\n    }\n}\n","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import assign from '../assign/index.js';\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import compareAsc from '../compareAsc/index.js';\nimport differenceInMonths from '../differenceInMonths/index.js';\nimport differenceInSeconds from '../differenceInSeconds/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport toDate from '../toDate/index.js';\nimport cloneObject from '../_lib/cloneObject/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import { Component, ElementRef, HostListener, Inject, OnInit } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { MAP_FEATURE_DATA } from '@user-interfaces/components';\nimport { formatDistanceToNow } from 'date-fns';\n\nexport interface DeviceInfoData {\n    mac: string;\n    variance: number;\n    last_seen: number;\n    system: string;\n    manufacturer?: string;\n    os?: string;\n    ssid?: string;\n}\n\n@Component({\n    selector: 'explore-device-info',\n    template: `\n        <div\n            name=\"radius\"\n            (mouseenter)=\"loadUser()\"\n            class=\"radius absolute center bg-blue-600 bg-opacity-25 border-4 border-dashed border-blue-600 rounded-full\"\n            [style]=\"'height: ' + diameter + '%; width: ' + diameter + '%;'\"\n        ></div>\n        <div\n            name=\"dot\"\n            class=\"h-2 w-2 absolute center rounded-full pointer-events-auto\"\n            [style.background-color]=\"bg_color\"\n        ></div>\n        <div\n            name=\"device-info\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow pointer-events-none ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <p><label>MAC:</label> {{ mac }}</p>\n                <p><label>Variance:</label> {{ variance }}</p>\n                <p><label>Last Seen:</label> {{ last_seen }}</p>\n                <p *ngIf=\"manufacturer\"><label>Manufacturer:</label> {{ manufacturer }}</p>\n                <p *ngIf=\"os\"><label>OS:</label> {{ os }}</p>\n                <p *ngIf=\"ssid\"><label>SSID:</label> {{ ssid }}</p>\n                <p *ngIf=\"username\"><label>Username:</label> {{ username }}</p>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                pointer-events: auto;\n            }\n\n            :host > [name='dot'] {\n                box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.35);\n                background-color: #616161;\n            }\n\n            :host:hover > [name='device-info'],\n            :host:hover > [name='radius'] {\n                opacity: 1;\n            }\n\n            [name='radius'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                pointer-events: none;\n            }\n\n            [name='device-info'] {\n                opacity: 0;\n                transition: opacity 200ms;\n                width: 16rem;\n                z-index: 999;\n                pointer-events: none;\n            }\n        `,\n    ],\n})\nexport class ExploreDeviceInfoComponent implements OnInit {\n    /** Name of the user associated with the mac address */\n    public username = '';\n    /** Mac Address of the device */\n    public readonly mac = this._details.mac;\n    /** Mac Address of the device */\n    public readonly manufacturer = this._details.manufacturer;\n    /** Mac Address of the device */\n    public readonly os = this._details.os;\n    /** Mac Address of the device */\n    public readonly ssid = this._details.ssid;\n    /** Accuracy of the location data */\n    public readonly variance = this._details.variance.toFixed(2);\n    /** Diameter of the radius circle */\n    public readonly diameter = this._details.variance * 100;\n    /** Background color for the dot */\n    public readonly bg_color = this.ssid === 'Blue' ? '#1976d2' : this.ssid === 'Green' ? '#689f38' : '#616161'\n    /** Time of the last update */\n    public get last_seen() {\n        return formatDistanceToNow(new Date(this._details.last_seen * 1000), {\n            addSuffix: true,\n        });\n    }\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    @HostListener('mouseenter') public onEnter = () => this.loadUser();\n    @HostListener('click') public onClick = () => this.loadUser();\n    @HostListener('touchend') public onTouch = () => this.loadUser();\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: DeviceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public async loadUser() {\n        console.log('Loading user...', this.username);\n        if (this.username) return;\n        const mod = getModule(this._details.system, 'LocationServices');\n        if (mod) {\n            this.username = 'Loading...'\n            const details = await mod.execute('check_ownership_of', [this.mac]).catch(_ => null);\n            console.log('Details:', details);\n            this.username = details && details.assigned_to ? details.assigned_to : '';\n        }\n    }\n\n}\n","import distanceInWords from '../formatDistance/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name formatDistanceToNow\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n * @pure false\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *\n *   // v2.0.0 onward\n *\n *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })\n *   //=> 'in 6 months'\n *   ```\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = formatDistanceToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = formatDistanceToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = formatDistanceToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = formatDistanceToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistanceToNow(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  return distanceInWords(dirtyDate, Date.now(), dirtyOptions);\n}","import { Component, OnInit } from '@angular/core';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpacesService } from './explore-spaces.service';\nimport { ExploreZonesService } from './explore-zones.service';\nimport { ExploreDesksService } from './explore-desks.service';\nimport { BaseClass } from '@user-interfaces/common';\nimport { ActivatedRoute } from '@angular/router';\nimport { Space, SpacesService } from '@user-interfaces/spaces';\nimport { MapLocation, StaffService, User } from '@user-interfaces/users';\nimport { first } from 'rxjs/operators';\nimport { MapPinComponent, MapRadiusComponent } from '@user-interfaces/components';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { getModule } from '@placeos/ts-client';\n\n@Component({\n    selector: 'explore-map-view',\n    template: `\n        <i-map\n            [src]=\"url | async\"\n            [zoom]=\"(positions | async).zoom\"\n            [center]=\"(positions | async).center\"\n            [styles]=\"styles | async\"\n            [features]=\"features | async\"\n            [actions]=\"actions | async\"\n            [labels]=\"labels | async\"\n        ></i-map>\n        <explore-zoom-controls\n            class=\"absolute bottom-0 right-0\"\n        ></explore-zoom-controls>\n        <explore-map-controls\n            class=\"absolute top-0 left-0\"\n        ></explore-map-controls>\n        <explore-search class=\"absolute top-0 right-0\"></explore-search>\n        <div\n            name=\"zones\"\n            class=\"p-2 bg-white border border-gray-400 absolute left-0 m-2 rounded flex items-center\"\n        >\n            Zones\n            <mat-slide-toggle\n                class=\"ml-2\"\n                [ngModel]=\"(options | async)?.show_zones\"\n                (ngModelChange)=\"setOptions({ show_zones: $event })\"\n            ></mat-slide-toggle>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                height: 100%;\n                width: 100%;\n            }\n\n            [name='zones'] {\n                top: 3.5rem;\n            }\n        `,\n    ],\n    providers: [ExploreSpacesService, ExploreDesksService, ExploreZonesService],\n})\nexport class ExploreMapViewComponent extends BaseClass implements OnInit {\n    /** Observable for the active map */\n    public readonly url = this._state.map_url;\n    /** Observable for the active map */\n    public readonly styles = this._state.map_styles;\n    /** Observable for the active map */\n    public readonly positions = this._state.map_positions;\n    /** Observable for the active map */\n    public readonly features = this._state.map_features;\n    /** Observable for the active map */\n    public readonly actions = this._state.map_actions;\n    /** Observable for the labels map */\n    public readonly labels = this._state.map_labels;\n    /** Observable for the active map */\n    public readonly options = this._state.options;\n\n    public readonly setOptions = (o) => this._state.setOptions(o);\n\n    constructor(\n        private _state: ExploreStateService,\n        private _s: ExploreSpacesService,\n        private _desks: ExploreDesksService,\n        private _zones: ExploreZonesService,\n        private _route: ActivatedRoute,\n        private _spaces: SpacesService,\n        private _users: StaffService,\n        private _org: OrganisationService\n    ) {\n        super();\n    }\n\n    public async ngOnInit() {\n        await this._spaces.initialised.pipe(first((_) => _)).toPromise();\n        this.subscription(\n            'route.query',\n            this._route.queryParamMap.subscribe(async (params) => {\n                if (params.has('level')) {\n                    this._state.setLevel(params.get('level'));\n                }\n                if (params.has('space')) {\n                    const space = this._spaces.find(params.get('space'));\n                    if (!space) return;\n                    this.locateSpace(space);\n                } else if (params.has('user')) {\n                    const user = await this._users.show(params.get('user'));\n                    if (!user) return;\n                    this.locateUser(user);\n                } else {\n                    this.timeout('update_location', () => {\n                        this._state.setFeatures('_located', []);\n                    });\n                }\n            })\n        );\n    }\n\n    private locateSpace(space: Space) {\n        this._state.setLevel(this._org.levelWithID(space.zones).id);\n        const feature: any = {\n            location: space.map_id,\n            content: MapPinComponent,\n            data: {\n                message: `${space.display_name || space.name} is here`\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n\n    private async locateUser(user: User) {\n        const locate_details: any = this._org.organisation.bindings\n            .location_services;\n        if (!locate_details) return;\n        const mod = getModule(locate_details.system_id, locate_details.module);\n        const locations: MapLocation[] = (\n            await mod.execute('locate_user', [user.email, user.id])\n        ).map((i) => new MapLocation(i));\n        locations.sort(\n            (a, b) =>\n                locate_details.priority.indexOf(a.type) -\n                locate_details.priority.indexOf(b.type)\n        );\n        this._state.setLevel(this._org.levelWithID([locations[0].level]).id);\n        const feature: any = {\n            location: locations[0].position,\n            content: locations[0].type === 'wireless' ? MapRadiusComponent : MapPinComponent,\n            data: {\n                message: `${user.name} is here`,\n                radius: locations[0].variance\n            },\n        };\n        this.timeout('update_location', () => {\n            this._state.setFeatures('_located', [feature]);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { first, switchMap } from 'rxjs/operators';\nimport { addMinutes, roundToNearestMinutes, isAfter, endOfDay } from 'date-fns';\n\nimport { BaseClass, notifyError, unique } from '@user-interfaces/common';\nimport {\n    CalendarEvent,\n    EventsService,\n    generateEventForm,\n} from '@user-interfaces/events';\nimport { CalendarService } from '@user-interfaces/calendar';\nimport { OrganisationService } from '@user-interfaces/organisation';\nimport { NewUserModalComponent, StaffService } from '@user-interfaces/users';\nimport { MatDialog } from '@angular/material/dialog';\n\nexport interface EventFormFilters {\n    capacity?: number;\n    zones?: string[];\n}\n\nexport function clearEventFormState(): void {\n    sessionStorage.removeItem('PLACEOS.event');\n    sessionStorage.removeItem('PLACEOS.event_form');\n    localStorage.removeItem('PLACEOS.event_filters');\n}\n\n@Injectable()\nexport class SpaceFlowService extends BaseClass {\n    /** Active event being worked on */\n    private _event = new BehaviorSubject<CalendarEvent>(null);\n    /** Form fields for the current flow */\n    private _form = new BehaviorSubject<FormGroup>(null);\n    /** Form fields for the current flow */\n    private _filters = new BehaviorSubject<EventFormFilters>({});\n    /** Whether space listing is being retrieved */\n    private _loading_spaces = new BehaviorSubject<boolean>(false);\n    /** Whether changes to event are being saved */\n    private _loading_event = new BehaviorSubject<boolean>(false);\n\n    public readonly event = this._event.asObservable();\n    public readonly form = this._form.asObservable();\n    public get event_form() {\n        return this._form.getValue();\n    }\n    public readonly filters = this._filters.asObservable();\n    public readonly loading_spaces = this._loading_spaces.asObservable();\n    public readonly loading_event = this._loading_event.asObservable();\n    public get event_filters() {\n        return this._filters.getValue();\n    }\n    public readonly spaces = this._filters.pipe(\n        switchMap((filters) => {\n            this._loading_spaces.next(true);\n            const form = this._form.getValue().value;\n            const period_start = Math.floor(\n                new Date(form.date).valueOf() / 1000\n            );\n            const period_end = Math.floor(\n                addMinutes(new Date(form.date), form.duration || 60).valueOf() /\n                    1000\n            );\n            const zones = filters?.zones?.length\n                ? filters.zones\n                : [this._org.building?.id];\n            return this._calendar\n                .availability({\n                    zone_ids: zones.join(','),\n                    period_start,\n                    period_end,\n                })\n                .then((list) => {\n                    this._loading_spaces.next(false);\n                    return list.filter(\n                        (space) =>\n                            !filters.capacity ||\n                            filters.capacity >= space.capacity\n                    );\n                });\n        })\n    );\n\n    public get is_future_date() {\n        const date = this._form.getValue()?.controls?.date.value || new Date().valueOf();\n        return isAfter(new Date(date), endOfDay(new Date()));\n    }\n\n    public readonly clearState = () => clearEventFormState();\n\n    constructor(\n        private _events: EventsService,\n        private _calendar: CalendarService,\n        private _org: OrganisationService,\n        private _staff: StaffService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.setEvent(\n            new CalendarEvent({\n                date: roundToNearestMinutes(addMinutes(new Date(), 2), {\n                    nearestTo: 5,\n                }).valueOf(),\n            })\n        );\n    }\n\n    /** Set the event being worked on */\n    public setEvent(event: CalendarEvent): void {\n        this._event.next(event);\n        const form = generateEventForm(event);\n        this._form.next(form);\n        this.subscription('form_change', () => this.storeState());\n    }\n\n    /** Set the value of the form control */\n    public setValue<T = any>(name: string, value: T): void {\n        const form = this._form.getValue();\n        if (form && form.controls[name]) {\n            form.controls[name].setValue(value);\n        }\n    }\n\n    public newAttendee() {\n        const ref = this._dialog.open<NewUserModalComponent>(\n            NewUserModalComponent,\n            {\n                width: 'auto',\n                height: 'auto',\n                data: {},\n            }\n        );\n        const form = this._form.getValue();\n        ref.componentInstance.event\n            .pipe(first((_) => _.reason === 'done'))\n            .subscribe((event) => {\n                const attendees = form.controls.attendees.value || [];\n                attendees.push(event.metadata);\n                form.controls.attendees.setValue(unique(attendees, 'email'));\n                ref.close();\n            });\n    }\n\n    /** Reset the form fields for the active event */\n    public clearForm(): void {\n        this.setEvent(this._event.getValue());\n        this._filters.next({});\n    }\n\n    /** Update the current form filters */\n    public updateFilters(filters: EventFormFilters) {\n        this._filters.next(filters);\n    }\n\n    /** Store current event details and form values */\n    public storeState(): void {\n        const form = this._form.getValue();\n        sessionStorage.setItem(\n            'PLACEOS.event',\n            JSON.stringify(this._event.getValue().toJSON())\n        );\n        sessionStorage.setItem('PLACEOS.event_form', JSON.stringify(form.value));\n        localStorage.setItem(\n            'PLACEOS.event_filters',\n            JSON.stringify(this._filters.getValue())\n        );\n    }\n\n    /** Load old event details and form values */\n    public loadState(): void {\n        const event_data = sessionStorage.getItem('PLACEOS.event') || '{}';\n        if (event_data) {\n            this._event.next(new CalendarEvent(JSON.parse(event_data)));\n        }\n        console.log('Event:', this._event.getValue());\n        const form_data = sessionStorage.getItem('PLACEOS.event_form');\n        if (form_data) {\n            const form = generateEventForm(this._event.getValue());\n            form.patchValue(JSON.parse(form_data));\n            this._form.next(form);\n        }\n        const filter_data = localStorage.getItem('PLACEOS.event_filters');\n        if (filter_data) {\n            this._filters.next(JSON.parse(filter_data));\n        }\n    }\n\n    /** Save changes to event to the server */\n    public save(): Promise<void> {\n        const form = this._form.getValue();\n        form.markAllAsTouched();\n        if (!form.controls.organiser.value || !form.controls.host.value)\n            form.patchValue({\n                organiser: this._staff.current,\n                host: this._staff.current.email,\n            });\n        if (!form.controls.title.value) {\n            form.patchValue({\n                title: this._staff.current.email\n            });\n        }\n        if (!form.valid) {\n            const list = [];\n            for (const key in form.controls) {\n                if (form.controls[key].invalid) {\n                    list.push(key);\n                }\n            }\n            return Promise.reject(\n                notifyError(\n                    `Some form fields are not valid: [${list.join(', ')}]`\n                )\n            );\n        }\n        this._loading_event.next(true);\n        const values = new CalendarEvent({\n            ...this._event.getValue().toJSON(),\n            ...this._form.getValue().value,\n        });\n        return this._events.save(values).then(\n            () => this._loading_event.next(false),\n            () => this._loading_event.next(false)\n        );\n    }\n}\n","import { Component, ElementRef, Inject } from '@angular/core';\nimport { MAP_FEATURE_DATA } from '@user-interfaces/components';\nimport { CalendarEvent } from '@user-interfaces/events';\nimport { Space } from '@user-interfaces/spaces';\nimport { getViewer, coordinatesForElement } from '@yuion/svg-viewer';\n\nexport interface SpaceInfoData {\n    space: Space;\n    events: CalendarEvent[];\n    status: 'free' | 'busy' | 'pending' | 'reserved' | 'unknown' | '';\n}\n\n@Component({\n    selector: 'explore-space-info',\n    template: `\n        <div\n            *ngIf=\"space\"\n            name=\"space-info\"\n            [id]=\"space.id\"\n            [class]=\"\n                'absolute rounded bg-white p-4 top-0 left-0 shadow ' +\n                x_pos +\n                ' ' +\n                y_pos\n            \"\n        >\n            <div class=\"arrow\"></div>\n            <div class=\"details\">\n                <h4 class=\"m-0 mb-2\">{{ space.display_name || space.name }}</h4>\n                <div class=\"text-sm\" *ngIf=\"space.capacity >= 0\">\n                    <span>Capacity: </span>{{ space.capacity }}\n                    {{ space.capacity === 1 ? 'person' : 'people' }}\n                </div>\n                <div class=\"flex flex-wrap my-2 text-sm\">\n                    <div\n                        name=\"status\"\n                        [class]=\"\n                            'capitalize rounded p-1 px-2 text-light ' + status\n                        \"\n                    >\n                        {{ status }}\n                    </div>\n                    <div\n                        name=\"available-until\"\n                        *ngIf=\"status !== 'not-bookable'\"\n                    >\n                        {{ available_until }}\n                    </div>\n                </div>\n                <div class=\"features\" *ngIf=\"space.features?.length > 0\">\n                    <h4 class=\"m-0 mb-2\">Room Features</h4>\n                    <ul class=\"pl-2\">\n                        <li\n                            class=\"text-sm\"\n                            *ngFor=\"let feature of space.features\"\n                        >\n                            {{ feature }}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                pointer-events: none;\n                z-index: 1;\n            }\n\n            [name='space-info'] {\n                width: 16rem;\n            }\n\n            [name='status'] {\n                background-color: #43a047;\n                font-weight: 500;\n            }\n\n            [name='status'].busy {\n                background-color: #e53935;\n            }\n\n            [name='status'].pending {\n                background-color: #ffb300;\n            }\n\n            [name='status'].not-bookable {\n                background-color: #757575;\n            }\n        `,\n    ],\n})\nexport class ExploreSpaceInfoComponent {\n    /** Space to display details for */\n    public readonly space = this._details.space;\n    /** List of upcoming events for space */\n    public readonly events = this._details.events;\n    /** Current status of the space */\n    public readonly status = this._details.status;\n\n    public y_pos: 'top' | 'bottom';\n\n    public x_pos: 'left' | 'right';\n\n    constructor(\n        @Inject(MAP_FEATURE_DATA) private _details: SpaceInfoData,\n        private _element: ElementRef<HTMLElement>\n    ) {}\n\n    public ngOnInit(tries: number = 0) {\n        if (tries > 10) return;\n        setTimeout(() => {\n            const parent = this._element.nativeElement.parentElement\n                ?.parentElement;\n            if (!parent) return this.ngOnInit(++tries);\n            const position = {\n                y: parseInt(parent.style.top, 10) / 100,\n                x: parseInt(parent.style.left, 10) / 100,\n            };\n            this.y_pos = position.y >= 0.5 ? 'bottom' : 'top';\n            this.x_pos = position.x >= 0.5 ? 'right' : 'left';\n        }, 200);\n    }\n\n    public get available_until() {\n        return '';\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Space, SpacesService } from '@user-interfaces/spaces';\nimport { StaffService, User } from '@user-interfaces/users';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreSearchService {\n    /** Current search results for spaces */\n    private _space_list = new BehaviorSubject<Space[]>([]);\n    /** Current search results for staff users */\n    private _user_list = new BehaviorSubject<User[]>([]);\n    /** Filter string for results */\n    private _filter = new BehaviorSubject<string>('');\n    /** Whether results are being loaded */\n    private _loading = new BehaviorSubject<boolean>(false);\n\n    public readonly search_results = combineLatest([this._space_list, this._user_list]).pipe(\n        map((i) => {const results = [\n            ...i[0].map((s) => ({\n                id: s.id,\n                type: 'space',\n                name: s.display_name || s.name,\n                description: `Capacity: ${s.capacity} `,\n            })),\n            ...i[1].map((u) => ({ id: u.email, type: 'user', name: u.name, description: u.email })),\n        ];\n        results.sort((a, b) => a.name.localeCompare(b.name));\n        return results;\n    })\n    );\n    /** Obverable for current space search results */\n    public readonly space_list = this._space_list.asObservable();\n    /** Obverable for current user search results */\n    public readonly user_list = this._user_list.asObservable();\n    /** Obverable for whether results are being loaded */\n    public readonly loading = this._loading.asObservable();\n\n    constructor(private _spaces: SpacesService, private _staff: StaffService) {\n        this._spaces.list.subscribe(() => this._filter.next(this._filter.getValue()))\n        this._filter.subscribe(async (filter_str) => {\n            this._loading.next(true);\n            const s = filter_str.toLowerCase();\n            this._space_list.next(\n                this._spaces.space_list.filter(\n                    (space) =>\n                        space.email.toLowerCase().includes(s) ||\n                        space.name.toLowerCase().includes(s) ||\n                        space.display_name.toLowerCase().includes(s)\n                )\n            );\n            this._user_list.next([]);\n            if (s.length > 2) {\n                const users = await this._staff.query({ q: s }).catch(_ => null);\n                this._user_list.next(users || [])\n            }\n            this._loading.next(false);\n        });\n    }\n\n    public setFilter(str: string) {\n        this._filter.next(str);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Point, ViewAction, ViewerFeature, ViewerLabel, ViewerStyles } from '@yuion/svg-viewer';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\n\nimport { BaseClass, HashMap, SettingsService } from '@user-interfaces/common';\nimport { BuildingLevel, OrganisationService } from '@user-interfaces/organisation';\nimport { SpacesService } from '@user-interfaces/spaces';\n\n\nexport interface MapOptions {\n    show_zones?: boolean;\n    show_devices?: boolean;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ExploreStateService extends BaseClass {\n    /** Currently active level */\n    private _level = new BehaviorSubject<BuildingLevel>(null);\n    /** Currently active level */\n    private _positions = new BehaviorSubject<{ zoom: number; center: Point }>({\n        zoom: 1,\n        center: { x: 0.5, y: 0.5 },\n    });\n    /** Mapping of groups to their styles */\n    private _styles = new BehaviorSubject<HashMap<ViewerStyles>>({});\n    /** Mapping of groups to their features */\n    private _features = new BehaviorSubject<HashMap<ViewerFeature[]>>({});\n    /** Mapping of groups to their actions */\n    private _actions = new BehaviorSubject<HashMap<ViewAction[]>>({});\n    /** Mapping of groups to their actions */\n    private _labels = new BehaviorSubject<HashMap<ViewerLabel[]>>({});\n\n    private _options = new BehaviorSubject<MapOptions>({});\n\n    /** Currently active level */\n    public readonly level = this._level.asObservable();\n    /** Spaces associated with the active level */\n    public readonly spaces = combineLatest([this._level, this._spaces.list]).pipe(\n        map((details) => details[1].filter((space) => space.zones.includes(details[0].id)))\n    );\n    /** Currently shown space's map URL */\n    public readonly map_url = this._level.pipe(map((lvl) => (lvl ? lvl.map_id : '') || ''));\n    /** Currently center and zoom positions for map */\n    public readonly map_positions = this._positions.asObservable();\n    /** Currently center and zoom positions for map */\n    public readonly map_features = combineLatest([this._features, this._options]).pipe(map(details => {\n        const [features, options] = details;\n        let list = [];\n        for (const key in features) {\n            if (key !== 'devices' || (options.show_zones && this._settings.get('app.explore.display_devices') !== false)) {\n                list = list.concat(features[key]);\n            }\n        }\n        return list;\n    }));\n    /** Currently center and zoom positions for map */\n    public readonly map_actions = this._actions.pipe(map(i => Object.values(i).reduce((list, a) => list.concat(a), [])));\n    /** Currently center and zoom positions for map */\n    public readonly map_labels = combineLatest([this._labels, this._options]).pipe(map(details => {\n        const [labels, options] = details;\n        let list = [];\n        for (const key in labels) {\n            if (key !== 'zones' || options.show_zones) {\n                list = list.concat(labels[key]);\n            }\n        }\n        return list;\n    }));\n    /** Current map styles */\n    public readonly map_styles = combineLatest([this._styles, this._options]).pipe(\n        map((details) => {\n            const [styles, options] = details;\n            const style_mappings = Object.keys(styles).reduce(\n                (a, h) => ({ ...a, ...styles[h] }),\n                {}\n            );\n            if (!options.show_zones) {\n                style_mappings['#zones'] = { display: 'none' };\n                style_mappings['#Zones'] = { display: 'none' };\n            }\n            style_mappings['text'] = { display: 'none' };\n            return style_mappings;\n        })\n    );\n\n    public readonly options = this._options.asObservable();\n\n    public get positions() {\n        return this._positions.getValue();\n    }\n\n    constructor(private _org: OrganisationService, private _spaces: SpacesService, private _settings: SettingsService) {\n        super();\n        this._org.initialised.pipe(first((_) => _)).subscribe(() => {\n            this.subscription(\n                'building',\n                this._org.active_building.pipe(filter((_) => !!_)).subscribe((bld) => {\n                    const level = this._level.getValue();\n                    const level_list = this._org.levelsForBuilding(bld);\n                    const has_level = level_list.find((lvl) => level?.id === lvl.id);\n                    if (!has_level && level_list.length) {\n                        this.setLevel(level_list[0].id);\n                    }\n                })\n            );\n        });\n    }\n\n    public setOptions(options: MapOptions) {\n        this._options.next({ ...this._options.getValue(), ...options });\n    }\n\n    public setLevel(zone_id: string) {\n        const lvl = this._org.levelWithID([zone_id]);\n        if (lvl) {\n            this._level.next(lvl);\n        }\n    }\n\n    public setStyles(name: string, styles: ViewerStyles) {\n        const style_map = this._styles.getValue();\n        style_map[name] = styles;\n        this._styles.next(style_map);\n    }\n\n    public setFeatures(name: string, features: ViewerFeature[]) {\n        const feature_map = this._features.getValue();\n        feature_map[name] = features;\n        this._features.next(feature_map);\n    }\n\n    public setActions(name: string, actions: ViewAction[]) {\n        const actions_map = this._actions.getValue();\n        actions_map[name] = actions;\n        this._actions.next(actions_map);\n    }\n\n    public setLabels(name: string, labels: ViewerLabel[]) {\n        const labels_map = this._labels.getValue();\n        labels_map[name] = labels;\n        this._labels.next(labels_map);\n    }\n\n    public setPositions(zoom: number, center: Point) {\n        this._positions.next({ zoom, center });\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ComponentsModule } from '@user-interfaces/components';\n\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { ExploreMapControlComponent } from './explore-map-control.component';\nimport { ExploreMapViewComponent } from './explore-map-view.component';\nimport { ExploreSearchComponent } from './explore-search.component';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { ExploreZoomControlComponent } from './explore-zoom-control.component';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nconst COMPONENTS: Type<any>[] = [\n    ExploreMapControlComponent,\n    ExploreMapViewComponent,\n    ExploreSearchComponent,\n    ExploreSpaceInfoComponent,\n    ExploreDeviceInfoComponent,\n    ExploreDeskInfoComponent,\n    ExploreZoomControlComponent,\n    ExploreBookingModalComponent,\n];\n\n@NgModule({\n    declarations: [...COMPONENTS],\n    imports: [\n        CommonModule,\n        ComponentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatSlideToggleModule,\n    ],\n    exports: [...COMPONENTS],\n})\nexport class SharedExploreModule {}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { getModule } from '@placeos/ts-client';\nimport { ViewAction, ViewerFeature } from '@yuion/svg-viewer';\n\nimport { BaseClass, HashMap, notifyError, SettingsService } from '@user-interfaces/common';\nimport { Space } from '@user-interfaces/spaces';\nimport { CalendarEvent } from '@user-interfaces/events';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { ExploreSpaceInfoComponent } from './explore-space-info.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ExploreBookingModalComponent } from './explore-booking-modal.component';\n\nexport const DEFAULT_COLOURS = {\n    free: '#43a047',\n    pending: '#ffb300',\n    reserved: '#3949ab',\n    busy: '#e53935',\n    'not-bookable': '#757575',\n    unknown: '#757575',\n};\n\n@Injectable()\nexport class ExploreSpacesService extends BaseClass implements OnDestroy {\n    private _spaces: Space[] = [];\n    private _bookings: HashMap<CalendarEvent[]> = {};\n    private _bindings: any[] = [];\n    private _statuses: HashMap<string> = {};\n\n    constructor(\n        private _state: ExploreStateService,\n        private _settings: SettingsService,\n        private _dialog: MatDialog\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            this._state.spaces.subscribe((list) => {\n                this.clearBindings();\n                this._spaces = list;\n                this.bindToSpaces();\n            })\n        );\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.clearBindings();\n    }\n\n    public clearBindings() {\n        if (!this._spaces) return;\n        for (const space of this._spaces) {\n            this.unsub(`bookings-${space.id}`);\n            this.unsub(`status-${space.id}`);\n        }\n        this._bindings.forEach((b) => b.unbind());\n        this._bindings = [];\n        this._statuses = {};\n    }\n\n    public bindToSpaces() {\n        if (!this._spaces) return;\n        for (const space of this._spaces) {\n            let binding = getModule(space.id, 'Bookings').binding('bookings');\n            this.subscription(\n                `bookings-${space.id}`,\n                binding\n                    .listen()\n                    .subscribe((d) => this.handleBookingsChange(space, d))\n            );\n            binding.bind();\n            this._bindings.push(binding);\n            binding = getModule(space.id, 'Bookings').binding('status');\n            this.subscription(\n                `status-${space.id}`,\n                binding\n                    .listen()\n                    .subscribe((d) => this.handleStatusChange(space, d))\n            );\n            binding.bind();\n            this._bindings.push(binding);\n        }\n        this.updateActions();\n        this.updateHoverElements();\n    }\n\n    public bookSpace(space: Space) {\n        if (this._statuses[space.id] === 'busy') {\n            return notifyError(`${space.display_name || space.name} is unavailable at the current time`);\n        }\n        this._dialog.open(ExploreBookingModalComponent, {\n            data: { space }\n        });\n    }\n\n    private handleBookingsChange(space: Space, bookings: HashMap[]) {\n        if (!bookings) return;\n        this._bookings[space.id] = bookings.map((i) => new CalendarEvent(i));\n        this.timeout('update_hover_els', () => this.updateHoverElements(), 100);\n    }\n\n    private handleStatusChange(space: Space, status: string) {\n        this._statuses[space.id] = space.bookable\n            ? status || 'free'\n            : 'not-bookable';\n        this.timeout(\n            'update_statuses',\n            () => {\n                this.clearTimeout('update_hover_els');\n                this.updateStatus();\n                this.updateHoverElements();\n            },\n            100\n        );\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours =\n            this._settings.get('app.explore.colors') || {};\n        for (const space of this._spaces) {\n            style_map[`#${space.map_id}`] = {\n                fill:\n                    colours[`space-${this._statuses[space.id]}`] ||\n                    colours[`${this._statuses[space.id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[space.id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('spaces', style_map);\n    }\n\n    private updateHoverElements() {\n        const features: ViewerFeature[] = [];\n        for (const space of this._spaces) {\n            features.push({\n                location: space.map_id,\n                hover: true,\n                content: ExploreSpaceInfoComponent,\n                data: {\n                    space,\n                    events: this._bookings[space.id],\n                    status: this._statuses[space.id],\n                },\n            } as any);\n        }\n        this._state.setFeatures('spaces', features);\n    }\n\n    private updateActions() {\n        const actions: ViewAction[] = [];\n        for (const space of this._spaces) {\n            actions.push({\n                id: space.map_id,\n                action: 'click',\n                callback: () => this.bookSpace(space),\n            });\n            actions.push({\n                id: space.map_id,\n                action: 'touchend',\n                callback: () => this.bookSpace(space),\n            });\n        }\n        this._state.setActions('spaces', actions);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: `explore-zoom-controls`,\n    template: `\n        <button mat-icon-button class=\"bg-white\" (click)=\"zoomIn()\">\n            <app-icon className=\"material-icons\">add</app-icon>\n        </button>\n        <button mat-icon-button class=\"bg-white\" (click)=\"zoomOut()\">\n            <app-icon className=\"material-icons\">remove</app-icon>\n        </button>\n        <button mat-icon-button class=\"bg-white\" (click)=\"reset()\">\n            <app-icon className=\"material-icons\">autorenew</app-icon>\n        </button>\n    `,\n    styles: [\n        `\n            :host {\n                display: flex;\n                flex-direction: column;\n                padding: .5rem;\n            }\n\n            button {\n                border: 1px solid #ccc;\n                border-radius: 0;\n            }\n\n            button:first-child {\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: none;\n            }\n\n            button:last-child {\n                border-radius: 0 0 0.25rem 0.25rem;\n                border-top: none;\n            }\n        `,\n    ],\n})\nexport class ExploreZoomControlComponent {\n    public readonly zoomIn = () =>\n        this._state.setPositions(\n            Math.min(10, this._state.positions.zoom * 1.2),\n            this._state.positions.center\n        );\n    public readonly zoomOut = () =>\n        this._state.setPositions(\n            Math.max(1, this._state.positions.zoom * (1 / 1.2)),\n            this._state.positions.center\n        );\n    public readonly reset = () => this._state.setPositions(1, { x: 0.5, y: 0.5 });\n\n    constructor(private _state: ExploreStateService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { getModule, showMetadata } from '@placeos/ts-client';\nimport { ViewerLabel, Point } from '@yuion/svg-viewer';\n\nimport { BaseClass, HashMap, SettingsService } from '@user-interfaces/common';\nimport {\n    BuildingLevel,\n    OrganisationService,\n} from '@user-interfaces/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport { first } from 'rxjs/operators';\n\nconst EMPTY_LABEL = { location: { x: -10, y: -10 }, content: '0% Usage' };\n\n@Injectable()\nexport class ExploreZonesService extends BaseClass {\n    private _level: BuildingLevel = null;\n    private _bindings: any[] = [];\n    private _statuses: HashMap<string> = {};\n    private _labels: HashMap<ViewerLabel> = {};\n    private _location: HashMap<Point> = {};\n    private _capacity: HashMap<number> = {};\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.init();\n    }\n\n    public async init() {\n        await this._org.initialised.pipe(first(_ => _)).toPromise();\n        const zone_metadata = await Promise.all(this._org.levels.map(bld => showMetadata(bld.id, { name: 'map_regions' }).toPromise()));\n        for (const zone of zone_metadata) {\n            const areas = (zone?.details as any)?.areas;\n            if (areas) {\n                for (const area of areas) {\n                    this._capacity[area.id] = area.properties?.capacity || 100;\n                    this._location[area.id] = area.properties?.label_location || { x: .5, y: .5 };\n                }\n            }\n        }\n        this.subscription(\n            'spaces',\n            this._state.level.subscribe((level) => {\n                this.clearBindings();\n                this._level = level;\n                this.bindToZones();\n            })\n        );\n    }\n\n    public clearBindings() {\n        if (!this._level) return;\n        this.unsub('zones');\n        this._bindings.forEach(b => b.unbind());\n        this._bindings = [];\n        this._statuses = {};\n    }\n\n    public bindToZones() {\n        if (!this._level) return;\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this._level.parent_id\n        );\n        if (!building) return;\n        const system_id = this._org.organisation.bindings.area_management;\n        if (!system_id) return;\n        const binding = getModule(system_id, 'AreaManagement').binding(`${this._level.id}:areas`);\n        this.subscription(\n            `zones`,\n            binding.listen().subscribe((d) => this.parseData(d))\n        );\n        binding.bind();\n        this._bindings.push(binding);\n    }\n\n    public parseData(d) {\n        const value = d?.value || [];\n        const labels = [];\n        for (const zone of value) {\n            const filled = zone.count / (this._capacity[zone.area_id] || 100);\n            this._statuses[zone.area_id] =\n                filled < .4 ? 'free' : filled < .75 ? 'pending' : 'busy';\n            this._labels[zone.area_id] = {\n                location: this._location[zone.area_id],\n                content: `${zone.count} ${zone.count === 1 ? 'Device' : 'Devices'}`\n            };\n            labels.push(this._labels[zone.area_id]);\n        }\n        this._state.setLabels('zones', labels);\n        this.timeout('update', () => this.updateStatus(), 100);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours =\n            this._settings.get('app.explore.colors') || {};\n        for (const zone_id in this._statuses) {\n            if (!this._statuses.hasOwnProperty(zone_id)) continue;\n            style_map[`#${zone_id}`] = {\n                fill:\n                    colours[`zone-${this._statuses[zone_id]}`] ||\n                    colours[`${this._statuses[zone_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[zone_id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('zones', style_map);\n    }\n}\n","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { Injectable, OnDestroy } from '@angular/core';\nimport { getModule, listen } from '@placeos/ts-client';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\n\nimport { BaseClass, HashMap, SettingsService } from '@user-interfaces/common';\n\nimport { ExploreStateService } from './explore-state.service';\nimport { DEFAULT_COLOURS } from './explore-spaces.service';\nimport {\n    BuildingLevel,\n    OrganisationService,\n} from '@user-interfaces/organisation';\nimport { ExploreDeviceInfoComponent } from './explore-device-info.component';\nimport { ExploreDeskInfoComponent } from './explore-desk-info.component';\n\nexport interface DesksStats {\n    free: number;\n    occupied: number;\n    total: number;\n}\n\n@Injectable()\nexport class ExploreDesksService extends BaseClass implements OnDestroy {\n    private _level: BuildingLevel = null;\n    private _in_use = new BehaviorSubject<string[]>([]);\n    private _desks = new BehaviorSubject<string[]>([]);\n    private _reserved = new BehaviorSubject<string[]>([]);\n    private _statuses: HashMap<string> = {};\n    private _bindings: any[] = [];\n    private _stats = new BehaviorSubject<DesksStats>({\n        free: 0,\n        occupied: 0,\n        total: 0,\n    });\n\n    constructor(\n        private _state: ExploreStateService,\n        private _org: OrganisationService,\n        private _settings: SettingsService\n    ) {\n        super();\n        this.subscription(\n            'spaces',\n            this._state.level.subscribe((level) => {\n                this.clearBindings();\n                this._level = level;\n                this.bindToDesks();\n            })\n        );\n        this.subscription(\n            'changes',\n            combineLatest([\n                this._desks,\n                this._in_use,\n                this._reserved,\n            ]).subscribe((details) => {\n                const [desks, in_use, reserved] = details;\n                this._statuses = {};\n                for (const id of desks) {\n                    const is_used = in_use.some((i) => id === i);\n                    const is_reserved = reserved.some((i) => id === i);\n                    this._statuses[id] = !is_used\n                        ? 'free'\n                        : is_reserved\n                        ? 'reserved'\n                        : 'busy';\n                }\n                this.timeout('update', () => this.updateStatus(), 100);\n            })\n        );\n    }\n\n    public ngOnDestroy() {\n        super.ngOnDestroy();\n        this.clearBindings();\n    }\n\n    public clearBindings() {\n        const bindings = [\n            'desks_in_use',\n            'desk_list'\n        ];\n        for (const id of bindings) {\n            this.unsub(id);\n        }\n        this._bindings.forEach((b) => b.unbind());\n        this._bindings = [];\n        this._statuses = {};\n    }\n\n    public bindToDesks() {\n        if (!this._level) return;\n        const building = this._org.buildings.find(\n            (bld) => bld.id === this._level.parent_id\n        );\n        if (!building) {\n            return;\n        }\n        const system_id = this._org.building.bindings.area_management || this._org.organisation.bindings.area_management;\n        if (!system_id) {\n            return;\n        }\n        let binding = getModule(system_id, 'AreaManagement').binding(\n            this._level.id\n        );\n        this.subscription(\n            `desks_in_use`,\n            binding.listen().subscribe((d) => {\n                const devices = (d?.value || []).filter(\n                    (v) => v.location !== 'desk'\n                );\n                const desks = (d?.value || []).filter(\n                    (v) => v.location === 'desk'\n                );\n                this._in_use.next(desks.map((v) => v.map_id));\n                this._reserved.next(\n                    desks.filter((v) => !v.at_location).map((v) => v.map_id)\n                );\n                this.processDevices(devices, system_id);\n                // this.processDesks(desks);\n            })\n        );\n        binding.bind();\n        this._bindings.push(binding);\n        binding = getModule(system_id, 'AreaManagement').binding(\n            `${this._level.id}:desk_ids`\n        );\n        this.subscription(\n            `desks_list`,\n            binding.listen().subscribe((d) => this._desks.next(d || []))\n        );\n        binding.bind();\n        this._bindings.push(binding);\n    }\n\n    private updateStatus() {\n        const style_map = {};\n        const colours =\n            this._settings.get('app.explore.colors') || {};\n        for (const desk_id in this._statuses) {\n            if (!this._statuses.hasOwnProperty(desk_id)) continue;\n            style_map[`#${desk_id}`] = {\n                fill:\n                    colours[`desk-${this._statuses[desk_id]}`] ||\n                    colours[`${this._statuses[desk_id]}`] ||\n                    DEFAULT_COLOURS[`${this._statuses[desk_id]}`],\n                opacity: 0.6,\n            };\n        }\n        this._state.setStyles('desks', style_map);\n    }\n\n    private processDevices(devices: HashMap[], system_id: string) {\n        const list = [];\n        for (const device of devices) {\n            const x = device.x / device.map_width;\n            const y = device.y / device.map_height;\n            list.push({\n                location: {\n                    x: device.coordinates_from?.includes('right') ? 1 - x : x,\n                    y: device.coordinates_from?.includes('bottom') ? 1 - y : y,\n                },\n                content: ExploreDeviceInfoComponent,\n                data: { ...device, system: system_id }\n            });\n        }\n        list.sort((a, b) => {\n            const dist_a = 1 - Math.sqrt(Math.pow(a.x - .5, 2) + Math.pow(a.x - .5, 2));\n            const dist_b = 1 - Math.sqrt(Math.pow(b.x - .5, 2) + Math.pow(b.x - .5, 2));\n            return dist_a - dist_b;\n        });\n        this._state.setFeatures('devices', list);\n    }\n\n    private processDesks(desks: HashMap[]) {\n        const list = [];\n        for (const desk of desks) {\n            list.push({\n                location: desk.map_id,\n                content: ExploreDeskInfoComponent,\n                hover: true,\n                data: { map_id: desk.name, status: this._statuses[desk.map_id] }\n            });\n        }\n        this._state.setFeatures('desks', list);\n    }\n}\n","import { Component } from '@angular/core';\nimport { OrganisationService } from '@user-interfaces/organisation';\n\nimport { ExploreStateService } from './explore-state.service';\n\n@Component({\n    selector: 'explore-map-controls',\n    template: `\n        <div class=\"flex space-x-2\">\n            <mat-form-field\n                overlay\n                class=\"flex-1\"\n                has-bld=\"true\"\n                *ngIf=\"(buildings | async)?.length > 1\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Building...\"\n                    [ngModel]=\"building | async\"\n                    (ngModelChange)=\"setBuilding($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let bld of buildings | async\"\n                        [value]=\"bld\"\n                    >\n                        {{ bld.display_name || bld.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field\n                overlay\n                class=\"flex-1\"\n                [attr.has-bld]=\"(buildings | async)?.length > 1\"\n                *ngIf=\"(levels | async)?.length\"\n                appearance=\"outline\"\n            >\n                <mat-select\n                    placeholder=\"Select Level...\"\n                    [ngModel]=\"level | async\"\n                    (ngModelChange)=\"setLevel($event)\"\n                >\n                    <mat-option\n                        *ngFor=\"let lvl of levels | async\"\n                        [value]=\"lvl\"\n                    >\n                        {{ lvl.display_name || lvl.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    `,\n    styles: [\n        `\n            :host {\n                padding: 0.5rem;\n            }\n\n            mat-form-field {\n                min-width: 10rem;\n            }\n\n            mat-form-field[has-bld=\"true\"] {\n                max-width: calc(50vw - 2.5rem);\n            }\n\n            :host[full] mat-form-field {\n                max-width: calc(50% - 2.5rem);\n            }\n        `,\n    ],\n})\nexport class ExploreMapControlComponent {\n    /** List of available buildings */\n    public readonly buildings = this._org.building_list;\n    /** Currently active building */\n    public readonly building = this._org.active_building;\n    /** List of availabel levels */\n    public readonly levels = this._org.active_levels;\n    /** Currently active level */\n    public readonly level = this._state.level;\n    /** Set the currently active level */\n    public readonly setLevel = (lvl) => this._state.setLevel(lvl.id);\n    /** Set the currenly active building */\n    public readonly setBuilding = (bld) => (this._org.building = bld);\n\n    constructor(\n        private _org: OrganisationService,\n        private _state: ExploreStateService\n    ) {}\n}\n"],"sourceRoot":"webpack:///"}